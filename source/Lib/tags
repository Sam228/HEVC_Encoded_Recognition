!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTIVE_PARAMETER_SETS	TLibCommon/SEI.h	/^    ACTIVE_PARAMETER_SETS                = 129,$/;"	e	enum:SEI::PayloadType
ADAPTIVE_QP_SELECTION	TLibCommon/TypeDef.h	108;"	d
ADAPT_SR_SCALE	TLibCommon/CommonDef.h	/^static const Int ADAPT_SR_SCALE =                                   1; \/\/\/< division factor for adaptive search range$/;"	v
ALPHA	TLibEncoder/TEncRateCtrl.h	78;"	d
ALTERNATIVE_TRANSFER_CHARACTERISTICS	TLibCommon/SEI.h	/^    ALTERNATIVE_TRANSFER_CHARACTERISTICS = 147,$/;"	e	enum:SEI::PayloadType
AMBIENT_VIEWING_ENVIRONMENT	TLibCommon/SEI.h	/^    AMBIENT_VIEWING_ENVIRONMENT          = 148, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
AMP_ENC_SPEEDUP	TLibCommon/TypeDef.h	110;"	d
AMP_MRG	TLibCommon/TypeDef.h	112;"	d
AMVPInfo	TLibCommon/TComMotionInfo.h	/^} AMVPInfo;$/;"	t	typeref:struct:_AMVPInfo
AMVP_DECIMATION_FACTOR	TLibCommon/CommonDef.h	/^static const Int AMVP_DECIMATION_FACTOR =                           4;$/;"	v
AMVP_MAX_NUM_CANDS	TLibCommon/CommonDef.h	/^static const Int AMVP_MAX_NUM_CANDS =                               2; \/\/\/< AMVP: advanced motion vector prediction - max number of final candidates$/;"	v
ANNOTATED_REGIONS	TLibCommon/SEI.h	/^    ANNOTATED_REGIONS                    = 202,$/;"	e	enum:SEI::PayloadType
ARL_C_PRECISION	TLibCommon/CommonDef.h	/^static const Int ARL_C_PRECISION =                                  7; \/\/\/< G382: 7-bit arithmetic precision$/;"	v
AUDReader	TLibDecoder/SyntaxElementParser.h	/^  AUDReader() {};$/;"	f	class:AUDReader
AUDReader	TLibDecoder/SyntaxElementParser.h	/^class AUDReader: public SyntaxElementParser$/;"	c
AUDWriter	TLibEncoder/TEncCavlc.h	/^  AUDWriter() {};$/;"	f	class:AUDWriter
AUDWriter	TLibEncoder/TEncCavlc.h	/^class AUDWriter : public SyntaxElementWriter$/;"	c
AccessUnit	TLibCommon/AccessUnit.h	/^class AccessUnit : public std::list<NALUnitEBSP*> \/\/ NOTE: Should not inherit from STL.$/;"	c
ActiveAreaInfo	TLibCommon/TypeDef.h	/^  struct ActiveAreaInfo$/;"	s	struct:TComSEIFisheyeVideoInfo
AnnexBStats	TLibDecoder/AnnexBread.h	/^struct AnnexBStats$/;"	s
AnnotatedRegionHeader	TLibCommon/SEI.h	/^    AnnotatedRegionHeader() : m_cancelFlag(true), m_receivedSettingsOnce(false) { }$/;"	f	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
AnnotatedRegionHeader	TLibCommon/SEI.h	/^  struct AnnotatedRegionHeader$/;"	s	class:SEIAnnotatedRegions
AnnotatedRegionLabel	TLibCommon/SEI.h	/^    AnnotatedRegionLabel() : labelValid(false) { }$/;"	f	struct:SEIAnnotatedRegions::AnnotatedRegionLabel
AnnotatedRegionLabel	TLibCommon/SEI.h	/^  struct AnnotatedRegionLabel$/;"	s	class:SEIAnnotatedRegions
AnnotatedRegionLabelIndex	TLibCommon/SEI.h	/^  typedef UInt AnnotatedRegionLabelIndex;$/;"	t	class:SEIAnnotatedRegions
AnnotatedRegionObject	TLibCommon/SEI.h	/^    AnnotatedRegionObject() :$/;"	f	struct:SEIAnnotatedRegions::AnnotatedRegionObject
AnnotatedRegionObject	TLibCommon/SEI.h	/^  struct AnnotatedRegionObject$/;"	s	class:SEIAnnotatedRegions
AnnotatedRegionObjectIndex	TLibCommon/SEI.h	/^  typedef UInt AnnotatedRegionObjectIndex;$/;"	t	class:SEIAnnotatedRegions
ArgvParser	Utilities/program_options_lite.cpp	/^      ArgvParser(Options& rOpts, ErrorReporter& rError_reporter)$/;"	f	struct:df::program_options_lite::ArgvParser
ArgvParser	Utilities/program_options_lite.cpp	/^    struct ArgvParser : public OptionWriter$/;"	s	namespace:df::program_options_lite	file:
Array2D	TLibEncoder/TEncTemporalFilter.h	/^  Array2D() : m_width(0), m_height(0), v() { }$/;"	f	struct:Array2D
Array2D	TLibEncoder/TEncTemporalFilter.h	/^  Array2D(UInt width, UInt height, const T& value=T()) : m_width(0), m_height(0), v() { allocate(width, height, value); }$/;"	f	struct:Array2D
Array2D	TLibEncoder/TEncTemporalFilter.h	/^struct Array2D$/;"	s
BETA1	TLibEncoder/TEncRateCtrl.h	79;"	d
BETA2	TLibEncoder/TEncRateCtrl.h	80;"	d
BIT0	TLibCommon/SEIFilmGrainSynthesizer.h	104;"	d
BIT_DEPTH_8	TLibCommon/SEIFilmGrainSynthesizer.h	70;"	d
BIT_DEPTH_8	TLibCommon/SEIFilmGrainSynthesizer.h	91;"	d
BLENDING_MODE_VALUE	TLibCommon/SEIFilmGrainSynthesizer.h	56;"	d
BLK_16	TLibCommon/SEIFilmGrainSynthesizer.h	73;"	d
BLK_16	TLibCommon/SEIFilmGrainSynthesizer.h	94;"	d
BLK_8	TLibCommon/SEIFilmGrainSynthesizer.h	72;"	d
BLK_8	TLibCommon/SEIFilmGrainSynthesizer.h	93;"	d
BSLICE_CHROMA_ABS_CONTEXT	TLibCommon/ContextTables.h	410;"	d
BSLICE_CHROMA_CBF_CONTEXT	TLibCommon/ContextTables.h	301;"	d
BSLICE_CHROMA_LAST_POSITION_CONTEXT	TLibCommon/ContextTables.h	335;"	d
BSLICE_CHROMA_ONE_CONTEXT	TLibCommon/ContextTables.h	406;"	d
BSLICE_CHROMA_SIGNIFICANCE_CONTEXT	TLibCommon/ContextTables.h	377;"	d
BSLICE_LUMA_ABS_CONTEXT	TLibCommon/ContextTables.h	401;"	d
BSLICE_LUMA_CBF_CONTEXT	TLibCommon/ContextTables.h	297;"	d
BSLICE_LUMA_LAST_POSITION_CONTEXT	TLibCommon/ContextTables.h	331;"	d
BSLICE_LUMA_ONE_CONTEXT	TLibCommon/ContextTables.h	397;"	d
BSLICE_LUMA_SIGNIFICANCE_CONTEXT	TLibCommon/ContextTables.h	372;"	d
BUFFERING_PERIOD	TLibCommon/SEI.h	/^    BUFFERING_PERIOD                     = 0,$/;"	e	enum:SEI::PayloadType
B_SLICE	TLibCommon/TypeDef.h	/^  B_SLICE               = 0,$/;"	e	enum:SliceType
BitDepths	TLibCommon/TypeDef.h	/^struct BitDepths$/;"	s
Bool	TLibCommon/TypeDef.h	/^typedef       bool                Bool;$/;"	t
C1FLAG_NUMBER	TLibCommon/CommonDef.h	/^static const Int C1FLAG_NUMBER =                                    8; \/\/ maximum number of largerThan1 flag coded in one chunk:  16 in HM5$/;"	v
C2FLAG_NUMBER	TLibCommon/CommonDef.h	/^static const Int C2FLAG_NUMBER =                                    1; \/\/ maximum number of largerThan2 flag coded in one chunk:  16 in HM5$/;"	v
CABAC_INIT_PRESENT_FLAG	TLibCommon/CommonDef.h	/^static const Int CABAC_INIT_PRESENT_FLAG =                          1;$/;"	v
CBFContextStartTable	TLibCommon/TComChromaFormat.h	/^static const UInt CBFContextStartTable            [MAX_NUM_CHANNEL_TYPE] = {FIRST_CBF_CTX_LUMA,      FIRST_CBF_CTX_CHROMA     };$/;"	v
CHANNEL_TYPE_CHROMA	TLibCommon/TypeDef.h	/^  CHANNEL_TYPE_CHROMA  = 1,$/;"	e	enum:ChannelType
CHANNEL_TYPE_LUMA	TLibCommon/TypeDef.h	/^  CHANNEL_TYPE_LUMA    = 0,$/;"	e	enum:ChannelType
CHROMA_400	TLibCommon/TypeDef.h	/^  CHROMA_400        = 0,$/;"	e	enum:ChromaFormat
CHROMA_420	TLibCommon/TypeDef.h	/^  CHROMA_420        = 1,$/;"	e	enum:ChromaFormat
CHROMA_422	TLibCommon/TypeDef.h	/^  CHROMA_422        = 2,$/;"	e	enum:ChromaFormat
CHROMA_444	TLibCommon/TypeDef.h	/^  CHROMA_444        = 3,$/;"	e	enum:ChromaFormat
CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS	TLibCommon/CommonDef.h	/^static const Int CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS = 8;$/;"	v
CHROMA_RESAMPLING_FILTER_HINT	TLibCommon/SEI.h	/^    CHROMA_RESAMPLING_FILTER_HINT        = 140,$/;"	e	enum:SEI::PayloadType
CI_CHROMA_INTRA	TLibCommon/TypeDef.h	/^  CI_CHROMA_INTRA,      \/\/\/< chroma intra index$/;"	e	enum:CI_IDX
CI_CURR_BEST	TLibCommon/TypeDef.h	/^  CI_CURR_BEST = 0,     \/\/\/< best mode index$/;"	e	enum:CI_IDX
CI_IDX	TLibCommon/TypeDef.h	/^enum CI_IDX$/;"	g
CI_NEXT_BEST	TLibCommon/TypeDef.h	/^  CI_NEXT_BEST,         \/\/\/< next best index$/;"	e	enum:CI_IDX
CI_NUM	TLibCommon/TypeDef.h	/^  CI_NUM,               \/\/\/< total number$/;"	e	enum:CI_IDX
CI_QT_TRAFO_ROOT	TLibCommon/TypeDef.h	/^  CI_QT_TRAFO_ROOT,$/;"	e	enum:CI_IDX
CI_QT_TRAFO_TEST	TLibCommon/TypeDef.h	/^  CI_QT_TRAFO_TEST,$/;"	e	enum:CI_IDX
CI_TEMP_BEST	TLibCommon/TypeDef.h	/^  CI_TEMP_BEST,         \/\/\/< temporal index$/;"	e	enum:CI_IDX
CLIP3	TLibCommon/SEIFilmGrainSynthesizer.h	100;"	d
CNU	TLibCommon/ContextTables.h	163;"	d
CODED_REGION_COMPLETION	TLibCommon/SEI.h	/^    CODED_REGION_COMPLETION              = 146, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
CODING_STATS_NUM_SUBCLASSES	TLibCommon/TComCodingStatistics.h	/^static const UInt CODING_STATS_NUM_SUBCLASSES=CODING_STATS_NUM_WIDTHS*(1+MAX_NUM_COMPONENT+MAX_NUM_CHANNEL_TYPE);$/;"	v
CODING_STATS_NUM_WIDTHS	TLibCommon/TComCodingStatistics.h	/^static const UInt CODING_STATS_NUM_WIDTHS=7;$/;"	v
COEFF_SCAN_GROUP_TYPE	TLibCommon/TypeDef.h	/^enum COEFF_SCAN_GROUP_TYPE$/;"	g
COEFF_SCAN_TYPE	TLibCommon/TypeDef.h	/^enum COEFF_SCAN_TYPE$/;"	g
COEF_REMAIN_BIN_REDUCTION	TLibCommon/CommonDef.h	/^static const Int COEF_REMAIN_BIN_REDUCTION =                        3; \/\/\/< indicates the level at which the VLC transitions from Golomb-Rice to TU+EG(k)$/;"	v
COLOUR_OFFSET_CB	TLibCommon/SEIFilmGrainSynthesizer.h	77;"	d
COLOUR_OFFSET_CB	TLibCommon/SEIFilmGrainSynthesizer.h	98;"	d
COLOUR_OFFSET_CR	TLibCommon/SEIFilmGrainSynthesizer.h	76;"	d
COLOUR_OFFSET_CR	TLibCommon/SEIFilmGrainSynthesizer.h	97;"	d
COLOUR_OFFSET_LUMA	TLibCommon/SEIFilmGrainSynthesizer.h	75;"	d
COLOUR_OFFSET_LUMA	TLibCommon/SEIFilmGrainSynthesizer.h	96;"	d
COLOUR_REMAPPING_INFO	TLibCommon/SEI.h	/^    COLOUR_REMAPPING_INFO                = 142,$/;"	e	enum:SEI::PayloadType
COMPONENT_Cb	TLibCommon/TypeDef.h	/^  COMPONENT_Cb      = 1,$/;"	e	enum:ComponentID
COMPONENT_Cr	TLibCommon/TypeDef.h	/^  COMPONENT_Cr      = 2,$/;"	e	enum:ComponentID
COMPONENT_Y	TLibCommon/TypeDef.h	/^  COMPONENT_Y       = 0,$/;"	e	enum:ComponentID
CONTENT_COLOUR_VOLUME	TLibCommon/SEI.h	/^    CONTENT_COLOUR_VOLUME                = 149, $/;"	e	enum:SEI::PayloadType
CONTENT_LIGHT_LEVEL_INFO	TLibCommon/SEI.h	/^    CONTENT_LIGHT_LEVEL_INFO             = 144, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
CONTEXT_NUMBER_OF_TYPES	TLibCommon/TypeDef.h	/^  CONTEXT_NUMBER_OF_TYPES = 4$/;"	e	enum:SignificanceMapContextType
CONTEXT_STATE_BITS	TLibCommon/CommonDef.h	/^static const Int CONTEXT_STATE_BITS =                              6 ;$/;"	v
CONTEXT_TYPE_4x4	TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_4x4    = 0,$/;"	e	enum:SignificanceMapContextType
CONTEXT_TYPE_8x8	TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_8x8    = 1,$/;"	e	enum:SignificanceMapContextType
CONTEXT_TYPE_NxN	TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_NxN    = 2,$/;"	e	enum:SignificanceMapContextType
CONTEXT_TYPE_SINGLE	TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_SINGLE = 3,$/;"	e	enum:SignificanceMapContextType
COST_LOSSLESS_CODING	TLibCommon/TypeDef.h	/^  COST_LOSSLESS_CODING             = 2,$/;"	e	enum:CostMode
COST_MIXED_LOSSLESS_LOSSY_CODING	TLibCommon/TypeDef.h	/^  COST_MIXED_LOSSLESS_LOSSY_CODING = 3$/;"	e	enum:CostMode
COST_SEQUENCE_LEVEL_LOSSLESS	TLibCommon/TypeDef.h	/^  COST_SEQUENCE_LEVEL_LOSSLESS     = 1,$/;"	e	enum:CostMode
COST_STANDARD_LOSSY	TLibCommon/TypeDef.h	/^  COST_STANDARD_LOSSY              = 0,$/;"	e	enum:CostMode
COUNTER_END	TLibCommon/TComRom.h	139;"	d
COUNTER_START	TLibCommon/TComRom.h	138;"	d
CRIlut	TLibCommon/SEI.h	/^  struct CRIlut$/;"	s	class:SEIColourRemappingInfo
CUBEMAP_PROJECTION	TLibCommon/SEI.h	/^    CUBEMAP_PROJECTION                   = 151,$/;"	e	enum:SEI::PayloadType
CUIsFromSameSlice	TLibCommon/TComDataCU.h	/^  Bool          CUIsFromSameSlice             ( const TComDataCU *pCU \/* Can be NULL *\/ ) const            { return ( pCU!=NULL && pCU->getSlice()->getSliceCurStartCtuTsAddr() == getSlice()->getSliceCurStartCtuTsAddr() ); }$/;"	f	class:TComDataCU
CUIsFromSameSliceAndTile	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::CUIsFromSameSliceAndTile    ( const TComDataCU *pCU \/* Can be NULL *\/) const$/;"	f	class:TComDataCU
CUIsFromSameSliceTileAndWavefrontRow	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::CUIsFromSameSliceTileAndWavefrontRow( const TComDataCU *pCU \/* Can be NULL *\/) const$/;"	f	class:TComDataCU
CUIsFromSameTile	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::CUIsFromSameTile            ( const TComDataCU *pCU \/* Can be NULL *\/) const$/;"	f	class:TComDataCU
CU_DQP_EG_k	TLibCommon/CommonDef.h	/^static const Int CU_DQP_EG_k =                                      0; \/\/\/< expgolomb order$/;"	v
CU_DQP_TU_CMAX	TLibCommon/CommonDef.h	/^static const Int CU_DQP_TU_CMAX =                                   5; \/\/\/< max number bins for truncated unary$/;"	v
CbOffset	TLibCommon/TComSlice.h	/^      Int CbOffset;$/;"	m	struct:ChromaQpAdj::__anon7::__anon8
CfgStreamParser	Utilities/program_options_lite.cpp	/^      CfgStreamParser(const string& rName, Options& rOpts, ErrorReporter& rError_reporter)$/;"	f	struct:df::program_options_lite::CfgStreamParser
CfgStreamParser	Utilities/program_options_lite.cpp	/^    struct CfgStreamParser : public OptionWriter$/;"	s	namespace:df::program_options_lite	file:
ChannelType	TLibCommon/TypeDef.h	/^enum ChannelType$/;"	g
Check3	TLibCommon/CommonDef.h	/^template <typename T> inline Void Check3( T minVal, T maxVal, T a)$/;"	f
ChromaFormat	TLibCommon/TypeDef.h	/^enum ChromaFormat$/;"	g
ChromaQpAdj	TLibCommon/TComSlice.h	/^struct ChromaQpAdj$/;"	s
Clip3	TLibCommon/CommonDef.h	/^template <typename T> inline T Clip3 (const T minVal, const T maxVal, const T a) { return std::min<T> (std::max<T> (minVal, a) , maxVal); }  \/\/\/< general min\/max clip$/;"	f
ClipBD	TLibCommon/CommonDef.h	/^template <typename T> inline T ClipBD(const T x, const Int bitDepth)             { return Clip3(T(0), T((1 << bitDepth)-1), x);           }$/;"	f
ColourSpaceConvert	Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::ColourSpaceConvert(const TComPicYuv &src, TComPicYuv &dest, const InputColourSpaceConversion conversion, Bool bIsForwards)$/;"	f	class:TVideoIOYuv
CompModel	TLibCommon/SEI.h	/^  struct CompModel$/;"	s	class:SEIFilmGrainCharacteristics
CompModelIntensityValues	TLibCommon/SEI.h	/^  struct CompModelIntensityValues$/;"	s	class:SEIFilmGrainCharacteristics
ComponentID	TLibCommon/TypeDef.h	/^enum ComponentID$/;"	g
ContextModel	TLibCommon/ContextModel.h	/^  ContextModel  ()                        { m_ucState = 0; m_binsCoded = 0; }$/;"	f	class:ContextModel
ContextModel	TLibCommon/ContextModel.h	/^class ContextModel$/;"	c
ContextModel3DBuffer	TLibCommon/ContextModel3DBuffer.cpp	/^ContextModel3DBuffer::ContextModel3DBuffer( UInt uiSizeZ, UInt uiSizeY, UInt uiSizeX, ContextModel *basePtr, Int &count )$/;"	f	class:ContextModel3DBuffer
ContextModel3DBuffer	TLibCommon/ContextModel3DBuffer.h	/^class ContextModel3DBuffer$/;"	c
CostMode	TLibCommon/TypeDef.h	/^enum CostMode$/;"	g
CrOffset	TLibCommon/TComSlice.h	/^      Int CrOffset;$/;"	m	struct:ChromaQpAdj::__anon7::__anon8
DATA_ALIGN	TLibCommon/CommonDef.h	270;"	d
DATA_BASE_SIZE	TLibCommon/SEIFilmGrainSynthesizer.h	80;"	d
DC_IDX	TLibCommon/CommonDef.h	/^static const Int DC_IDX =                                           1; \/\/\/< index for intra DC mode$/;"	v
DEBLOCK_SMALLEST_BLOCK	TLibCommon/TComLoopFilter.h	47;"	d
DEBUG_CABAC_BINS	TLibCommon/TypeDef.h	58;"	d
DEBUG_ENCODER_SEARCH_BINS	TLibCommon/TypeDef.h	57;"	d
DEBUG_INTRA_SEARCH_COSTS	TLibCommon/TypeDef.h	59;"	d
DEBUG_STRING	TLibCommon/TypeDef.h	56;"	d
DEBUG_STRING_APPEND	TLibCommon/TypeDef.h	170;"	d
DEBUG_STRING_APPEND	TLibCommon/TypeDef.h	182;"	d
DEBUG_STRING_CHANNEL_CONDITION	TLibCommon/TypeDef.h	172;"	d
DEBUG_STRING_CHANNEL_CONDITION	TLibCommon/TypeDef.h	184;"	d
DEBUG_STRING_FN_DECLARE	TLibCommon/TypeDef.h	166;"	d
DEBUG_STRING_FN_DECLARE	TLibCommon/TypeDef.h	178;"	d
DEBUG_STRING_FN_DECLAREP	TLibCommon/TypeDef.h	167;"	d
DEBUG_STRING_FN_DECLAREP	TLibCommon/TypeDef.h	179;"	d
DEBUG_STRING_NEW	TLibCommon/TypeDef.h	168;"	d
DEBUG_STRING_NEW	TLibCommon/TypeDef.h	180;"	d
DEBUG_STRING_OUTPUT	TLibCommon/TypeDef.h	169;"	d
DEBUG_STRING_OUTPUT	TLibCommon/TypeDef.h	181;"	d
DEBUG_STRING_PASS_INTO	TLibCommon/TypeDef.h	164;"	d
DEBUG_STRING_PASS_INTO	TLibCommon/TypeDef.h	176;"	d
DEBUG_STRING_PASS_INTO_OPTIONAL	TLibCommon/TypeDef.h	165;"	d
DEBUG_STRING_PASS_INTO_OPTIONAL	TLibCommon/TypeDef.h	177;"	d
DEBUG_STRING_SWAP	TLibCommon/TypeDef.h	171;"	d
DEBUG_STRING_SWAP	TLibCommon/TypeDef.h	183;"	d
DEBUG_TRANSFORM_AND_QUANTISE	TLibCommon/TypeDef.h	60;"	d
DECODED_PICTURE_HASH	TLibCommon/SEI.h	/^    DECODED_PICTURE_HASH                 = 132,$/;"	e	enum:SEI::PayloadType
DECODER_CHECK_SUBSTREAM_AND_SLICE_TRAILING_BYTES	TLibCommon/TypeDef.h	89;"	d
DECODER_PARTIAL_CONFORMANCE_CHECK	TLibDecoder/TDecConformance.h	43;"	d
DECODING_UNIT_INFO	TLibCommon/SEI.h	/^    DECODING_UNIT_INFO                   = 130,$/;"	e	enum:SEI::PayloadType
DEC_NUH_TRACE	TLibCommon/TypeDef.h	75;"	d
DEFAULT_HORZ_CUT_OFF_FREQUENCY	TLibCommon/SEIFilmGrainSynthesizer.h	60;"	d
DEFAULT_INTRA_TC_OFFSET	TLibCommon/TComLoopFilter.cpp	53;"	d	file:
DEFINE_DCT16x16_MATRIX	TLibCommon/TComRom.cpp	396;"	d	file:
DEFINE_DCT16x16_MATRIX	TLibCommon/TComRom.cpp	526;"	d	file:
DEFINE_DCT32x32_MATRIX	TLibCommon/TComRom.cpp	416;"	d	file:
DEFINE_DCT32x32_MATRIX	TLibCommon/TComRom.cpp	527;"	d	file:
DEFINE_DCT4x4_MATRIX	TLibCommon/TComRom.cpp	376;"	d	file:
DEFINE_DCT4x4_MATRIX	TLibCommon/TComRom.cpp	524;"	d	file:
DEFINE_DCT8x8_MATRIX	TLibCommon/TComRom.cpp	384;"	d	file:
DEFINE_DCT8x8_MATRIX	TLibCommon/TComRom.cpp	525;"	d	file:
DEFINE_DST4x4_MATRIX	TLibCommon/TComRom.cpp	368;"	d	file:
DEFINE_DST4x4_MATRIX	TLibCommon/TComRom.cpp	523;"	d	file:
DEINTERLACE_FIELD_IDENTIFICATION	TLibCommon/SEI.h	/^    DEINTERLACE_FIELD_IDENTIFICATION     = 143, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
DEPENDENT_RAP_INDICATION	TLibCommon/SEI.h	/^    DEPENDENT_RAP_INDICATION             = 145, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
DF_DEFAULT	TLibCommon/TypeDef.h	/^  DF_DEFAULT         = 0,$/;"	e	enum:DFunc
DF_HADS	TLibCommon/TypeDef.h	/^  DF_HADS            = 22,     \/\/\/< general size Hadamard with step$/;"	e	enum:DFunc
DF_HADS16	TLibCommon/TypeDef.h	/^  DF_HADS16          = 25,     \/\/\/<  16xM HAD with step$/;"	e	enum:DFunc
DF_HADS16N	TLibCommon/TypeDef.h	/^  DF_HADS16N         = 28,     \/\/\/< 16NxM HAD with step$/;"	e	enum:DFunc
DF_HADS32	TLibCommon/TypeDef.h	/^  DF_HADS32          = 26,     \/\/\/<  32xM HAD with step$/;"	e	enum:DFunc
DF_HADS4	TLibCommon/TypeDef.h	/^  DF_HADS4           = 23,     \/\/\/<   4xM HAD with step$/;"	e	enum:DFunc
DF_HADS64	TLibCommon/TypeDef.h	/^  DF_HADS64          = 27,     \/\/\/<  64xM HAD with step$/;"	e	enum:DFunc
DF_HADS8	TLibCommon/TypeDef.h	/^  DF_HADS8           = 24,     \/\/\/<   8xM HAD with step$/;"	e	enum:DFunc
DF_SAD	TLibCommon/TypeDef.h	/^  DF_SAD             = 8,      \/\/\/< general size SAD$/;"	e	enum:DFunc
DF_SAD12	TLibCommon/TypeDef.h	/^  DF_SAD12           = 43,$/;"	e	enum:DFunc
DF_SAD16	TLibCommon/TypeDef.h	/^  DF_SAD16           = 11,     \/\/\/<  16xM SAD$/;"	e	enum:DFunc
DF_SAD16N	TLibCommon/TypeDef.h	/^  DF_SAD16N          = 14,     \/\/\/< 16NxM SAD$/;"	e	enum:DFunc
DF_SAD24	TLibCommon/TypeDef.h	/^  DF_SAD24           = 44,$/;"	e	enum:DFunc
DF_SAD32	TLibCommon/TypeDef.h	/^  DF_SAD32           = 12,     \/\/\/<  32xM SAD$/;"	e	enum:DFunc
DF_SAD4	TLibCommon/TypeDef.h	/^  DF_SAD4            = 9,      \/\/\/<   4xM SAD$/;"	e	enum:DFunc
DF_SAD48	TLibCommon/TypeDef.h	/^  DF_SAD48           = 45,$/;"	e	enum:DFunc
DF_SAD64	TLibCommon/TypeDef.h	/^  DF_SAD64           = 13,     \/\/\/<  64xM SAD$/;"	e	enum:DFunc
DF_SAD8	TLibCommon/TypeDef.h	/^  DF_SAD8            = 10,     \/\/\/<   8xM SAD$/;"	e	enum:DFunc
DF_SADS	TLibCommon/TypeDef.h	/^  DF_SADS            = 15,     \/\/\/< general size SAD with step$/;"	e	enum:DFunc
DF_SADS12	TLibCommon/TypeDef.h	/^  DF_SADS12          = 46,$/;"	e	enum:DFunc
DF_SADS16	TLibCommon/TypeDef.h	/^  DF_SADS16          = 18,     \/\/\/<  16xM SAD with step$/;"	e	enum:DFunc
DF_SADS16N	TLibCommon/TypeDef.h	/^  DF_SADS16N         = 21,     \/\/\/< 16NxM SAD with step$/;"	e	enum:DFunc
DF_SADS24	TLibCommon/TypeDef.h	/^  DF_SADS24          = 47,$/;"	e	enum:DFunc
DF_SADS32	TLibCommon/TypeDef.h	/^  DF_SADS32          = 19,     \/\/\/<  32xM SAD with step$/;"	e	enum:DFunc
DF_SADS4	TLibCommon/TypeDef.h	/^  DF_SADS4           = 16,     \/\/\/<   4xM SAD with step$/;"	e	enum:DFunc
DF_SADS48	TLibCommon/TypeDef.h	/^  DF_SADS48          = 48,$/;"	e	enum:DFunc
DF_SADS64	TLibCommon/TypeDef.h	/^  DF_SADS64          = 20,     \/\/\/<  64xM SAD with step$/;"	e	enum:DFunc
DF_SADS8	TLibCommon/TypeDef.h	/^  DF_SADS8           = 17,     \/\/\/<   8xM SAD with step$/;"	e	enum:DFunc
DF_SSE	TLibCommon/TypeDef.h	/^  DF_SSE             = 1,      \/\/\/< general size SSE$/;"	e	enum:DFunc
DF_SSE16	TLibCommon/TypeDef.h	/^  DF_SSE16           = 4,      \/\/\/<  16xM SSE$/;"	e	enum:DFunc
DF_SSE16N	TLibCommon/TypeDef.h	/^  DF_SSE16N          = 7,      \/\/\/< 16NxM SSE$/;"	e	enum:DFunc
DF_SSE32	TLibCommon/TypeDef.h	/^  DF_SSE32           = 5,      \/\/\/<  32xM SSE$/;"	e	enum:DFunc
DF_SSE4	TLibCommon/TypeDef.h	/^  DF_SSE4            = 2,      \/\/\/<   4xM SSE$/;"	e	enum:DFunc
DF_SSE64	TLibCommon/TypeDef.h	/^  DF_SSE64           = 6,      \/\/\/<  64xM SSE$/;"	e	enum:DFunc
DF_SSE8	TLibCommon/TypeDef.h	/^  DF_SSE8            = 3,      \/\/\/<   8xM SSE$/;"	e	enum:DFunc
DF_SSE_FRAME	TLibCommon/TypeDef.h	/^  DF_SSE_FRAME       = 50,     \/\/\/< Frame-based SSE$/;"	e	enum:DFunc
DF_TOTAL_FUNCTIONS	TLibCommon/TypeDef.h	/^  DF_TOTAL_FUNCTIONS = 64$/;"	e	enum:DFunc
DFunc	TLibCommon/TypeDef.h	/^enum DFunc$/;"	g
DISABLED	TLibCommon/ProfileLevelTierFeatures.h	/^    DISABLED=0,$/;"	e	enum:ProfileFeatures::TRISTATE
DISABLED	TLibDecoder/TDecConformance.h	/^  DISABLED=0,$/;"	e	enum:TRISTATE
DISPLAY_ORIENTATION	TLibCommon/SEI.h	/^    DISPLAY_ORIENTATION                  = 47,$/;"	e	enum:SEI::PayloadType
DISTORTION_PRECISION_ADJUSTMENT	TLibCommon/TypeDef.h	158;"	d
DISTORTION_PRECISION_ADJUSTMENT	TLibCommon/TypeDef.h	160;"	d
DM_CHROMA_IDX	TLibCommon/CommonDef.h	/^static const Int DM_CHROMA_IDX =                                   36; \/\/\/< chroma mode index for derived from luma intra mode$/;"	v
DONT_SPLIT	TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
DPBPerCtuData	TLibCommon/TComPicSym.h	/^  struct DPBPerCtuData$/;"	s	class:TComPicSym
DPB_ENCODER_USAGE_CHECK	TLibCommon/TypeDef.h	93;"	d
DTRACE_CABAC_F	TLibCommon/TComRom.h	141;"	d
DTRACE_CABAC_F	TLibCommon/TComRom.h	151;"	d
DTRACE_CABAC_N	TLibCommon/TComRom.h	147;"	d
DTRACE_CABAC_N	TLibCommon/TComRom.h	157;"	d
DTRACE_CABAC_R	TLibCommon/TComRom.h	146;"	d
DTRACE_CABAC_R	TLibCommon/TComRom.h	156;"	d
DTRACE_CABAC_T	TLibCommon/TComRom.h	144;"	d
DTRACE_CABAC_T	TLibCommon/TComRom.h	154;"	d
DTRACE_CABAC_V	TLibCommon/TComRom.h	142;"	d
DTRACE_CABAC_V	TLibCommon/TComRom.h	152;"	d
DTRACE_CABAC_VL	TLibCommon/TComRom.h	143;"	d
DTRACE_CABAC_VL	TLibCommon/TComRom.h	153;"	d
DTRACE_CABAC_X	TLibCommon/TComRom.h	145;"	d
DTRACE_CABAC_X	TLibCommon/TComRom.h	155;"	d
DUData	TLibEncoder/TEncGOP.h	/^    DUData()$/;"	f	class:TEncGOP::DUData
DUData	TLibEncoder/TEncGOP.h	/^  class DUData$/;"	c	class:TEncGOP
DeblockEdgeDir	TLibCommon/TypeDef.h	/^enum DeblockEdgeDir$/;"	g
DebugInterPredResiReco	TLibCommon/Debug.cpp	/^Void DebugInterPredResiReco(std::string &sDebug, TComYuv &pred, TComYuv &resi, TComYuv &reco, Int predmode_mask)$/;"	f
DebugOptionList	TLibCommon/Debug.h	/^namespace DebugOptionList$/;"	n
DebugStringGetPredModeMask	TLibCommon/Debug.cpp	/^Int DebugStringGetPredModeMask(PredMode mode)$/;"	f
DistFunc	TLibCommon/TComRdCost.h	/^  FpDistFunc            DistFunc;$/;"	m	class:DistParam
DistParam	TLibCommon/TComRdCost.h	/^  DistParam()$/;"	f	class:DistParam
DistParam	TLibCommon/TComRdCost.h	/^class DistParam$/;"	c
Distortion	TLibCommon/TypeDef.h	/^typedef       UInt            Distortion;        \/\/\/< distortion measurement$/;"	t
Distortion	TLibCommon/TypeDef.h	/^typedef       UInt64          Distortion;        \/\/\/< distortion measurement$/;"	t
Double	TLibCommon/TypeDef.h	/^typedef       double              Double;$/;"	t
EDGE_HOR	TLibCommon/TypeDef.h	/^  EDGE_HOR     = 1,$/;"	e	enum:DeblockEdgeDir
EDGE_VER	TLibCommon/TypeDef.h	/^  EDGE_VER     = 0,$/;"	e	enum:DeblockEdgeDir
ENABLED	TLibCommon/ProfileLevelTierFeatures.h	/^    ENABLED=2$/;"	e	enum:ProfileFeatures::TRISTATE
ENABLED	TLibDecoder/TDecConformance.h	/^  ENABLED=2$/;"	e	enum:TRISTATE
ENC_DEC_TRACE	TLibCommon/TypeDef.h	73;"	d
ENVIRONMENT_VARIABLE_DEBUG_AND_TEST	TLibCommon/TypeDef.h	62;"	d
EQUIRECTANGULAR_PROJECTION	TLibCommon/SEI.h	/^    EQUIRECTANGULAR_PROJECTION           = 150,$/;"	e	enum:SEI::PayloadType
EXTENSION_360_VIDEO	TLibCommon/TypeDef.h	103;"	d
EfficientFieldIRAPMapping	TLibEncoder/TEncGOP.cpp	/^    EfficientFieldIRAPMapping() :$/;"	f	class:EfficientFieldIRAPMapping
EfficientFieldIRAPMapping	TLibEncoder/TEncGOP.cpp	/^class EfficientFieldIRAPMapping$/;"	c	file:
EnvVar	TLibCommon/Debug.cpp	/^EnvVar::EnvVar(const std::string &sName, const std::string &sDefault, const std::string &sHelp) :$/;"	f	class:EnvVar
EnvVar	TLibCommon/Debug.h	/^class EnvVar$/;"	c
ErrorReporter	Utilities/program_options_lite.h	/^      ErrorReporter() : is_errored(0) {}$/;"	f	struct:df::program_options_lite::ErrorReporter
ErrorReporter	Utilities/program_options_lite.h	/^    struct ErrorReporter$/;"	s	namespace:df::program_options_lite
F1	libmd5/libmd5.cpp	161;"	d	file:
F2	libmd5/libmd5.cpp	162;"	d	file:
F3	libmd5/libmd5.cpp	163;"	d	file:
F4	libmd5/libmd5.cpp	164;"	d	file:
FASTINTERSEARCH_DISABLED	TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_DISABLED = 0,$/;"	e	enum:FastInterSearchMode
FASTINTERSEARCH_MODE1	TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_MODE1    = 1, \/\/ TODO: assign better names to these.$/;"	e	enum:FastInterSearchMode
FASTINTERSEARCH_MODE2	TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_MODE2    = 2,$/;"	e	enum:FastInterSearchMode
FASTINTERSEARCH_MODE3	TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_MODE3    = 3$/;"	e	enum:FastInterSearchMode
FAST_BIT_EST	TLibCommon/TypeDef.h	115;"	d
FAST_UDI_MAX_RDMODE_NUM	TLibCommon/CommonDef.h	/^static const Int FAST_UDI_MAX_RDMODE_NUM =                         35; \/\/\/< maximum number of RD comparison in fast-UDI estimation loop$/;"	v
FATAL_ERROR_0	TLibCommon/CommonDef.h	279;"	d
FDReader	TLibDecoder/SyntaxElementParser.h	/^  FDReader() {};$/;"	f	class:FDReader
FDReader	TLibDecoder/SyntaxElementParser.h	/^class FDReader: public SyntaxElementParser$/;"	c
FGS_ERROR_T	TLibCommon/SEIFilmGrainSynthesizer.h	/^}FGS_ERROR_T;$/;"	t	typeref:enum:__anon6
FGS_FAIL	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_FAIL = 0xFF$/;"	e	enum:__anon6
FGS_FILE_IO_ERROR	TLibCommon/SEIFilmGrainSynthesizer.h	109;"	d
FGS_INVALID_BIT_DEPTH	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_BIT_DEPTH = FGS_FILE_IO_ERROR + 0x04,$/;"	e	enum:__anon6
FGS_INVALID_BLEND_MODE	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_BLEND_MODE = FGS_PARAM_ERROR + 0x04,$/;"	e	enum:__anon6
FGS_INVALID_CHROMA_FORMAT	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_CHROMA_FORMAT = FGS_FILE_IO_ERROR + 0x03,$/;"	e	enum:__anon6
FGS_INVALID_COMP_MODEL_PRESENT_FLAG	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_COMP_MODEL_PRESENT_FLAG = FGS_PARAM_ERROR + 0x06,$/;"	e	enum:__anon6
FGS_INVALID_CUT_OFF_FREQUENCIES	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_CUT_OFF_FREQUENCIES = FGS_PARAM_ERROR + 0x0A,$/;"	e	enum:__anon6
FGS_INVALID_FGC_CANCEL_FLAG	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_FGC_CANCEL_FLAG = FGS_PARAM_ERROR + 0x01,$/;"	e	enum:__anon6
FGS_INVALID_FGC_REPETETION_PERIOD	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_FGC_REPETETION_PERIOD = FGS_PARAM_ERROR + 0x0C,$/;"	e	enum:__anon6
FGS_INVALID_GRAIN_MODEL_ID	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_GRAIN_MODEL_ID = FGS_PARAM_ERROR + 0x02,$/;"	e	enum:__anon6
FGS_INVALID_HEIGHT	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_HEIGHT = FGS_FILE_IO_ERROR + 0x02,$/;"	e	enum:__anon6
FGS_INVALID_INTENSITY_BOUNDARY_VALUES	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_INTENSITY_BOUNDARY_VALUES = FGS_PARAM_ERROR + 0x08,$/;"	e	enum:__anon6
FGS_INVALID_LOG2_SCALE_FACTOR	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_LOG2_SCALE_FACTOR = FGS_PARAM_ERROR + 0x05,$/;"	e	enum:__anon6
FGS_INVALID_NUM_CUT_OFF_FREQ_PAIRS	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_NUM_CUT_OFF_FREQ_PAIRS = FGS_PARAM_ERROR + 0x0B,$/;"	e	enum:__anon6
FGS_INVALID_NUM_MODEL_VALUES	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_NUM_MODEL_VALUES = FGS_PARAM_ERROR + 0x07,$/;"	e	enum:__anon6
FGS_INVALID_SEP_COL_DES_FLAG	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_SEP_COL_DES_FLAG = FGS_PARAM_ERROR + 0x03,$/;"	e	enum:__anon6
FGS_INVALID_STANDARD_DEVIATION	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_STANDARD_DEVIATION = FGS_PARAM_ERROR + 0x09,$/;"	e	enum:__anon6
FGS_INVALID_WIDTH	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_WIDTH = FGS_FILE_IO_ERROR + 0x01,$/;"	e	enum:__anon6
FGS_PARAM_ERROR	TLibCommon/SEIFilmGrainSynthesizer.h	110;"	d
FGS_RDD5_ENABLE	TLibCommon/TypeDef.h	94;"	d
FGS_SUCCESS	TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_SUCCESS = 0,$/;"	e	enum:__anon6
FILLER_PAYLOAD	TLibCommon/SEI.h	/^    FILLER_PAYLOAD                       = 3,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
FILM_GRAIN_CHARACTERISTICS	TLibCommon/SEI.h	/^    FILM_GRAIN_CHARACTERISTICS           = 19,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
FILM_GRAIN_MODEL_ID_VALUE	TLibCommon/SEIFilmGrainSynthesizer.h	55;"	d
FIRST_CBF_CTX_CHROMA	TLibCommon/ContextTables.h	147;"	d
FIRST_CBF_CTX_LUMA	TLibCommon/ContextTables.h	145;"	d
FIRST_CTX_SET_CHROMA	TLibCommon/ContextTables.h	135;"	d
FIRST_CTX_SET_LUMA	TLibCommon/ContextTables.h	122;"	d
FIRST_SIG_FLAG_CTX_CHROMA	TLibCommon/ContextTables.h	98;"	d
FIRST_SIG_FLAG_CTX_LUMA	TLibCommon/ContextTables.h	97;"	d
FISHEYE_VIDEO_INFO	TLibCommon/SEI.h	/^    FISHEYE_VIDEO_INFO                   = 152,$/;"	e	enum:SEI::PayloadType
FIXED_NUMBER_OF_BYTES	TLibCommon/TypeDef.h	/^  FIXED_NUMBER_OF_BYTES  = 2,          \/\/\/< Limit maximum number of bytes in a slice \/ slice segment$/;"	e	enum:SliceConstraint
FIXED_NUMBER_OF_CTU	TLibCommon/TypeDef.h	/^  FIXED_NUMBER_OF_CTU    = 1,          \/\/\/< Limit maximum number of largest coding tree units in a slice \/ slice segments$/;"	e	enum:SliceConstraint
FIXED_NUMBER_OF_TILES	TLibCommon/TypeDef.h	/^  FIXED_NUMBER_OF_TILES  = 3,          \/\/\/< slices \/ slice segments span an integer number of tiles$/;"	e	enum:SliceConstraint
FRAME_PACKING	TLibCommon/SEI.h	/^    FRAME_PACKING                        = 45,$/;"	e	enum:SEI::PayloadType
FULL_NBIT	TLibCommon/TypeDef.h	150;"	d
FULL_NBIT	TLibCommon/TypeDef.h	153;"	d
FastInterSearchMode	TLibCommon/TypeDef.h	/^enum FastInterSearchMode$/;"	g
Float	TLibCommon/TypeDef.h	/^typedef       float               Float;$/;"	t
FpDistFunc	TLibCommon/TComRdCost.h	/^typedef Distortion (*FpDistFunc) (DistParam*); \/\/ TODO: can this pointer be replaced with a reference? - there are no NULL checks on pointer.$/;"	t
Func	Utilities/program_options_lite.h	/^      typedef void (Func)(Options&, const std::string&, ErrorReporter&);$/;"	t	struct:df::program_options_lite::OptionFunc
GCC_VERSION	TLibCommon/TComRdCost.cpp	428;"	d	file:
GOPEntry	TLibEncoder/TEncCfg.h	/^  GOPEntry()$/;"	f	struct:GOPEntry
GOPEntry	TLibEncoder/TEncCfg.h	/^struct GOPEntry$/;"	s
GRAIN_SCALE	TLibCommon/SEIFilmGrainSynthesizer.h	65;"	d
GREEN_METADATA	TLibCommon/SEI.h	/^    GREEN_METADATA                       = 56,$/;"	e	enum:SEI::PayloadType
GetAbsPartIdxCU	TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxCU()                                     const { return mAbsPartIdxCU; }$/;"	f	class:TComTU
GetAbsPartIdxNumParts	TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxNumParts()                               const { return mAbsPartIdxStep; }$/;"	f	class:TComTU
GetAbsPartIdxNumParts	TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxNumParts(const ComponentID compID)       const { return ProcessingAllQuadrants(compID) ? mAbsPartIdxStep : (mAbsPartIdxStep * NUMBER_OF_SECTIONS[mSplitMode]); }$/;"	f	class:TComTU
GetAbsPartIdxTU	TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxTU()                                     const { return GetAbsPartIdxCU() + GetRelPartIdxTU(); }$/;"	f	class:TComTU
GetAbsPartIdxTU	TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxTU(const ComponentID compID)             const { return GetAbsPartIdxCU() + GetRelPartIdxTU(compID); }$/;"	f	class:TComTU
GetChromaFormat	TLibCommon/TComTU.h	/^    ChromaFormat GetChromaFormat()                             const { return mChromaFormat; }$/;"	f	class:TComTU
GetCurrentX	TLibCommon/TComRom.cpp	/^  UInt GetCurrentX() const { return m_column; }$/;"	f	class:ScanGenerator
GetCurrentY	TLibCommon/TComRom.cpp	/^  UInt GetCurrentY() const { return m_line; }$/;"	f	class:ScanGenerator
GetEquivalentLog2TrSize	TLibCommon/TComTU.cpp	/^UInt TComTU::GetEquivalentLog2TrSize(const ComponentID compID)     const$/;"	f	class:TComTU
GetIRAPGOPid	TLibEncoder/TEncGOP.cpp	/^    Int GetIRAPGOPid() const { return IRAPGOPid; }$/;"	f	class:EfficientFieldIRAPMapping
GetLog2LumaTrSize	TLibCommon/TComTU.h	/^    UInt GetLog2LumaTrSize()                                   const { return mLog2TrLumaSize; }$/;"	f	class:TComTU
GetNextIndex	TLibCommon/TComRom.cpp	/^  UInt GetNextIndex(UInt blockOffsetX, UInt blockOffsetY)$/;"	f	class:ScanGenerator
GetNumBufferedBytes	TLibDecoder/AnnexBread.h	/^  UInt GetNumBufferedBytes() const { return m_NumFutureBytes; }$/;"	f	class:InputByteStream
GetRelPartIdxTU	TLibCommon/TComTU.h	/^    UInt GetRelPartIdxTU()                                     const { return mAbsPartIdxTURelCU; }$/;"	f	class:TComTU
GetRelPartIdxTU	TLibCommon/TComTU.h	/^    UInt GetRelPartIdxTU(const ComponentID compID)             const { return ProcessingAllQuadrants(compID) ? mAbsPartIdxTURelCU : (mAbsPartIdxTURelCU & (~0x3)); }$/;"	f	class:TComTU
GetSectionNumber	TLibCommon/TComTU.h	/^    UInt GetSectionNumber()                                    const { return mSection; }$/;"	f	class:TComTU
GetSingletonInstance	TLibCommon/TComCodingStatistics.h	/^    static TComCodingStatistics& GetSingletonInstance()$/;"	f	class:TComCodingStatistics
GetSplitMode	TLibCommon/TComTU.h	/^    TU_SPLIT_MODE GetSplitMode()                               const { return mSplitMode; }$/;"	f	class:TComTU
GetStatisticEP	TLibCommon/TComCodingStatistics.h	/^    static SStat &GetStatisticEP(const TChar *pKey) {return GetStatisticEP(std::string(pKey)); }$/;"	f	class:TComCodingStatistics
GetStatisticEP	TLibCommon/TComCodingStatistics.h	/^    static SStat &GetStatisticEP(const TComCodingStatisticsClassType &stat) { return GetSingletonInstance().data.statistics_ep[stat.type][stat.subClass]; }$/;"	f	class:TComCodingStatistics
GetStatisticEP	TLibCommon/TComCodingStatistics.h	/^    static SStat &GetStatisticEP(const std::string &str) { return GetSingletonInstance().data.mappings_ep[str]; }$/;"	f	class:TComCodingStatistics
GetStatistics	TLibCommon/TComCodingStatistics.h	/^    static const TComCodingStatisticsData &GetStatistics()         { return GetSingletonInstance().data; }$/;"	f	class:TComCodingStatistics
GetSubClassString	TLibCommon/TComCodingStatistics.h	/^  static const TChar *GetSubClassString(const UInt subClass)$/;"	f	class:TComCodingStatisticsClassType
GetSubClassWidth	TLibCommon/TComCodingStatistics.h	/^  static UInt GetSubClassWidth(const UInt subClass)$/;"	f	class:TComCodingStatisticsClassType
GetTransformDepthRel	TLibCommon/TComTU.h	/^    UInt GetTransformDepthRel()                                const { return mTrDepthRelCU[COMPONENT_Y]; }$/;"	f	class:TComTU
GetTransformDepthRelAdj	TLibCommon/TComTU.h	/^    UInt GetTransformDepthRelAdj(const ChannelType chType)     const$/;"	f	class:TComTU
GetTransformDepthRelAdj	TLibCommon/TComTU.h	/^    UInt GetTransformDepthRelAdj(const ComponentID compID)     const { return mTrDepthRelCU[compID]; }$/;"	f	class:TComTU
GetTransformDepthTotal	TLibCommon/TComTU.h	/^    UInt GetTransformDepthTotal()                              const { return mCuDepth+GetTransformDepthRel(); }$/;"	f	class:TComTU
GetTransformDepthTotalAdj	TLibCommon/TComTU.h	/^    UInt GetTransformDepthTotalAdj(const ComponentID compID)   const { return mCuDepth+GetTransformDepthRelAdj(compID); }$/;"	f	class:TComTU
GrainSynthesisStruct	TLibCommon/SEIFilmGrainSynthesizer.h	/^}GrainSynthesisStruct;$/;"	t	typeref:struct:GrainSynthesisStruct_t
GrainSynthesisStruct_t	TLibCommon/SEIFilmGrainSynthesizer.h	/^typedef struct GrainSynthesisStruct_t$/;"	s
HASHTYPE_CHECKSUM	TLibCommon/TypeDef.h	/^  HASHTYPE_CHECKSUM        = 2,$/;"	e	enum:HashType
HASHTYPE_CRC	TLibCommon/TypeDef.h	/^  HASHTYPE_CRC             = 1,$/;"	e	enum:HashType
HASHTYPE_MD5	TLibCommon/TypeDef.h	/^  HASHTYPE_MD5             = 0,$/;"	e	enum:HashType
HASHTYPE_NONE	TLibCommon/TypeDef.h	/^  HASHTYPE_NONE            = 3,$/;"	e	enum:HashType
HBRFACTOREQN	TLibCommon/ProfileLevelTierFeatures.h	/^typedef enum HBRFACTOREQN$/;"	g
HBRFACTOREQN	TLibCommon/ProfileLevelTierFeatures.h	/^} HBRFACTOREQN;$/;"	t	typeref:enum:HBRFACTOREQN
HBRFACTOREQN	TLibDecoder/TDecConformance.h	/^typedef enum HBRFACTOREQN$/;"	g
HBRFACTOREQN	TLibDecoder/TDecConformance.h	/^} HBRFACTOREQN;$/;"	t	typeref:enum:HBRFACTOREQN
HBR_1	TLibCommon/ProfileLevelTierFeatures.h	/^  HBR_1 = 0,$/;"	e	enum:HBRFACTOREQN
HBR_1	TLibDecoder/TDecConformance.h	/^  HBR_1 = 0,$/;"	e	enum:HBRFACTOREQN
HBR_12_OR_24	TLibCommon/ProfileLevelTierFeatures.h	/^  HBR_12_OR_24 = 2$/;"	e	enum:HBRFACTOREQN
HBR_12_OR_24	TLibDecoder/TDecConformance.h	/^  HBR_12_OR_24 = 2$/;"	e	enum:HBRFACTOREQN
HBR_1_OR_2	TLibCommon/ProfileLevelTierFeatures.h	/^  HBR_1_OR_2 = 1,$/;"	e	enum:HBRFACTOREQN
HBR_1_OR_2	TLibDecoder/TDecConformance.h	/^  HBR_1_OR_2 = 1,$/;"	e	enum:HBRFACTOREQN
HHI_RQT_INTRA_SPEEDUP	TLibCommon/TypeDef.h	117;"	d
HHI_RQT_INTRA_SPEEDUP_MOD	TLibCommon/TypeDef.h	118;"	d
HIGH	TLibCommon/TypeDef.h	/^    HIGH = 1,$/;"	e	enum:Level::Tier
HIGHTHROUGHPUTREXT	TLibCommon/TypeDef.h	/^    HIGHTHROUGHPUTREXT = 5$/;"	e	enum:Profile::Name
HOR_IDX	TLibCommon/CommonDef.h	/^static const Int HOR_IDX =                                         10; \/\/\/< index for intra HORIZONTAL mode$/;"	v
HashType	TLibCommon/TypeDef.h	/^enum HashType$/;"	g
HrdSubLayerInfo	TLibCommon/TComSlice.h	/^struct HrdSubLayerInfo$/;"	s
IF_FILTER_PREC	TLibCommon/TComInterpolationFilter.h	50;"	d
IF_INTERNAL_OFFS	TLibCommon/TComInterpolationFilter.h	51;"	d
IF_INTERNAL_PREC	TLibCommon/TComInterpolationFilter.h	49;"	d
INIT_ABS_FLAG	TLibCommon/ContextTables.h	/^INIT_ABS_FLAG[NUMBER_OF_SLICE_TYPES][NUM_ABS_FLAG_CTX] =$/;"	v
INIT_CHROMA_PRED_MODE	TLibCommon/ContextTables.h	/^INIT_CHROMA_PRED_MODE[NUMBER_OF_SLICE_TYPES][NUM_CHROMA_PRED_CTX] =$/;"	v
INIT_CHROMA_QP_ADJ_FLAG	TLibCommon/ContextTables.h	/^INIT_CHROMA_QP_ADJ_FLAG[NUMBER_OF_SLICE_TYPES][NUM_CHROMA_QP_ADJ_FLAG_CTX] =$/;"	v
INIT_CHROMA_QP_ADJ_IDC	TLibCommon/ContextTables.h	/^INIT_CHROMA_QP_ADJ_IDC[NUMBER_OF_SLICE_TYPES][NUM_CHROMA_QP_ADJ_IDC_CTX] =$/;"	v
INIT_CROSS_COMPONENT_PREDICTION	TLibCommon/ContextTables.h	/^INIT_CROSS_COMPONENT_PREDICTION[NUMBER_OF_SLICE_TYPES][NUM_CROSS_COMPONENT_PREDICTION_CTX] =$/;"	v
INIT_CU_TRANSQUANT_BYPASS_FLAG	TLibCommon/ContextTables.h	/^INIT_CU_TRANSQUANT_BYPASS_FLAG[NUMBER_OF_SLICE_TYPES][NUM_CU_TRANSQUANT_BYPASS_FLAG_CTX] =$/;"	v
INIT_DQP	TLibCommon/ContextTables.h	/^INIT_DQP[NUMBER_OF_SLICE_TYPES][NUM_DELTA_QP_CTX] =$/;"	v
INIT_EXPLICIT_RDPCM_DIR	TLibCommon/ContextTables.h	/^INIT_EXPLICIT_RDPCM_DIR[NUMBER_OF_SLICE_TYPES][2*NUM_EXPLICIT_RDPCM_DIR_CTX] =$/;"	v
INIT_EXPLICIT_RDPCM_FLAG	TLibCommon/ContextTables.h	/^INIT_EXPLICIT_RDPCM_FLAG[NUMBER_OF_SLICE_TYPES][2*NUM_EXPLICIT_RDPCM_FLAG_CTX] =$/;"	v
INIT_INTER_DIR	TLibCommon/ContextTables.h	/^INIT_INTER_DIR[NUMBER_OF_SLICE_TYPES][NUM_INTER_DIR_CTX] =$/;"	v
INIT_INTRA_PRED_MODE	TLibCommon/ContextTables.h	/^INIT_INTRA_PRED_MODE[NUMBER_OF_SLICE_TYPES][NUM_INTRA_PREDICT_CTX] =$/;"	v
INIT_LAST	TLibCommon/ContextTables.h	/^INIT_LAST[NUMBER_OF_SLICE_TYPES][NUM_CTX_LAST_FLAG_SETS * NUM_CTX_LAST_FLAG_XY] =$/;"	v
INIT_MERGE_FLAG_EXT	TLibCommon/ContextTables.h	/^INIT_MERGE_FLAG_EXT[NUMBER_OF_SLICE_TYPES][NUM_MERGE_FLAG_EXT_CTX] =$/;"	v
INIT_MERGE_IDX_EXT	TLibCommon/ContextTables.h	/^INIT_MERGE_IDX_EXT[NUMBER_OF_SLICE_TYPES][NUM_MERGE_IDX_EXT_CTX] =$/;"	v
INIT_MVD	TLibCommon/ContextTables.h	/^INIT_MVD[NUMBER_OF_SLICE_TYPES][NUM_MV_RES_CTX] =$/;"	v
INIT_MVP_IDX	TLibCommon/ContextTables.h	/^INIT_MVP_IDX[NUMBER_OF_SLICE_TYPES][NUM_MVP_IDX_CTX] =$/;"	v
INIT_ONE_FLAG	TLibCommon/ContextTables.h	/^INIT_ONE_FLAG[NUMBER_OF_SLICE_TYPES][NUM_ONE_FLAG_CTX] =$/;"	v
INIT_PART_SIZE	TLibCommon/ContextTables.h	/^INIT_PART_SIZE[NUMBER_OF_SLICE_TYPES][NUM_PART_SIZE_CTX] =$/;"	v
INIT_PRED_MODE	TLibCommon/ContextTables.h	/^INIT_PRED_MODE[NUMBER_OF_SLICE_TYPES][NUM_PRED_MODE_CTX] =$/;"	v
INIT_QT_CBF	TLibCommon/ContextTables.h	/^INIT_QT_CBF[NUMBER_OF_SLICE_TYPES][NUM_QT_CBF_CTX_SETS * NUM_QT_CBF_CTX_PER_SET] =$/;"	v
INIT_QT_ROOT_CBF	TLibCommon/ContextTables.h	/^INIT_QT_ROOT_CBF[NUMBER_OF_SLICE_TYPES][NUM_QT_ROOT_CBF_CTX] =$/;"	v
INIT_REF_PIC	TLibCommon/ContextTables.h	/^INIT_REF_PIC[NUMBER_OF_SLICE_TYPES][NUM_REF_NO_CTX] =$/;"	v
INIT_SAO_MERGE_FLAG	TLibCommon/ContextTables.h	/^INIT_SAO_MERGE_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SAO_MERGE_FLAG_CTX] =$/;"	v
INIT_SAO_TYPE_IDX	TLibCommon/ContextTables.h	/^INIT_SAO_TYPE_IDX[NUMBER_OF_SLICE_TYPES][NUM_SAO_TYPE_IDX_CTX] =$/;"	v
INIT_SIG_CG_FLAG	TLibCommon/ContextTables.h	/^INIT_SIG_CG_FLAG[NUMBER_OF_SLICE_TYPES][2 * NUM_SIG_CG_FLAG_CTX] =$/;"	v
INIT_SIG_FLAG	TLibCommon/ContextTables.h	/^INIT_SIG_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SIG_FLAG_CTX] =$/;"	v
INIT_SKIP_FLAG	TLibCommon/ContextTables.h	/^INIT_SKIP_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SKIP_FLAG_CTX] =$/;"	v
INIT_SPLIT_FLAG	TLibCommon/ContextTables.h	/^INIT_SPLIT_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SPLIT_FLAG_CTX] =$/;"	v
INIT_TRANSFORMSKIP_FLAG	TLibCommon/ContextTables.h	/^INIT_TRANSFORMSKIP_FLAG[NUMBER_OF_SLICE_TYPES][2*NUM_TRANSFORMSKIP_FLAG_CTX] =$/;"	v
INIT_TRANS_SUBDIV_FLAG	TLibCommon/ContextTables.h	/^INIT_TRANS_SUBDIV_FLAG[NUMBER_OF_SLICE_TYPES][NUM_TRANS_SUBDIV_FLAG_CTX] =$/;"	v
INTENSITY_INTERVAL_MATCH_FAIL	TLibCommon/SEIFilmGrainSynthesizer.h	74;"	d
INTENSITY_INTERVAL_MATCH_FAIL	TLibCommon/SEIFilmGrainSynthesizer.h	95;"	d
IPCMSearch	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::IPCMSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv )$/;"	f	class:TEncSearch
IPCOLOURSPACE_RGBtoGBR	TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_RGBtoGBR                = 3,$/;"	e	enum:InputColourSpaceConversion
IPCOLOURSPACE_UNCHANGED	TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_UNCHANGED               = 0,$/;"	e	enum:InputColourSpaceConversion
IPCOLOURSPACE_YCbCrtoYCrCb	TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_YCbCrtoYCrCb            = 1, \/\/ Mainly used for debug!$/;"	e	enum:InputColourSpaceConversion
IPCOLOURSPACE_YCbCrtoYYY	TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_YCbCrtoYYY              = 2, \/\/ Mainly used for debug!$/;"	e	enum:InputColourSpaceConversion
IQUANT_SHIFT	TLibCommon/CommonDef.h	/^static const Int IQUANT_SHIFT =                                     6;$/;"	v
IRAPGOPid	TLibEncoder/TEncGOP.cpp	/^    Int  IRAPGOPid;$/;"	m	class:EfficientFieldIRAPMapping	file:
IRAPtoReorder	TLibEncoder/TEncGOP.cpp	/^    Bool IRAPtoReorder;$/;"	m	class:EfficientFieldIRAPMapping	file:
ISLICE_CHROMA_ABS_CONTEXT	TLibCommon/ContextTables.h	412;"	d
ISLICE_CHROMA_CBF_CONTEXT	TLibCommon/ContextTables.h	303;"	d
ISLICE_CHROMA_LAST_POSITION_CONTEXT	TLibCommon/ContextTables.h	337;"	d
ISLICE_CHROMA_ONE_CONTEXT	TLibCommon/ContextTables.h	408;"	d
ISLICE_CHROMA_SIGNIFICANCE_CONTEXT	TLibCommon/ContextTables.h	379;"	d
ISLICE_LUMA_ABS_CONTEXT	TLibCommon/ContextTables.h	403;"	d
ISLICE_LUMA_CBF_CONTEXT	TLibCommon/ContextTables.h	299;"	d
ISLICE_LUMA_LAST_POSITION_CONTEXT	TLibCommon/ContextTables.h	333;"	d
ISLICE_LUMA_ONE_CONTEXT	TLibCommon/ContextTables.h	399;"	d
ISLICE_LUMA_SIGNIFICANCE_CONTEXT	TLibCommon/ContextTables.h	374;"	d
ISO_IEC_11578_LEN	TLibCommon/SEI.h	/^static const UInt ISO_IEC_11578_LEN=16;$/;"	v
I_SLICE	TLibCommon/TypeDef.h	/^  I_SLICE               = 2,$/;"	e	enum:SliceType
IncrementStatisticEP	TLibCommon/TComCodingStatistics.h	/^    static Void IncrementStatisticEP(const TChar *pKey, const Int numBits, const Int value)$/;"	f	class:TComCodingStatistics
IncrementStatisticEP	TLibCommon/TComCodingStatistics.h	/^    static Void IncrementStatisticEP(const TComCodingStatisticsClassType &stat, const Int numBits, const Int value)$/;"	f	class:TComCodingStatistics
IncrementStatisticEP	TLibCommon/TComCodingStatistics.h	/^    static Void IncrementStatisticEP(const std::string &str, const Int numBits, const Int value)$/;"	f	class:TComCodingStatistics
InputByteStream	TLibDecoder/AnnexBread.h	/^  InputByteStream(std::istream& istream)$/;"	f	class:InputByteStream
InputByteStream	TLibDecoder/AnnexBread.h	/^class InputByteStream$/;"	c
InputColourSpaceConversion	TLibCommon/TypeDef.h	/^enum InputColourSpaceConversion \/\/ defined in terms of conversion prior to input of encoder.$/;"	g
InputNALUnit	TLibDecoder/NALread.h	/^    InputNALUnit() : m_Bitstream() {};$/;"	f	class:InputNALUnit
InputNALUnit	TLibDecoder/NALread.h	/^    InputNALUnit(const InputNALUnit &src) : NALUnit(src), m_Bitstream(src.m_Bitstream) {};$/;"	f	class:InputNALUnit
InputNALUnit	TLibDecoder/NALread.h	/^class InputNALUnit : public NALUnit$/;"	c
Int	TLibCommon/TypeDef.h	/^typedef       int                 Int;$/;"	t
Int64	TLibCommon/TypeDef.h	/^typedef       __int64             Int64;$/;"	t
Int64	TLibCommon/TypeDef.h	/^typedef       long long           Int64;$/;"	t
IntTZSearchStruct	TLibEncoder/TEncSearch.h	/^  } IntTZSearchStruct;$/;"	t	class:TEncSearch	typeref:struct:TEncSearch::__anon2
Intermediate_Int	TLibCommon/TypeDef.h	/^typedef       Int             Intermediate_Int;  \/\/\/< used as intermediate value in calculations$/;"	t
Intermediate_Int	TLibCommon/TypeDef.h	/^typedef       Int64           Intermediate_Int;  \/\/\/< used as intermediate value in calculations$/;"	t
Intermediate_UInt	TLibCommon/TypeDef.h	/^typedef       UInt            Intermediate_UInt; \/\/\/< used as intermediate value in calculations$/;"	t
Intermediate_UInt	TLibCommon/TypeDef.h	/^typedef       UInt64          Intermediate_UInt; \/\/\/< used as intermediate value in calculations$/;"	t
IsLastSection	TLibCommon/TComTU.h	/^    Bool IsLastSection() const { return mSection+1>=((1<<mSplitMode)); }$/;"	f	class:TComTU
JVET_K0390_RATE_CTRL	TLibCommon/TypeDef.h	85;"	d
JVET_M0600_RATE_CTRL	TLibCommon/TypeDef.h	87;"	d
KNEE_FUNCTION_INFO	TLibCommon/SEI.h	/^    KNEE_FUNCTION_INFO                   = 141,$/;"	e	enum:SEI::PayloadType
KneePointPair	TLibEncoder/TEncCfg.h	/^  struct KneePointPair$/;"	s	struct:TEncCfg::TEncSEIKneeFunctionInformation
LAMBDA_PREC	TLibEncoder/TEncRateCtrl.h	/^const Int LAMBDA_PREC = 1000000;$/;"	v
LAST_SIGNIFICANT_GROUPS	TLibCommon/CommonDef.h	/^static const Int LAST_SIGNIFICANT_GROUPS =                        10 ;$/;"	v
LEVEL1	TLibCommon/TypeDef.h	/^    LEVEL1   = 30,$/;"	e	enum:Level::Name
LEVEL2	TLibCommon/TypeDef.h	/^    LEVEL2   = 60,$/;"	e	enum:Level::Name
LEVEL2_1	TLibCommon/TypeDef.h	/^    LEVEL2_1 = 63,$/;"	e	enum:Level::Name
LEVEL3	TLibCommon/TypeDef.h	/^    LEVEL3   = 90,$/;"	e	enum:Level::Name
LEVEL3_1	TLibCommon/TypeDef.h	/^    LEVEL3_1 = 93,$/;"	e	enum:Level::Name
LEVEL4	TLibCommon/TypeDef.h	/^    LEVEL4   = 120,$/;"	e	enum:Level::Name
LEVEL4_1	TLibCommon/TypeDef.h	/^    LEVEL4_1 = 123,$/;"	e	enum:Level::Name
LEVEL5	TLibCommon/TypeDef.h	/^    LEVEL5   = 150,$/;"	e	enum:Level::Name
LEVEL5_1	TLibCommon/TypeDef.h	/^    LEVEL5_1 = 153,$/;"	e	enum:Level::Name
LEVEL5_2	TLibCommon/TypeDef.h	/^    LEVEL5_2 = 156,$/;"	e	enum:Level::Name
LEVEL6	TLibCommon/TypeDef.h	/^    LEVEL6   = 180,$/;"	e	enum:Level::Name
LEVEL6_1	TLibCommon/TypeDef.h	/^    LEVEL6_1 = 183,$/;"	e	enum:Level::Name
LEVEL6_2	TLibCommon/TypeDef.h	/^    LEVEL6_2 = 186,$/;"	e	enum:Level::Name
LEVEL8_5	TLibCommon/TypeDef.h	/^    LEVEL8_5 = 255,$/;"	e	enum:Level::Name
LEVEL_RANGE	TLibCommon/CommonDef.h	/^static const Int LEVEL_RANGE =                                     30; \/\/\/< G382: max coefficient level in statistics collection$/;"	v
LFCUParam	TLibCommon/TypeDef.h	/^} LFCUParam;$/;"	t	typeref:struct:_LFCUParam
LOG2_MAX_NUM_COLUMNS_MINUS1	TLibCommon/CommonDef.h	/^static const Int LOG2_MAX_NUM_COLUMNS_MINUS1 =                      7;$/;"	v
LOG2_MAX_NUM_ROWS_MINUS1	TLibCommon/CommonDef.h	/^static const Int LOG2_MAX_NUM_ROWS_MINUS1 =                         7;$/;"	v
LOG2_SCALING_LIST_NEUTRAL_VALUE	TLibCommon/CommonDef.h	/^static const Int LOG2_SCALING_LIST_NEUTRAL_VALUE =                 4 ; \/\/\/< log2 of the value that, when used in a scaling list, has no effect on quantisation$/;"	v
LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP	TLibCommon/CommonDef.h	/^static const Int LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP =      0; \/\/\/< QP to use for lossless coding.$/;"	v
LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP_PRIME	TLibCommon/CommonDef.h	/^static const Int LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP_PRIME =4; \/\/\/< QP' to use for mixed_lossy_lossless coding.$/;"	v
LSB16	TLibCommon/SEIFilmGrainSynthesizer.h	103;"	d
LUMALVL_TO_DQP_AVG_METHOD	TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_AVG_METHOD = 1, \/\/ use average of CTU to determine luma level$/;"	e	enum:LumaLevelToDQPMode
LUMALVL_TO_DQP_DISABLED	TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_DISABLED   = 0,$/;"	e	enum:LumaLevelToDQPMode
LUMALVL_TO_DQP_MAX_METHOD	TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_MAX_METHOD = 2,  \/\/ use maximum value of CTU to determine luma level$/;"	e	enum:LumaLevelToDQPMode
LUMALVL_TO_DQP_NUM_MODES	TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_NUM_MODES  = 3$/;"	e	enum:LumaLevelToDQPMode
LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS	TLibCommon/CommonDef.h	/^static const Int LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS =   4;$/;"	v
LUMA_LEVEL_TO_DQP_LUT_MAXSIZE	TLibCommon/CommonDef.h	/^static const UInt LUMA_LEVEL_TO_DQP_LUT_MAXSIZE =                1024; \/\/\/< max LUT size for QP offset based on luma$/;"	v
Level	TLibCommon/TypeDef.h	/^namespace Level$/;"	n
LevelTierFeatures	TLibCommon/ProfileLevelTierFeatures.h	/^struct LevelTierFeatures$/;"	s
LevelTierFeatures	TLibDecoder/TDecConformance.h	/^struct LevelTierFeatures$/;"	s
LumaLevelToDQPMode	TLibCommon/TypeDef.h	/^enum LumaLevelToDQPMode$/;"	g
LumaLevelToDeltaQPMapping	TLibCommon/TypeDef.h	/^struct LumaLevelToDeltaQPMapping$/;"	s
MAIN	TLibCommon/TypeDef.h	/^    MAIN = 0,$/;"	e	enum:Level::Tier
MAIN	TLibCommon/TypeDef.h	/^    MAIN = 1,$/;"	e	enum:Profile::Name
MAIN10	TLibCommon/TypeDef.h	/^    MAIN10 = 2,$/;"	e	enum:Profile::Name
MAINREXT	TLibCommon/TypeDef.h	/^    MAINREXT = 4,$/;"	e	enum:Profile::Name
MAINSTILLPICTURE	TLibCommon/TypeDef.h	/^    MAINSTILLPICTURE = 3,$/;"	e	enum:Profile::Name
MASTERING_DISPLAY_COLOUR_VOLUME	TLibCommon/SEI.h	/^    MASTERING_DISPLAY_COLOUR_VOLUME      = 137,$/;"	e	enum:SEI::PayloadType
MATRIX_COEFFICIENTS	TLibCommon/TypeDef.h	/^enum MATRIX_COEFFICIENTS \/\/ Table E.5 (Matrix coefficients)$/;"	g
MATRIX_COEFFICIENTS_BT2020_CONSTANT_LUMINANCE	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT2020_CONSTANT_LUMINANCE     = 10,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT2020_NON_CONSTANT_LUMINANCE	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT2020_NON_CONSTANT_LUMINANCE = 9,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT601_525	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT601_525                     = 6,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT601_625	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT601_625                     = 5,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT709	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT709                         = 1,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_RESERVED_BY_ITUISOIEC	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_RESERVED_BY_ITUISOIEC         = 3,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_RGB	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_RGB                           = 0,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_SMPTE240	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_SMPTE240                      = 7,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_UNSPECIFIED	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_UNSPECIFIED                   = 2,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_USFCCT47	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_USFCCT47                      = 4,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_YCGCO	TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_YCGCO                         = 8,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_MULT	TLibCommon/TypeDef.h	124;"	d
MAXIMUM_INTRA_FILTERED_HEIGHT	TLibCommon/CommonDef.h	/^static const Int MAXIMUM_INTRA_FILTERED_HEIGHT =                   16;$/;"	v
MAXIMUM_INTRA_FILTERED_WIDTH	TLibCommon/CommonDef.h	/^static const Int MAXIMUM_INTRA_FILTERED_WIDTH =                    16;$/;"	v
MAX_ALLOWED_COMP_MODEL_PAIRS	TLibCommon/SEIFilmGrainSynthesizer.h	61;"	d
MAX_ALLOWED_MODEL_VALUES	TLibCommon/SEIFilmGrainSynthesizer.h	52;"	d
MAX_BIT_DEPTH	TLibCommon/SEIFilmGrainSynthesizer.h	69;"	d
MAX_BIT_DEPTH	TLibCommon/SEIFilmGrainSynthesizer.h	90;"	d
MAX_CHROMA_FORMAT_IDC	TLibCommon/SEIFilmGrainSynthesizer.h	67;"	d
MAX_CHROMA_FORMAT_IDC	TLibCommon/SEIFilmGrainSynthesizer.h	88;"	d
MAX_CNFUINT64	TLibCommon/ProfileLevelTierFeatures.cpp	/^static const UInt64 MAX_CNFUINT64 = std::numeric_limits<UInt64>::max();$/;"	v	file:
MAX_CNFUINT64	TLibDecoder/TDecConformance.cpp	/^static const UInt64 MAX_CNFUINT64 = std::numeric_limits<UInt64>::max();$/;"	v	file:
MAX_CPB_CNT	TLibCommon/CommonDef.h	/^static const Int MAX_CPB_CNT =                                     32; \/\/\/< Upper bound of (cpb_cnt_minus1 + 1)$/;"	v
MAX_CUT_OFF_FREQUENCY	TLibCommon/SEIFilmGrainSynthesizer.h	59;"	d
MAX_CU_DEPTH	TLibCommon/CommonDef.h	/^static const Int MAX_CU_DEPTH =                                     6; \/\/\/< log2(CTUSize)$/;"	v
MAX_CU_SIZE	TLibCommon/CommonDef.h	/^static const Int MAX_CU_SIZE =                                     64; \/\/\/< = 1<<(MAX_CU_DEPTH)$/;"	v
MAX_DOUBLE	TLibCommon/CommonDef.h	/^static const Double MAX_DOUBLE =                             1.7e+308; \/\/\/< max. value of Double-type value$/;"	v
MAX_ENCODER_DEBLOCKING_QUALITY_LAYERS	TLibCommon/CommonDef.h	/^static const Int MAX_ENCODER_DEBLOCKING_QUALITY_LAYERS =           8 ;$/;"	v
MAX_GOP	TLibCommon/CommonDef.h	/^static const Int MAX_GOP =                                         64; \/\/\/< max. value of hierarchical GOP size$/;"	v
MAX_HEIGHT	TLibCommon/SEIFilmGrainSynthesizer.h	85;"	d
MAX_IDX_ADAPT_SR	TLibEncoder/TEncSearch.h	/^static const UInt MAX_IDX_ADAPT_SR=33;$/;"	v
MAX_INT	TLibCommon/CommonDef.h	/^static const Int    MAX_INT =                              2147483647; \/\/\/< max. value of signed 32-bit integer$/;"	v
MAX_INTRA_FILTER_DEPTHS	TLibCommon/TComPrediction.h	/^static const UInt MAX_INTRA_FILTER_DEPTHS=5;$/;"	v
MAX_LOG2SCALE_VALUE	TLibCommon/SEIFilmGrainSynthesizer.h	54;"	d
MAX_MATRIX_COEF_NUM	TLibCommon/CommonDef.h	/^static const Int MAX_MATRIX_COEF_NUM =                            64 ; \/\/\/< max coefficient number for quantization matrix$/;"	v
MAX_MATRIX_SIZE_NUM	TLibCommon/CommonDef.h	/^static const Int MAX_MATRIX_SIZE_NUM =                             8 ; \/\/\/< max size number for quantization matrix$/;"	v
MAX_NESTING_NUM_LAYER	TLibCommon/CommonDef.h	/^static const Int MAX_NESTING_NUM_LAYER =                           64;$/;"	v
MAX_NESTING_NUM_OPS	TLibCommon/CommonDef.h	/^static const Int MAX_NESTING_NUM_OPS =                           1024;$/;"	v
MAX_NUM_CHANNEL_TYPE	TLibCommon/TypeDef.h	/^  MAX_NUM_CHANNEL_TYPE = 2$/;"	e	enum:ChannelType
MAX_NUM_COMPONENT	TLibCommon/TypeDef.h	/^  MAX_NUM_COMPONENT = 3$/;"	e	enum:ComponentID
MAX_NUM_CTX_MOD	TLibCommon/ContextTables.h	49;"	d
MAX_NUM_INTENSITIES	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_INTENSITIES =                            256; \/\/ Maximum nuber of intensity intervals supported in FGC SEI$/;"	v
MAX_NUM_LAYER_IDS	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_LAYER_IDS =                               64;$/;"	v
MAX_NUM_LONG_TERM_REF_PICS	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_LONG_TERM_REF_PICS =                      33;$/;"	v
MAX_NUM_MODEL_VALUES	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_MODEL_VALUES =                             6; \/\/ Maximum nuber of model values supported in FGC SEI $/;"	v
MAX_NUM_PART_IDXS_IN_CTU_WIDTH	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_PART_IDXS_IN_CTU_WIDTH = MAX_CU_SIZE\/MIN_PU_SIZE; \/\/\/< maximum number of partition indices across the width of a CTU (or height of a CTU)$/;"	v
MAX_NUM_PICS_IN_SOP	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_PICS_IN_SOP =                           1024;$/;"	v
MAX_NUM_PPS	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_PPS =                                     64;$/;"	v
MAX_NUM_REF	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_REF =                                     16; \/\/\/< max. number of entries in picture reference list$/;"	v
MAX_NUM_REF_LIST_ADAPT_SR	TLibEncoder/TEncSearch.h	/^static const UInt MAX_NUM_REF_LIST_ADAPT_SR=2;$/;"	v
MAX_NUM_REF_PICS	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_REF_PICS =                                16; \/\/\/< max. number of pictures used for reference$/;"	v
MAX_NUM_SAO_CLASSES	TLibCommon/TypeDef.h	753;"	d
MAX_NUM_SPS	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_SPS =                                     16;$/;"	v
MAX_NUM_VPS	TLibCommon/CommonDef.h	/^static const Int MAX_NUM_VPS =                                     16;$/;"	v
MAX_QP	TLibCommon/CommonDef.h	/^static const Int MAX_QP =                                          51;$/;"	v
MAX_QP_OFFSET_LIST_SIZE	TLibCommon/CommonDef.h	/^static const Int MAX_QP_OFFSET_LIST_SIZE =                          6; \/\/\/< Maximum size of QP offset list is 6 entries$/;"	v
MAX_SAO_TRUNCATED_BITDEPTH	TLibCommon/TComSampleAdaptiveOffset.h	52;"	d
MAX_STANDARD_DEVIATION	TLibCommon/SEIFilmGrainSynthesizer.h	57;"	d
MAX_TIMECODE_SEI_SETS	TLibCommon/CommonDef.h	/^static const Int MAX_TIMECODE_SEI_SETS =                            3; \/\/\/< Maximum number of time sets$/;"	v
MAX_TLAYER	TLibCommon/CommonDef.h	/^static const Int MAX_TLAYER =                                       7; \/\/\/< Explicit temporal layer QP offset - max number of temporal layer$/;"	v
MAX_TU_SIZE	TLibCommon/CommonDef.h	/^static const Int MAX_TU_SIZE =                                     32;$/;"	v
MAX_UINT	TLibCommon/CommonDef.h	/^static const UInt   MAX_UINT =                            0xFFFFFFFFU; \/\/\/< max. value of unsigned 32-bit integer$/;"	v
MAX_VPS_NUH_RESERVED_ZERO_LAYER_ID_PLUS1	TLibCommon/CommonDef.h	/^static const Int MAX_VPS_NUH_RESERVED_ZERO_LAYER_ID_PLUS1 =         1;$/;"	v
MAX_VPS_NUM_HRD_PARAMETERS	TLibCommon/CommonDef.h	/^static const Int MAX_VPS_NUM_HRD_PARAMETERS =                       1;$/;"	v
MAX_VPS_OP_SETS_PLUS1	TLibCommon/CommonDef.h	/^static const Int MAX_VPS_OP_SETS_PLUS1 =                         1024;$/;"	v
MAX_WIDTH	TLibCommon/SEIFilmGrainSynthesizer.h	83;"	d
MCTSExtractionInfo	TLibCommon/SEI.h	/^  struct MCTSExtractionInfo$/;"	s	class:SEIMCTSExtractionInfoSet
MCTS_ENC_CHECK	TLibCommon/TypeDef.h	90;"	d
MCTS_EXTRACTION	TLibCommon/TypeDef.h	79;"	d
MCTS_EXTRACTION_INFO_SET	TLibCommon/SEI.h	/^    MCTS_EXTRACTION_INFO_SET             = 158,$/;"	e	enum:SEI::PayloadType
MD5	libmd5/MD5.h	/^  MD5()$/;"	f	class:MD5
MD5	libmd5/MD5.h	/^class MD5$/;"	c
MD5Final	libmd5/libmd5.cpp	/^void MD5Final(unsigned char digest[16], context_md5_t *ctx)$/;"	f
MD5Init	libmd5/libmd5.cpp	/^void MD5Init(context_md5_t *ctx)$/;"	f
MD5STEP	libmd5/libmd5.cpp	167;"	d	file:
MD5Transform	libmd5/libmd5.cpp	/^static void MD5Transform(uint32_t buf[4], uint32_t const in[16])$/;"	f	file:
MD5Update	libmd5/libmd5.cpp	/^void MD5Update(context_md5_t *ctx, unsigned char *buf, unsigned len)$/;"	f
MD5_DIGEST_STRING_LENGTH	libmd5/MD5.h	/^static const UInt MD5_DIGEST_STRING_LENGTH=16;$/;"	v
MDCS_ANGLE_LIMIT	TLibCommon/CommonDef.h	/^static const Int MDCS_ANGLE_LIMIT =                                 4; \/\/\/< 0 = Horizontal\/vertical only, 1 = Horizontal\/vertical +\/- 1, 2 = Horizontal\/vertical +\/- 2 etc...$/;"	v
MDCS_MAXIMUM_HEIGHT	TLibCommon/CommonDef.h	/^static const Int MDCS_MAXIMUM_HEIGHT =                              8; \/\/\/< (measured in pixels) TUs with height greater than this can only use diagonal scan$/;"	v
MDCS_MAXIMUM_WIDTH	TLibCommon/CommonDef.h	/^static const Int MDCS_MAXIMUM_WIDTH =                               8; \/\/\/< (measured in pixels) TUs with width greater than this can only use diagonal scan$/;"	v
MD_ABOVE	TLibCommon/TypeDef.h	/^  MD_ABOVE,             \/\/\/< MVP of above block$/;"	e	enum:MVP_DIR
MD_ABOVE_LEFT	TLibCommon/TypeDef.h	/^  MD_ABOVE_LEFT         \/\/\/< MVP of above left block$/;"	e	enum:MVP_DIR
MD_ABOVE_RIGHT	TLibCommon/TypeDef.h	/^  MD_ABOVE_RIGHT,       \/\/\/< MVP of above right block$/;"	e	enum:MVP_DIR
MD_BELOW_LEFT	TLibCommon/TypeDef.h	/^  MD_BELOW_LEFT,        \/\/\/< MVP of below left block$/;"	e	enum:MVP_DIR
MD_LEFT	TLibCommon/TypeDef.h	/^  MD_LEFT = 0,          \/\/\/< MVP of left block$/;"	e	enum:MVP_DIR
MESEARCH_DIAMOND	TLibCommon/TypeDef.h	/^  MESEARCH_DIAMOND           = 1,$/;"	e	enum:MESearchMethod
MESEARCH_DIAMOND_ENHANCED	TLibCommon/TypeDef.h	/^  MESEARCH_DIAMOND_ENHANCED  = 3,$/;"	e	enum:MESearchMethod
MESEARCH_FULL	TLibCommon/TypeDef.h	/^  MESEARCH_FULL              = 0,$/;"	e	enum:MESearchMethod
MESEARCH_NUMBER_OF_METHODS	TLibCommon/TypeDef.h	/^  MESEARCH_NUMBER_OF_METHODS = 4$/;"	e	enum:MESearchMethod
MESEARCH_SELECTIVE	TLibCommon/TypeDef.h	/^  MESEARCH_SELECTIVE         = 2,$/;"	e	enum:MESearchMethod
MESearchMethod	TLibCommon/TypeDef.h	/^enum MESearchMethod$/;"	g
ME_ENABLE_ROUNDING_OF_MVS	TLibCommon/TypeDef.h	128;"	d
MIN	TLibCommon/SEIFilmGrainSynthesizer.h	101;"	d
MIN_BIT_DEPTH	TLibCommon/SEIFilmGrainSynthesizer.h	68;"	d
MIN_BIT_DEPTH	TLibCommon/SEIFilmGrainSynthesizer.h	89;"	d
MIN_CHROMA_FORMAT_IDC	TLibCommon/SEIFilmGrainSynthesizer.h	66;"	d
MIN_CHROMA_FORMAT_IDC	TLibCommon/SEIFilmGrainSynthesizer.h	87;"	d
MIN_CUT_OFF_FREQUENCY	TLibCommon/SEIFilmGrainSynthesizer.h	58;"	d
MIN_HEIGHT	TLibCommon/SEIFilmGrainSynthesizer.h	84;"	d
MIN_LOG2SCALE_VALUE	TLibCommon/SEIFilmGrainSynthesizer.h	53;"	d
MIN_PU_SIZE	TLibCommon/CommonDef.h	/^static const Int MIN_PU_SIZE =                                      4;$/;"	v
MIN_TU_SIZE	TLibCommon/CommonDef.h	/^static const Int MIN_TU_SIZE =                                      4;$/;"	v
MIN_WIDTH	TLibCommon/SEIFilmGrainSynthesizer.h	82;"	d
MLS_CG_LOG2_HEIGHT	TLibCommon/CommonDef.h	/^static const Int MLS_CG_LOG2_HEIGHT =                               2;$/;"	v
MLS_CG_LOG2_WIDTH	TLibCommon/CommonDef.h	/^static const Int MLS_CG_LOG2_WIDTH =                                2;$/;"	v
MLS_CG_SIZE	TLibCommon/CommonDef.h	/^static const Int MLS_CG_SIZE =                                      4; \/\/\/< Coefficient group size of 4x4; = MLS_CG_LOG2_WIDTH + MLS_CG_LOG2_HEIGHT$/;"	v
MLS_GRP_NUM	TLibCommon/CommonDef.h	/^static const Int MLS_GRP_NUM =                                     64; \/\/\/< Max number of coefficient groups, max(16, 64)$/;"	v
MODE_INTER	TLibCommon/TypeDef.h	/^  MODE_INTER                 = 0,     \/\/\/< inter-prediction mode$/;"	e	enum:PredMode
MODE_INTRA	TLibCommon/TypeDef.h	/^  MODE_INTRA                 = 1,     \/\/\/< intra-prediction mode$/;"	e	enum:PredMode
MRG_MAX_NUM_CANDS	TLibCommon/CommonDef.h	/^static const Int MRG_MAX_NUM_CANDS =                                5; \/\/\/< MERGE$/;"	v
MSB16	TLibCommon/SEIFilmGrainSynthesizer.h	102;"	d
MSEyuvframe	TLibEncoder/TEncAnalyze.h	/^    Double MSEyuvframe[MAX_NUM_COMPONENT];$/;"	m	struct:TEncAnalyze::ResultData
MSSSIM	TLibEncoder/TEncAnalyze.h	/^    Double MSSSIM[MAX_NUM_COMPONENT];$/;"	m	struct:TEncAnalyze::ResultData
MVP_DIR	TLibCommon/TypeDef.h	/^enum MVP_DIR$/;"	g
MapData	TLibCommon/TComSlice.h	/^  struct MapData$/;"	s	class:ParameterSetMap
MatrixType	TLibCommon/TComRom.cpp	/^const TChar *MatrixType[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM] =$/;"	v
MatrixType_DC	TLibCommon/TComRom.cpp	/^const TChar *MatrixType_DC[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM] =$/;"	v
MctsExtractorTComPicSym	TLibCommon/TComPicSym.h	/^class MctsExtractorTComPicSym {$/;"	c
MotionVector	TLibEncoder/TEncTemporalFilter.h	/^  MotionVector() : x(0), y(0), error(INT_LEAST32_MAX) {}$/;"	f	struct:MotionVector
MotionVector	TLibEncoder/TEncTemporalFilter.h	/^struct MotionVector$/;"	s
NALUnit	TLibCommon/NAL.h	/^  NALUnit($/;"	f	struct:NALUnit
NALUnit	TLibCommon/NAL.h	/^  NALUnit() {}$/;"	f	struct:NALUnit
NALUnit	TLibCommon/NAL.h	/^  NALUnit(const NALUnit &src)$/;"	f	struct:NALUnit
NALUnit	TLibCommon/NAL.h	/^struct NALUnit$/;"	s
NALUnitEBSP	TLibCommon/NAL.h	/^struct NALUnitEBSP : public NALUnit$/;"	s
NALUnitEBSP	TLibEncoder/NALwrite.h	/^inline NALUnitEBSP::NALUnitEBSP(OutputNALUnit& nalu)$/;"	f	class:NALUnitEBSP
NAL_UNIT_ACCESS_UNIT_DELIMITER	TLibCommon/TypeDef.h	/^  NAL_UNIT_ACCESS_UNIT_DELIMITER,   \/\/ 35$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_BLA_N_LP	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_BLA_N_LP,    \/\/ 18$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_BLA_W_LP	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_BLA_W_LP,    \/\/ 16$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_BLA_W_RADL	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_BLA_W_RADL,  \/\/ 17$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_CRA	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_CRA,         \/\/ 21$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_IDR_N_LP	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_IDR_N_LP,    \/\/ 20$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_IDR_W_RADL	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_IDR_W_RADL,  \/\/ 19$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RADL_N	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RADL_N,      \/\/ 6$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RADL_R	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RADL_R,      \/\/ 7$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RASL_N	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RASL_N,      \/\/ 8$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RASL_R	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RASL_R,      \/\/ 9$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_STSA_N	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_STSA_N,      \/\/ 4$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_STSA_R	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_STSA_R,      \/\/ 5$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TRAIL_N	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TRAIL_N = 0, \/\/ 0$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TRAIL_R	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TRAIL_R,     \/\/ 1$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TSA_N	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TSA_N,       \/\/ 2$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TSA_R	TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TSA_R,       \/\/ 3$/;"	e	enum:NalUnitType
NAL_UNIT_EOB	TLibCommon/TypeDef.h	/^  NAL_UNIT_EOB,                     \/\/ 37$/;"	e	enum:NalUnitType
NAL_UNIT_EOS	TLibCommon/TypeDef.h	/^  NAL_UNIT_EOS,                     \/\/ 36$/;"	e	enum:NalUnitType
NAL_UNIT_FILLER_DATA	TLibCommon/TypeDef.h	/^  NAL_UNIT_FILLER_DATA,             \/\/ 38$/;"	e	enum:NalUnitType
NAL_UNIT_INVALID	TLibCommon/TypeDef.h	/^  NAL_UNIT_INVALID,$/;"	e	enum:NalUnitType
NAL_UNIT_PPS	TLibCommon/TypeDef.h	/^  NAL_UNIT_PPS,                     \/\/ 34$/;"	e	enum:NalUnitType
NAL_UNIT_PREFIX_SEI	TLibCommon/TypeDef.h	/^  NAL_UNIT_PREFIX_SEI,              \/\/ 39$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_IRAP_VCL22	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_IRAP_VCL22,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_IRAP_VCL23	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_IRAP_VCL23,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL41	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL41,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL42	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL42,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL43	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL43,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL44	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL44,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL45	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL45,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL46	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL46,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL47	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL47,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL24	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL24,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL25	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL25,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL26	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL26,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL27	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL27,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL28	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL28,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL29	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL29,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL30	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL30,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL31	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL31,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_N10	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_N10,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_N12	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_N12,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_N14	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_N14,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_R11	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_R11,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_R13	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_R13,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_R15	TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_R15,$/;"	e	enum:NalUnitType
NAL_UNIT_SPS	TLibCommon/TypeDef.h	/^  NAL_UNIT_SPS,                     \/\/ 33$/;"	e	enum:NalUnitType
NAL_UNIT_SUFFIX_SEI	TLibCommon/TypeDef.h	/^  NAL_UNIT_SUFFIX_SEI,              \/\/ 40$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_48	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_48,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_49	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_49,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_50	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_50,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_51	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_51,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_52	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_52,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_53	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_53,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_54	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_54,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_55	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_55,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_56	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_56,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_57	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_57,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_58	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_58,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_59	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_59,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_60	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_60,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_61	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_61,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_62	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_62,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_63	TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_63,$/;"	e	enum:NalUnitType
NAL_UNIT_VPS	TLibCommon/TypeDef.h	/^  NAL_UNIT_VPS,                     \/\/ 32$/;"	e	enum:NalUnitType
NDEBUG	TLibCommon/CommonDef.h	43;"	d
NEIGHBOURHOOD_00_CONTEXT_1_THRESHOLD_4x4	TLibCommon/ContextTables.h	92;"	d
NEIGHBOURHOOD_00_CONTEXT_2_THRESHOLD_4x4	TLibCommon/ContextTables.h	93;"	d
NONE	TLibCommon/TypeDef.h	/^    NONE     = 0,$/;"	e	enum:Level::Name
NONE	TLibCommon/TypeDef.h	/^    NONE = 0,$/;"	e	enum:Profile::Name
NOT_VALID	TLibCommon/CommonDef.h	/^static const Int NOT_VALID =                                       -1;$/;"	v
NO_DISPLAY	TLibCommon/SEI.h	/^    NO_DISPLAY                           = 135,$/;"	e	enum:SEI::PayloadType
NO_SLICES	TLibCommon/TypeDef.h	/^  NO_SLICES              = 0,          \/\/\/< don't use slices \/ slice segments$/;"	e	enum:SliceConstraint
NTAPS_CHROMA	TLibCommon/TComInterpolationFilter.h	48;"	d
NTAPS_LUMA	TLibCommon/TComInterpolationFilter.h	47;"	d
NULL	TLibCommon/CommonDef.h	108;"	d
NUMBER_INPUT_COLOUR_SPACE_CONVERSIONS	TLibCommon/TypeDef.h	/^  NUMBER_INPUT_COLOUR_SPACE_CONVERSIONS = 4$/;"	e	enum:InputColourSpaceConversion
NUMBER_OF_HASHTYPES	TLibCommon/TypeDef.h	/^  NUMBER_OF_HASHTYPES      = 4$/;"	e	enum:HashType
NUMBER_OF_PART_SIZES	TLibCommon/TypeDef.h	/^  NUMBER_OF_PART_SIZES = 8$/;"	e	enum:PartSize
NUMBER_OF_PREDICTION_MODES	TLibCommon/TypeDef.h	/^  NUMBER_OF_PREDICTION_MODES = 2,$/;"	e	enum:PredMode
NUMBER_OF_RDPCM_MODES	TLibCommon/TypeDef.h	/^  NUMBER_OF_RDPCM_MODES = 3$/;"	e	enum:RDPCMMode
NUMBER_OF_RDPCM_SIGNALLING_MODES	TLibCommon/TypeDef.h	/^  NUMBER_OF_RDPCM_SIGNALLING_MODES = 2$/;"	e	enum:RDPCMSignallingMode
NUMBER_OF_SECTIONS	TLibCommon/TComTU.cpp	/^\/*static*\/ const UInt TComTU::NUMBER_OF_SECTIONS[TComTU::NUMBER_OF_SPLIT_MODES] = { 1, 2, 4 };$/;"	m	class:TComTU	file:
NUMBER_OF_SECTIONS	TLibCommon/TComTU.h	/^    static const UInt NUMBER_OF_SECTIONS[NUMBER_OF_SPLIT_MODES];$/;"	m	class:TComTU
NUMBER_OF_SLICE_CONSTRAINT_MODES	TLibCommon/TypeDef.h	/^  NUMBER_OF_SLICE_CONSTRAINT_MODES = 4$/;"	e	enum:SliceConstraint
NUMBER_OF_SLICE_TYPES	TLibCommon/TypeDef.h	/^  NUMBER_OF_SLICE_TYPES = 3$/;"	e	enum:SliceType
NUMBER_OF_SPLIT_MODES	TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
NUMBER_OF_STORED_RESIDUAL_TYPES	TLibCommon/TypeDef.h	/^  NUMBER_OF_STORED_RESIDUAL_TYPES = 2$/;"	e	enum:StoredResidualType
NUMBER_OF_TIERS	TLibCommon/TypeDef.h	/^    NUMBER_OF_TIERS = 2$/;"	e	enum:Level::Tier
NUM_8x8_BLKS_16x16	TLibCommon/SEIFilmGrainSynthesizer.h	71;"	d
NUM_8x8_BLKS_16x16	TLibCommon/SEIFilmGrainSynthesizer.h	92;"	d
NUM_ABS_FLAG_CTX	TLibCommon/ContextTables.h	133;"	d
NUM_ABS_FLAG_CTX_CHROMA	TLibCommon/ContextTables.h	130;"	d
NUM_ABS_FLAG_CTX_LUMA	TLibCommon/ContextTables.h	129;"	d
NUM_ABS_FLAG_CTX_PER_SET	TLibCommon/ContextTables.h	115;"	d
NUM_CHROMA_FORMAT	TLibCommon/TypeDef.h	/^  NUM_CHROMA_FORMAT = 4$/;"	e	enum:ChromaFormat
NUM_CHROMA_MODE	TLibCommon/CommonDef.h	/^static const Int NUM_CHROMA_MODE =                                  5; \/\/\/< total number of chroma modes$/;"	v
NUM_CHROMA_PRED_CTX	TLibCommon/ContextTables.h	62;"	d
NUM_CHROMA_QP_ADJ_FLAG_CTX	TLibCommon/ContextTables.h	65;"	d
NUM_CHROMA_QP_ADJ_IDC_CTX	TLibCommon/ContextTables.h	66;"	d
NUM_CROSS_COMPONENT_PREDICTION_CTX	TLibCommon/ContextTables.h	161;"	d
NUM_CTX_LAST_FLAG_SETS	TLibCommon/ContextTables.h	106;"	d
NUM_CTX_LAST_FLAG_XY	TLibCommon/ContextTables.h	108;"	d
NUM_CTX_SETS_CHROMA	TLibCommon/ContextTables.h	120;"	d
NUM_CTX_SETS_LUMA	TLibCommon/ContextTables.h	119;"	d
NUM_CUT_OFF_FREQ	TLibCommon/SEIFilmGrainSynthesizer.h	79;"	d
NUM_CU_TRANSQUANT_BYPASS_FLAG_CTX	TLibCommon/ContextTables.h	159;"	d
NUM_DELTA_QP_CTX	TLibCommon/ContextTables.h	71;"	d
NUM_EDGE_DIR	TLibCommon/TypeDef.h	/^  NUM_EDGE_DIR = 2$/;"	e	enum:DeblockEdgeDir
NUM_EXPLICIT_RDPCM_DIR_CTX	TLibCommon/ContextTables.h	75;"	d
NUM_EXPLICIT_RDPCM_FLAG_CTX	TLibCommon/ContextTables.h	74;"	d
NUM_INTER_DIR_CTX	TLibCommon/ContextTables.h	63;"	d
NUM_INTRA_MODE	TLibCommon/CommonDef.h	/^static const Int NUM_INTRA_MODE =                                  36;$/;"	v
NUM_INTRA_PREDICT_CTX	TLibCommon/ContextTables.h	60;"	d
NUM_LONG_TERM_REF_PIC_SPS	TLibCommon/CommonDef.h	/^static const Int NUM_LONG_TERM_REF_PIC_SPS =                        0;$/;"	v
NUM_MERGE_FLAG_EXT_CTX	TLibCommon/ContextTables.h	54;"	d
NUM_MERGE_IDX_EXT_CTX	TLibCommon/ContextTables.h	55;"	d
NUM_MOST_PROBABLE_MODES	TLibCommon/TComDataCU.h	/^static const UInt NUM_MOST_PROBABLE_MODES=3;$/;"	v
NUM_MVP_IDX_CTX	TLibCommon/ContextTables.h	152;"	d
NUM_MV_PREDICTORS	TLibEncoder/TEncSearch.h	/^static const UInt NUM_MV_PREDICTORS=3;$/;"	v
NUM_MV_RES_CTX	TLibCommon/ContextTables.h	64;"	d
NUM_ONE_FLAG_CTX	TLibCommon/ContextTables.h	132;"	d
NUM_ONE_FLAG_CTX_CHROMA	TLibCommon/ContextTables.h	127;"	d
NUM_ONE_FLAG_CTX_LUMA	TLibCommon/ContextTables.h	126;"	d
NUM_ONE_FLAG_CTX_PER_SET	TLibCommon/ContextTables.h	114;"	d
NUM_PART_SIZE_CTX	TLibCommon/ContextTables.h	57;"	d
NUM_PIC_YUV	TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon4
NUM_PPS_EXTENSION_FLAGS	TLibCommon/TypeDef.h	/^  NUM_PPS_EXTENSION_FLAGS = 8$/;"	e	enum:PPSExtensionFlagIndex
NUM_PRED_BUF	TLibCommon/TComPrediction.h	/^  NUM_PRED_BUF=2$/;"	e	enum:PRED_BUF_E
NUM_PRED_MODE_CTX	TLibCommon/ContextTables.h	58;"	d
NUM_QT_CBF_CTX_PER_SET	TLibCommon/ContextTables.h	143;"	d
NUM_QT_CBF_CTX_SETS	TLibCommon/ContextTables.h	141;"	d
NUM_QT_ROOT_CBF_CTX	TLibCommon/ContextTables.h	70;"	d
NUM_REF_NO_CTX	TLibCommon/ContextTables.h	68;"	d
NUM_REF_PIC_LIST_01	TLibCommon/TypeDef.h	/^  NUM_REF_PIC_LIST_01          = 2,$/;"	e	enum:RefPicList
NUM_SAO_BO_CLASSES	TLibCommon/TypeDef.h	571;"	d
NUM_SAO_BO_CLASSES_LOG2	TLibCommon/TypeDef.h	570;"	d
NUM_SAO_CABACSTATE_LABELS	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  NUM_SAO_CABACSTATE_LABELS$/;"	e	enum:SAOCabacStateLablesRDO
NUM_SAO_EO_CLASSES	TLibCommon/TypeDef.h	/^  NUM_SAO_EO_CLASSES,$/;"	e	enum:SAOEOClasses
NUM_SAO_EO_TYPES_LOG2	TLibCommon/TypeDef.h	558;"	d
NUM_SAO_MERGE_FLAG_CTX	TLibCommon/ContextTables.h	154;"	d
NUM_SAO_MERGE_TYPES	TLibCommon/TypeDef.h	/^  NUM_SAO_MERGE_TYPES$/;"	e	enum:SAOModeMergeTypes
NUM_SAO_MODES	TLibCommon/TypeDef.h	/^  NUM_SAO_MODES$/;"	e	enum:SAOMode
NUM_SAO_NEW_TYPES	TLibCommon/TypeDef.h	/^  NUM_SAO_NEW_TYPES$/;"	e	enum:SAOModeNewTypes
NUM_SAO_TYPE_IDX_CTX	TLibCommon/ContextTables.h	155;"	d
NUM_SIG_CG_FLAG_CTX	TLibCommon/ContextTables.h	73;"	d
NUM_SIG_FLAG_CTX	TLibCommon/ContextTables.h	100;"	d
NUM_SIG_FLAG_CTX_CHROMA	TLibCommon/ContextTables.h	82;"	d
NUM_SIG_FLAG_CTX_LUMA	TLibCommon/ContextTables.h	81;"	d
NUM_SKIP_FLAG_CTX	TLibCommon/ContextTables.h	52;"	d
NUM_SPLIT_FLAG_CTX	TLibCommon/ContextTables.h	51;"	d
NUM_SPS_EXTENSION_FLAGS	TLibCommon/TypeDef.h	/^  NUM_SPS_EXTENSION_FLAGS = 8$/;"	e	enum:SPSExtensionFlagIndex
NUM_TRANSFORMSKIP_FLAG_CTX	TLibCommon/ContextTables.h	157;"	d
NUM_TRANS_SUBDIV_FLAG_CTX	TLibCommon/ContextTables.h	69;"	d
NVM_BITS	TLibCommon/CommonDef.h	105;"	d
NVM_COMPILEDBY	TLibCommon/CommonDef.h	75;"	d
NVM_COMPILEDBY	TLibCommon/CommonDef.h	84;"	d
NVM_COMPILEDBY	TLibCommon/CommonDef.h	86;"	d
NVM_COMPILEDBY	TLibCommon/CommonDef.h	90;"	d
NVM_ONARCH	TLibCommon/CommonDef.h	77;"	d
NVM_ONARCH	TLibCommon/CommonDef.h	79;"	d
NVM_ONOS	TLibCommon/CommonDef.h	100;"	d
NVM_ONOS	TLibCommon/CommonDef.h	102;"	d
NVM_ONOS	TLibCommon/CommonDef.h	94;"	d
NVM_ONOS	TLibCommon/CommonDef.h	96;"	d
NVM_ONOS	TLibCommon/CommonDef.h	98;"	d
NV_VERSION	TLibCommon/CommonDef.h	68;"	d
NalUnitType	TLibCommon/TypeDef.h	/^enum NalUnitType$/;"	g
Name	TLibCommon/TypeDef.h	/^  enum Name$/;"	g	namespace:Level
Name	TLibCommon/TypeDef.h	/^  enum Name$/;"	g	namespace:Profile
Names	Utilities/program_options_lite.h	/^        Names() : opt(0) {};$/;"	f	struct:df::program_options_lite::Options::Names
Names	Utilities/program_options_lite.h	/^      struct Names$/;"	s	struct:df::program_options_lite::Options
NamesMap	Utilities/program_options_lite.h	/^      typedef std::map<std::string, NamesPtrList> NamesMap;$/;"	t	struct:df::program_options_lite::Options
NamesPtrList	Utilities/program_options_lite.h	/^      typedef std::list<Names*> NamesPtrList;$/;"	t	struct:df::program_options_lite::Options
O0043_BEST_EFFORT_DECODING	TLibCommon/TypeDef.h	126;"	d
OMNI_VIEWPORT	TLibCommon/SEI.h	/^    OMNI_VIEWPORT                        = 156,$/;"	e	enum:SEI::PayloadType
OPTIONAL	TLibCommon/ProfileLevelTierFeatures.h	/^    OPTIONAL=1,$/;"	e	enum:ProfileFeatures::TRISTATE
OPTIONAL	TLibDecoder/TDecConformance.h	/^  OPTIONAL=1,$/;"	e	enum:TRISTATE
OmniViewport	TLibCommon/SEI.h	/^  struct OmniViewport$/;"	s	class:SEIOmniViewport
Option	Utilities/program_options_lite.h	/^      Option(const std::string& name, T& storage, T default_val, const std::string& desc)$/;"	f	struct:df::program_options_lite::Option
Option	Utilities/program_options_lite.h	/^    struct Option : public OptionBase$/;"	s	namespace:df::program_options_lite
OptionBase	Utilities/program_options_lite.h	/^      OptionBase(const std::string& name, const std::string& desc)$/;"	f	struct:df::program_options_lite::OptionBase
OptionBase	Utilities/program_options_lite.h	/^    struct OptionBase$/;"	s	namespace:df::program_options_lite
OptionFunc	Utilities/program_options_lite.h	/^      OptionFunc(const std::string& name, Options& parent_, Func *func_, const std::string& desc)$/;"	f	struct:df::program_options_lite::OptionFunc
OptionFunc	Utilities/program_options_lite.h	/^    struct OptionFunc : public OptionBase$/;"	s	namespace:df::program_options_lite
OptionSpecific	Utilities/program_options_lite.h	/^      OptionSpecific(Options& parent_) : parent(parent_) {}$/;"	f	class:df::program_options_lite::OptionSpecific
OptionSpecific	Utilities/program_options_lite.h	/^    class OptionSpecific$/;"	c	namespace:df::program_options_lite
OptionWriter	Utilities/program_options_lite.cpp	/^      OptionWriter(Options& rOpts, ErrorReporter& err)$/;"	f	struct:df::program_options_lite::OptionWriter
OptionWriter	Utilities/program_options_lite.cpp	/^    struct OptionWriter$/;"	s	namespace:df::program_options_lite	file:
Options	Utilities/program_options_lite.h	/^    struct Options$/;"	s	namespace:df::program_options_lite
OutputDashedLine	TLibCommon/TComCodingStatistics.h	/^    static Void OutputDashedLine(const TChar *pText)$/;"	f	class:TComCodingStatistics
OutputLine	TLibCommon/TComCodingStatistics.h	/^    static Void OutputLine(const TChar *pName, const TChar sep, UInt width, const TChar *pSubClassStr, const SStat &sCABAC, const SStat &sEP)$/;"	f	class:TComCodingStatistics
OutputLine	TLibCommon/TComCodingStatistics.h	/^    static Void OutputLine(const TChar *pName, const TChar sep, const TChar *pWidthString, const TChar *pSubClassStr,  const SStat &sEP)$/;"	f	class:TComCodingStatistics
OutputLine	TLibCommon/TComCodingStatistics.h	/^    static Void OutputLine(const TChar *pName, const TChar sep, const TChar *pWidthString, const TChar *pSubClassStr, const SStat &sCABAC, const SStat &sEP)$/;"	f	class:TComCodingStatistics
OutputLogControl	TLibEncoder/TEncAnalyze.h	/^  struct OutputLogControl$/;"	s	class:TEncAnalyze
OutputNALUnit	TLibEncoder/NALwrite.h	/^  OutputNALUnit($/;"	f	struct:OutputNALUnit
OutputNALUnit	TLibEncoder/NALwrite.h	/^struct OutputNALUnit : public NALUnit$/;"	s
PAN_SCAN_RECT	TLibCommon/SEI.h	/^    PAN_SCAN_RECT                        = 2,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PCMLFDisableProcess	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::PCMLFDisableProcess (TComPic* pcPic)$/;"	f	class:TComSampleAdaptiveOffset
PICTURE_SNAPSHOT	TLibCommon/SEI.h	/^    PICTURE_SNAPSHOT                     = 15,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PICTURE_TIMING	TLibCommon/SEI.h	/^    PICTURE_TIMING                       = 1,$/;"	e	enum:SEI::PayloadType
PIC_YUV_ORG	TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon4
PIC_YUV_REC	TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon4
PIC_YUV_T	TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	t	class:TComPic	typeref:enum:TComPic::__anon4
PIC_YUV_TRUE_ORG	TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon4
PLANAR_IDX	TLibCommon/CommonDef.h	/^static const Int PLANAR_IDX =                                       0;$/;"	v
POST_FILTER_HINT	TLibCommon/SEI.h	/^    POST_FILTER_HINT                     = 22,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
POS_2	TLibCommon/SEIFilmGrainSynthesizer.h	106;"	d
POS_30	TLibCommon/SEIFilmGrainSynthesizer.h	105;"	d
PPSExtensionFlagIndex	TLibCommon/TypeDef.h	/^enum PPSExtensionFlagIndex$/;"	g
PPSNeedsWriting	TLibEncoder/TEncTop.cpp	/^Bool TEncTop::PPSNeedsWriting(Int ppsId)$/;"	f	class:TEncTop
PPS_EXT__REXT	TLibCommon/TypeDef.h	/^  PPS_EXT__REXT           = 0,$/;"	e	enum:PPSExtensionFlagIndex
PRED_BUF	TLibCommon/TComPrediction.h	/^} PRED_BUF;$/;"	t	typeref:enum:PRED_BUF_E
PRED_BUF_E	TLibCommon/TComPrediction.h	/^typedef enum PRED_BUF_E$/;"	g
PRED_BUF_FILTERED	TLibCommon/TComPrediction.h	/^  PRED_BUF_FILTERED=1,$/;"	e	enum:PRED_BUF_E
PRED_BUF_UNFILTERED	TLibCommon/TComPrediction.h	/^  PRED_BUF_UNFILTERED=0,$/;"	e	enum:PRED_BUF_E
PRINT_CONSTANT	TLibCommon/Debug.h	58;"	d
PRINT_MACRO_VALUES	TLibCommon/TypeDef.h	63;"	d
PRINT_RPS_INFO	TLibCommon/TypeDef.h	77;"	d
PROGRESSIVE_REFINEMENT_SEGMENT_END	TLibCommon/SEI.h	/^    PROGRESSIVE_REFINEMENT_SEGMENT_END   = 17,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PROGRESSIVE_REFINEMENT_SEGMENT_START	TLibCommon/SEI.h	/^    PROGRESSIVE_REFINEMENT_SEGMENT_START = 16,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PSLICE_CHROMA_ABS_CONTEXT	TLibCommon/ContextTables.h	411;"	d
PSLICE_CHROMA_CBF_CONTEXT	TLibCommon/ContextTables.h	302;"	d
PSLICE_CHROMA_LAST_POSITION_CONTEXT	TLibCommon/ContextTables.h	336;"	d
PSLICE_CHROMA_ONE_CONTEXT	TLibCommon/ContextTables.h	407;"	d
PSLICE_CHROMA_SIGNIFICANCE_CONTEXT	TLibCommon/ContextTables.h	378;"	d
PSLICE_LUMA_ABS_CONTEXT	TLibCommon/ContextTables.h	402;"	d
PSLICE_LUMA_CBF_CONTEXT	TLibCommon/ContextTables.h	298;"	d
PSLICE_LUMA_LAST_POSITION_CONTEXT	TLibCommon/ContextTables.h	332;"	d
PSLICE_LUMA_ONE_CONTEXT	TLibCommon/ContextTables.h	398;"	d
PSLICE_LUMA_SIGNIFICANCE_CONTEXT	TLibCommon/ContextTables.h	373;"	d
PTL_TRACE_TEXT	TLibDecoder/TDecCAVLC.cpp	1629;"	d	file:
PTL_TRACE_TEXT	TLibDecoder/TDecCAVLC.cpp	1706;"	d	file:
PTL_TRACE_TEXT	TLibEncoder/TEncCavlc.cpp	1148;"	d	file:
PTL_TRACE_TEXT	TLibEncoder/TEncCavlc.cpp	1199;"	d	file:
P_SLICE	TLibCommon/TypeDef.h	/^  P_SLICE               = 1,$/;"	e	enum:SliceType
PanScanRect	TLibCommon/SEI.h	/^  struct PanScanRect$/;"	s	class:SEIPanScanRect
ParameterSetManager	TLibCommon/TComSlice.cpp	/^ParameterSetManager::ParameterSetManager()$/;"	f	class:ParameterSetManager
ParameterSetManager	TLibCommon/TComSlice.h	/^class ParameterSetManager$/;"	c
ParameterSetMap	TLibCommon/TComSlice.h	/^  ParameterSetMap(Int maxId)$/;"	f	class:ParameterSetMap
ParameterSetMap	TLibCommon/TComSlice.h	/^template <class T> class ParameterSetMap$/;"	c
Parent	TLibCommon/TComTU.h	/^          TComTU *Parent()       { return mpParent; }$/;"	f	class:TComTU
Parent	TLibCommon/TComTU.h	/^    const TComTU *Parent() const { return mpParent; }$/;"	f	class:TComTU
ParseFailure	Utilities/program_options_lite.h	/^      ParseFailure(std::string arg0, std::string val0) throw()$/;"	f	struct:df::program_options_lite::ParseFailure
ParseFailure	Utilities/program_options_lite.h	/^    struct ParseFailure : public std::exception$/;"	s	namespace:df::program_options_lite
PartSize	TLibCommon/TypeDef.h	/^enum PartSize$/;"	g
PayloadType	TLibCommon/SEI.h	/^  enum PayloadType$/;"	g	class:SEI
Pel	TLibCommon/TypeDef.h	/^typedef       Int             Pel;               \/\/\/< pixel type$/;"	t
Pel	TLibCommon/TypeDef.h	/^typedef       Short           Pel;               \/\/\/< pixel type$/;"	t
PredMode	TLibCommon/TypeDef.h	/^enum PredMode$/;"	g
ProcessChannelSection	TLibCommon/TComTU.h	/^    Bool ProcessChannelSection(const ChannelType chType)       const { return mRect[chType].width != 0; }$/;"	f	class:TComTU
ProcessComponentSection	TLibCommon/TComTU.h	/^    Bool ProcessComponentSection(const ComponentID compID)     const { return mRect[compID].width != 0; }$/;"	f	class:TComTU
ProcessingAllQuadrants	TLibCommon/TComTU.h	/^    Bool ProcessingAllQuadrants(const ComponentID compID)      const { return mCodeAll[compID]; }$/;"	f	class:TComTU
Profile	TLibCommon/TypeDef.h	/^namespace Profile$/;"	n
ProfileFeatures	TLibCommon/ProfileLevelTierFeatures.h	/^struct ProfileFeatures$/;"	s
ProfileFeatures	TLibDecoder/TDecConformance.h	/^struct ProfileFeatures$/;"	s
ProfileLevelTierFeatures	TLibCommon/ProfileLevelTierFeatures.h	/^    ProfileLevelTierFeatures() : m_pProfile(0), m_pLevelTier(0), m_tier(Level::MAIN), m_maxRawCtuBits(0) { }$/;"	f	class:ProfileLevelTierFeatures
ProfileLevelTierFeatures	TLibCommon/ProfileLevelTierFeatures.h	/^class ProfileLevelTierFeatures$/;"	c
ProfileLevelTierFeatures	TLibDecoder/TDecConformance.h	/^    ProfileLevelTierFeatures() : m_pProfile(0), m_pLevelTier(0), m_hbrFactor(0), m_tier(Level::MAIN), m_maxRawCtuBits(0) { }$/;"	f	class:ProfileLevelTierFeatures
ProfileLevelTierFeatures	TLibDecoder/TDecConformance.h	/^class ProfileLevelTierFeatures$/;"	c
ProfileTierLevel	TLibCommon/TComSlice.cpp	/^ProfileTierLevel::ProfileTierLevel()$/;"	f	class:ProfileTierLevel
ProfileTierLevel	TLibCommon/TComSlice.h	/^class ProfileTierLevel$/;"	c
QP_BITS	TLibCommon/TComTrQuant.h	54;"	d
QUAD_SPLIT	TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
QUANT_SHIFT	TLibCommon/CommonDef.h	/^static const Int QUANT_SHIFT =                                     14; \/\/\/< Q(4) = 2^14$/;"	v
Q_FORMAT_SCALING	TLibCommon/SEIFilmGrainSynthesizer.h	64;"	d
Qp	TLibCommon/TComTrQuant.h	/^  Int Qp;$/;"	m	struct:QpParam
QpParam	TLibCommon/TComTrQuant.cpp	/^QpParam::QpParam(const Int           qpy,$/;"	f	class:QpParam
QpParam	TLibCommon/TComTrQuant.cpp	/^QpParam::QpParam(const TComDataCU &cu, const ComponentID compID)$/;"	f	class:QpParam
QpParam	TLibCommon/TComTrQuant.h	/^struct QpParam$/;"	s
R64_IDCT	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const int8_t R64_IDCT[64][64] =$/;"	v	file:
RDOQ_CHROMA	TLibCommon/TComTrQuant.cpp	64;"	d	file:
RDOQ_CHROMA_LAMBDA	TLibCommon/TypeDef.h	130;"	d
RDPCMMode	TLibCommon/TypeDef.h	/^enum RDPCMMode$/;"	g
RDPCMSignallingMode	TLibCommon/TypeDef.h	/^enum RDPCMSignallingMode$/;"	g
RDPCM_HOR	TLibCommon/TypeDef.h	/^  RDPCM_HOR             = 1,$/;"	e	enum:RDPCMMode
RDPCM_OFF	TLibCommon/TypeDef.h	/^  RDPCM_OFF             = 0,$/;"	e	enum:RDPCMMode
RDPCM_SIGNAL_EXPLICIT	TLibCommon/TypeDef.h	/^  RDPCM_SIGNAL_EXPLICIT            = 1,$/;"	e	enum:RDPCMSignallingMode
RDPCM_SIGNAL_IMPLICIT	TLibCommon/TypeDef.h	/^  RDPCM_SIGNAL_IMPLICIT            = 0,$/;"	e	enum:RDPCMSignallingMode
RDPCM_VER	TLibCommon/TypeDef.h	/^  RDPCM_VER             = 2,$/;"	e	enum:RDPCMMode
READ_CODE	TLibDecoder/SEIread.cpp	120;"	d	file:
READ_CODE	TLibDecoder/SyntaxElementParser.h	71;"	d
READ_CODE	TLibDecoder/SyntaxElementParser.h	78;"	d
READ_CODE_CHK	TLibDecoder/SyntaxElementParser.h	50;"	d
READ_CODE_CHK	TLibDecoder/SyntaxElementParser.h	56;"	d
READ_CODE_CHK	TLibDecoder/SyntaxElementParser.h	62;"	d
READ_FLAG	TLibDecoder/SEIread.cpp	123;"	d	file:
READ_FLAG	TLibDecoder/SyntaxElementParser.h	74;"	d
READ_FLAG	TLibDecoder/SyntaxElementParser.h	81;"	d
READ_FLAG_CHK	TLibDecoder/SyntaxElementParser.h	53;"	d
READ_FLAG_CHK	TLibDecoder/SyntaxElementParser.h	59;"	d
READ_FLAG_CHK	TLibDecoder/SyntaxElementParser.h	65;"	d
READ_SCODE	TLibDecoder/SEIread.cpp	119;"	d	file:
READ_SCODE	TLibDecoder/SyntaxElementParser.h	70;"	d
READ_SCODE	TLibDecoder/SyntaxElementParser.h	77;"	d
READ_SCODE_CHK	TLibDecoder/SyntaxElementParser.h	49;"	d
READ_SCODE_CHK	TLibDecoder/SyntaxElementParser.h	55;"	d
READ_SCODE_CHK	TLibDecoder/SyntaxElementParser.h	61;"	d
READ_SVLC	TLibDecoder/SEIread.cpp	121;"	d	file:
READ_SVLC	TLibDecoder/SyntaxElementParser.h	73;"	d
READ_SVLC	TLibDecoder/SyntaxElementParser.h	80;"	d
READ_SVLC_CHK	TLibDecoder/SyntaxElementParser.h	52;"	d
READ_SVLC_CHK	TLibDecoder/SyntaxElementParser.h	58;"	d
READ_SVLC_CHK	TLibDecoder/SyntaxElementParser.h	64;"	d
READ_UVLC	TLibDecoder/SEIread.cpp	122;"	d	file:
READ_UVLC	TLibDecoder/SyntaxElementParser.h	72;"	d
READ_UVLC	TLibDecoder/SyntaxElementParser.h	79;"	d
READ_UVLC_CHK	TLibDecoder/SyntaxElementParser.h	51;"	d
READ_UVLC_CHK	TLibDecoder/SyntaxElementParser.h	57;"	d
READ_UVLC_CHK	TLibDecoder/SyntaxElementParser.h	63;"	d
RECOVERY_POINT	TLibCommon/SEI.h	/^    RECOVERY_POINT                       = 6,$/;"	e	enum:SEI::PayloadType
REDUCED_ENCODER_MEMORY	TLibCommon/TypeDef.h	106;"	d
REF_PIC_LIST_0	TLibCommon/TypeDef.h	/^  REF_PIC_LIST_0               = 0,   \/\/\/< reference list 0$/;"	e	enum:RefPicList
REF_PIC_LIST_1	TLibCommon/TypeDef.h	/^  REF_PIC_LIST_1               = 1,   \/\/\/< reference list 1$/;"	e	enum:RefPicList
REF_PIC_LIST_NUM_IDX	TLibCommon/TComSlice.h	/^static const UInt REF_PIC_LIST_NUM_IDX=32;$/;"	v
REF_PIC_LIST_X	TLibCommon/TypeDef.h	/^  REF_PIC_LIST_X               = 100  \/\/\/< special mark$/;"	e	enum:RefPicList
REGIONAL_NESTING	TLibCommon/SEI.h	/^    REGIONAL_NESTING                     = 157,$/;"	e	enum:SEI::PayloadType
REGION_REFRESH_INFO	TLibCommon/SEI.h	/^    REGION_REFRESH_INFO                  = 134,$/;"	e	enum:SEI::PayloadType
REGION_WISE_PACKING	TLibCommon/SEI.h	/^    REGION_WISE_PACKING                  = 155, $/;"	e	enum:SEI::PayloadType
RESIDUAL_ENCODER_SIDE	TLibCommon/TypeDef.h	/^  RESIDUAL_ENCODER_SIDE           = 1,$/;"	e	enum:StoredResidualType
RESIDUAL_RECONSTRUCTED	TLibCommon/TypeDef.h	/^  RESIDUAL_RECONSTRUCTED          = 0,$/;"	e	enum:StoredResidualType
RExt__DECODER_DEBUG_BIT_STATISTICS	TLibCommon/TypeDef.h	68;"	d
RExt__DECODER_DEBUG_BIT_STATISTICS_PASS_OPT_ARG	TLibDecoder/TDecSbac.cpp	45;"	d	file:
RExt__DECODER_DEBUG_BIT_STATISTICS_PASS_OPT_ARG	TLibDecoder/TDecSbac.cpp	47;"	d	file:
RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS	TLibCommon/CommonDef.h	/^static const Int RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS =     4;$/;"	v
RExt__GOLOMB_RICE_INCREMENT_DIVISOR	TLibCommon/CommonDef.h	/^static const Int RExt__GOLOMB_RICE_INCREMENT_DIVISOR =              4;$/;"	v
RExt__HIGH_BIT_DEPTH_SUPPORT	TLibCommon/TypeDef.h	134;"	d
RExt__HIGH_PRECISION_FORWARD_TRANSFORM	TLibCommon/TypeDef.h	151;"	d
RExt__HIGH_PRECISION_FORWARD_TRANSFORM	TLibCommon/TypeDef.h	154;"	d
RExt__PREDICTION_WEIGHTING_ANALYSIS_DC_PRECISION	TLibCommon/CommonDef.h	/^static const Int RExt__PREDICTION_WEIGHTING_ANALYSIS_DC_PRECISION = 0; \/\/\/< Additional fixed bit precision used during encoder-side weighting prediction analysis. Currently only used when high_precision_prediction_weighting_flag is set, for backwards compatibility reasons.$/;"	v
RNSEIWindow	TLibCommon/TypeDef.h	/^  RNSEIWindow() : Window(), m_regionId(0) {}$/;"	f	class:RNSEIWindow
RNSEIWindow	TLibCommon/TypeDef.h	/^class RNSEIWindow : public Window$/;"	c
RNSEIWindowVec	TLibCommon/TypeDef.h	/^typedef std::vector<RNSEIWindow> RNSEIWindowVec;$/;"	t
RVM_VCEGAM10_M	TLibCommon/CommonDef.h	/^static const Int RVM_VCEGAM10_M =                                   4;$/;"	v
RasterAddress	TLibCommon/TComDataCU.h	/^namespace RasterAddress$/;"	n
RefPicList	TLibCommon/TypeDef.h	/^enum RefPicList$/;"	g
RegionalSEI	TLibCommon/SEI.h	/^  RegionalSEI(): m_seiMessage(NULL) {}$/;"	f	class:RegionalSEI
RegionalSEI	TLibCommon/SEI.h	/^  RegionalSEI(SEI *sei, RNSEIWindowVec &regions) $/;"	f	class:RegionalSEI
RegionalSEI	TLibCommon/SEI.h	/^class RegionalSEI$/;"	c
ResultData	TLibEncoder/TEncAnalyze.h	/^    ResultData () : bits(0)$/;"	f	struct:TEncAnalyze::ResultData
ResultData	TLibEncoder/TEncAnalyze.h	/^  struct ResultData$/;"	s	class:TEncAnalyze
SAOBlkParam	TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOBlkParam::SAOBlkParam()$/;"	f	class:SAOBlkParam
SAOBlkParam	TLibCommon/TypeDef.h	/^struct SAOBlkParam$/;"	s
SAOCabacStateLablesRDO	TLibEncoder/TEncSampleAdaptiveOffset.h	/^enum SAOCabacStateLablesRDO \/\/CABAC state labels$/;"	g
SAOEOClasses	TLibCommon/TypeDef.h	/^enum SAOEOClasses$/;"	g
SAOMode	TLibCommon/TypeDef.h	/^enum SAOMode \/\/mode$/;"	g
SAOModeMergeTypes	TLibCommon/TypeDef.h	/^enum SAOModeMergeTypes$/;"	g
SAOModeNewTypes	TLibCommon/TypeDef.h	/^enum SAOModeNewTypes$/;"	g
SAOOffset	TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOOffset::SAOOffset()$/;"	f	class:SAOOffset
SAOOffset	TLibCommon/TypeDef.h	/^struct SAOOffset$/;"	s
SAOProcess	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::SAOProcess(TComPic* pDecPic)$/;"	f	class:TComSampleAdaptiveOffset
SAOProcess	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::SAOProcess(TComPic* pPic, Bool* sliceEnabled, const Double *lambdas, const Bool bTestSAODisableAtPictureLevel, const Double saoEncodingRate, const Double saoEncodingRateChroma, const Bool isPreDBFSamplesUsed )$/;"	f	class:TEncSampleAdaptiveOffset
SAOStatData	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAOStatData(){}$/;"	f	struct:SAOStatData
SAOStatData	TLibEncoder/TEncSampleAdaptiveOffset.h	/^struct SAOStatData \/\/data structure for SAO statistics$/;"	s
SAO_CABACSTATE_BLK_CUR	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_CUR,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_BLK_MID	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_MID,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_BLK_NEXT	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_NEXT,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_BLK_TEMP	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_TEMP,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_PIC_INIT	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_PIC_INIT =0,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CLASS_EO_FULL_PEAK	TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_FULL_PEAK   = 4,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_FULL_VALLEY	TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_FULL_VALLEY = 0,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_HALF_PEAK	TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_HALF_PEAK   = 3,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_HALF_VALLEY	TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_HALF_VALLEY = 1,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_PLAIN	TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_PLAIN       = 2,$/;"	e	enum:SAOEOClasses
SAO_MERGE_ABOVE	TLibCommon/TypeDef.h	/^  SAO_MERGE_ABOVE,$/;"	e	enum:SAOModeMergeTypes
SAO_MERGE_LEFT	TLibCommon/TypeDef.h	/^  SAO_MERGE_LEFT =0,$/;"	e	enum:SAOModeMergeTypes
SAO_MODE_MERGE	TLibCommon/TypeDef.h	/^  SAO_MODE_MERGE,$/;"	e	enum:SAOMode
SAO_MODE_NEW	TLibCommon/TypeDef.h	/^  SAO_MODE_NEW,$/;"	e	enum:SAOMode
SAO_MODE_OFF	TLibCommon/TypeDef.h	/^  SAO_MODE_OFF = 0,$/;"	e	enum:SAOMode
SAO_TYPE_BO	TLibCommon/TypeDef.h	/^  SAO_TYPE_BO = SAO_TYPE_START_BO,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_0	TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_0 = SAO_TYPE_START_EO,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_135	TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_135,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_45	TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_45,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_90	TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_90,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_START_BO	TLibCommon/TypeDef.h	/^  SAO_TYPE_START_BO,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_START_EO	TLibCommon/TypeDef.h	/^  SAO_TYPE_START_EO =0,$/;"	e	enum:SAOModeNewTypes
SBH_THRESHOLD	TLibCommon/CommonDef.h	/^static const Int SBH_THRESHOLD =                                    4; \/\/\/< value of the fixed SBH controlling threshold$/;"	v
SCALABLE_NESTING	TLibCommon/SEI.h	/^    SCALABLE_NESTING                     = 133,$/;"	e	enum:SEI::PayloadType
SCALE_BITS	TLibCommon/CommonDef.h	/^static const Int SCALE_BITS =                                      15; \/\/\/< For fractional bit estimates in RDOQ$/;"	v
SCALE_DOWN_422	TLibCommon/SEIFilmGrainSynthesizer.h	63;"	d
SCALING_LIST_16x16	TLibCommon/TypeDef.h	/^  SCALING_LIST_16x16,$/;"	e	enum:ScalingListSize
SCALING_LIST_32x32	TLibCommon/TypeDef.h	/^  SCALING_LIST_32x32,$/;"	e	enum:ScalingListSize
SCALING_LIST_4x4	TLibCommon/TypeDef.h	/^  SCALING_LIST_4x4 = 0,$/;"	e	enum:ScalingListSize
SCALING_LIST_8x8	TLibCommon/TypeDef.h	/^  SCALING_LIST_8x8,$/;"	e	enum:ScalingListSize
SCALING_LIST_BITS	TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_BITS =                               8 ; \/\/\/< bit depth of scaling list entries$/;"	v
SCALING_LIST_DC	TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_DC =                                16 ; \/\/\/< default DC value$/;"	v
SCALING_LIST_DEFAULT	TLibCommon/TypeDef.h	/^  SCALING_LIST_DEFAULT,$/;"	e	enum:ScalingListMode
SCALING_LIST_FILE_READ	TLibCommon/TypeDef.h	/^  SCALING_LIST_FILE_READ$/;"	e	enum:ScalingListMode
SCALING_LIST_NUM	TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_NUM = MAX_NUM_COMPONENT * NUMBER_OF_PREDICTION_MODES; \/\/\/< list number for quantization matrix$/;"	v
SCALING_LIST_OFF	TLibCommon/TypeDef.h	/^  SCALING_LIST_OFF,$/;"	e	enum:ScalingListMode
SCALING_LIST_REM_NUM	TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_REM_NUM =                             6;$/;"	v
SCALING_LIST_SIZE_NUM	TLibCommon/TypeDef.h	/^  SCALING_LIST_SIZE_NUM$/;"	e	enum:ScalingListSize
SCALING_LIST_START_VALUE	TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_START_VALUE =                        8 ; \/\/\/< start value for dpcm mode$/;"	v
SCAN_DIAG	TLibCommon/TypeDef.h	/^  SCAN_DIAG = 0,        \/\/\/< up-right diagonal scan$/;"	e	enum:COEFF_SCAN_TYPE
SCAN_GROUPED_4x4	TLibCommon/TypeDef.h	/^  SCAN_GROUPED_4x4 = 1,$/;"	e	enum:COEFF_SCAN_GROUP_TYPE
SCAN_HOR	TLibCommon/TypeDef.h	/^  SCAN_HOR  = 1,        \/\/\/< horizontal first scan$/;"	e	enum:COEFF_SCAN_TYPE
SCAN_NUMBER_OF_GROUP_TYPES	TLibCommon/TypeDef.h	/^  SCAN_NUMBER_OF_GROUP_TYPES = 2$/;"	e	enum:COEFF_SCAN_GROUP_TYPE
SCAN_NUMBER_OF_TYPES	TLibCommon/TypeDef.h	/^  SCAN_NUMBER_OF_TYPES = 3$/;"	e	enum:COEFF_SCAN_TYPE
SCAN_UNGROUPED	TLibCommon/TypeDef.h	/^  SCAN_UNGROUPED   = 0,$/;"	e	enum:COEFF_SCAN_GROUP_TYPE
SCAN_VER	TLibCommon/TypeDef.h	/^  SCAN_VER  = 2,        \/\/\/< vertical first scan$/;"	e	enum:COEFF_SCAN_TYPE
SCENE_INFO	TLibCommon/SEI.h	/^    SCENE_INFO                           = 9,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
SChar	TLibCommon/TypeDef.h	/^typedef       signed char         SChar; \/\/ Signed 8-bit values$/;"	t
SEGM_RECT_FRAME_PACKING	TLibCommon/SEI.h	/^    SEGM_RECT_FRAME_PACKING              = 138,$/;"	e	enum:SEI::PayloadType
SEI	TLibCommon/SEI.h	/^  SEI() {}$/;"	f	class:SEI
SEI	TLibCommon/SEI.h	/^class SEI$/;"	c
SEIActiveParameterSets	TLibCommon/SEI.h	/^  SEIActiveParameterSets()$/;"	f	class:SEIActiveParameterSets
SEIActiveParameterSets	TLibCommon/SEI.h	/^class SEIActiveParameterSets : public SEI$/;"	c
SEIAlternativeTransferCharacteristics	TLibCommon/SEI.h	/^  SEIAlternativeTransferCharacteristics() : m_preferredTransferCharacteristics(18)$/;"	f	class:SEIAlternativeTransferCharacteristics
SEIAlternativeTransferCharacteristics	TLibCommon/SEI.h	/^class SEIAlternativeTransferCharacteristics : public SEI$/;"	c
SEIAmbientViewingEnvironment	TLibCommon/SEI.h	/^  SEIAmbientViewingEnvironment() { }$/;"	f	class:SEIAmbientViewingEnvironment
SEIAmbientViewingEnvironment	TLibCommon/SEI.h	/^class SEIAmbientViewingEnvironment : public SEI$/;"	c
SEIAnnotatedRegions	TLibCommon/SEI.h	/^  SEIAnnotatedRegions() {}$/;"	f	class:SEIAnnotatedRegions
SEIAnnotatedRegions	TLibCommon/SEI.h	/^class SEIAnnotatedRegions : public SEI$/;"	c
SEIBufferingPeriod	TLibCommon/SEI.h	/^  SEIBufferingPeriod()$/;"	f	class:SEIBufferingPeriod
SEIBufferingPeriod	TLibCommon/SEI.h	/^class SEIBufferingPeriod : public SEI$/;"	c
SEIChromaResamplingFilterHint	TLibCommon/SEI.h	/^  SEIChromaResamplingFilterHint() {}$/;"	f	class:SEIChromaResamplingFilterHint
SEIChromaResamplingFilterHint	TLibCommon/SEI.h	/^class SEIChromaResamplingFilterHint : public SEI$/;"	c
SEICodedRegionCompletion	TLibCommon/SEI.h	/^  SEICodedRegionCompletion() { }$/;"	f	class:SEICodedRegionCompletion
SEICodedRegionCompletion	TLibCommon/SEI.h	/^class SEICodedRegionCompletion : public SEI$/;"	c
SEIColourRemappingInfo	TLibCommon/SEI.h	/^  SEIColourRemappingInfo() {}$/;"	f	class:SEIColourRemappingInfo
SEIColourRemappingInfo	TLibCommon/SEI.h	/^class SEIColourRemappingInfo : public SEI$/;"	c
SEIContentColourVolume	TLibCommon/SEI.h	/^  SEIContentColourVolume() {}$/;"	f	class:SEIContentColourVolume
SEIContentColourVolume	TLibCommon/SEI.h	/^class SEIContentColourVolume : public SEI$/;"	c
SEIContentLightLevelInfo	TLibCommon/SEI.h	/^    SEIContentLightLevelInfo() { }$/;"	f	class:SEIContentLightLevelInfo
SEIContentLightLevelInfo	TLibCommon/SEI.h	/^class SEIContentLightLevelInfo : public SEI$/;"	c
SEICubemapProjection	TLibCommon/SEI.h	/^  SEICubemapProjection() {}$/;"	f	class:SEICubemapProjection
SEICubemapProjection	TLibCommon/SEI.h	/^class SEICubemapProjection : public SEI$/;"	c
SEIDecodedPictureHash	TLibCommon/SEI.h	/^  SEIDecodedPictureHash() {}$/;"	f	class:SEIDecodedPictureHash
SEIDecodedPictureHash	TLibCommon/SEI.h	/^class SEIDecodedPictureHash : public SEI$/;"	c
SEIDecodingUnitInfo	TLibCommon/SEI.h	/^  SEIDecodingUnitInfo()$/;"	f	class:SEIDecodingUnitInfo
SEIDecodingUnitInfo	TLibCommon/SEI.h	/^class SEIDecodingUnitInfo : public SEI$/;"	c
SEIDeinterlaceFieldIdentification	TLibCommon/SEI.h	/^    SEIDeinterlaceFieldIdentification() { }$/;"	f	class:SEIDeinterlaceFieldIdentification
SEIDeinterlaceFieldIdentification	TLibCommon/SEI.h	/^class SEIDeinterlaceFieldIdentification : public SEI$/;"	c
SEIDependentRAPIndication	TLibCommon/SEI.h	/^  SEIDependentRAPIndication() { }$/;"	f	class:SEIDependentRAPIndication
SEIDependentRAPIndication	TLibCommon/SEI.h	/^class SEIDependentRAPIndication : public SEI$/;"	c
SEIDisplayOrientation	TLibCommon/SEI.h	/^  SEIDisplayOrientation()$/;"	f	class:SEIDisplayOrientation
SEIDisplayOrientation	TLibCommon/SEI.h	/^class SEIDisplayOrientation : public SEI$/;"	c
SEIEncoder	TLibEncoder/SEIEncoder.h	/^  SEIEncoder()$/;"	f	class:SEIEncoder
SEIEncoder	TLibEncoder/SEIEncoder.h	/^class SEIEncoder$/;"	c
SEIEquirectangularProjection	TLibCommon/SEI.h	/^  SEIEquirectangularProjection()  {}$/;"	f	class:SEIEquirectangularProjection
SEIEquirectangularProjection	TLibCommon/SEI.h	/^class SEIEquirectangularProjection : public SEI$/;"	c
SEIFillerPayload	TLibCommon/SEI.h	/^  SEIFillerPayload() {}$/;"	f	class:SEIFillerPayload
SEIFillerPayload	TLibCommon/SEI.h	/^class SEIFillerPayload : public SEI$/;"	c
SEIFilmGrainCharacteristics	TLibCommon/SEI.h	/^  SEIFilmGrainCharacteristics() {}$/;"	f	class:SEIFilmGrainCharacteristics
SEIFilmGrainCharacteristics	TLibCommon/SEI.h	/^class SEIFilmGrainCharacteristics: public SEI$/;"	c
SEIFilmGrainSynthesizer	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^SEIFilmGrainSynthesizer::SEIFilmGrainSynthesizer()$/;"	f	class:SEIFilmGrainSynthesizer
SEIFilmGrainSynthesizer	TLibCommon/SEIFilmGrainSynthesizer.h	/^class SEIFilmGrainSynthesizer$/;"	c
SEIFisheyeVideoInfo	TLibCommon/SEI.h	/^  SEIFisheyeVideoInfo() {}$/;"	f	class:SEIFisheyeVideoInfo
SEIFisheyeVideoInfo	TLibCommon/SEI.h	/^class SEIFisheyeVideoInfo : public SEI$/;"	c
SEIFramePacking	TLibCommon/SEI.h	/^  SEIFramePacking() {}$/;"	f	class:SEIFramePacking
SEIFramePacking	TLibCommon/SEI.h	/^class SEIFramePacking : public SEI$/;"	c
SEIGreenMetadataInfo	TLibCommon/SEI.h	/^    SEIGreenMetadataInfo() {}$/;"	f	class:SEIGreenMetadataInfo
SEIGreenMetadataInfo	TLibCommon/SEI.h	/^class SEIGreenMetadataInfo : public SEI$/;"	c
SEIKneeFunctionInfo	TLibCommon/SEI.h	/^  SEIKneeFunctionInfo() {}$/;"	f	class:SEIKneeFunctionInfo
SEIKneeFunctionInfo	TLibCommon/SEI.h	/^class SEIKneeFunctionInfo : public SEI$/;"	c
SEIListOfIndices	TLibCommon/SEI.h	/^    SEIListOfIndices() : m_seiMessage(NULL) {}$/;"	f	struct:SEIRegionalNesting::SEIListOfIndices
SEIListOfIndices	TLibCommon/SEI.h	/^    SEIListOfIndices(std::vector<UInt> listOfIndices, SEI* sei) : m_listOfIndices(listOfIndices), m_seiMessage(sei) {}$/;"	f	struct:SEIRegionalNesting::SEIListOfIndices
SEIListOfIndices	TLibCommon/SEI.h	/^  struct SEIListOfIndices$/;"	s	class:SEIRegionalNesting
SEIMCTSExtractionInfoSet	TLibCommon/SEI.h	/^    SEIMCTSExtractionInfoSet() { }$/;"	f	class:SEIMCTSExtractionInfoSet
SEIMCTSExtractionInfoSet	TLibCommon/SEI.h	/^class SEIMCTSExtractionInfoSet : public SEI$/;"	c
SEIMasteringDisplayColourVolume	TLibCommon/SEI.h	/^    SEIMasteringDisplayColourVolume() {}$/;"	f	class:SEIMasteringDisplayColourVolume
SEIMasteringDisplayColourVolume	TLibCommon/SEI.h	/^class SEIMasteringDisplayColourVolume : public SEI$/;"	c
SEIMessages	TLibCommon/SEI.h	/^typedef std::list<SEI*> SEIMessages;$/;"	t
SEINoDisplay	TLibCommon/SEI.h	/^  SEINoDisplay()$/;"	f	class:SEINoDisplay
SEINoDisplay	TLibCommon/SEI.h	/^class SEINoDisplay : public SEI$/;"	c
SEIOmniViewport	TLibCommon/SEI.h	/^  SEIOmniViewport() {}$/;"	f	class:SEIOmniViewport
SEIOmniViewport	TLibCommon/SEI.h	/^class SEIOmniViewport : public SEI$/;"	c
SEIPanScanRect	TLibCommon/SEI.h	/^  SEIPanScanRect() {}$/;"	f	class:SEIPanScanRect
SEIPanScanRect	TLibCommon/SEI.h	/^class SEIPanScanRect : public SEI$/;"	c
SEIPictureSnapshot	TLibCommon/SEI.h	/^  SEIPictureSnapshot() {}$/;"	f	class:SEIPictureSnapshot
SEIPictureSnapshot	TLibCommon/SEI.h	/^class SEIPictureSnapshot : public SEI$/;"	c
SEIPictureTiming	TLibCommon/SEI.h	/^  SEIPictureTiming()$/;"	f	class:SEIPictureTiming
SEIPictureTiming	TLibCommon/SEI.h	/^class SEIPictureTiming : public SEI$/;"	c
SEIPostFilterHint	TLibCommon/SEI.h	/^  SEIPostFilterHint() {}$/;"	f	class:SEIPostFilterHint
SEIPostFilterHint	TLibCommon/SEI.h	/^class SEIPostFilterHint: public SEI$/;"	c
SEIProgressiveRefinementSegmentEnd	TLibCommon/SEI.h	/^  SEIProgressiveRefinementSegmentEnd() {}$/;"	f	class:SEIProgressiveRefinementSegmentEnd
SEIProgressiveRefinementSegmentEnd	TLibCommon/SEI.h	/^class SEIProgressiveRefinementSegmentEnd: public SEI$/;"	c
SEIProgressiveRefinementSegmentStart	TLibCommon/SEI.h	/^  SEIProgressiveRefinementSegmentStart() {}$/;"	f	class:SEIProgressiveRefinementSegmentStart
SEIProgressiveRefinementSegmentStart	TLibCommon/SEI.h	/^class SEIProgressiveRefinementSegmentStart : public SEI$/;"	c
SEIReader	TLibDecoder/SEIread.h	/^  SEIReader() {};$/;"	f	class:SEIReader
SEIReader	TLibDecoder/SEIread.h	/^class SEIReader: public SyntaxElementParser$/;"	c
SEIRecoveryPoint	TLibCommon/SEI.h	/^  SEIRecoveryPoint() {}$/;"	f	class:SEIRecoveryPoint
SEIRecoveryPoint	TLibCommon/SEI.h	/^class SEIRecoveryPoint : public SEI$/;"	c
SEIRegionRefreshInfo	TLibCommon/SEI.h	/^  SEIRegionRefreshInfo()$/;"	f	class:SEIRegionRefreshInfo
SEIRegionRefreshInfo	TLibCommon/SEI.h	/^class SEIRegionRefreshInfo : public SEI$/;"	c
SEIRegionWisePacking	TLibCommon/SEI.h	/^  SEIRegionWisePacking() {}$/;"	f	class:SEIRegionWisePacking
SEIRegionWisePacking	TLibCommon/SEI.h	/^class SEIRegionWisePacking : public SEI$/;"	c
SEIRegionalNesting	TLibCommon/SEI.h	/^  SEIRegionalNesting(): m_rnId(0) {}$/;"	f	class:SEIRegionalNesting
SEIRegionalNesting	TLibCommon/SEI.h	/^class SEIRegionalNesting : public SEI$/;"	c
SEISOPDescription	TLibCommon/SEI.h	/^  SEISOPDescription() {}$/;"	f	class:SEISOPDescription
SEISOPDescription	TLibCommon/SEI.h	/^class SEISOPDescription : public SEI$/;"	c
SEIScalableNesting	TLibCommon/SEI.h	/^  SEIScalableNesting() {}$/;"	f	class:SEIScalableNesting
SEIScalableNesting	TLibCommon/SEI.h	/^class SEIScalableNesting : public SEI$/;"	c
SEISceneInfo	TLibCommon/SEI.h	/^  SEISceneInfo() {}$/;"	f	class:SEISceneInfo
SEISceneInfo	TLibCommon/SEI.h	/^class SEISceneInfo : public SEI$/;"	c
SEISegmentedRectFramePacking	TLibCommon/SEI.h	/^  SEISegmentedRectFramePacking() {}$/;"	f	class:SEISegmentedRectFramePacking
SEISegmentedRectFramePacking	TLibCommon/SEI.h	/^class SEISegmentedRectFramePacking : public SEI$/;"	c
SEIShutterIntervalInfo	TLibCommon/SEI.h	/^  SEIShutterIntervalInfo() {}$/;"	f	class:SEIShutterIntervalInfo
SEIShutterIntervalInfo	TLibCommon/SEI.h	/^class SEIShutterIntervalInfo : public SEI$/;"	c
SEISphereRotation	TLibCommon/SEI.h	/^  SEISphereRotation()  {}$/;"	f	class:SEISphereRotation
SEISphereRotation	TLibCommon/SEI.h	/^class SEISphereRotation : public SEI$/;"	c
SEITempMotionConstrainedTileSets	TLibCommon/SEI.h	/^  SEITempMotionConstrainedTileSets() { }$/;"	f	class:SEITempMotionConstrainedTileSets
SEITempMotionConstrainedTileSets	TLibCommon/SEI.h	/^class SEITempMotionConstrainedTileSets: public SEI$/;"	c
SEITemporalLevel0Index	TLibCommon/SEI.h	/^  SEITemporalLevel0Index()$/;"	f	class:SEITemporalLevel0Index
SEITemporalLevel0Index	TLibCommon/SEI.h	/^class SEITemporalLevel0Index : public SEI$/;"	c
SEITimeCode	TLibCommon/SEI.h	/^  SEITimeCode() {}$/;"	f	class:SEITimeCode
SEITimeCode	TLibCommon/SEI.h	/^class SEITimeCode : public SEI$/;"	c
SEIToneMappingInfo	TLibCommon/SEI.h	/^  SEIToneMappingInfo() {}$/;"	f	class:SEIToneMappingInfo
SEIToneMappingInfo	TLibCommon/SEI.h	/^class SEIToneMappingInfo : public SEI$/;"	c
SEIUserDataRegistered	TLibCommon/SEI.h	/^  SEIUserDataRegistered() {}$/;"	f	class:SEIUserDataRegistered
SEIUserDataRegistered	TLibCommon/SEI.h	/^class SEIUserDataRegistered : public SEI$/;"	c
SEIUserDataUnregistered	TLibCommon/SEI.h	/^  SEIUserDataUnregistered() {}$/;"	f	class:SEIUserDataUnregistered
SEIUserDataUnregistered	TLibCommon/SEI.h	/^class SEIUserDataUnregistered : public SEI$/;"	c
SEIWriter	TLibEncoder/SEIwrite.h	/^  SEIWriter() {};$/;"	f	class:SEIWriter
SEIWriter	TLibEncoder/SEIwrite.h	/^class SEIWriter:public SyntaxElementWriter$/;"	c
SEI_ENCODER_CONTROL	TLibCommon/TypeDef.h	92;"	d
SHUTTER_INTERVAL_INFO	TLibCommon/SEI.h	/^    SHUTTER_INTERVAL_INFO                = 203,$/;"	e	enum:SEI::PayloadType
SHUTTER_INTERVAL_SEI_MESSAGE	TLibCommon/TypeDef.h	91;"	d
SIZE_2Nx2N	TLibCommon/TypeDef.h	/^  SIZE_2Nx2N           = 0,           \/\/\/< symmetric motion partition,  2Nx2N$/;"	e	enum:PartSize
SIZE_2NxN	TLibCommon/TypeDef.h	/^  SIZE_2NxN            = 1,           \/\/\/< symmetric motion partition,  2Nx N$/;"	e	enum:PartSize
SIZE_2NxnD	TLibCommon/TypeDef.h	/^  SIZE_2NxnD           = 5,           \/\/\/< asymmetric motion partition, 2Nx(3N\/2) + 2Nx( N\/2)$/;"	e	enum:PartSize
SIZE_2NxnU	TLibCommon/TypeDef.h	/^  SIZE_2NxnU           = 4,           \/\/\/< asymmetric motion partition, 2Nx( N\/2) + 2Nx(3N\/2)$/;"	e	enum:PartSize
SIZE_Nx2N	TLibCommon/TypeDef.h	/^  SIZE_Nx2N            = 2,           \/\/\/< symmetric motion partition,   Nx2N$/;"	e	enum:PartSize
SIZE_NxN	TLibCommon/TypeDef.h	/^  SIZE_NxN             = 3,           \/\/\/< symmetric motion partition,   Nx N$/;"	e	enum:PartSize
SIZE_nLx2N	TLibCommon/TypeDef.h	/^  SIZE_nLx2N           = 6,           \/\/\/< asymmetric motion partition, ( N\/2)x2N + (3N\/2)x2N$/;"	e	enum:PartSize
SIZE_nRx2N	TLibCommon/TypeDef.h	/^  SIZE_nRx2N           = 7,           \/\/\/< asymmetric motion partition, (3N\/2)x2N + ( N\/2)x2N$/;"	e	enum:PartSize
SOP_DESCRIPTION	TLibCommon/SEI.h	/^    SOP_DESCRIPTION                      = 128,$/;"	e	enum:SEI::PayloadType
SPHERE_ROTATION	TLibCommon/SEI.h	/^    SPHERE_ROTATION                      = 154,$/;"	e	enum:SEI::PayloadType
SPLIT_MODE	TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	t	class:TComTU	typeref:enum:TComTU::TU_SPLIT_MODE
SPSExtensionFlagIndex	TLibCommon/TypeDef.h	/^enum SPSExtensionFlagIndex$/;"	g
SPSNeedsWriting	TLibEncoder/TEncTop.cpp	/^Bool TEncTop::SPSNeedsWriting(Int spsId)$/;"	f	class:TEncTop
SPS_EXT__REXT	TLibCommon/TypeDef.h	/^  SPS_EXT__REXT           = 0,$/;"	e	enum:SPSExtensionFlagIndex
SStat	TLibCommon/TComCodingStatistics.h	/^      SStat() : bits(0), count(0), sum(0) { }$/;"	f	struct:TComCodingStatistics::SStat
SStat	TLibCommon/TComCodingStatistics.h	/^    struct SStat$/;"	s	class:TComCodingStatistics
STATS__BYTE_ALIGNMENT_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__BYTE_ALIGNMENT_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__ALIGNED_ESCAPE_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__ALIGNED_ESCAPE_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__ALIGNED_SIGN_BIT	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__ALIGNED_SIGN_BIT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__CHROMA_QP_ADJUSTMENT	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__CHROMA_QP_ADJUSTMENT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__CROSS_COMPONENT_PREDICTION	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__CROSS_COMPONENT_PREDICTION,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__DELTA_QP_EP	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__DELTA_QP_EP,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__ESCAPE_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__ESCAPE_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__GT1_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__GT1_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__GT2_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__GT2_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__INTER_DIR	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__INTER_DIR,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__INTRA_DIR_ANG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__INTRA_DIR_ANG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__LAST_SIG_X_Y	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__LAST_SIG_X_Y,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MERGE_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MERGE_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MERGE_INDEX	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MERGE_INDEX,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MVD	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MVD,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MVD_EP	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MVD_EP,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MVP_IDX	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MVP_IDX,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__PART_SIZE	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__PART_SIZE,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__PRED_MODE	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__PRED_MODE,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__QT_CBF	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__QT_CBF,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__QT_ROOT_CBF	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__QT_ROOT_CBF,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__REF_FRM_IDX	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__REF_FRM_IDX,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SAO	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SAO,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SIGN_BIT	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SIGN_BIT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SIG_COEFF_GROUP_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SIG_COEFF_GROUP_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SIG_COEFF_MAP_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SIG_COEFF_MAP_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SKIP_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SKIP_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SPLIT_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SPLIT_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__TQ_BYPASS_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__TQ_BYPASS_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__TRANSFORM_SKIP_FLAGS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__TRANSFORM_SKIP_FLAGS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__TRANSFORM_SUBDIV_FLAG	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__TRANSFORM_SUBDIV_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_EP_BIT_ALIGNMENT	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_EP_BIT_ALIGNMENT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_FIXED_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_FIXED_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_INITIALISATION	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_INITIALISATION,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_PCM_ALIGN_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_PCM_ALIGN_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_PCM_CODE_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_PCM_CODE_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_TRM_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_TRM_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__EMULATION_PREVENTION_3_BYTES	TLibCommon/TComCodingStatistics.h	/^  STATS__EMULATION_PREVENTION_3_BYTES,$/;"	e	enum:TComCodingStatisticsType
STATS__EXPLICIT_RDPCM_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__EXPLICIT_RDPCM_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__NAL_UNIT_HEADER_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__NAL_UNIT_HEADER_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__NAL_UNIT_PACKING	TLibCommon/TComCodingStatistics.h	/^  STATS__NAL_UNIT_PACKING,$/;"	e	enum:TComCodingStatisticsType
STATS__NAL_UNIT_TOTAL_BODY	TLibCommon/TComCodingStatistics.h	/^  STATS__NAL_UNIT_TOTAL_BODY,\/\/ This is a special case and is not included in the total sums.$/;"	e	enum:TComCodingStatisticsType
STATS__NUM_STATS	TLibCommon/TComCodingStatistics.h	/^  STATS__NUM_STATS$/;"	e	enum:TComCodingStatisticsType
STATS__TRAILING_BITS	TLibCommon/TComCodingStatistics.h	/^  STATS__TRAILING_BITS,$/;"	e	enum:TComCodingStatisticsType
ScalingListMode	TLibCommon/TypeDef.h	/^enum ScalingListMode$/;"	g
ScalingListSize	TLibCommon/TypeDef.h	/^enum ScalingListSize$/;"	g
ScanGenerator	TLibCommon/TComRom.cpp	/^  ScanGenerator(UInt blockWidth, UInt blockHeight, UInt stride, COEFF_SCAN_TYPE scanType)$/;"	f	class:ScanGenerator
ScanGenerator	TLibCommon/TComRom.cpp	/^class ScanGenerator$/;"	c	file:
SetStatistics	TLibCommon/TComCodingStatistics.h	/^    static Void SetStatistics(const TComCodingStatisticsData &src) { GetSingletonInstance().data=src; }$/;"	f	class:TComCodingStatistics
Short	TLibCommon/TypeDef.h	/^typedef       short               Short;$/;"	t
SignificanceMapContextType	TLibCommon/TypeDef.h	/^enum SignificanceMapContextType$/;"	g
SliceConstraint	TLibCommon/TypeDef.h	/^enum SliceConstraint$/;"	g
SliceType	TLibCommon/TypeDef.h	/^enum SliceType$/;"	g
StatLogValue	TLibCommon/TComCodingStatistics.h	/^      StatLogValue()$/;"	f	struct:TComCodingStatistics::StatLogValue
StatLogValue	TLibCommon/TComCodingStatistics.h	/^    struct StatLogValue$/;"	s	class:TComCodingStatistics
StoredResidualType	TLibCommon/TypeDef.h	/^enum StoredResidualType$/;"	g
SyntaxElementParser	TLibDecoder/SyntaxElementParser.h	/^  SyntaxElementParser()$/;"	f	class:SyntaxElementParser
SyntaxElementParser	TLibDecoder/SyntaxElementParser.h	/^class SyntaxElementParser$/;"	c
SyntaxElementWriter	TLibEncoder/SyntaxElementWriter.h	/^  SyntaxElementWriter()$/;"	f	class:SyntaxElementWriter
SyntaxElementWriter	TLibEncoder/SyntaxElementWriter.h	/^class SyntaxElementWriter$/;"	c
TCOMCODINGSTATISTICS_ENTROPYSCALE	TLibCommon/TComCodingStatistics.h	/^static const Int64 TCOMCODINGSTATISTICS_ENTROPYSCALE=32768;$/;"	v
TChar	TLibCommon/TypeDef.h	/^typedef       char                TChar; \/\/ Used for text\/characters$/;"	t
TCoeff	TLibCommon/TypeDef.h	/^typedef       Int             TCoeff;            \/\/\/< transform coefficient$/;"	t
TCoeff	TLibCommon/TypeDef.h	/^typedef       Int64           TCoeff;            \/\/\/< transform coefficient$/;"	t
TComBitCounter	TLibCommon/TComBitCounter.h	/^  TComBitCounter()            {}$/;"	f	class:TComBitCounter
TComBitCounter	TLibCommon/TComBitCounter.h	/^class TComBitCounter : public TComBitIf$/;"	c
TComBitIf	TLibCommon/TComBitStream.h	/^class TComBitIf$/;"	c
TComCABACTables	TLibCommon/TComCABACTables.h	/^class TComCABACTables$/;"	c
TComCUMvField	TLibCommon/TComMotionInfo.h	/^  TComCUMvField() : m_pcMv(NULL), m_pcMvd(NULL), m_piRefIdx(NULL), m_uiNumPartition(0) {}$/;"	f	class:TComCUMvField
TComCUMvField	TLibCommon/TComMotionInfo.h	/^class TComCUMvField$/;"	c
TComCodingStatistics	TLibCommon/TComCodingStatistics.h	/^    TComCodingStatistics() : data()$/;"	f	class:TComCodingStatistics
TComCodingStatistics	TLibCommon/TComCodingStatistics.h	/^class TComCodingStatistics$/;"	c
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t)$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const ChannelType chid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const ComponentID cid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const Int log2w )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const UInt log2w )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const UInt log2w, const ChannelType chid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const UInt log2w, const ComponentID cid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	TLibCommon/TComCodingStatistics.h	/^class TComCodingStatisticsClassType$/;"	c
TComCodingStatisticsData	TLibCommon/TComCodingStatistics.h	/^    class TComCodingStatisticsData$/;"	c	class:TComCodingStatistics
TComCodingStatisticsType	TLibCommon/TComCodingStatistics.h	/^enum TComCodingStatisticsType$/;"	g
TComDataCU	TLibCommon/TComDataCU.cpp	/^TComDataCU::TComDataCU()$/;"	f	class:TComDataCU
TComDataCU	TLibCommon/TComDataCU.h	/^class TComDataCU$/;"	c
TComHRD	TLibCommon/TComSlice.h	/^  TComHRD()$/;"	f	class:TComHRD
TComHRD	TLibCommon/TComSlice.h	/^class TComHRD$/;"	c
TComInputBitstream	TLibCommon/TComBitStream.cpp	/^TComInputBitstream::TComInputBitstream()$/;"	f	class:TComInputBitstream
TComInputBitstream	TLibCommon/TComBitStream.cpp	/^TComInputBitstream::TComInputBitstream(const TComInputBitstream &src)$/;"	f	class:TComInputBitstream
TComInputBitstream	TLibCommon/TComBitStream.h	/^class TComInputBitstream$/;"	c
TComInterpolationFilter	TLibCommon/TComInterpolationFilter.h	/^  TComInterpolationFilter() {}$/;"	f	class:TComInterpolationFilter
TComInterpolationFilter	TLibCommon/TComInterpolationFilter.h	/^class TComInterpolationFilter$/;"	c
TComIterator	TLibCommon/TComList.h	/^  typedef typename std::list<C>::iterator TComIterator;$/;"	t	class:TComList
TComList	TLibCommon/TComList.h	/^class TComList : public std::list< C > \/\/ NOTE: should not inherit from STL classes$/;"	c
TComLoopFilter	TLibCommon/TComLoopFilter.cpp	/^TComLoopFilter::TComLoopFilter()$/;"	f	class:TComLoopFilter
TComLoopFilter	TLibCommon/TComLoopFilter.h	/^class TComLoopFilter$/;"	c
TComMv	TLibCommon/TComMv.h	/^  TComMv( Short iHor, Short iVer ) :$/;"	f	class:TComMv
TComMv	TLibCommon/TComMv.h	/^  TComMv() :$/;"	f	class:TComMv
TComMv	TLibCommon/TComMv.h	/^class TComMv$/;"	c
TComMvField	TLibCommon/TComMotionInfo.h	/^  TComMvField() : m_iRefIdx( NOT_VALID ) {}$/;"	f	class:TComMvField
TComMvField	TLibCommon/TComMotionInfo.h	/^class TComMvField$/;"	c
TComOutputBitstream	TLibCommon/TComBitStream.cpp	/^TComOutputBitstream::TComOutputBitstream()$/;"	f	class:TComOutputBitstream
TComOutputBitstream	TLibCommon/TComBitStream.h	/^class TComOutputBitstream : public TComBitIf$/;"	c
TComPPS	TLibCommon/TComSlice.cpp	/^TComPPS::TComPPS()$/;"	f	class:TComPPS
TComPPS	TLibCommon/TComSlice.h	/^class TComPPS$/;"	c
TComPPSRExt	TLibCommon/TComSlice.cpp	/^TComPPSRExt::TComPPSRExt()$/;"	f	class:TComPPSRExt
TComPPSRExt	TLibCommon/TComSlice.h	/^class TComPPSRExt \/\/ Names aligned to text specification$/;"	c
TComPTL	TLibCommon/TComSlice.cpp	/^TComPTL::TComPTL()$/;"	f	class:TComPTL
TComPTL	TLibCommon/TComSlice.h	/^class TComPTL$/;"	c
TComPattern	TLibCommon/TComPattern.h	/^  TComPattern()$/;"	f	class:TComPattern
TComPattern	TLibCommon/TComPattern.h	/^class TComPattern$/;"	c
TComPic	TLibCommon/TComPic.cpp	/^TComPic::TComPic()$/;"	f	class:TComPic
TComPic	TLibCommon/TComPic.h	/^class TComPic$/;"	c
TComPicSym	TLibCommon/TComPicSym.cpp	/^TComPicSym::TComPicSym()$/;"	f	class:TComPicSym
TComPicSym	TLibCommon/TComPicSym.h	/^class TComPicSym$/;"	c
TComPicYuv	TLibCommon/TComPicYuv.cpp	/^TComPicYuv::TComPicYuv()$/;"	f	class:TComPicYuv
TComPicYuv	TLibCommon/TComPicYuv.h	/^class TComPicYuv$/;"	c
TComPictureHash	TLibCommon/TypeDef.h	/^struct TComPictureHash$/;"	s
TComPrediction	TLibCommon/TComPrediction.cpp	/^TComPrediction::TComPrediction()$/;"	f	class:TComPrediction
TComPrediction	TLibCommon/TComPrediction.h	/^class TComPrediction : public TComWeightPrediction$/;"	c
TComRPSList	TLibCommon/TComSlice.h	/^                                 TComRPSList()                                            { }$/;"	f	class:TComRPSList
TComRPSList	TLibCommon/TComSlice.h	/^class TComRPSList$/;"	c
TComRdCost	TLibCommon/TComRdCost.cpp	/^TComRdCost::TComRdCost()$/;"	f	class:TComRdCost
TComRdCost	TLibCommon/TComRdCost.h	/^class TComRdCost$/;"	c
TComRdCostWeightPrediction	TLibCommon/TComRdCostWeightPrediction.h	/^namespace TComRdCostWeightPrediction$/;"	n
TComRectangle	TLibCommon/TComRectangle.h	/^struct TComRectangle$/;"	s
TComRefPicListModification	TLibCommon/TComSlice.cpp	/^TComRefPicListModification::TComRefPicListModification()$/;"	f	class:TComRefPicListModification
TComRefPicListModification	TLibCommon/TComSlice.h	/^class TComRefPicListModification$/;"	c
TComReferencePictureSet	TLibCommon/TComSlice.cpp	/^TComReferencePictureSet::TComReferencePictureSet()$/;"	f	class:TComReferencePictureSet
TComReferencePictureSet	TLibCommon/TComSlice.h	/^class TComReferencePictureSet$/;"	c
TComSEIFisheyeVideoInfo	TLibCommon/TypeDef.h	/^  TComSEIFisheyeVideoInfo() : m_fisheyeCancelFlag(false), m_fisheyePersistenceFlag(false), m_fisheyeViewDimensionIdc(0), m_fisheyeActiveAreas() { }$/;"	f	struct:TComSEIFisheyeVideoInfo
TComSEIFisheyeVideoInfo	TLibCommon/TypeDef.h	/^struct TComSEIFisheyeVideoInfo$/;"	s
TComSEIMasteringDisplay	TLibCommon/TypeDef.h	/^struct TComSEIMasteringDisplay$/;"	s
TComSEITimeSet	TLibCommon/TypeDef.h	/^  TComSEITimeSet() : clockTimeStampFlag(false),$/;"	f	struct:TComSEITimeSet
TComSEITimeSet	TLibCommon/TypeDef.h	/^struct TComSEITimeSet$/;"	s
TComSPS	TLibCommon/TComSlice.cpp	/^TComSPS::TComSPS()$/;"	f	class:TComSPS
TComSPS	TLibCommon/TComSlice.h	/^class TComSPS$/;"	c
TComSPSRExt	TLibCommon/TComSlice.cpp	/^TComSPSRExt::TComSPSRExt()$/;"	f	class:TComSPSRExt
TComSPSRExt	TLibCommon/TComSlice.h	/^class TComSPSRExt \/\/ Names aligned to text specification$/;"	c
TComSampleAdaptiveOffset	TLibCommon/TComSampleAdaptiveOffset.cpp	/^TComSampleAdaptiveOffset::TComSampleAdaptiveOffset()$/;"	f	class:TComSampleAdaptiveOffset
TComSampleAdaptiveOffset	TLibCommon/TComSampleAdaptiveOffset.h	/^class TComSampleAdaptiveOffset$/;"	c
TComScalingList	TLibCommon/TComSlice.cpp	/^TComScalingList::TComScalingList()$/;"	f	class:TComScalingList
TComScalingList	TLibCommon/TComSlice.h	/^class TComScalingList$/;"	c
TComSlice	TLibCommon/TComSlice.cpp	/^TComSlice::TComSlice()$/;"	f	class:TComSlice
TComSlice	TLibCommon/TComSlice.h	/^class TComSlice$/;"	c
TComTU	TLibCommon/TComTU.cpp	/^TComTU::TComTU(TComDataCU *pcCU, const UInt absPartIdxCU, const UInt cuDepth, const UInt initTrDepthRelCU)$/;"	f	class:TComTU
TComTU	TLibCommon/TComTU.cpp	/^TComTU::TComTU(TComTU &parent, const Bool bProcessLastOfLevel, const TU_SPLIT_MODE splitMode, const Bool splitAtCurrentDepth, const ComponentID absPartIdxSourceComponent)$/;"	f	class:TComTU
TComTU	TLibCommon/TComTU.h	/^class TComTU$/;"	c
TComTURecurse	TLibCommon/TComTU.cpp	/^TComTURecurse::TComTURecurse(      TComDataCU *pcCU,$/;"	f	class:TComTURecurse
TComTURecurse	TLibCommon/TComTU.h	/^    TComTURecurse(      TComDataCU *pcCU,$/;"	f	class:TComTURecurse
TComTURecurse	TLibCommon/TComTU.h	/^    TComTURecurse(      TComTU        &parentLevel,                            \/\/Parent TU from which recursion children are derived$/;"	f	class:TComTURecurse
TComTURecurse	TLibCommon/TComTU.h	/^class TComTURecurse : public TComTU$/;"	c
TComTile	TLibCommon/TComPicSym.cpp	/^TComTile::TComTile()$/;"	f	class:TComTile
TComTile	TLibCommon/TComPicSym.h	/^class TComTile$/;"	c
TComTrQuant	TLibCommon/TComTrQuant.cpp	/^TComTrQuant::TComTrQuant()$/;"	f	class:TComTrQuant
TComTrQuant	TLibCommon/TComTrQuant.h	/^class TComTrQuant$/;"	c
TComVPS	TLibCommon/TComSlice.cpp	/^TComVPS::TComVPS()$/;"	f	class:TComVPS
TComVPS	TLibCommon/TComSlice.h	/^class TComVPS$/;"	c
TComVUI	TLibCommon/TComSlice.h	/^  TComVUI()$/;"	f	class:TComVUI
TComVUI	TLibCommon/TComSlice.h	/^class TComVUI$/;"	c
TComWeightPrediction	TLibCommon/TComWeightPrediction.cpp	/^TComWeightPrediction::TComWeightPrediction()$/;"	f	class:TComWeightPrediction
TComWeightPrediction	TLibCommon/TComWeightPrediction.h	/^class TComWeightPrediction$/;"	c
TComYuv	TLibCommon/TComYuv.cpp	/^TComYuv::TComYuv()$/;"	f	class:TComYuv
TComYuv	TLibCommon/TComYuv.h	/^class TComYuv$/;"	c
TDecBinCABAC	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::TDecBinCABAC()$/;"	f	class:TDecBinCABAC
TDecBinCABAC	TLibDecoder/TDecBinCoderCABAC.h	/^class TDecBinCABAC : public TDecBinIf$/;"	c
TDecBinIf	TLibDecoder/TDecBinCoder.h	/^class TDecBinIf$/;"	c
TDecCavlc	TLibDecoder/TDecCAVLC.cpp	/^TDecCavlc::TDecCavlc()$/;"	f	class:TDecCavlc
TDecCavlc	TLibDecoder/TDecCAVLC.h	/^class TDecCavlc : public SyntaxElementParser, public TDecEntropyIf$/;"	c
TDecConformanceCheck	TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::TDecConformanceCheck()$/;"	f	class:TDecConformanceCheck
TDecConformanceCheck	TLibDecoder/TDecConformance.h	/^class TDecConformanceCheck$/;"	c
TDecCu	TLibDecoder/TDecCu.cpp	/^TDecCu::TDecCu()$/;"	f	class:TDecCu
TDecCu	TLibDecoder/TDecCu.h	/^class TDecCu$/;"	c
TDecEntropy	TLibDecoder/TDecEntropy.h	/^class TDecEntropy$/;"	c
TDecEntropyIf	TLibDecoder/TDecEntropy.h	/^class TDecEntropyIf$/;"	c
TDecGop	TLibDecoder/TDecGop.cpp	/^TDecGop::TDecGop()$/;"	f	class:TDecGop
TDecGop	TLibDecoder/TDecGop.h	/^class TDecGop$/;"	c
TDecSbac	TLibDecoder/TDecSbac.cpp	/^TDecSbac::TDecSbac()$/;"	f	class:TDecSbac
TDecSbac	TLibDecoder/TDecSbac.h	/^class TDecSbac : public TDecEntropyIf$/;"	c
TDecSlice	TLibDecoder/TDecSlice.cpp	/^TDecSlice::TDecSlice()$/;"	f	class:TDecSlice
TDecSlice	TLibDecoder/TDecSlice.h	/^class TDecSlice$/;"	c
TDecTop	TLibDecoder/TDecTop.cpp	/^TDecTop::TDecTop()$/;"	f	class:TDecTop
TDecTop	TLibDecoder/TDecTop.h	/^class TDecTop$/;"	c
TEMPORAL_LEVEL0_INDEX	TLibCommon/SEI.h	/^    TEMPORAL_LEVEL0_INDEX                = 131,$/;"	e	enum:SEI::PayloadType
TEMP_MOTION_CONSTRAINED_TILE_SETS	TLibCommon/SEI.h	/^    TEMP_MOTION_CONSTRAINED_TILE_SETS    = 139,$/;"	e	enum:SEI::PayloadType
TEncAnalyze	TLibEncoder/TEncAnalyze.h	/^  TEncAnalyze() { clear(); }$/;"	f	class:TEncAnalyze
TEncAnalyze	TLibEncoder/TEncAnalyze.h	/^class TEncAnalyze$/;"	c
TEncBinCABAC	TLibEncoder/TEncBinCoderCABAC.cpp	/^TEncBinCABAC::TEncBinCABAC()$/;"	f	class:TEncBinCABAC
TEncBinCABAC	TLibEncoder/TEncBinCoderCABAC.h	/^class TEncBinCABAC : public TEncBinIf$/;"	c
TEncBinCABACCounter	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^TEncBinCABACCounter::TEncBinCABACCounter()$/;"	f	class:TEncBinCABACCounter
TEncBinCABACCounter	TLibEncoder/TEncBinCoderCABACCounter.h	/^class TEncBinCABACCounter : public TEncBinCABAC$/;"	c
TEncBinIf	TLibEncoder/TEncBinCoder.h	/^class TEncBinIf$/;"	c
TEncCavlc	TLibEncoder/TEncCavlc.cpp	/^TEncCavlc::TEncCavlc()$/;"	f	class:TEncCavlc
TEncCavlc	TLibEncoder/TEncCavlc.h	/^class TEncCavlc : public SyntaxElementWriter, public TEncEntropyIf$/;"	c
TEncCfg	TLibEncoder/TEncCfg.h	/^  TEncCfg()$/;"	f	class:TEncCfg
TEncCfg	TLibEncoder/TEncCfg.h	/^class TEncCfg$/;"	c
TEncCu	TLibEncoder/TEncCu.h	/^class TEncCu$/;"	c
TEncEntropy	TLibEncoder/TEncEntropy.h	/^class TEncEntropy$/;"	c
TEncEntropyIf	TLibEncoder/TEncEntropy.h	/^class TEncEntropyIf$/;"	c
TEncGOP	TLibEncoder/TEncGOP.cpp	/^TEncGOP::TEncGOP()$/;"	f	class:TEncGOP
TEncGOP	TLibEncoder/TEncGOP.h	/^class TEncGOP$/;"	c
TEncPic	TLibEncoder/TEncPic.cpp	/^TEncPic::TEncPic()$/;"	f	class:TEncPic
TEncPic	TLibEncoder/TEncPic.h	/^class TEncPic : public TComPic$/;"	c
TEncPicQPAdaptationLayer	TLibEncoder/TEncPic.cpp	/^TEncPicQPAdaptationLayer::TEncPicQPAdaptationLayer()$/;"	f	class:TEncPicQPAdaptationLayer
TEncPicQPAdaptationLayer	TLibEncoder/TEncPic.h	/^class TEncPicQPAdaptationLayer$/;"	c
TEncPreanalyzer	TLibEncoder/TEncPreanalyzer.cpp	/^TEncPreanalyzer::TEncPreanalyzer()$/;"	f	class:TEncPreanalyzer
TEncPreanalyzer	TLibEncoder/TEncPreanalyzer.h	/^class TEncPreanalyzer$/;"	c
TEncQPAdaptationUnit	TLibEncoder/TEncPic.cpp	/^TEncQPAdaptationUnit::TEncQPAdaptationUnit()$/;"	f	class:TEncQPAdaptationUnit
TEncQPAdaptationUnit	TLibEncoder/TEncPic.h	/^class TEncQPAdaptationUnit$/;"	c
TEncRCGOP	TLibEncoder/TEncRateCtrl.cpp	/^TEncRCGOP::TEncRCGOP()$/;"	f	class:TEncRCGOP
TEncRCGOP	TLibEncoder/TEncRateCtrl.h	/^class TEncRCGOP$/;"	c
TEncRCPic	TLibEncoder/TEncRateCtrl.cpp	/^TEncRCPic::TEncRCPic()$/;"	f	class:TEncRCPic
TEncRCPic	TLibEncoder/TEncRateCtrl.h	/^class TEncRCPic$/;"	c
TEncRCSeq	TLibEncoder/TEncRateCtrl.cpp	/^TEncRCSeq::TEncRCSeq()$/;"	f	class:TEncRCSeq
TEncRCSeq	TLibEncoder/TEncRateCtrl.h	/^class TEncRCSeq$/;"	c
TEncRateCtrl	TLibEncoder/TEncRateCtrl.cpp	/^TEncRateCtrl::TEncRateCtrl()$/;"	f	class:TEncRateCtrl
TEncRateCtrl	TLibEncoder/TEncRateCtrl.h	/^class TEncRateCtrl$/;"	c
TEncSEIKneeFunctionInformation	TLibEncoder/TEncCfg.h	/^struct TEncSEIKneeFunctionInformation$/;"	s	class:TEncCfg
TEncSampleAdaptiveOffset	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^TEncSampleAdaptiveOffset::TEncSampleAdaptiveOffset()$/;"	f	class:TEncSampleAdaptiveOffset
TEncSampleAdaptiveOffset	TLibEncoder/TEncSampleAdaptiveOffset.h	/^class TEncSampleAdaptiveOffset : public TComSampleAdaptiveOffset$/;"	c
TEncSbac	TLibEncoder/TEncSbac.cpp	/^TEncSbac::TEncSbac()$/;"	f	class:TEncSbac
TEncSbac	TLibEncoder/TEncSbac.h	/^class TEncSbac : public TEncEntropyIf$/;"	c
TEncSearch	TLibEncoder/TEncSearch.cpp	/^TEncSearch::TEncSearch()$/;"	f	class:TEncSearch
TEncSearch	TLibEncoder/TEncSearch.h	/^class TEncSearch : public TComPrediction$/;"	c
TEncSlice	TLibEncoder/TEncSlice.cpp	/^TEncSlice::TEncSlice()$/;"	f	class:TEncSlice
TEncSlice	TLibEncoder/TEncSlice.h	/^class TEncSlice$/;"	c
TEncTemporalFilter	TLibEncoder/TEncTemporalFilter.cpp	/^TEncTemporalFilter::TEncTemporalFilter() :$/;"	f	class:TEncTemporalFilter
TEncTemporalFilter	TLibEncoder/TEncTemporalFilter.h	/^class TEncTemporalFilter$/;"	c
TEncTop	TLibEncoder/TEncTop.cpp	/^TEncTop::TEncTop() :$/;"	f	class:TEncTop
TEncTop	TLibEncoder/TEncTop.h	/^class TEncTop : public TEncCfg$/;"	c
TFilterCoeff	TLibCommon/TypeDef.h	/^typedef       Short           TFilterCoeff;      \/\/\/< filter coefficient$/;"	t
TIME_CODE	TLibCommon/SEI.h	/^    TIME_CODE                            = 136,$/;"	e	enum:SEI::PayloadType
TMatrixCoeff	TLibCommon/TypeDef.h	/^typedef       Int             TMatrixCoeff;      \/\/\/< transform matrix coefficient$/;"	t
TMatrixCoeff	TLibCommon/TypeDef.h	/^typedef       Short           TMatrixCoeff;      \/\/\/< transform matrix coefficient$/;"	t
TONE_MAPPING_INFO	TLibCommon/SEI.h	/^    TONE_MAPPING_INFO                    = 23,$/;"	e	enum:SEI::PayloadType
TRANSFORM_FORWARD	TLibCommon/TypeDef.h	/^  TRANSFORM_FORWARD              = 0,$/;"	e	enum:TransformDirection
TRANSFORM_INVERSE	TLibCommon/TypeDef.h	/^  TRANSFORM_INVERSE              = 1,$/;"	e	enum:TransformDirection
TRANSFORM_NUMBER_OF_DIRECTIONS	TLibCommon/TypeDef.h	/^  TRANSFORM_NUMBER_OF_DIRECTIONS = 2$/;"	e	enum:TransformDirection
TRCLCU	TLibEncoder/TEncRateCtrl.h	/^struct TRCLCU$/;"	s
TRCParameter	TLibEncoder/TEncRateCtrl.h	/^struct TRCParameter$/;"	s
TRISTATE	TLibCommon/ProfileLevelTierFeatures.h	/^  typedef enum TRISTATE$/;"	g	struct:ProfileFeatures
TRISTATE	TLibCommon/ProfileLevelTierFeatures.h	/^  } TRISTATE;$/;"	t	struct:ProfileFeatures	typeref:enum:ProfileFeatures::TRISTATE
TRISTATE	TLibDecoder/TDecConformance.h	/^typedef enum TRISTATE$/;"	g
TRISTATE	TLibDecoder/TDecConformance.h	/^} TRISTATE;$/;"	t	typeref:enum:TRISTATE
TUCompRectHasAssociatedTransformSkipFlag	TLibCommon/TComChromaFormat.h	/^static inline Bool TUCompRectHasAssociatedTransformSkipFlag(const TComRectangle &rectSamples, const UInt transformSkipLog2MaxSize)$/;"	f
TUEntropyCodingParameters	TLibCommon/TypeDef.h	/^struct TUEntropyCodingParameters$/;"	s
TU_SPLIT_MODE	TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	g	class:TComTU
TVideoIOYuv	Utilities/TVideoIOYuv.h	/^  TVideoIOYuv()           {}$/;"	f	class:TVideoIOYuv
TVideoIOYuv	Utilities/TVideoIOYuv.h	/^class TVideoIOYuv$/;"	c
TemporalFilterSourcePicInfo	TLibEncoder/TEncTemporalFilter.h	/^  TemporalFilterSourcePicInfo() : picBuffer(), mvs(), origOffset(0) { }$/;"	f	struct:TemporalFilterSourcePicInfo
TemporalFilterSourcePicInfo	TLibEncoder/TEncTemporalFilter.h	/^struct TemporalFilterSourcePicInfo$/;"	s
Tier	TLibCommon/TypeDef.h	/^  enum Tier$/;"	g	namespace:Level
TileSetData	TLibCommon/SEI.h	/^  class TileSetData$/;"	c	class:SEITempMotionConstrainedTileSets
TimingInfo	TLibCommon/TComSlice.h	/^  TimingInfo()$/;"	f	class:TimingInfo
TimingInfo	TLibCommon/TComSlice.h	/^class TimingInfo$/;"	c
TransformDirection	TLibCommon/TypeDef.h	/^enum TransformDirection$/;"	g
UChar	TLibCommon/TypeDef.h	/^typedef       unsigned char       UChar; \/\/ Unsigned 8-bit values$/;"	t
UInt	TLibCommon/TypeDef.h	/^typedef       unsigned int        UInt;$/;"	t
UInt64	TLibCommon/TypeDef.h	/^typedef       __int64             UInt64;   \/\/ MS VC6 does not support unsigned __int64 to double conversion$/;"	t
UInt64	TLibCommon/TypeDef.h	/^typedef       unsigned __int64    UInt64;$/;"	t
UInt64	TLibCommon/TypeDef.h	/^typedef       unsigned long long  UInt64;$/;"	t
USER_DATA_REGISTERED_ITU_T_T35	TLibCommon/SEI.h	/^    USER_DATA_REGISTERED_ITU_T_T35       = 4,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
USER_DATA_UNREGISTERED	TLibCommon/SEI.h	/^    USER_DATA_UNREGISTERED               = 5,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
UShort	TLibCommon/TypeDef.h	/^typedef       unsigned short      UShort;$/;"	t
UpdateCABACStat	TLibCommon/TComCodingStatistics.h	/^    static Void UpdateCABACStat(const TComCodingStatisticsClassType &stat, UInt uiRangeBefore, UInt uiRangeAfter, Int val)$/;"	f	class:TComCodingStatistics
UseDPCMForFirstPassIntraEstimation	TLibCommon/TComPrediction.cpp	/^Bool TComPrediction::UseDPCMForFirstPassIntraEstimation(TComTU &rTu, const UInt uiDirMode)$/;"	f	class:TComPrediction
VECTOR_CODING__DISTORTION_CALCULATIONS	TLibCommon/TypeDef.h	139;"	d
VECTOR_CODING__DISTORTION_CALCULATIONS	TLibCommon/TypeDef.h	142;"	d
VECTOR_CODING__INTERPOLATION_FILTER	TLibCommon/TypeDef.h	138;"	d
VECTOR_CODING__INTERPOLATION_FILTER	TLibCommon/TypeDef.h	141;"	d
VERTICAL_SPLIT	TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
VER_IDX	TLibCommon/CommonDef.h	/^static const Int VER_IDX =                                         26; \/\/\/< index for intra VERTICAL   mode$/;"	v
Void	TLibCommon/TypeDef.h	/^typedef       void                Void;$/;"	t
WCGChromaQPControl	TLibCommon/TypeDef.h	/^struct WCGChromaQPControl$/;"	s
WEIGHT_PRED_SAD_RELATIVE_TO_NON_WEIGHT_PRED_SAD	TLibEncoder/WeightPredAnalysis.cpp	/^static const Double WEIGHT_PRED_SAD_RELATIVE_TO_NON_WEIGHT_PRED_SAD=0.99; \/\/ NOTE: U0040 used 0.95$/;"	v	file:
WPACDCParam	TLibCommon/TComSlice.h	/^struct WPACDCParam$/;"	s
WPScalingParam	TLibCommon/TComSlice.h	/^struct WPScalingParam$/;"	s
WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT	TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT                           =2,$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING	TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING              =3,$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING_AND_EXTENSION	TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING_AND_EXTENSION=4$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_SIMPLE_DC_COMBINED_COMPONENT	TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_SIMPLE_DC_COMBINED_COMPONENT                          =0,$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_SIMPLE_DC_PER_COMPONENT	TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_SIMPLE_DC_PER_COMPONENT                               =1,$/;"	e	enum:WeightedPredictionMethod
WRITE_CODE	TLibEncoder/SyntaxElementWriter.h	54;"	d
WRITE_CODE	TLibEncoder/SyntaxElementWriter.h	61;"	d
WRITE_FLAG	TLibEncoder/SyntaxElementWriter.h	57;"	d
WRITE_FLAG	TLibEncoder/SyntaxElementWriter.h	64;"	d
WRITE_SCODE	TLibEncoder/SyntaxElementWriter.h	53;"	d
WRITE_SCODE	TLibEncoder/SyntaxElementWriter.h	60;"	d
WRITE_SVLC	TLibEncoder/SyntaxElementWriter.h	56;"	d
WRITE_SVLC	TLibEncoder/SyntaxElementWriter.h	63;"	d
WRITE_UVLC	TLibEncoder/SyntaxElementWriter.h	55;"	d
WRITE_UVLC	TLibEncoder/SyntaxElementWriter.h	62;"	d
WeightPredAnalysis	TLibEncoder/WeightPredAnalysis.cpp	/^WeightPredAnalysis::WeightPredAnalysis()$/;"	f	class:WeightPredAnalysis
WeightPredAnalysis	TLibEncoder/WeightPredAnalysis.h	/^class  WeightPredAnalysis$/;"	c
WeightedPredictionMethod	TLibCommon/TypeDef.h	/^enum WeightedPredictionMethod$/;"	g
Window	TLibCommon/TypeDef.h	/^  Window()$/;"	f	class:Window
Window	TLibCommon/TypeDef.h	/^class Window$/;"	c
_AMVPInfo	TLibCommon/TComMotionInfo.h	/^typedef struct _AMVPInfo$/;"	s
_LFCUParam	TLibCommon/TypeDef.h	/^typedef struct _LFCUParam$/;"	s
__ACCESSUNIT__	TLibCommon/AccessUnit.h	42;"	d
__ANNEXBREAD__	TLibDecoder/AnnexBread.h	42;"	d
__ANNEXBWRITE__	TLibEncoder/AnnexBwrite.h	37;"	d
__COMMONDEF__	TLibCommon/CommonDef.h	39;"	d
__CONTEXTMODEL3DBUFFER__	TLibCommon/ContextModel3DBuffer.h	39;"	d
__CONTEXTMODEL__	TLibCommon/ContextModel.h	40;"	d
__CONTEXTTABLES__	TLibCommon/ContextTables.h	40;"	d
__DEBUG__	TLibCommon/Debug.h	39;"	d
__NALREAD__	TLibDecoder/NALread.h	42;"	d
__NALWRITE__	TLibEncoder/NALwrite.h	37;"	d
__NAL__	TLibCommon/NAL.h	37;"	d
__PROFILELEVELTIERFEATURES__	TLibCommon/ProfileLevelTierFeatures.h	39;"	d
__PROGRAM_OPTIONS_LITE__	Utilities/program_options_lite.h	40;"	d
__SEIENCODER__	TLibEncoder/SEIEncoder.h	37;"	d
__SEIFILMGRAINSYNTHESIZER__	TLibCommon/SEIFilmGrainSynthesizer.h	40;"	d
__SEIREAD__	TLibDecoder/SEIread.h	40;"	d
__SEIWRITE__	TLibEncoder/SEIwrite.h	37;"	d
__SEI__	TLibCommon/SEI.h	35;"	d
__SYNTAXELEMENTPARSER__	TLibDecoder/SyntaxElementParser.h	39;"	d
__SYNTAXELEMENTWRITER__	TLibEncoder/SyntaxElementWriter.h	39;"	d
__TCOMBITCOUNTER__	TLibCommon/TComBitCounter.h	39;"	d
__TCOMBITSTREAM__	TLibCommon/TComBitStream.h	39;"	d
__TCOMCABACTABLES__	TLibCommon/TComCABACTables.h	39;"	d
__TCOMCHROMAFORMAT__	TLibCommon/TComChromaFormat.h	35;"	d
__TCOMCODINGSTATISTICS__	TLibCommon/TComCodingStatistics.h	35;"	d
__TCOMDATACU__	TLibCommon/TComDataCU.h	40;"	d
__TCOMINTERPOLATIONFILTER__	TLibCommon/TComInterpolationFilter.h	40;"	d
__TCOMLIST__	TLibCommon/TComList.h	39;"	d
__TCOMLOOPFILTER__	TLibCommon/TComLoopFilter.h	39;"	d
__TCOMMOTIONINFO__	TLibCommon/TComMotionInfo.h	40;"	d
__TCOMMV__	TLibCommon/TComMv.h	39;"	d
__TCOMPATTERN__	TLibCommon/TComPattern.h	39;"	d
__TCOMPICSYM__	TLibCommon/TComPicSym.h	39;"	d
__TCOMPICYUV__	TLibCommon/TComPicYuv.h	39;"	d
__TCOMPIC__	TLibCommon/TComPic.h	39;"	d
__TCOMPREDICTION__	TLibCommon/TComPrediction.h	39;"	d
__TCOMRDCOSTWEIGHTPREDICTION__	TLibCommon/TComRdCostWeightPrediction.h	39;"	d
__TCOMRDCOST__	TLibCommon/TComRdCost.h	39;"	d
__TCOMRECTANGLE__	TLibCommon/TComRectangle.h	36;"	d
__TCOMROM__	TLibCommon/TComRom.h	39;"	d
__TCOMSAMPLEADAPTIVEOFFSET__	TLibCommon/TComSampleAdaptiveOffset.h	39;"	d
__TCOMSLICE__	TLibCommon/TComSlice.h	39;"	d
__TCOMTRQUANT__	TLibCommon/TComTrQuant.h	39;"	d
__TCOMTU__	TLibCommon/TComTU.h	35;"	d
__TCOMWEIGHTPREDICTION__	TLibCommon/TComWeightPrediction.h	39;"	d
__TCOMYUV__	TLibCommon/TComYuv.h	41;"	d
__TDECBINCODERCABAC__	TLibDecoder/TDecBinCoderCABAC.h	39;"	d
__TDECBINCODER__	TLibDecoder/TDecBinCoder.h	39;"	d
__TDECCAVLC__	TLibDecoder/TDecCAVLC.h	39;"	d
__TDECCONFORMANCE__	TLibDecoder/TDecConformance.h	39;"	d
__TDECCU__	TLibDecoder/TDecCu.h	39;"	d
__TDECENTROPY__	TLibDecoder/TDecEntropy.h	39;"	d
__TDECGOP__	TLibDecoder/TDecGop.h	39;"	d
__TDECSBAC__	TLibDecoder/TDecSbac.h	39;"	d
__TDECSLICE__	TLibDecoder/TDecSlice.h	39;"	d
__TDECTOP__	TLibDecoder/TDecTop.h	39;"	d
__TEMPORAL_FILTER__	TLibEncoder/TEncTemporalFilter.h	39;"	d
__TENCANALYZE__	TLibEncoder/TEncAnalyze.h	39;"	d
__TENCBINCODERCABACCOUNTER__	TLibEncoder/TEncBinCoderCABACCounter.h	39;"	d
__TENCBINCODERCABAC__	TLibEncoder/TEncBinCoderCABAC.h	39;"	d
__TENCBINCODER__	TLibEncoder/TEncBinCoder.h	39;"	d
__TENCCAVLC__	TLibEncoder/TEncCavlc.h	39;"	d
__TENCCFG__	TLibEncoder/TEncCfg.h	39;"	d
__TENCCU__	TLibEncoder/TEncCu.h	39;"	d
__TENCENTROPY__	TLibEncoder/TEncEntropy.h	39;"	d
__TENCGOP__	TLibEncoder/TEncGOP.h	39;"	d
__TENCPIC__	TLibEncoder/TEncPic.h	39;"	d
__TENCPREANALYZER__	TLibEncoder/TEncPreanalyzer.h	39;"	d
__TENCRATECTRL__	TLibEncoder/TEncRateCtrl.h	39;"	d
__TENCSAMPLEADAPTIVEOFFSET__	TLibEncoder/TEncSampleAdaptiveOffset.h	40;"	d
__TENCSBAC__	TLibEncoder/TEncSbac.h	39;"	d
__TENCSEARCH__	TLibEncoder/TEncSearch.h	39;"	d
__TENCSLICE__	TLibEncoder/TEncSlice.h	39;"	d
__TENCTOP__	TLibEncoder/TEncTop.h	39;"	d
__TVIDEOIOYUV__	Utilities/TVideoIOYuv.h	39;"	d
__TYPEDEF__	TLibCommon/TypeDef.h	39;"	d
__WEIGHTPREDANALYSIS__	TLibEncoder/WeightPredAnalysis.h	38;"	d
_byteStreamNALUnit	TLibDecoder/AnnexBread.cpp	/^_byteStreamNALUnit($/;"	f	file:
_context_md5_t	libmd5/libmd5.h	/^typedef struct _context_md5_t {$/;"	s
abs	TLibCommon/CommonDef.h	/^inline Int64 abs (Int64 x) { return _abs64(x); };$/;"	f
accumBitsDU	TLibEncoder/TEncGOP.h	/^    Int accumBitsDU;$/;"	m	class:TEncGOP::DUData
accumNalsDU	TLibEncoder/TEncGOP.h	/^    Int accumNalsDU;$/;"	m	class:TEncGOP::DUData
activate	TLibCommon/ProfileLevelTierFeatures.cpp	/^ProfileLevelTierFeatures::activate(const Profile::Name profileIdc,$/;"	f	class:ProfileLevelTierFeatures
activate	TLibCommon/ProfileLevelTierFeatures.cpp	/^ProfileLevelTierFeatures::activate(const TComSPS &sps)$/;"	f	class:ProfileLevelTierFeatures
activate	TLibDecoder/TDecConformance.cpp	/^ProfileLevelTierFeatures::activate(const TComSPS &sps)$/;"	f	class:ProfileLevelTierFeatures
activatePPS	TLibCommon/TComSlice.cpp	/^Bool ParameterSetManager::activatePPS(Int ppsId, Bool isIRAP)$/;"	f	class:ParameterSetManager
activeSeqParameterSetId	TLibCommon/SEI.h	/^  std::vector<Int> activeSeqParameterSetId;$/;"	m	class:SEIActiveParameterSets
activeVPSId	TLibCommon/SEI.h	/^  Int activeVPSId;$/;"	m	class:SEIActiveParameterSets
addAvg	TLibCommon/TComYuv.cpp	/^Void TComYuv::addAvg( const TComYuv* pcYuvSrc0, const TComYuv* pcYuvSrc1, const UInt iPartUnitIdx, const UInt uiWidth, const UInt uiHeight, const BitDepths &clipBitDepths )$/;"	f	class:TComYuv
addClip	TLibCommon/TComYuv.cpp	/^Void TComYuv::addClip( const TComYuv* pcYuvSrc0, const TComYuv* pcYuvSrc1, const UInt uiTrUnitIdx, const UInt uiPartSize, const BitDepths &clipBitDepths )$/;"	f	class:TComYuv
addOption	Utilities/program_options_lite.cpp	/^    void Options::addOption(OptionBase *opt)$/;"	f	class:df::program_options_lite::Options
addOptions	Utilities/program_options_lite.cpp	/^    OptionSpecific Options::addOptions()$/;"	f	class:df::program_options_lite::Options
addPreDBFStatistics	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::addPreDBFStatistics(SAOStatData*** blkStats)$/;"	f	class:TEncSampleAdaptiveOffset
addRegion	TLibCommon/SEI.h	/^  Void addRegion(RNSEIWindow *regn) { m_regions.push_back(*regn); }$/;"	f	class:SEIRegionalNesting
addRegionalSEI	TLibCommon/SEI.cpp	/^Void SEIRegionalNesting::addRegionalSEI(RegionalSEI *regSEI)$/;"	f	class:SEIRegionalNesting
addRegionalSEI	TLibCommon/SEI.h	/^  Void addRegionalSEI(SEIListOfIndices const &seiWithListOfRegionIndices) $/;"	f	class:SEIRegionalNesting
addRegions	TLibCommon/SEI.h	/^  Void addRegions(RNSEIWindowVec const &regions) { m_regions.insert(m_regions.end(), regions.begin(), regions.end()); }$/;"	f	class:RegionalSEI
addResult	TLibEncoder/TEncAnalyze.h	/^  Void  addResult( const ResultData &result)$/;"	f	class:TEncAnalyze
addSubstream	TLibCommon/TComBitStream.cpp	/^Void   TComOutputBitstream::addSubstream( TComOutputBitstream* pcSubstream )$/;"	f	class:TComOutputBitstream
addSubstreamSize	TLibCommon/TComSlice.h	/^  Void                        addSubstreamSize( UInt size )                          { m_substreamSizes.push_back(size);                             }$/;"	f	class:TComSlice
addToPictureLsit	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::addToPictureLsit( list<TEncRCPic*>& listPreviousPictures )$/;"	f	class:TEncRCPic
addWeightBi	TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::addWeightBi( const TComYuv              *pcYuvSrc0,$/;"	f	class:TComWeightPrediction
addWeightUni	TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::addWeightUni( const TComYuv        *const pcYuvSrc0,$/;"	f	class:TComWeightPrediction
adjustGOPid	TLibEncoder/TEncGOP.cpp	/^Int EfficientFieldIRAPMapping::adjustGOPid(const Int GOPid)$/;"	f	class:EfficientFieldIRAPMapping
align	TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::align()$/;"	f	class:TDecBinCABAC
align	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::align()$/;"	f	class:TEncBinCABAC
align	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::align()$/;"	f	class:TEncBinCABACCounter
allocate	TLibEncoder/TEncTemporalFilter.h	/^  Void allocate(UInt width, UInt height, const T& value=T())$/;"	f	struct:Array2D
allocateNewSlice	TLibCommon/TComPic.h	/^  Void          allocateNewSlice()           {m_picSym.allocateNewSlice();         }$/;"	f	class:TComPic
allocateNewSlice	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::allocateNewSlice()$/;"	f	class:TComPicSym
allocatePS	TLibCommon/TComSlice.h	/^  T *allocatePS(const Int psId)$/;"	f	class:ParameterSetMap
anticlockwiseRotation	TLibCommon/SEI.h	/^  UInt anticlockwiseRotation;$/;"	m	class:SEIDisplayOrientation
applyDeblockingFilterMetric	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::applyDeblockingFilterMetric( TComPic* pcPic, UInt uiNumSlices )$/;"	f	class:TEncGOP
applyDeblockingFilterParameterSelection	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::applyDeblockingFilterParameterSelection( TComPic* pcPic, const UInt numSlices, const Int gopID )$/;"	f	class:TEncGOP
applyForwardRDPCM	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::applyForwardRDPCM( TComTU& rTu, const ComponentID compID, Pel* pcResidual, const UInt uiStride, const QpParam& cQP, TCoeff* pcCoeff, TCoeff &uiAbsSum, const RDPCMMode mode )$/;"	f	class:TComTrQuant
applyMotion	TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::applyMotion(const Array2D<MotionVector> &mvs, const TComPicYuv &input, TComPicYuv &output) const$/;"	f	class:TEncTemporalFilter
applyReferencePictureSet	TLibCommon/TComSlice.cpp	/^Void TComSlice::applyReferencePictureSet( TComList<TComPic*>& rcListPic, const TComReferencePictureSet *pReferencePictureSet)$/;"	f	class:TComSlice
arg	Utilities/program_options_lite.h	/^      std::string arg;$/;"	m	struct:df::program_options_lite::ParseFailure
arrangeLongtermPicturesInRPS	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::arrangeLongtermPicturesInRPS(TComSlice *pcSlice, TComList<TComPic*>& rcListPic)$/;"	f	class:TEncGOP
azimuthCentre	TLibCommon/SEI.h	/^    Int  azimuthCentre;$/;"	m	struct:SEIOmniViewport::OmniViewport
b32	libmd5/libmd5.h	/^    uint32_t b32[16];$/;"	m	union:_context_md5_t::__anon1
b8	libmd5/libmd5.h	/^    unsigned char b8[64];$/;"	m	union:_context_md5_t::__anon1
bApplyWeight	TLibCommon/TComRdCost.h	/^  Bool                  bApplyWeight;     \/\/ whether weighted prediction is used or not$/;"	m	class:DistParam
bCanUseLevel8p5	TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     bCanUseLevel8p5;$/;"	m	struct:ProfileFeatures
bCanUseLevel8p5	TLibDecoder/TDecConformance.h	/^  Bool                     bCanUseLevel8p5;$/;"	m	struct:ProfileFeatures
bChanged	TLibCommon/TComSlice.h	/^    Bool                  bChanged;$/;"	m	struct:ParameterSetMap::MapData
bDebugPredEnabled	TLibDecoder/TDecEntropy.cpp	/^static const Bool bDebugPredEnabled = DebugOptionList::DebugPred.getInt()!=0;$/;"	v	file:
bDebugPredEnabled	TLibEncoder/TEncEntropy.cpp	/^static const Bool bDebugPredEnabled = DebugOptionList::DebugPred.getInt()!=0;$/;"	v	file:
bDebugRQT	TLibDecoder/TDecEntropy.cpp	/^static const Bool bDebugRQT = DebugOptionList::DebugRQT.getInt()!=0;$/;"	v	file:
bInternalEdge	TLibCommon/TypeDef.h	/^  Bool bInternalEdge;                     \/\/\/< indicates internal edge$/;"	m	struct:_LFCUParam
bIsBiPred	TLibCommon/TComRdCost.h	/^  Bool                  bIsBiPred;$/;"	m	class:DistParam
bLeftEdge	TLibCommon/TypeDef.h	/^  Bool bLeftEdge;                         \/\/\/< indicates left edge$/;"	m	struct:_LFCUParam
bPresentFlag	TLibCommon/SEI.h	/^    Bool  bPresentFlag;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModel
bPresentFlag	TLibCommon/TComSlice.h	/^  Bool bPresentFlag;$/;"	m	struct:WPScalingParam
bTopEdge	TLibCommon/TypeDef.h	/^  Bool bTopEdge;                          \/\/\/< indicates top edge$/;"	m	struct:_LFCUParam
bWavefrontsAndTilesCanBeUsedSimultaneously	TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     bWavefrontsAndTilesCanBeUsedSimultaneously;$/;"	m	struct:ProfileFeatures
bWavefrontsAndTilesCanBeUsedSimultaneously	TLibDecoder/TDecConformance.h	/^  Bool                     bWavefrontsAndTilesCanBeUsedSimultaneously;$/;"	m	struct:ProfileFeatures
bilateralFilter	TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::bilateralFilter(const TComPicYuv &orgPic,$/;"	f	class:TEncTemporalFilter
bitDepth	TLibCommon/TComRdCost.h	/^  Int                   bitDepth;$/;"	m	class:DistParam
bitRateValueMinus1	TLibCommon/TComSlice.h	/^  UInt bitRateValueMinus1[MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
bits	TLibCommon/TComCodingStatistics.h	/^      Int64 bits;$/;"	m	struct:TComCodingStatistics::SStat
bits	TLibEncoder/TEncAnalyze.h	/^    Double bits;$/;"	m	struct:TEncAnalyze::ResultData
bits	libmd5/libmd5.h	/^  uint32_t bits[2];$/;"	m	struct:_context_md5_t
bitwiseOrCbfPartRange	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::bitwiseOrCbfPartRange( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
blendStripe	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::blendStripe(Pel *decSampleOffsetY, int32_t *grainStripe,$/;"	f	class:SEIFilmGrainSynthesizer
blockAverage	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^Pel SEIFilmGrainSynthesizer::blockAverage(Pel *decSampleBlk8,$/;"	f	class:SEIFilmGrainSynthesizer
blockCbpBits	TLibCommon/TComTrQuant.h	/^  Int blockCbpBits[NUM_QT_CBF_CTX_SETS * NUM_QT_CBF_CTX_PER_SET][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon5
blockRootCbpBits	TLibCommon/TComTrQuant.h	/^  Int blockRootCbpBits[4][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon5
bottomOffset	TLibCommon/SEI.h	/^    Int bottomOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
bottomRightTileIndex	TLibCommon/SEI.h	/^            Int &bottomRightTileIndex(const Int tileRectIndex)       { return m_bottom_right_tile_index[tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
bottomRightTileIndex	TLibCommon/SEI.h	/^      const Int &bottomRightTileIndex(const Int tileRectIndex) const { return m_bottom_right_tile_index[tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
boundingBoxHeight	TLibCommon/SEI.h	/^    UInt boundingBoxHeight;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxLeft	TLibCommon/SEI.h	/^    UInt boundingBoxLeft;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxTop	TLibCommon/SEI.h	/^    UInt boundingBoxTop;         \/\/ only valid if bBoundingBoxValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxValid	TLibCommon/SEI.h	/^    Bool boundingBoxValid;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxWidth	TLibCommon/SEI.h	/^    UInt boundingBoxWidth;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
buf	libmd5/libmd5.h	/^  uint32_t buf[4];$/;"	m	struct:_context_md5_t
buildNextStateTable	TLibCommon/ContextModel.cpp	/^Void ContextModel::buildNextStateTable()$/;"	f	class:ContextModel
byteReverse	libmd5/libmd5.cpp	/^void byteReverse(uint32_t *buf, unsigned len)$/;"	f
byteReverse	libmd5/libmd5.cpp	26;"	d	file:
byteStreamNALUnit	TLibDecoder/AnnexBread.cpp	/^byteStreamNALUnit($/;"	f
cabacBypassAlignmentEnabledFlag	TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 cabacBypassAlignmentEnabledFlag;$/;"	m	struct:ProfileFeatures
cabacBypassAlignmentEnabledFlag	TLibDecoder/TDecConformance.h	/^  TRISTATE                 cabacBypassAlignmentEnabledFlag;$/;"	m	struct:ProfileFeatures
cabac_zero_word_padding	TLibEncoder/TEncGOP.cpp	/^cabac_zero_word_padding(TComSlice *const pcSlice, TComPic *const pcPic, const std::size_t binCountsInNalUnits, const std::size_t numBytesInVclNalUnits, std::ostringstream &nalUnitData, const Bool cabacZeroWordPaddingEnabled)$/;"	f	file:
calAverageLambda	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::calAverageLambda()$/;"	f	class:TEncRCPic
calAverageQP	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::calAverageQP()$/;"	f	class:TEncRCPic
calCostSliceI	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::calCostSliceI(TComPic* pcPic) \/\/ TODO: this only analyses the first slice segment. What about the others?$/;"	f	class:TEncSlice
calcAndPrintHashStatus	TLibDecoder/TDecGop.cpp	/^static Void calcAndPrintHashStatus(TComPicYuv& pic, const SEIDecodedPictureHash* pictureHashSEI, const BitDepths &bitDepths, UInt &numChecksumErrors)$/;"	f	file:
calcCRC	TLibCommon/TComPicYuvMD5.cpp	/^UInt calcCRC(const TComPicYuv& pic, TComPictureHash &digest, const BitDepths &bitDepths)$/;"	f
calcChecksum	TLibCommon/TComPicYuvMD5.cpp	/^UInt calcChecksum(const TComPicYuv& pic, TComPictureHash &digest, const BitDepths &bitDepths)$/;"	f
calcCost	TLibCommon/ContextModel3DBuffer.cpp	/^UInt ContextModel3DBuffer::calcCost( SliceType sliceType, Int qp, UChar* ctxModel )$/;"	f	class:ContextModel3DBuffer
calcHAD	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::calcHAD( Int bitDepth, const Pel* pi0, Int iStride0, const Pel* pi1, Int iStride1, Int iWidth, Int iHeight )$/;"	f	class:TComRdCost
calcMD5	TLibCommon/TComPicYuvMD5.cpp	/^UInt calcMD5(const TComPicYuv& pic, TComPictureHash &digest, const BitDepths &bitDepths)$/;"	f
calcPatternSigCtx	TLibCommon/TComTrQuant.cpp	/^Int  TComTrQuant::calcPatternSigCtx( const UInt* sigCoeffGroupFlag, UInt uiCGPosX, UInt uiCGPosY, UInt widthInGroups, UInt heightInGroups )$/;"	f	class:TComTrQuant
calcRdCost	TLibCommon/TComRdCost.cpp	/^Double TComRdCost::calcRdCost( Double numBits, Distortion distortion, DFunc eDFunc )$/;"	f	class:TComRdCost
calcScale	TLibEncoder/TEncTop.cpp	/^Int calcScale(Int x)$/;"	f
calculateBoundingCtuTsAddrForSlice	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::calculateBoundingCtuTsAddrForSlice(UInt &startCtuTSAddrSlice, UInt &boundingCtuTSAddrSlice, Bool &haveReachedTileBoundary,$/;"	f	class:TEncSlice
calculateCollocatedFromL0Flag	TLibEncoder/TEncGOP.cpp	/^static UInt calculateCollocatedFromL0Flag(const TComSlice *pSlice)$/;"	f	file:
calculateCombinedValues	TLibEncoder/TEncAnalyze.h	/^  Void calculateCombinedValues(const ChromaFormat chFmt, Double &PSNRyuv, Double &MSEyuv, const BitDepths &bitDepths)$/;"	f	class:TEncAnalyze
calculateLambda	TLibEncoder/TEncSlice.cpp	/^Double TEncSlice::calculateLambda( const TComSlice* slice,$/;"	f	class:TEncSlice
calculateLambdaIntra	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::calculateLambdaIntra(Double alpha, Double beta, Double MADPerPixel, Double bitsPerPixel)$/;"	f	class:TEncRCPic
calculateLumaDQP	TLibEncoder/TEncCu.cpp	/^Int TEncCu::calculateLumaDQP(TComDataCU *pCU, const UInt absPartIdx, const TComYuv * pOrgYuv)$/;"	f	class:TEncCu
calculateParameterSetChangedFlag	TLibCommon/TComSlice.cpp	/^Void calculateParameterSetChangedFlag(Bool &bChanged, const std::vector<UChar> *pOldData, const std::vector<UChar> *pNewData)$/;"	f
cancelFlag	TLibCommon/SEI.h	/^  Bool cancelFlag;$/;"	m	class:SEIDisplayOrientation
cbrFlag	TLibCommon/TComSlice.h	/^  Bool cbrFlag           [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
checkCRA	TLibCommon/TComSlice.cpp	/^Void TComSlice::checkCRA(const TComReferencePictureSet *pReferencePictureSet, Int& pocCRA, NalUnitType& associatedIRAPType, TComList<TComPic *>& rcListPic)$/;"	f	class:TComSlice
checkColRefIdx	TLibCommon/TComSlice.cpp	/^Void TComSlice::checkColRefIdx(UInt curSliceIdx, TComPic* pic)$/;"	f	class:TComSlice
checkCtuDecoding	TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::checkCtuDecoding(const UInt numUsedBits)$/;"	f	class:TDecConformanceCheck
checkCtuDecoding	TLibDecoder/TDecConformance.h	/^  checkCtuDecoding(const UInt numUsedBits) { }$/;"	f	class:TDecConformanceCheck
checkDcOfMatrix	TLibCommon/TComSlice.cpp	/^Void TComScalingList::checkDcOfMatrix()$/;"	f	class:TComScalingList
checkDefaultScalingList	TLibCommon/TComSlice.cpp	/^Bool TComScalingList::checkDefaultScalingList()$/;"	f	class:TComScalingList
checkLeadingPictureRestrictions	TLibCommon/TComSlice.cpp	/^Void TComSlice::checkLeadingPictureRestrictions(TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
checkMVPRange	TLibCommon/TComPrediction.cpp	/^Bool checkMVPRange(TComMv& cMv, UInt ctuLength, UInt tileXPosInCtus, UInt tileYPosInCtus, UInt tileWidthtInCtus, UInt tileHeightInCtus, Int PredXLeft, Int PredXRight, Int PredYTop, Int PredYBottom, ChromaFormat chromaFormat)$/;"	f
checkNoOutputPriorPics	TLibDecoder/TDecTop.cpp	/^Void TDecTop::checkNoOutputPriorPics (TComList<TComPic*>* pcListPic)$/;"	f	class:TDecTop
checkPPS	TLibDecoder/TDecConformance.cpp	/^checkPPS(const TComSPS &sps,$/;"	f	file:
checkPredMode	TLibCommon/TComSlice.cpp	/^Void TComScalingList::checkPredMode(UInt sizeId, UInt listId)$/;"	f	class:TComScalingList
checkRange	TLibDecoder/TDecConformance.h	/^  static Void checkRange(const T& , const TChar *, const T& , const T& ) { }$/;"	f	class:TDecConformanceCheck
checkRange	TLibDecoder/TDecConformance.h	/^  static Void checkRange(const T& val, const TChar *name, const T& minValInclusive, const T& maxValInclusive)$/;"	f	class:TDecConformanceCheck
checkRegionalNestedSEIPayloadType	TLibCommon/SEI.h	/^  static Bool checkRegionalNestedSEIPayloadType(SEI::PayloadType const payloadType)$/;"	f	class:RegionalSEI
checkSPS	TLibDecoder/TDecConformance.cpp	/^checkSPS(const TComSPS &sps,$/;"	f	file:
checkSameID	TLibCommon/TypeDef.h	/^  Bool checkSameID(RNSEIWindow const &rhs) const$/;"	f	class:RNSEIWindow
checkSameRegion	TLibCommon/TypeDef.h	/^  Bool checkSameRegion(RNSEIWindow const &rhs) const$/;"	f	class:RNSEIWindow
checkSliceActivation	TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::checkSliceActivation(const TComSlice &slice,$/;"	f	class:TDecConformanceCheck
checkSliceActivation	TLibDecoder/TDecConformance.h	/^  checkSliceActivation(const TComSlice &\/*slice*\/,$/;"	f	class:TDecConformanceCheck
checkTMctsMvp	TLibCommon/TComPrediction.cpp	/^Bool TComPrediction::checkTMctsMvp(TComDataCU* pcCU, Int partIdx)$/;"	f	class:TComPrediction
checkThatAllRefPicsAreAvailable	TLibCommon/TComSlice.cpp	/^Int TComSlice::checkThatAllRefPicsAreAvailable( TComList<TComPic*>& rcListPic, const TComReferencePictureSet *pReferencePictureSet, Bool printErrors, Int pocRandomAccess, Bool bUseRecoveryPoint)$/;"	f	class:TComSlice
checkTiles	TLibDecoder/TDecConformance.cpp	/^checkTiles(const TComSPS &sps,$/;"	f	file:
checkToolAvailability	TLibDecoder/TDecConformance.cpp	/^checkToolAvailability(const TComSPS &sps,$/;"	f	file:
chromaCbQpScale	TLibCommon/TypeDef.h	/^  Double chromaCbQpScale; \/\/\/< Chroma Cb QP Scale (1.0:default)$/;"	m	struct:WCGChromaQPControl
chromaCrQpScale	TLibCommon/TypeDef.h	/^  Double chromaCrQpScale; \/\/\/< Chroma Cr QP Scale (1.0:default)$/;"	m	struct:WCGChromaQPControl
chromaFormatValid	TLibCommon/ProfileLevelTierFeatures.h	/^  Bool chromaFormatValid(ChromaFormat chFmt) const { return (profile == Profile::MAINREXT || profile == Profile::HIGHTHROUGHPUTREXT) ? chFmt<=maxChromaFormat : (chFmt == maxChromaFormat ); }$/;"	f	struct:ProfileFeatures
chromaFormatValid	TLibDecoder/TDecConformance.h	/^  Bool chromaFormatValid(ChromaFormat chFmt) const { return (profile == Profile::MAINREXT || profile == Profile::HIGHTHROUGHPUTREXT) ? chFmt<=maxChromaFormat : (chFmt == maxChromaFormat ); }$/;"	f	struct:ProfileFeatures
chromaQPMappingTableSize	TLibCommon/TComRom.h	/^static const Int chromaQPMappingTableSize = 58;$/;"	v
chromaQpOffset	TLibCommon/TypeDef.h	/^  Double chromaQpOffset;  \/\/\/< Chroma QP Offset (0.0:default)$/;"	m	struct:WCGChromaQPControl
chromaQpOffsetListEnabledFlag	TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 chromaQpOffsetListEnabledFlag;$/;"	m	struct:ProfileFeatures
chromaQpOffsetListEnabledFlag	TLibDecoder/TDecConformance.h	/^  TRISTATE                 chromaQpOffsetListEnabledFlag;$/;"	m	struct:ProfileFeatures
chromaQpScale	TLibCommon/TypeDef.h	/^  Double chromaQpScale;   \/\/\/< Chroma QP Scale (0.0:default)$/;"	m	struct:WCGChromaQPControl
clear	TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::clear()$/;"	f	class:TComOutputBitstream
clear	TLibCommon/TComCodingStatistics.h	/^      Void clear() { bits=0; count=0; sum=0; }$/;"	f	struct:TComCodingStatistics::SStat
clear	TLibCommon/TComYuv.cpp	/^Void TComYuv::clear()$/;"	f	class:TComYuv
clear	TLibEncoder/TEncAnalyze.h	/^  Void    clear()$/;"	f	class:TEncAnalyze
clearCbf	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::clearCbf( UInt uiIdx, ComponentID compID, UInt uiNumParts )$/;"	f	class:TComDataCU
clearChangedFlag	TLibCommon/TComSlice.h	/^  Void clearChangedFlag(Int psId)$/;"	f	class:ParameterSetMap
clearChromaQpOffsetList	TLibCommon/TComSlice.h	/^  Void                   clearChromaQpOffsetList()                                        { m_chromaQpOffsetListLen = 0;                    }$/;"	f	class:TComPPSRExt
clearEmulationPreventionByteLocation	TLibCommon/TComBitStream.h	/^  Void      clearEmulationPreventionByteLocation()                                   { m_emulationPreventionByteLocation.clear();          }$/;"	f	class:TComInputBitstream
clearMvField	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::clearMvField()$/;"	f	class:TComCUMvField
clearPPSChangedFlag	TLibCommon/TComSlice.h	/^  Void           clearPPSChangedFlag(Int ppsId)                              { m_ppsMap.clearChangedFlag(ppsId); }$/;"	f	class:ParameterSetManager
clearRegions	TLibCommon/SEI.h	/^  Void clearRegions() { m_regions.clear(); }$/;"	f	class:SEIRegionalNesting
clearSPSChangedFlag	TLibCommon/TComSlice.h	/^  Void           clearSPSChangedFlag(Int spsId)                              { m_spsMap.clearChangedFlag(spsId); }$/;"	f	class:ParameterSetManager
clearSliceARLCnt	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::clearSliceARLCnt()$/;"	f	class:TComTrQuant
clearSliceBuffer	TLibCommon/TComPic.h	/^  Void          clearSliceBuffer()           {m_picSym.clearSliceBuffer();         }$/;"	f	class:TComPic
clearSliceBuffer	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::clearSliceBuffer()$/;"	f	class:TComPicSym
clearSubstreamSizes	TLibCommon/TComSlice.h	/^  Void                        clearSubstreamSizes( )                                 { return m_substreamSizes.clear();                              }$/;"	f	class:TComSlice
clearVPSChangedFlag	TLibCommon/TComSlice.h	/^  Void           clearVPSChangedFlag(Int vpsId)                              { m_vpsMap.clearChangedFlag(vpsId); }$/;"	f	class:ParameterSetManager
clipMv	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::clipMv    (TComMv&  rcMv) const$/;"	f	class:TComDataCU
clockTimeStampFlag	TLibCommon/TypeDef.h	/^  Bool clockTimeStampFlag;$/;"	m	struct:TComSEITimeSet
close	Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::close()$/;"	f	class:TVideoIOYuv
cntDroppedFlag	TLibCommon/TypeDef.h	/^  Bool cntDroppedFlag;$/;"	m	struct:TComSEITimeSet
codeAUD	TLibEncoder/TEncCavlc.cpp	/^Void AUDWriter::codeAUD(TComBitIf& bs, const Int pictureType)$/;"	f	class:AUDWriter
codeAlfCtrlFlag	TLibEncoder/TEncCavlc.h	/^  Void codeAlfCtrlFlag   ( ComponentID \/*component*\/, UInt \/*code*\/ ) {printf("Not supported\\n"); assert(0);}$/;"	f	class:TEncCavlc
codeCUTransquantBypassFlag	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeCUTransquantBypassFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeCUTransquantBypassFlag	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeChromaQpAdjustment	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeChromaQpAdjustment( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeChromaQpAdjustment	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx )$/;"	f	class:TEncSbac
codeCoeffNxN	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeCoeffNxN    ( TComTU& \/*rTu*\/, TCoeff* \/*pcCoef*\/, const ComponentID \/*compID*\/ )$/;"	f	class:TEncCavlc
codeCoeffNxN	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeCoeffNxN( TComTU &rTu, TCoeff* pcCoef, const ComponentID compID )$/;"	f	class:TEncSbac
codeCrossComponentPrediction	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeCrossComponentPrediction( TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TEncCavlc
codeCrossComponentPrediction	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TEncSbac
codeDeltaQP	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncCavlc
codeDeltaQP	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeExplicitRdpcmMode	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeExplicitRdpcmMode( TComTU& \/*rTu*\/, const ComponentID \/*compID*\/ )$/;"	f	class:TEncCavlc
codeExplicitRdpcmMode	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeExplicitRdpcmMode( TComTU &rTu, const ComponentID compID )$/;"	f	class:TEncSbac
codeHrdParameters	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeHrdParameters( const TComHRD *hrd, Bool commonInfPresentFlag, UInt maxNumSubLayersMinus1 )$/;"	f	class:TEncCavlc
codeIPCMInfo	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeIPCMInfo( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeIPCMInfo	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeInterDir	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeInterDir( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeInterDir	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeInterDir( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeInterModeFlag	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeInterModeFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/, UInt \/*uiEncMode*\/ )$/;"	f	class:TEncCavlc
codeIntraDirChroma	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeIntraDirChroma( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeIntraDirChroma	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeIntraDirChroma( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeIntraDirLumaAng	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeIntraDirLumaAng( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, Bool \/*isMultiple*\/)$/;"	f	class:TEncCavlc
codeIntraDirLumaAng	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeIntraDirLumaAng( TComDataCU* pcCU, UInt absPartIdx, Bool isMultiple)$/;"	f	class:TEncSbac
codeLastSignificantXY	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeLastSignificantXY( UInt uiPosX, UInt uiPosY, Int width, Int height, ComponentID component, UInt uiScanIdx )$/;"	f	class:TEncSbac
codeMVPIdx	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMVPIdx ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TEncCavlc
codeMVPIdx	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMVPIdx ( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncSbac
codeMergeFlag	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMergeFlag    ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeMergeFlag	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMergeFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeMergeIndex	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMergeIndex    ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeMergeIndex	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMergeIndex( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeMvd	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMvd( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TEncCavlc
codeMvd	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMvd( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncSbac
codePPS	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePPS( const TComPPS* pcPPS )$/;"	f	class:TEncCavlc
codePPS	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codePPS( const TComPPS* \/*pcPPS*\/ )$/;"	f	class:TEncSbac
codePTL	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePTL( const TComPTL* pcPTL, Bool profilePresentFlag, Int maxNumSubLayersMinus1)$/;"	f	class:TEncCavlc
codePartSize	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePartSize( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TEncCavlc
codePartSize	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TEncSbac
codePredMode	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePredMode( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codePredMode	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeProfileTier	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeProfileTier( const ProfileTierLevel* ptl, const Bool bIsSubLayer )$/;"	f	class:TEncCavlc
codeQtCbf	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtCbf( TComTU& \/*rTu*\/, const ComponentID \/*compID*\/, const Bool \/*lowestLevel*\/ )$/;"	f	class:TEncCavlc
codeQtCbf	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TEncSbac
codeQtCbfZero	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtCbfZero( TComTU& \/*rTu*\/, const ChannelType \/*chType*\/ )$/;"	f	class:TEncCavlc
codeQtCbfZero	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtCbfZero( TComTU & rTu, const ChannelType chType )$/;"	f	class:TEncSbac
codeQtRootCbf	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtRootCbf( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeQtRootCbf	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtRootCbf( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeQtRootCbfZero	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtRootCbfZero( )$/;"	f	class:TEncCavlc
codeQtRootCbfZero	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtRootCbfZero( )$/;"	f	class:TEncSbac
codeRefFrmIdx	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeRefFrmIdx( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TEncCavlc
codeRefFrmIdx	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeRefFrmIdx( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncSbac
codeSAOBlkParam	TLibEncoder/TEncCavlc.h	/^  Void codeSAOBlkParam(SAOBlkParam& \/*saoBlkParam*\/, const BitDepths& \/*bitDepths*\/, Bool* \/*sliceEnabled*\/, Bool \/*leftMergeAvail*\/, Bool \/*aboveMergeAvail*\/, Bool \/*onlyEstMergeInfo*\/ = false){printf("only supported in CABAC"); assert(0); exit(-1);}$/;"	f	class:TEncCavlc
codeSAOBlkParam	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSAOBlkParam(SAOBlkParam& saoBlkParam, const BitDepths &bitDepths$/;"	f	class:TEncSbac
codeSAOOffsetParam	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSAOOffsetParam(ComponentID compIdx, SAOOffset& ctbParam, Bool sliceEnabled, const Int channelBitDepth)$/;"	f	class:TEncSbac
codeSAOSign	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSAOSign( UInt code )$/;"	f	class:TEncSbac
codeSPS	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSPS( const TComSPS* pcSPS )$/;"	f	class:TEncCavlc
codeSPS	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSPS( const TComSPS* \/*pcSPS*\/ )$/;"	f	class:TEncSbac
codeSaoMaxUvlc	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoMaxUvlc    ( UInt code, UInt maxSymbol )$/;"	f	class:TEncSbac
codeSaoMerge	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoMerge       ( UInt uiCode )$/;"	f	class:TEncSbac
codeSaoTypeIdx	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoTypeIdx       ( UInt uiCode)$/;"	f	class:TEncSbac
codeSaoUflc	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoUflc       ( UInt uiLength, UInt uiCode )$/;"	f	class:TEncSbac
codeScalingList	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeScalingList( const TComScalingList &scalingList )$/;"	f	class:TEncCavlc
codeShortTermRefPicSet	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeShortTermRefPicSet( const TComReferencePictureSet* rps, Bool calledFromSliceHeader, Int idx)$/;"	f	class:TEncCavlc
codeSkipFlag	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSkipFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeSkipFlag	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeSliceFinish	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSliceFinish ()$/;"	f	class:TEncCavlc
codeSliceFinish	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSliceFinish()$/;"	f	class:TEncSbac
codeSliceHeader	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSliceHeader         ( TComSlice* pcSlice )$/;"	f	class:TEncCavlc
codeSliceHeader	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSliceHeader( TComSlice* \/*pcSlice*\/ )$/;"	f	class:TEncSbac
codeSplitFlag	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSplitFlag   ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TEncCavlc
codeSplitFlag	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSplitFlag   ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TEncSbac
codeTerminatingBit	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeTerminatingBit      ( UInt \/*uilsLast*\/ )$/;"	f	class:TEncCavlc
codeTerminatingBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTerminatingBit( UInt uilsLast )$/;"	f	class:TEncSbac
codeTilesWPPEntryPoint	TLibEncoder/TEncCavlc.cpp	/^Void  TEncCavlc::codeTilesWPPEntryPoint( TComSlice* pSlice )$/;"	f	class:TEncCavlc
codeTilesWPPEntryPoint	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTilesWPPEntryPoint( TComSlice* \/*pSlice*\/ )$/;"	f	class:TEncSbac
codeTransformSkipFlags	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeTransformSkipFlags (TComTU& \/*rTu*\/, ComponentID \/*component*\/ )$/;"	f	class:TEncCavlc
codeTransformSkipFlags	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTransformSkipFlags (TComTU &rTu, ComponentID component )$/;"	f	class:TEncSbac
codeTransformSubdivFlag	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeTransformSubdivFlag( UInt \/*uiSymbol*\/, UInt \/*uiCtx*\/ )$/;"	f	class:TEncCavlc
codeTransformSubdivFlag	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTransformSubdivFlag( UInt uiSymbol, UInt uiCtx )$/;"	f	class:TEncSbac
codeVPS	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeVPS( const TComVPS* pcVPS )$/;"	f	class:TEncCavlc
codeVPS	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeVPS( const TComVPS* \/*pcVPS*\/ )$/;"	f	class:TEncSbac
codeVUI	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeVUI( const TComVUI *pcVUI, const TComSPS* pcSPS )$/;"	f	class:TEncCavlc
codedValue	TLibCommon/SEI.h	/^    Int codedValue;$/;"	m	struct:SEIColourRemappingInfo::CRIlut
coeffGroupRDStats	TLibCommon/TComTrQuant.cpp	/^} coeffGroupRDStats;$/;"	t	typeref:struct:__anon3	file:
colourVolumeSEIEnabled	TLibCommon/TypeDef.h	/^  Bool      colourVolumeSEIEnabled;$/;"	m	struct:TComSEIMasteringDisplay
comp	TLibCommon/TComSlice.h	/^    } comp;$/;"	m	union:ChromaQpAdj::__anon7	typeref:struct:ChromaQpAdj::__anon7::__anon8
compCRC	TLibCommon/TComPicYuvMD5.cpp	/^UInt compCRC(Int bitdepth, const Pel* plane, UInt width, UInt height, UInt stride, TComPictureHash &digest)$/;"	f
compChecksum	TLibCommon/TComPicYuvMD5.cpp	/^UInt compChecksum(Int bitdepth, const Pel* plane, UInt width, UInt height, UInt stride, TComPictureHash &digest, const BitDepths &\/*bitDepths*\/)$/;"	f
compIdx	TLibCommon/TComRdCost.h	/^  ComponentID           compIdx;$/;"	m	class:DistParam
compModelValue	TLibCommon/SEI.h	/^    std::vector<Int> compModelValue;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModelIntensityValues
compress	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::compress(SChar *pePredMode, const SChar* pePredModeSource, const Int scale, const TComCUMvField &source)$/;"	f	class:TComCUMvField
compress	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::compress(SChar* pePredMode, Int scale)$/;"	f	class:TComCUMvField
compressCtu	TLibEncoder/TEncCu.cpp	/^Void TEncCu::compressCtu( TComDataCU* pCtu )$/;"	f	class:TEncCu
compressGOP	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::compressGOP( Int iPOCLast, Int iNumPicRcvd, TComList<TComPic*>& rcListPic,$/;"	f	class:TEncGOP
compressMV	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::compressMV()$/;"	f	class:TComDataCU
compressMotion	TLibCommon/TComPic.cpp	/^Void TComPic::compressMotion()$/;"	f	class:TComPic
compressSlice	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::compressSlice( TComPic* pcPic, const Bool bCompressEntireSlice, const Bool bFastDeltaQP )$/;"	f	class:TEncSlice
contextSetStartTable	TLibCommon/TComChromaFormat.h	/^static const UInt contextSetStartTable            [MAX_NUM_CHANNEL_TYPE] = {FIRST_CTX_SET_LUMA,      FIRST_CTX_SET_CHROMA     };$/;"	v
context_md5_t	libmd5/libmd5.h	/^} context_md5_t;$/;"	t	typeref:struct:_context_md5_t
convertPayloadToRBSP	TLibDecoder/NALread.cpp	/^static Void convertPayloadToRBSP(vector<uint8_t>& nalUnitBuf, TComInputBitstream *bitstream, Bool isVclNalUnit)$/;"	f	file:
copyFrom	TLibCommon/ContextModel3DBuffer.h	/^  Void copyFrom( const ContextModel3DBuffer* src )$/;"	f	class:ContextModel3DBuffer
copyFrom	TLibCommon/SEI.h	/^  Void copyFrom( const SEIColourRemappingInfo &seiCriInput)$/;"	f	class:SEIColourRemappingInfo
copyFrom	TLibCommon/SEI.h	/^  Void copyFrom(const SEIAnnotatedRegions &seiAnnotatedRegions)$/;"	f	class:SEIAnnotatedRegions
copyFrom	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::copyFrom( TComCUMvField const * pcCUMvFieldSrc, Int iNumPartSrc, Int iPartAddrDst )$/;"	f	class:TComCUMvField
copyFromPicComponent	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyFromPicComponent  ( const ComponentID compID, const TComPicYuv* pcPicYuvSrc, const UInt ctuRsAddr, const UInt uiAbsZorderIdx )$/;"	f	class:TComYuv
copyFromPicYuv	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyFromPicYuv   ( const TComPicYuv* pcPicYuvSrc, const UInt ctuRsAddr, const UInt uiAbsZorderIdx )$/;"	f	class:TComYuv
copyInterPredInfoFrom	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copyInterPredInfoFrom    ( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefPicList )$/;"	f	class:TComDataCU
copyPartFrom	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copyPartFrom( TComDataCU* pcCU, UInt uiPartUnitIdx, UInt uiDepth )$/;"	f	class:TComDataCU
copyPartToComponent	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToComponent( const ComponentID compID, TComYuv* pcYuvDst, const UInt uiSrcPartIdx ) const$/;"	f	class:TComYuv
copyPartToPartComponent	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToPartComponent  ( const ComponentID compID, TComYuv* pcYuvDst, const UInt uiPartIdx, const UInt iWidthComponent, const UInt iHeightComponent ) const$/;"	f	class:TComYuv
copyPartToPartComponentMxN	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToPartComponentMxN  ( const ComponentID compID, TComYuv* pcYuvDst, const TComRectangle &rect) const$/;"	f	class:TComYuv
copyPartToPartYuv	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToPartYuv   ( TComYuv* pcYuvDst, const UInt uiPartIdx, const UInt iWidth, const UInt iHeight ) const$/;"	f	class:TComYuv
copyPartToYuv	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToYuv( TComYuv* pcYuvDst, const UInt uiSrcPartIdx ) const$/;"	f	class:TComYuv
copyPlane	Utilities/TVideoIOYuv.cpp	/^copyPlane(const TComPicYuv &src, const ComponentID srcPlane, TComPicYuv &dest, const ComponentID destPlane)$/;"	f	file:
copySliceInfo	TLibCommon/TComSlice.cpp	/^Void TComSlice::copySliceInfo(TComSlice *pSrc)$/;"	f	class:TComSlice
copyState	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::copyState( const TDecBinIf* pcTDecBinIf )$/;"	f	class:TDecBinCABAC
copyState	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::copyState( const TEncBinIf* pcTEncBinIf )$/;"	f	class:TEncBinCABAC
copySubCU	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copySubCU( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TComDataCU
copyTo	TLibCommon/SEI.cpp	/^void SEIBufferingPeriod::copyTo (SEIBufferingPeriod& target)$/;"	f	class:SEIBufferingPeriod
copyTo	TLibCommon/SEI.cpp	/^void SEIPictureTiming::copyTo (SEIPictureTiming& target)$/;"	f	class:SEIPictureTiming
copyTo	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::copyTo( TComCUMvField* pcCUMvFieldDst, Int iPartAddrDst ) const$/;"	f	class:TComCUMvField
copyTo	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::copyTo( TComCUMvField* pcCUMvFieldDst, Int iPartAddrDst, UInt uiOffset, UInt uiNumPart ) const$/;"	f	class:TComCUMvField
copyToPartComponent	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPartComponent( const ComponentID compID, TComYuv* pcYuvDst, const UInt uiDstPartIdx ) const$/;"	f	class:TComYuv
copyToPartYuv	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPartYuv( TComYuv* pcYuvDst, const UInt uiDstPartIdx ) const$/;"	f	class:TComYuv
copyToPic	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copyToPic( UChar uhDepth )$/;"	f	class:TComDataCU
copyToPic	TLibCommon/TComPicYuv.cpp	/^Void  TComPicYuv::copyToPic (TComPicYuv*  pcPicYuvDst) const$/;"	f	class:TComPicYuv
copyToPicComponent	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPicComponent  ( const ComponentID compID, TComPicYuv* pcPicYuvDst, const UInt ctuRsAddr, const UInt uiAbsZorderIdx, const UInt uiPartDepth, const UInt uiPartIdx ) const$/;"	f	class:TComYuv
copyToPicYuv	TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPicYuv   ( TComPicYuv* pcPicYuvDst, const UInt ctuRsAddr, const UInt uiAbsZorderIdx, const UInt uiPartDepth, const UInt uiPartIdx ) const$/;"	f	class:TComYuv
count	TLibCommon/TComCodingStatistics.h	/^      Int64 count;$/;"	m	struct:TComCodingStatistics::SStat
count	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int64 count[MAX_NUM_SAO_CLASSES];$/;"	m	struct:SAOStatData
countNonZeroCoeffs	TLibEncoder/TEncEntropy.cpp	/^Int TEncEntropy::countNonZeroCoeffs( TCoeff* pcCoef, UInt uiSize )$/;"	f	class:TEncEntropy
countStartCodeEmulations	TLibCommon/TComBitStream.cpp	/^Int TComOutputBitstream::countStartCodeEmulations()$/;"	f	class:TComOutputBitstream
countingType	TLibCommon/TypeDef.h	/^  Int  countingType;$/;"	m	struct:TComSEITimeSet
cpbCntMinus1	TLibCommon/TComSlice.h	/^  UInt cpbCntMinus1;$/;"	m	struct:HrdSubLayerInfo
cpbNalFactor	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     cpbNalFactor;                \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
cpbNalFactor	TLibDecoder/TDecConformance.h	/^  UInt                     cpbNalFactor;                \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
cpbSizeValue	TLibCommon/TComSlice.h	/^  UInt cpbSizeValue      [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
cpbVclFactor	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     cpbVclFactor;$/;"	m	struct:ProfileFeatures
cpbVclFactor	TLibDecoder/TDecConformance.h	/^  UInt                     cpbVclFactor;$/;"	m	struct:ProfileFeatures
create	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::create(uint32_t width, uint32_t height, ChromaFormat fmt, $/;"	f	class:SEIFilmGrainSynthesizer
create	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::create( ChromaFormat chromaFormatIDC, UInt uiNumPartition, UInt uiWidth, UInt uiHeight, Bool bDecSubCu, Int unitSize$/;"	f	class:TComDataCU
create	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::create( UInt uiMaxCUDepth )$/;"	f	class:TComLoopFilter
create	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::create( UInt uiNumPartition )$/;"	f	class:TComCUMvField
create	TLibCommon/TComPic.cpp	/^Void TComPic::create( const TComSPS &sps, const TComPPS &pps, const Bool bCreateEncoderSourcePicYuv, const Bool bCreateForImmediateReconstruction )$/;"	f	class:TComPic
create	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::create  ( const TComSPS &sps, const TComPPS &pps, UInt uiMaxDepth, const Bool bAllocateCtuArray )$/;"	f	class:TComPicSym
create	TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::create ( const Int picWidth,                 \/\/\/< picture width$/;"	f	class:TComPicYuv
create	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::create( Int picWidth, Int picHeight, ChromaFormat format, UInt maxCUWidth, UInt maxCUHeight, UInt maxCUDepth, UInt lumaBitShift, UInt chromaBitShift )$/;"	f	class:TComSampleAdaptiveOffset
create	TLibCommon/TComSlice.h	/^  Void                           create  (Int numberOfEntries)                            { m_referencePictureSets.resize(numberOfEntries);         }$/;"	f	class:TComRPSList
create	TLibCommon/TComYuv.cpp	/^Void TComYuv::create( UInt iWidth, UInt iHeight, ChromaFormat chromaFormatIDC )$/;"	f	class:TComYuv
create	TLibDecoder/TDecCu.cpp	/^Void TDecCu::create( UInt uiMaxDepth, UInt uiMaxWidth, UInt uiMaxHeight, ChromaFormat chromaFormatIDC )$/;"	f	class:TDecCu
create	TLibDecoder/TDecGop.cpp	/^Void TDecGop::create()$/;"	f	class:TDecGop
create	TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::create()$/;"	f	class:TDecSlice
create	TLibDecoder/TDecTop.cpp	/^Void TDecTop::create()$/;"	f	class:TDecTop
create	TLibEncoder/TEncCu.cpp	/^Void TEncCu::create(UChar uhTotalDepth, UInt uiMaxWidth, UInt uiMaxHeight, ChromaFormat chromaFormat)$/;"	f	class:TEncCu
create	TLibEncoder/TEncGOP.cpp	/^Void  TEncGOP::create()$/;"	f	class:TEncGOP
create	TLibEncoder/TEncPic.cpp	/^Void TEncPic::create( const TComSPS &sps, const TComPPS &pps, UInt uiMaxAdaptiveQPDepth )$/;"	f	class:TEncPic
create	TLibEncoder/TEncPic.cpp	/^Void TEncPicQPAdaptationLayer::create( Int iWidth, Int iHeight, UInt uiAQPartWidth, UInt uiAQPartHeight )$/;"	f	class:TEncPicQPAdaptationLayer
create	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::create( TEncRCSeq* encRCSeq, Int numPic )$/;"	f	class:TEncRCGOP
create	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::create( TEncRCSeq* encRCSeq, TEncRCGOP* encRCGOP, Int frameLevel, list<TEncRCPic*>& listPreviousPictures )$/;"	f	class:TEncRCPic
create	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::create( Int totalFrames, Int targetBitrate, Int frameRate, Int GOPSize, Int picWidth, Int picHeight, Int LCUWidth, Int LCUHeight, Int numberOfLevel, Bool useLCUSeparateModel, Int adaptiveBit )$/;"	f	class:TEncRCSeq
create	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::create( Int iWidth, Int iHeight, ChromaFormat chromaFormat, UInt iMaxCUWidth, UInt iMaxCUHeight, UChar uhTotalDepth )$/;"	f	class:TEncSlice
create	TLibEncoder/TEncTop.cpp	/^Void TEncTop::create ()$/;"	f	class:TEncTop
createEncData	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::createEncData(Bool isPreDBFSamplesUsed)$/;"	f	class:TEncSampleAdaptiveOffset
createExplicitReferencePictureSetFromReference	TLibCommon/TComSlice.cpp	/^Void TComSlice::createExplicitReferencePictureSetFromReference( TComList<TComPic*>& rcListPic, const TComReferencePictureSet *pReferencePictureSet, Bool isRAP, Int pocRandomAccess, Bool bUseRecoveryPoint, const Bool bEfficientFieldIRAPEnabled)$/;"	f	class:TComSlice
createGrainSynthesizer	TLibCommon/TComPic.cpp	/^void TComPic::createGrainSynthesizer(Bool bFirstPictureInSequence, SEIFilmGrainSynthesizer* pGrainCharacteristics, TComPicYuv* pGrainBuf, const TComSPS* sps)$/;"	f	class:TComPic
createHrdParamBuffer	TLibCommon/TComSlice.h	/^  Void              createHrdParamBuffer()$/;"	f	class:TComVPS
createRPSList	TLibCommon/TComSlice.cpp	/^Void  TComSPS::createRPSList( Int numRPS )$/;"	f	class:TComSPS
createWithoutCUInfo	TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::createWithoutCUInfo ( const Int picWidth,                 \/\/\/< picture width$/;"	f	class:TComPicYuv
crossComponentPrediction	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::crossComponentPrediction(       TComTU      & rTu,$/;"	f	class:TComTrQuant
ctxIndMap4x4	TLibCommon/TComRom.cpp	/^const UInt ctxIndMap4x4[4*4] =$/;"	v
d64CodedLevelandDist	TLibCommon/TComTrQuant.cpp	/^  Double d64CodedLevelandDist; \/\/ distortion and level cost only$/;"	m	struct:__anon3	file:
d64SigCost	TLibCommon/TComTrQuant.cpp	/^  Double d64SigCost;$/;"	m	struct:__anon3	file:
d64SigCost_0	TLibCommon/TComTrQuant.cpp	/^  Double d64SigCost_0;$/;"	m	struct:__anon3	file:
d64UncodedDist	TLibCommon/TComTrQuant.cpp	/^  Double d64UncodedDist;    \/\/ all zero coded block distortion$/;"	m	struct:__anon3	file:
data	TLibCommon/TComCodingStatistics.h	/^    TComCodingStatisticsData data;$/;"	m	class:TComCodingStatistics
dataBase	TLibCommon/SEIFilmGrainSynthesizer.h	/^  int8_t dataBase[NUM_CUT_OFF_FREQ][NUM_CUT_OFF_FREQ][DATA_BASE_SIZE][DATA_BASE_SIZE];$/;"	m	struct:GrainSynthesisStruct_t
dataBaseGen	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::dataBaseGen()$/;"	f	class:SEIFilmGrainSynthesizer
deblockFactor	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const uint32_t deblockFactor[13] =$/;"	v	file:
deblockGrainStripe	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::deblockGrainStripe(int32_t *grainStripe, uint32_t widthComp, uint32_t strideComp)$/;"	f	class:SEIFilmGrainSynthesizer
debugCabacBinTargetLine	TLibCommon/Debug.cpp	/^const UInt debugCabacBinTargetLine = 0;$/;"	v
debugCabacBinWindow	TLibCommon/Debug.cpp	/^const UInt debugCabacBinWindow     = 1000000;$/;"	v
debugEncoderSearchBinTargetLine	TLibCommon/Debug.cpp	/^const UInt debugEncoderSearchBinTargetLine = 0;$/;"	v
debugEncoderSearchBinWindow	TLibCommon/Debug.cpp	/^const UInt debugEncoderSearchBinWindow     = 1000000;$/;"	v
debug_reorder_data_inter_token	TLibCommon/Debug.cpp	/^const TChar *debug_reorder_data_inter_token[MAX_NUM_COMPONENT+1]$/;"	v
decideBlkParams	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::decideBlkParams(TComPic* pic, Bool* sliceEnabled, SAOStatData*** blkStats, TComPicYuv* srcYuv, TComPicYuv* resYuv,$/;"	f	class:TEncSampleAdaptiveOffset
decidePicParams	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::decidePicParams(Bool* sliceEnabled, const TComPic* pic, const Double saoEncodingRate, const Double saoEncodingRateChroma)$/;"	f	class:TEncSampleAdaptiveOffset
decode	TLibDecoder/TDecTop.cpp	/^Bool TDecTop::decode(InputNALUnit& nalu, Int& iSkipFrame, Int& iPOCLastDisplay, Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
decodeAlignedBinsEP	TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeAlignedBinsEP( UInt& ruiBins, Int numBins, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBin	TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBin( UInt& ruiBin, ContextModel &rcCtxModel, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBinEP	TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBinEP( UInt& ruiBin, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBinTrm	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::decodeBinTrm( UInt& ruiBin )$/;"	f	class:TDecBinCABAC
decodeBinsEP	TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBinsEP( UInt& ruiBin, Int numBins, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeCUTransquantBypassFlag	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeCUTransquantBypassFlag(TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeChromaQpAdjustment	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeChromaQpAdjustment( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecEntropy
decodeCoeff	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeCoeff( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool& bCodeDQP, Bool& isChromaQpAdjCoded )$/;"	f	class:TDecEntropy
decodeCtu	TLibDecoder/TDecCu.cpp	/^Void TDecCu::decodeCtu( TComDataCU* pCtu, Bool& isLastCtuOfSliceSegment )$/;"	f	class:TDecCu
decodeIPCMInfo	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeInterDirPU	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeInterDirPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx )$/;"	f	class:TDecEntropy
decodeIntraDirModeChroma	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeIntraDirModeChroma( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeIntraDirModeLuma	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeIntraDirModeLuma  ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeMVPIdxPU	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMVPIdxPU( TComDataCU* pcSubCU, UInt uiPartAddr, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodeMergeFlag	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMergeFlag( TComDataCU* pcSubCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPUIdx )$/;"	f	class:TDecEntropy
decodeMergeIndex	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMergeIndex( TComDataCU* pcCU, UInt uiPartIdx, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeMvdPU	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMvdPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodePPS	TLibDecoder/TDecEntropy.h	/^  Void    decodePPS                   ( TComPPS* pcPPS ) { m_pcEntropyDecoderIf->parsePPS(pcPPS); }$/;"	f	class:TDecEntropy
decodePUWise	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePUWise( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, TComDataCU* pcSubCU )$/;"	f	class:TDecEntropy
decodePartSize	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodePredInfo	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePredInfo    ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, TComDataCU* pcSubCU )$/;"	f	class:TDecEntropy
decodePredMode	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeQP	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeQP          ( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecEntropy
decodeRefFrmIdxPU	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeRefFrmIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodeRemainingBytes	TLibDecoder/TDecEntropy.h	/^  Void    decodeRemainingBytes( Bool noTrailingBytesExpected ) { m_pcEntropyDecoderIf->parseRemainingBytes(noTrailingBytesExpected); }$/;"	f	class:TDecEntropy
decodeSPS	TLibDecoder/TDecEntropy.h	/^  Void    decodeSPS                   ( TComSPS* pcSPS ) { m_pcEntropyDecoderIf->parseSPS(pcSPS); }$/;"	f	class:TDecEntropy
decodeSkipFlag	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeSliceHeader	TLibDecoder/TDecEntropy.h	/^  Void    decodeSliceHeader           ( TComSlice* pcSlice, ParameterSetManager *parameterSetManager, const Int prevTid0POC)  { m_pcEntropyDecoderIf->parseSliceHeader(pcSlice, parameterSetManager, prevTid0POC);         }$/;"	f	class:TDecEntropy
decodeSplitFlag	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeSplitFlag   ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeTerminatingBit	TLibDecoder/TDecEntropy.h	/^  Void    decodeTerminatingBit        ( UInt& ruiIsLast )       { m_pcEntropyDecoderIf->parseTerminatingBit(ruiIsLast);     }$/;"	f	class:TDecEntropy
decodeVPS	TLibDecoder/TDecEntropy.h	/^  Void    decodeVPS                   ( TComVPS* pcVPS ) { m_pcEntropyDecoderIf->parseVPS(pcVPS); }$/;"	f	class:TDecEntropy
decodingRefreshMarking	TLibCommon/TComSlice.cpp	/^Void TComSlice::decodingRefreshMarking(Int& pocCRA, Bool& bRefreshPending, TComList<TComPic*>& rcListPic, const bool bEfficientFieldIRAPEnabled)$/;"	f	class:TComSlice
decompressCtu	TLibDecoder/TDecCu.cpp	/^Void TDecCu::decompressCtu( TComDataCU* pCtu )$/;"	f	class:TDecCu
decompressSlice	TLibDecoder/TDecGop.cpp	/^Void TDecGop::decompressSlice(TComInputBitstream* pcBitstream, TComPic* pcPic)$/;"	f	class:TDecGop
decompressSlice	TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::decompressSlice(TComInputBitstream** ppcSubstreams, TComPic* pcPic, TDecSbac* pcSbacDecoder)$/;"	f	class:TDecSlice
default_error_reporter	Utilities/program_options_lite.cpp	/^    ErrorReporter default_error_reporter;$/;"	m	namespace:df::program_options_lite	file:
deletePicBuffer	TLibDecoder/TDecTop.cpp	/^Void TDecTop::deletePicBuffer ( )$/;"	f	class:TDecTop
deletePicBuffer	TLibEncoder/TEncTop.cpp	/^Void TEncTop::deletePicBuffer()$/;"	f	class:TEncTop
deleteSEIs	TLibCommon/SEI.cpp	/^Void deleteSEIs (SEIMessages &seiList)$/;"	f
deriveLeftBottomIdx	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftBottomIdx( UInt  uiPartIdx,      UInt&      ruiPartIdxLB ) const$/;"	f	class:TComDataCU
deriveLeftBottomIdxGeneral	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftBottomIdxGeneral( UInt uiAbsPartIdx, UInt uiPartIdx, UInt& ruiPartIdxLB ) const$/;"	f	class:TComDataCU
deriveLeftRightTopIdx	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftRightTopIdx ( UInt uiPartIdx, UInt& ruiPartIdxLT, UInt& ruiPartIdxRT ) const$/;"	f	class:TComDataCU
deriveLeftRightTopIdxGeneral	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftRightTopIdxGeneral ( UInt uiAbsPartIdx, UInt uiPartIdx, UInt& ruiPartIdxLT, UInt& ruiPartIdxRT ) const$/;"	f	class:TComDataCU
deriveLoopFilterBoundaryAvailibility	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::deriveLoopFilterBoundaryAvailibility(Int ctuRsAddr,$/;"	f	class:TComPicSym
deriveModeMergeRDO	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::deriveModeMergeRDO(const BitDepths &bitDepths, Int ctuRsAddr, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES], Bool* sliceEnabled, SAOStatData*** blkStats, SAOBlkParam& modeParam, Double& modeNormCost, TEncSbac** cabacCoderRDO, Int inCabacLabel)$/;"	f	class:TEncSampleAdaptiveOffset
deriveModeNewRDO	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::deriveModeNewRDO(const BitDepths &bitDepths, Int ctuRsAddr, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES], Bool* sliceEnabled, SAOStatData*** blkStats, SAOBlkParam& modeParam, Double& modeNormCost, TEncSbac** cabacCoderRDO, Int inCabacLabel)$/;"	f	class:TEncSampleAdaptiveOffset
deriveOffsets	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::deriveOffsets(ComponentID compIdx, const Int channelBitDepth, Int typeIdc, SAOStatData& statData, Int* quantOffsets, Int& typeAuxInfo)$/;"	f	class:TEncSampleAdaptiveOffset
deriveRightBottomIdx	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveRightBottomIdx( UInt uiPartIdx, UInt &ruiPartIdxRB ) const$/;"	f	class:TComDataCU
deriveTestModeAMP	TLibEncoder/TEncCu.cpp	/^Void TEncCu::deriveTestModeAMP (TComDataCU *pcBestCU, PartSize eParentPartSize, Bool &bTestAMP_Hor, Bool &bTestAMP_Ver, Bool &bTestMergeAMP_Hor, Bool &bTestMergeAMP_Ver)$/;"	f	class:TEncCu
destroy	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::destroy()$/;"	f	class:TComDataCU
destroy	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::destroy()$/;"	f	class:TComLoopFilter
destroy	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::destroy()$/;"	f	class:TComCUMvField
destroy	TLibCommon/TComPic.cpp	/^Void TComPic::destroy()$/;"	f	class:TComPic
destroy	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::destroy()$/;"	f	class:TComPicSym
destroy	TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::destroy()$/;"	f	class:TComPicYuv
destroy	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::destroy()$/;"	f	class:TComPrediction
destroy	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::destroy()$/;"	f	class:TComSampleAdaptiveOffset
destroy	TLibCommon/TComSlice.h	/^  Void                           destroy ()                                               { }$/;"	f	class:TComRPSList
destroy	TLibCommon/TComYuv.cpp	/^Void TComYuv::destroy()$/;"	f	class:TComYuv
destroy	TLibDecoder/TDecCu.cpp	/^Void TDecCu::destroy()$/;"	f	class:TDecCu
destroy	TLibDecoder/TDecGop.cpp	/^Void TDecGop::destroy()$/;"	f	class:TDecGop
destroy	TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::destroy()$/;"	f	class:TDecSlice
destroy	TLibDecoder/TDecTop.cpp	/^Void TDecTop::destroy()$/;"	f	class:TDecTop
destroy	TLibEncoder/TEncCu.cpp	/^Void TEncCu::destroy()$/;"	f	class:TEncCu
destroy	TLibEncoder/TEncGOP.cpp	/^Void  TEncGOP::destroy()$/;"	f	class:TEncGOP
destroy	TLibEncoder/TEncPic.cpp	/^Void TEncPic::destroy()$/;"	f	class:TEncPic
destroy	TLibEncoder/TEncPic.cpp	/^Void TEncPicQPAdaptationLayer::destroy()$/;"	f	class:TEncPicQPAdaptationLayer
destroy	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::destroy()$/;"	f	class:TEncRCGOP
destroy	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::destroy()$/;"	f	class:TEncRCPic
destroy	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::destroy()$/;"	f	class:TEncRCSeq
destroy	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::destroy()$/;"	f	class:TEncRateCtrl
destroy	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::destroy()$/;"	f	class:TEncSearch
destroy	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::destroy()$/;"	f	class:TEncSlice
destroy	TLibEncoder/TEncTop.cpp	/^Void TEncTop::destroy ()$/;"	f	class:TEncTop
destroyEncData	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::destroyEncData()$/;"	f	class:TEncSampleAdaptiveOffset
destroyRCGOP	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::destroyRCGOP()$/;"	f	class:TEncRateCtrl
destroyROM	TLibCommon/TComRom.cpp	/^Void destroyROM()$/;"	f
destroyScalingList	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::destroyScalingList()$/;"	f	class:TComTrQuant
determineCabacInitIdx	TLibEncoder/TEncCavlc.h	/^  SliceType determineCabacInitIdx  (const TComSlice* \/*pSlice*\/) { assert(0); return I_SLICE; };$/;"	f	class:TEncCavlc
determineCabacInitIdx	TLibEncoder/TEncEntropy.h	/^  SliceType determineCabacInitIdx   (const TComSlice *pSlice) { return m_pcEntropyCoderIf->determineCabacInitIdx(pSlice); }$/;"	f	class:TEncEntropy
determineCabacInitIdx	TLibEncoder/TEncSbac.cpp	/^SliceType TEncSbac::determineCabacInitIdx(const TComSlice *pSlice)$/;"	f	class:TEncSbac
df	Utilities/program_options_lite.cpp	/^namespace df$/;"	n	file:
df	Utilities/program_options_lite.h	/^namespace df$/;"	n
diff	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int64 diff[MAX_NUM_SAO_CLASSES];$/;"	m	struct:SAOStatData
discontinuityFlag	TLibCommon/TypeDef.h	/^  Bool discontinuityFlag;$/;"	m	struct:TComSEITimeSet
dissociateSEIObject	TLibCommon/SEI.h	/^  SEI *dissociateSEIObject()  \/\/ Dissociates SEI; receiver of this function in charge of memory deallocation.$/;"	f	class:RegionalSEI
divideByPowerOf2	TLibCommon/TComMv.h	/^  Void divideByPowerOf2 (const Int i)$/;"	f	class:TComMv
doChecking	TLibDecoder/TDecConformance.h	/^  static inline Bool doChecking()$/;"	f	class:TDecConformanceCheck
doHelp	Utilities/program_options_lite.cpp	/^    void doHelp(ostream& out, Options& opts, unsigned columns)$/;"	f	namespace:df::program_options_lite
doHelpOpt	Utilities/program_options_lite.cpp	/^    static void doHelpOpt(ostream& out, const Options::Names& entry, unsigned pad_short = 0)$/;"	f	namespace:df::program_options_lite
duBitRateValue	TLibCommon/TComSlice.h	/^  UInt duBitRateValue    [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
ducpbSizeValue	TLibCommon/TComSlice.h	/^  UInt ducpbSizeValue    [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
dump	TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::dump (const std::string &fileName, const BitDepths &bitDepths, const Bool bAppend, const Bool bForceTo8Bit) const$/;"	f	class:TComPicYuv
elevationCentre	TLibCommon/SEI.h	/^    Int  elevationCentre;$/;"	m	struct:SEIOmniViewport::OmniViewport
emulation_prevention_three_byte	TLibEncoder/NALwrite.cpp	/^static const UChar emulation_prevention_three_byte[] = {3};$/;"	v	file:
enable4ChromaPUsInIntraNxNCU	TLibCommon/TComChromaFormat.h	/^static inline Bool enable4ChromaPUsInIntraNxNCU(const ChromaFormat chFmt)$/;"	f
enableTMctsCheck	TLibDecoder/TDecConformance.h	/^  Void enableTMctsCheck(Bool enabled) { m_tmctsCheckEnabled = enabled; };$/;"	f	class:TDecConformanceCheck
enabled	TLibCommon/TypeDef.h	/^  Bool   enabled;         \/\/\/< Enabled flag (0:default)$/;"	m	struct:WCGChromaQPControl
encode	TLibEncoder/TEncTop.cpp	/^Void TEncTop::encode( Bool flush, TComPicYuv* pcPicYuvOrg, TComPicYuv* pcPicYuvTrueOrg, const InputColourSpaceConversion ipCSC, const InputColourSpaceConversion snrCSC, TComList<TComPicYuv*>& rcListPicYuvRecOut, std::list<AccessUnit>& accessUnitsOut, Int& iNumEncoded )$/;"	f	class:TEncTop
encode	TLibEncoder/TEncTop.cpp	/^Void TEncTop::encode(Bool flush, TComPicYuv* pcPicYuvOrg, TComPicYuv* pcPicYuvTrueOrg, const InputColourSpaceConversion ipCSC, const InputColourSpaceConversion snrCSC, TComList<TComPicYuv*>& rcListPicYuvRecOut, std::list<AccessUnit>& accessUnitsOut, Int& iNumEncoded, Bool isTff)$/;"	f	class:TEncTop
encodeAlignedBinsEP	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeAlignedBinsEP( UInt binValues, Int numBins )$/;"	f	class:TEncBinCABAC
encodeBin	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBin( UInt binValue, ContextModel &rcCtxModel )$/;"	f	class:TEncBinCABAC
encodeBin	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBin( UInt binValue, ContextModel &rcCtxModel )$/;"	f	class:TEncBinCABACCounter
encodeBinEP	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBinEP( UInt binValue )$/;"	f	class:TEncBinCABAC
encodeBinEP	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBinEP( UInt \/*binValue*\/ )$/;"	f	class:TEncBinCABACCounter
encodeBinTrm	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBinTrm( UInt binValue )$/;"	f	class:TEncBinCABAC
encodeBinTrm	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBinTrm( UInt binValue )$/;"	f	class:TEncBinCABACCounter
encodeBinsEP	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBinsEP( UInt binValues, Int numBins )$/;"	f	class:TEncBinCABAC
encodeBinsEP	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBinsEP( UInt \/*binValues*\/, Int numBins )$/;"	f	class:TEncBinCABACCounter
encodeCUTransquantBypassFlag	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeChromaQpAdjustment	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx, Bool inRd )$/;"	f	class:TEncEntropy
encodeCoeff	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCoeff( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool& bCodeDQP, Bool& codeChromaQpAdj )$/;"	f	class:TEncEntropy
encodeCoeffNxN	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCoeffNxN( TComTU &rTu, TCoeff* pcCoef, const ComponentID compID)$/;"	f	class:TEncEntropy
encodeCrossComponentPrediction	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TEncEntropy
encodeCtu	TLibEncoder/TEncCu.cpp	/^Void TEncCu::encodeCtu ( TComDataCU* pCtu )$/;"	f	class:TEncCu
encodeIPCMInfo	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeInterDirPU	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeInterDirPU( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeIntraDirModeChroma	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeIntraDirModeChroma( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeIntraDirModeLuma	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeIntraDirModeLuma  ( TComDataCU* pcCU, UInt absPartIdx, Bool isMultiplePU )$/;"	f	class:TEncEntropy
encodeMVPIdxPU	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMVPIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncEntropy
encodeMergeFlag	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMergeFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeMergeIndex	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMergeIndex( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeMvdPU	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMvdPU( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncEntropy
encodePCMAlignBits	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodePCMAlignBits()$/;"	f	class:TEncBinCABAC
encodePPS	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePPS( const TComPPS* pcPPS )$/;"	f	class:TEncEntropy
encodePUWise	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePUWise( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodePartSize	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool bRD )$/;"	f	class:TEncEntropy
encodePredInfo	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePredInfo( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodePredMode	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeQP	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQP( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeQtCbf	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TEncEntropy
encodeQtCbfZero	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtCbfZero( TComTU &rTu, const ChannelType chType )$/;"	f	class:TEncEntropy
encodeQtRootCbf	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtRootCbf( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeQtRootCbfZero	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtRootCbfZero( )$/;"	f	class:TEncEntropy
encodeRefFrmIdxPU	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeRefFrmIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncEntropy
encodeResAndCalcRdInterCU	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::encodeResAndCalcRdInterCU( TComDataCU* pcCU, TComYuv* pcYuvOrg, TComYuv* pcYuvPred,$/;"	f	class:TEncSearch
encodeSAOBlkParam	TLibEncoder/TEncEntropy.h	/^  Void encodeSAOBlkParam(SAOBlkParam& saoBlkParam, const BitDepths &bitDepths, Bool* sliceEnabled, Bool leftMergeAvail, Bool aboveMergeAvail){m_pcEntropyCoderIf->codeSAOBlkParam(saoBlkParam, bitDepths, sliceEnabled, leftMergeAvail, aboveMergeAvail, false);}$/;"	f	class:TEncEntropy
encodeSPS	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSPS( const TComSPS* pcSPS )$/;"	f	class:TEncEntropy
encodeSkipFlag	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeSlice	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::encodeSlice   ( TComPic* pcPic, TComOutputBitstream* pcSubstreams, UInt &numBinsCoded )$/;"	f	class:TEncSlice
encodeSliceFinish	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSliceFinish()$/;"	f	class:TEncEntropy
encodeSliceHeader	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSliceHeader ( TComSlice* pcSlice )$/;"	f	class:TEncEntropy
encodeSplitFlag	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSplitFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool bRD )$/;"	f	class:TEncEntropy
encodeTerminatingBit	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeTerminatingBit      ( UInt uiIsLast )$/;"	f	class:TEncEntropy
encodeTilesWPPEntryPoint	TLibEncoder/TEncEntropy.cpp	/^Void  TEncEntropy::encodeTilesWPPEntryPoint( TComSlice* pSlice )$/;"	f	class:TEncEntropy
encodeTransformSubdivFlag	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeTransformSubdivFlag( UInt uiSymbol, UInt uiCtx )$/;"	f	class:TEncEntropy
encodeVPS	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeVPS( const TComVPS* pcVPS )$/;"	f	class:TEncEntropy
eofBeforeNBytes	TLibDecoder/AnnexBread.h	/^  Bool eofBeforeNBytes(UInt n)$/;"	f	class:InputByteStream
error	TLibEncoder/TEncTemporalFilter.h	/^  Int error;$/;"	m	struct:MotionVector
error	Utilities/program_options_lite.cpp	/^    ostream& ErrorReporter::error(const string& where)$/;"	f	class:df::program_options_lite::ErrorReporter
error_reporter	Utilities/program_options_lite.cpp	/^      ErrorReporter& error_reporter;$/;"	m	struct:df::program_options_lite::OptionWriter	file:
estBit	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::estBit( estBitsSbacStruct* \/*pcEstBitsCabac*\/, Int \/*width*\/, Int \/*height*\/, ChannelType \/*chType*\/, COEFF_SCAN_TYPE \/*scanType*\/ )$/;"	f	class:TEncCavlc
estBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estBit( estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, ChannelType chType, COEFF_SCAN_TYPE scanType )$/;"	f	class:TEncSbac
estBitsSbacStruct	TLibCommon/TComTrQuant.h	/^} estBitsSbacStruct;$/;"	t	typeref:struct:__anon5
estCBFBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estCBFBit( estBitsSbacStruct* pcEstBitsSbac )$/;"	f	class:TEncSbac
estIntraPredChromaQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::estIntraPredChromaQT(TComDataCU* pcCU,$/;"	f	class:TEncSearch
estIntraPredLumaQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::estIntraPredLumaQT(TComDataCU* pcCU,$/;"	f	class:TEncSearch
estIterOffset	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Int TEncSampleAdaptiveOffset::estIterOffset(Int typeIdx, Double lambda, Int offsetInput, Int64 count, Int64 diffSum, Int shift, Int bitIncrease, Int64& bestDist, Double& bestCost, Int offsetTh )$/;"	f	class:TEncSampleAdaptiveOffset
estLastSignificantPositionBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estLastSignificantPositionBit( estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, ChannelType chType, COEFF_SCAN_TYPE scanType )$/;"	f	class:TEncSbac
estSaoDist	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Int64 TEncSampleAdaptiveOffset::estSaoDist(Int64 count, Int64 offset, Int64 diffSum, Int shift)$/;"	f	class:TEncSampleAdaptiveOffset
estSignificantCoeffGroupMapBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estSignificantCoeffGroupMapBit( estBitsSbacStruct* pcEstBitsSbac, ChannelType chType )$/;"	f	class:TEncSbac
estSignificantCoefficientsBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estSignificantCoefficientsBit( estBitsSbacStruct* pcEstBitsSbac, ChannelType chType )$/;"	f	class:TEncSbac
estSignificantMapBit	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estSignificantMapBit( estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, ChannelType chType )$/;"	f	class:TEncSbac
estimateBit	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::estimateBit (estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, const ChannelType chType, COEFF_SCAN_TYPE scanType )$/;"	f	class:TEncEntropy
estimatePicLambda	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::estimatePicLambda( list<TEncRCPic*>& listPreviousPictures, SliceType eSliceType)$/;"	f	class:TEncRCPic
estimatePicQP	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::estimatePicQP( Double lambda, list<TEncRCPic*>& listPreviousPictures )$/;"	f	class:TEncRCPic
executeLoopFilters	TLibDecoder/TDecTop.cpp	/^Void TDecTop::executeLoopFilters(Int& poc, TComList<TComPic*>*& rpcListPic)$/;"	f	class:TDecTop
extendPicBorder	TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::extendPicBorder ()$/;"	f	class:TComPicYuv
extendedPrecisionProcessingFlag	TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 extendedPrecisionProcessingFlag;$/;"	m	struct:ProfileFeatures
extendedPrecisionProcessingFlag	TLibDecoder/TDecConformance.h	/^  TRISTATE                 extendedPrecisionProcessingFlag;$/;"	m	struct:ProfileFeatures
extensionFlag	TLibCommon/SEI.h	/^  Bool extensionFlag;$/;"	m	class:SEIDisplayOrientation
extractSeisByType	TLibCommon/SEI.cpp	/^SEIMessages extractSeisByType(SEIMessages &seiList, SEI::PayloadType seiType)$/;"	f
extractSubstream	TLibCommon/TComBitStream.cpp	/^TComInputBitstream *TComInputBitstream::extractSubstream( UInt uiNumBits )$/;"	f	class:TComInputBitstream
fastForwardDst	TLibCommon/TComTrQuant.cpp	/^Void fastForwardDst(TCoeff *block, TCoeff *coeff, Int shift)  \/\/ input block, output coeff$/;"	f
fastInverseDst	TLibCommon/TComTrQuant.cpp	/^Void fastInverseDst(TCoeff *tmp, TCoeff *block, Int shift, const TCoeff outputMinimum, const TCoeff outputMaximum)  \/\/ input tmp, output block$/;"	f
fgsDeinit	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::fgsDeinit()$/;"	f	class:SEIFilmGrainSynthesizer
fgsInit	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::fgsInit()$/;"	f	class:SEIFilmGrainSynthesizer
fillMvpCand	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::fillMvpCand ( const UInt partIdx, const UInt partAddr, const RefPicList eRefPicList, const Int refIdx, AMVPInfo* pInfo ) const$/;"	f	class:TComDataCU
fillReferenceSamples	TLibCommon/TComPattern.cpp	/^Void fillReferenceSamples( const Int bitDepth, $/;"	f
filter	TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filter(Int bitDepth, Pel const *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, TFilterCoeff const *coeff)$/;"	f	class:TComInterpolationFilter
filter	TLibEncoder/TEncTemporalFilter.cpp	/^Bool TEncTemporalFilter::filter(TComPicYuv *orgPic, Int receivedPoc)$/;"	f	class:TEncTemporalFilter
filterCopy	TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterCopy(Int bitDepth, const Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Bool isFirst, Bool isLast)$/;"	f	class:TComInterpolationFilter
filterHor	TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterHor(Int bitDepth, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Bool isLast, TFilterCoeff const *coeff)$/;"	f	class:TComInterpolationFilter
filterHor	TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterHor(const ComponentID compID, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Int frac, Bool isLast, const ChromaFormat fmt, const Int bitDepth )$/;"	f	class:TComInterpolationFilter
filterIntraReferenceSamples	TLibCommon/TComChromaFormat.h	/^static inline Bool filterIntraReferenceSamples (const ChannelType chType, const ChromaFormat chFmt, const Bool intraReferenceSmoothingDisabled)$/;"	f
filterPicture	TLibDecoder/TDecGop.cpp	/^Void TDecGop::filterPicture(TComPic* pcPic)$/;"	f	class:TDecGop
filterVer	TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterVer(Int bitDepth, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Bool isFirst, Bool isLast, TFilterCoeff const *coeff)$/;"	f	class:TComInterpolationFilter
filterVer	TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterVer(const ComponentID compID, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Int frac, Bool isFirst, Bool isLast, const ChromaFormat fmt, const Int bitDepth )$/;"	f	class:TComInterpolationFilter
filteringIntraReferenceSamples	TLibCommon/TComPattern.cpp	/^Bool TComPrediction::filteringIntraReferenceSamples(const ComponentID compID, UInt uiDirMode, UInt uiTuChWidth, UInt uiTuChHeight, const ChromaFormat chFmt, const Bool intraReferenceSmoothingDisabled)$/;"	f	class:TComPrediction
finalize	libmd5/MD5.h	/^  void finalize(unsigned char digest[MD5_DIGEST_STRING_LENGTH])$/;"	f	class:MD5
find	TLibCommon/TComList.h	/^  TComIterator find( const C& rcT ) \/\/ leszek$/;"	f	class:TComList
findMatchingLTRP	TLibEncoder/TEncCavlc.cpp	/^Bool TEncCavlc::findMatchingLTRP ( TComSlice* pcSlice, UInt *ltrpsIndex, Int ltrpPOC, Bool usedFlag )$/;"	f	class:TEncCavlc
finish	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::finish()$/;"	f	class:TDecBinCABAC
finish	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::finish()$/;"	f	class:TEncBinCABAC
finish	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::finish()$/;"	f	class:TEncBinCABACCounter
finishCU	TLibEncoder/TEncCu.cpp	/^Void TEncCu::finishCU( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncCu
finishWarningReport	TLibDecoder/TDecConformance.h	/^  static inline Void finishWarningReport() { }$/;"	f	class:TDecConformanceCheck
finishWarningReport	TLibDecoder/TDecConformance.h	/^  static inline Void finishWarningReport()$/;"	f	class:TDecConformanceCheck
firstSignificanceMapContext	TLibCommon/TypeDef.h	/^        UInt             firstSignificanceMapContext;$/;"	m	struct:TUEntropyCodingParameters
fixedPicRateFlag	TLibCommon/TComSlice.h	/^  Bool fixedPicRateFlag;$/;"	m	struct:HrdSubLayerInfo
fixedPicRateWithinCvsFlag	TLibCommon/TComSlice.h	/^  Bool fixedPicRateWithinCvsFlag;$/;"	m	struct:HrdSubLayerInfo
flagTMctsError	TLibDecoder/TDecConformance.h	/^  Void flagTMctsError(const char *error)$/;"	f	class:TDecConformanceCheck
flush	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::flush()$/;"	f	class:TEncBinCABAC
formatCapabilityFactorx1000	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     formatCapabilityFactorx1000; \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
formatCapabilityFactorx1000	TLibDecoder/TDecConformance.h	/^  UInt                     formatCapabilityFactorx1000; \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
fullTimeStampFlag	TLibCommon/TypeDef.h	/^  Bool fullTimeStampFlag;$/;"	m	struct:TComSEITimeSet
func	Utilities/program_options_lite.h	/^      Func* func;$/;"	m	struct:df::program_options_lite::OptionFunc
g_HLSTraceEnable	TLibCommon/TComRom.cpp	/^Bool   g_HLSTraceEnable = true;$/;"	v
g_RCAlphaMaxValue	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCAlphaMaxValue = 500.0;$/;"	v
g_RCAlphaMinValue	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCAlphaMinValue = 0.05;$/;"	v
g_RCBetaMaxValue	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCBetaMaxValue  = -0.1;$/;"	v
g_RCBetaMinValue	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCBetaMinValue  = -3.0;$/;"	v
g_RCInvalidQPValue	TLibEncoder/TEncRateCtrl.h	/^const Int g_RCInvalidQPValue = -999;$/;"	v
g_RCIterationNum	TLibEncoder/TEncRateCtrl.h	/^const Int g_RCIterationNum = 20;$/;"	v
g_RCLCUSmoothWindowSize	TLibEncoder/TEncRateCtrl.h	/^const Int g_RCLCUSmoothWindowSize = 4;$/;"	v
g_RCMaxPicListSize	TLibEncoder/TEncRateCtrl.h	/^const Int g_RCMaxPicListSize = 32;$/;"	v
g_RCSmoothWindowSize	TLibEncoder/TEncRateCtrl.h	/^const Int g_RCSmoothWindowSize = 40;$/;"	v
g_RCWeightCurrentLambda	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightCurrentLambda = 1.0 - g_RCWeightHistoryLambda;$/;"	v
g_RCWeightHistoryLambda	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightHistoryLambda = 0.5;$/;"	v
g_RCWeightPicRargetBitInBuffer	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightPicRargetBitInBuffer = 1.0 - g_RCWeightPicTargetBitInGOP;$/;"	v
g_RCWeightPicTargetBitInGOP	TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightPicTargetBitInGOP    = 0.9;$/;"	v
g_aiT16	TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT16[TRANSFORM_NUMBER_OF_DIRECTIONS][16][16] =$/;"	v
g_aiT32	TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT32[TRANSFORM_NUMBER_OF_DIRECTIONS][32][32] =$/;"	v
g_aiT4	TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT4 [TRANSFORM_NUMBER_OF_DIRECTIONS][4][4]   =$/;"	v
g_aiT8	TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT8 [TRANSFORM_NUMBER_OF_DIRECTIONS][8][8]   =$/;"	v
g_as_DST_MAT_4	TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_as_DST_MAT_4[TRANSFORM_NUMBER_OF_DIRECTIONS][4][4] =$/;"	v
g_aucChromaScale	TLibCommon/TComRom.cpp	/^const UChar g_aucChromaScale[NUM_CHROMA_FORMAT][chromaQPMappingTableSize]=$/;"	v
g_aucConvertToBit	TLibCommon/TComRom.cpp	/^SChar  g_aucConvertToBit  [ MAX_CU_SIZE+1 ];$/;"	v
g_aucIntraModeNumFast_NotUseMPM	TLibCommon/TComRom.cpp	/^const UChar g_aucIntraModeNumFast_NotUseMPM[MAX_CU_DEPTH] =$/;"	v
g_aucIntraModeNumFast_UseMPM	TLibCommon/TComRom.cpp	/^const UChar g_aucIntraModeNumFast_UseMPM[MAX_CU_DEPTH] =$/;"	v
g_auiPUOffset	TLibCommon/TComRom.cpp	/^const UInt g_auiPUOffset[NUMBER_OF_PART_SIZES] = { 0, 8, 4, 4, 2, 10, 1, 5};$/;"	v
g_auiRasterToPelX	TLibCommon/TComRom.cpp	/^UInt g_auiRasterToPelX  [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_auiRasterToPelY	TLibCommon/TComRom.cpp	/^UInt g_auiRasterToPelY  [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_auiRasterToZscan	TLibCommon/TComRom.cpp	/^UInt g_auiRasterToZscan [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_auiZscanToRaster	TLibCommon/TComRom.cpp	/^UInt g_auiZscanToRaster [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_bEncDecTraceDisable	TLibCommon/TComRom.cpp	/^const Bool g_bEncDecTraceDisable = false;$/;"	v
g_bEncDecTraceEnable	TLibCommon/TComRom.cpp	/^const Bool g_bEncDecTraceEnable  = true;$/;"	v
g_bJustDoIt	TLibCommon/TComRom.cpp	/^Bool   g_bJustDoIt = false;$/;"	v
g_chroma422IntraAngleMappingTable	TLibCommon/TComRom.cpp	/^const UChar g_chroma422IntraAngleMappingTable[NUM_INTRA_MODE] =$/;"	v
g_debugCounter	TLibCommon/Debug.cpp	/^UInt  g_debugCounter  = 0;$/;"	v
g_hTrace	TLibCommon/TComRom.cpp	/^FILE*  g_hTrace = NULL; \/\/ Set to NULL to open up a file. Set to stdout to use the current output$/;"	v
g_invQuantScales	TLibCommon/TComRom.cpp	/^const Int g_invQuantScales[SCALING_LIST_REM_NUM] =$/;"	v
g_nSymbolCounter	TLibCommon/TComRom.cpp	/^UInt64 g_nSymbolCounter = 0;$/;"	v
g_quantInterDefault8x8	TLibCommon/TComRom.cpp	/^const Int g_quantInterDefault8x8[8*8] =$/;"	v
g_quantIntraDefault8x8	TLibCommon/TComRom.cpp	/^const Int g_quantIntraDefault8x8[8*8] =$/;"	v
g_quantScales	TLibCommon/TComRom.cpp	/^const Int g_quantScales[SCALING_LIST_REM_NUM] =$/;"	v
g_quantTSDefault4x4	TLibCommon/TComRom.cpp	/^const Int g_quantTSDefault4x4[4*4] =$/;"	v
g_scalingListSize	TLibCommon/TComRom.cpp	/^const UInt g_scalingListSize   [SCALING_LIST_SIZE_NUM] = {16,64,256,1024};$/;"	v
g_scalingListSizeX	TLibCommon/TComRom.cpp	/^const UInt g_scalingListSizeX  [SCALING_LIST_SIZE_NUM] = { 4, 8, 16,  32};$/;"	v
g_scanOrder	TLibCommon/TComRom.cpp	/^UInt* g_scanOrder[SCAN_NUMBER_OF_GROUP_TYPES][SCAN_NUMBER_OF_TYPES][ MAX_CU_DEPTH ][ MAX_CU_DEPTH ];$/;"	v
g_transformMatrixShift	TLibCommon/TComRom.h	/^static const Int g_transformMatrixShift[TRANSFORM_NUMBER_OF_DIRECTIONS] = {  6, 6 };$/;"	v
g_transformMatrixShift	TLibCommon/TComRom.h	/^static const Int g_transformMatrixShift[TRANSFORM_NUMBER_OF_DIRECTIONS] = { 14, 6 };$/;"	v
g_uiGroupIdx	TLibCommon/TComRom.cpp	/^const UInt g_uiGroupIdx[ MAX_TU_SIZE ]   = {0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9};$/;"	v
g_uiMinInGroup	TLibCommon/TComRom.cpp	/^const UInt g_uiMinInGroup[ LAST_SIGNIFICANT_GROUPS ] = {0,1,2,3,4,6,8,12,16,24};$/;"	v
gaussianLUT	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const int8_t gaussianLUT[2048] =$/;"	v	file:
generalIntraConstraintFlag	TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     generalIntraConstraintFlag;$/;"	m	struct:ProfileFeatures
generalIntraConstraintFlag	TLibDecoder/TDecConformance.h	/^  Bool                     generalIntraConstraintFlag;$/;"	m	struct:ProfileFeatures
generalLowerBitRateConstraint	TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 generalLowerBitRateConstraint;$/;"	m	struct:ProfileFeatures
generalLowerBitRateConstraint	TLibDecoder/TDecConformance.h	/^  TRISTATE                 generalLowerBitRateConstraint;$/;"	m	struct:ProfileFeatures
generalOnePictureOnlyConstraintFlag	TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     generalOnePictureOnlyConstraintFlag;$/;"	m	struct:ProfileFeatures
generalOnePictureOnlyConstraintFlag	TLibDecoder/TDecConformance.h	/^  Bool                     generalOnePictureOnlyConstraintFlag;$/;"	m	struct:ProfileFeatures
generalRExtToolsEnabled	TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 generalRExtToolsEnabled;$/;"	m	struct:ProfileFeatures
generalRExtToolsEnabled	TLibDecoder/TDecConformance.h	/^  TRISTATE                 generalRExtToolsEnabled;$/;"	m	struct:ProfileFeatures
generatePPS_RBSP	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::generatePPS_RBSP(TComBitIf* rbsp, const TComPPS *pps)$/;"	f	class:TEncGOP
generateSPS_RBSP	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::generateSPS_RBSP(TComBitIf* rbsp, const TComSPS *sps)$/;"	f	class:TEncGOP
generateVPS_RBSP	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::generateVPS_RBSP(TComBitIf* rbsp, const TComVPS *vps)$/;"	f	class:TEncGOP
get	TLibCommon/ContextModel3DBuffer.h	/^  ContextModel& get( UInt uiZ, UInt uiY, UInt uiX )$/;"	f	class:ContextModel3DBuffer
get	TLibCommon/ContextModel3DBuffer.h	/^  ContextModel* get( UInt uiZ )$/;"	f	class:ContextModel3DBuffer
get	TLibCommon/ContextModel3DBuffer.h	/^  ContextModel* get( UInt uiZ, UInt uiY )$/;"	f	class:ContextModel3DBuffer
get	TLibEncoder/TEncTemporalFilter.h	/^  T& get(UInt x, UInt y)$/;"	f	struct:Array2D
get	TLibEncoder/TEncTemporalFilter.h	/^  const T& get(UInt x, UInt y) const$/;"	f	struct:Array2D
getAMVPInfo	TLibCommon/TComMotionInfo.h	/^  AMVPInfo* getAMVPInfo () { return &m_cAMVPInfo; }$/;"	f	class:TComCUMvField
getAQLayer	TLibEncoder/TEncPic.h	/^  TEncPicQPAdaptationLayer* getAQLayer( UInt uiDepth )  { return &m_acAQLayer[uiDepth]; }$/;"	f	class:TEncPic
getAQPartHeight	TLibEncoder/TEncPic.h	/^  UInt                   getAQPartHeight()       { return m_uiAQPartHeight;      }$/;"	f	class:TEncPicQPAdaptationLayer
getAQPartStride	TLibEncoder/TEncPic.h	/^  UInt                   getAQPartStride()       { return m_uiNumAQPartInWidth;  }$/;"	f	class:TEncPicQPAdaptationLayer
getAQPartWidth	TLibEncoder/TEncPic.h	/^  UInt                   getAQPartWidth()        { return m_uiAQPartWidth;       }$/;"	f	class:TEncPicQPAdaptationLayer
getAbsHor	TLibCommon/TComMv.h	/^  Int   getAbsHor () const { return abs( m_iHor );   }$/;"	f	class:TComMv
getAbsVer	TLibCommon/TComMv.h	/^  Int   getAbsVer () const { return abs( m_iVer );   }$/;"	f	class:TComMv
getAccessUnitDelimiter	TLibEncoder/TEncCfg.h	/^  Bool      getAccessUnitDelimiter() const  { return m_AccessUnitDelimiter; }$/;"	f	class:TEncCfg
getActiveParameterSetsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Int          getActiveParameterSetsSEIEnabled ()                   { return m_activeParameterSetsSEIEnabled; }$/;"	f	class:TEncCfg
getActiveSPS	TLibCommon/TComSlice.h	/^  const TComSPS* getActiveSPS()const { return m_spsMap.getPS(m_activeSPSId); };$/;"	f	class:ParameterSetManager
getActiveVPS	TLibCommon/TComSlice.h	/^  const TComVPS* getActiveVPS()const { return m_vpsMap.getPS(m_activeVPSId); };$/;"	f	class:ParameterSetManager
getActivity	TLibEncoder/TEncPic.h	/^  Double getActivity()           { return m_dActivity; }$/;"	f	class:TEncQPAdaptationUnit
getAdaptiveBits	TLibEncoder/TEncRateCtrl.h	/^  Int    getAdaptiveBits()              { return m_adaptiveBit;  }$/;"	f	class:TEncRCSeq
getAddr	TLibCommon/TComPicYuv.h	/^  Pel*          getAddr           (const ComponentID ch)       { return  m_piPicOrg[ch];   }$/;"	f	class:TComPicYuv
getAddr	TLibCommon/TComPicYuv.h	/^  Pel*          getAddr           (const ComponentID ch, const Int ctuRSAddr )       { return m_piPicOrg[ch] + m_ctuOffsetInBuffer[ch==0?0:1][ ctuRSAddr ]; }$/;"	f	class:TComPicYuv
getAddr	TLibCommon/TComPicYuv.h	/^  Pel*          getAddr           (const ComponentID ch, const Int ctuRSAddr, const Int uiAbsZorderIdx )$/;"	f	class:TComPicYuv
getAddr	TLibCommon/TComPicYuv.h	/^  const Pel*    getAddr           (const ComponentID ch) const { return  m_piPicOrg[ch];   }$/;"	f	class:TComPicYuv
getAddr	TLibCommon/TComPicYuv.h	/^  const Pel*    getAddr           (const ComponentID ch, const Int ctuRSAddr ) const { return m_piPicOrg[ch] + m_ctuOffsetInBuffer[ch==0?0:1][ ctuRSAddr ]; }$/;"	f	class:TComPicYuv
getAddr	TLibCommon/TComPicYuv.h	/^  const Pel*    getAddr           (const ComponentID ch, const Int ctuRSAddr, const Int uiAbsZorderIdx ) const$/;"	f	class:TComPicYuv
getAddr	TLibCommon/TComYuv.h	/^  Pel*         getAddr                    (const ComponentID id)                    { return m_apiBuf[id]; }$/;"	f	class:TComYuv
getAddr	TLibCommon/TComYuv.h	/^  Pel*         getAddr                    (const ComponentID id, const UInt iTransUnitIdx, const UInt iBlkSizeForComponent)$/;"	f	class:TComYuv
getAddr	TLibCommon/TComYuv.h	/^  Pel*         getAddr                    (const ComponentID id, const UInt uiPartUnitIdx)$/;"	f	class:TComYuv
getAddr	TLibCommon/TComYuv.h	/^  const Pel*   getAddr                    (const ComponentID id) const              { return m_apiBuf[id]; }$/;"	f	class:TComYuv
getAddr	TLibCommon/TComYuv.h	/^  const Pel*   getAddr                    (const ComponentID id, const UInt iTransUnitIdx, const UInt iBlkSizeForComponent) const$/;"	f	class:TComYuv
getAddr	TLibCommon/TComYuv.h	/^  const Pel*   getAddr                    (const ComponentID id, const UInt uiPartUnitIdx) const$/;"	f	class:TComYuv
getAddrPix	TLibCommon/TComYuv.h	/^  Pel*         getAddrPix                 (const ComponentID id, const UInt iPixX, const UInt iPixY )       { return m_apiBuf[id] + iPixY * getStride(id) + iPixX; }$/;"	f	class:TComYuv
getAddrPix	TLibCommon/TComYuv.h	/^  const Pel*   getAddrPix                 (const ComponentID id, const UInt iPixX, const UInt iPixY ) const { return m_apiBuf[id] + iPixY * getStride(id) + iPixX; }$/;"	f	class:TComYuv
getAllowedChromaDir	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getAllowedChromaDir( UInt uiAbsPartIdx, UInt uiModeList[NUM_CHROMA_MODE] ) const$/;"	f	class:TComDataCU
getAlphaUpdate	TLibEncoder/TEncRateCtrl.h	/^  Double getAlphaUpdate()               { return m_alphaUpdate; }$/;"	f	class:TEncRCSeq
getAmbientViewingEnvironmentSEIAmbientLightX	TLibEncoder/TEncCfg.h	/^  UShort getAmbientViewingEnvironmentSEIAmbientLightX()              { return m_aveSEIAmbientLightX; }$/;"	f	class:TEncCfg
getAmbientViewingEnvironmentSEIAmbientLightY	TLibEncoder/TEncCfg.h	/^  UShort getAmbientViewingEnvironmentSEIAmbientLightY()              { return m_aveSEIAmbientLightY; }$/;"	f	class:TEncCfg
getAmbientViewingEnvironmentSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getAmbientViewingEnvironmentSEIEnabled ()                    { return m_aveSEIEnabled; }$/;"	f	class:TEncCfg
getAmbientViewingEnvironmentSEIIlluminance	TLibEncoder/TEncCfg.h	/^  UInt  getAmbientViewingEnvironmentSEIIlluminance()                 { return m_aveSEIAmbientIlluminance; }$/;"	f	class:TEncCfg
getAnalyzeAllData	TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzeAllData() { return m_gcAnalyzeAll; }$/;"	f	class:TEncGOP
getAnalyzeBData	TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzeBData()   { return m_gcAnalyzeB; }$/;"	f	class:TEncGOP
getAnalyzeIData	TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzeIData()   { return m_gcAnalyzeI; }$/;"	f	class:TEncGOP
getAnalyzePData	TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzePData()   { return m_gcAnalyzeP; }$/;"	f	class:TEncGOP
getAnnotatedRegionSEIFileRoot	TLibEncoder/TEncCfg.h	/^  const std::string &getAnnotatedRegionSEIFileRoot() const           { return m_arSEIFileRoot; }$/;"	f	class:TEncCfg
getApcSlicePilot	TLibDecoder/TDecTop.h	/^  TComSlice* getApcSlicePilot() { return m_apcSlicePilot; }$/;"	f	class:TDecTop
getArlCoeff	TLibCommon/TComDataCU.h	/^  TCoeff*       getArlCoeff                   ( ComponentID component )                                    { return m_pcArlCoeff[component];            }$/;"	f	class:TComDataCU
getAspectRatioIdc	TLibCommon/TComSlice.h	/^  Int               getAspectRatioIdc() const                              { return m_aspectRatioIdc;                       }$/;"	f	class:TComVUI
getAspectRatioIdc	TLibEncoder/TEncCfg.h	/^  Int          getAspectRatioIdc()                                   { return m_aspectRatioIdc; }$/;"	f	class:TEncCfg
getAspectRatioInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getAspectRatioInfoPresentFlag() const                  { return m_aspectRatioInfoPresentFlag;           }$/;"	f	class:TComVUI
getAspectRatioInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getAspectRatioInfoPresentFlag()                       { return m_aspectRatioInfoPresentFlag; }$/;"	f	class:TEncCfg
getAssociatedIRAPPOC	TLibCommon/TComSlice.h	/^  Int                         getAssociatedIRAPPOC() const                           { return m_iAssociatedIRAP;                                     }$/;"	f	class:TComSlice
getAssociatedIRAPType	TLibCommon/TComSlice.h	/^  NalUnitType                 getAssociatedIRAPType() const                          { return m_iAssociatedIRAPType;                                 }$/;"	f	class:TComSlice
getAverageBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getAverageBits()                 { return m_averageBits; }$/;"	f	class:TEncRCSeq
getAvgActivity	TLibEncoder/TEncPic.h	/^  Double                 getAvgActivity()        { return m_dAvgActivity;        }$/;"	f	class:TEncPicQPAdaptationLayer
getBaseQP	TLibEncoder/TEncCfg.h	/^  Int       getBaseQP                       () const { return  m_iQP; } \/\/ public should use getQPForPicture.$/;"	f	class:TEncCfg
getBeta	TLibCommon/TComLoopFilter.h	/^  static Int getBeta( Int qp )$/;"	f	class:TComLoopFilter
getBetaUpdate	TLibEncoder/TEncRateCtrl.h	/^  Double getBetaUpdate()                { return m_betaUpdate; }$/;"	f	class:TEncRCSeq
getBinCABAC	TLibEncoder/TEncTop.h	/^  TEncBinCABAC*           getBinCABAC           () { return  &m_cBinCoderCABAC;       }$/;"	f	class:TEncTop
getBinCountingEnableFlag	TLibEncoder/TEncBinCoderCABAC.h	/^  Bool  getBinCountingEnableFlag  ()              { return m_binCountIncrement != 0;     }$/;"	f	class:TEncBinCABAC
getBinsCoded	TLibCommon/ContextModel.h	/^  UInt getBinsCoded()           { return m_binsCoded;   }$/;"	f	class:ContextModel
getBinsCoded	TLibEncoder/TEncBinCoderCABAC.h	/^  UInt  getBinsCoded              ()              { return m_uiBinsCoded;                }$/;"	f	class:TEncBinCABAC
getBitDepth	TLibCommon/TComSlice.h	/^  Int                    getBitDepth(ChannelType type) const                                             { return m_bitDepths.recon[type];                                      }$/;"	f	class:TComSPS
getBitDepthConstraint	TLibCommon/TComSlice.h	/^  UInt          getBitDepthConstraint() const               { return m_bitDepthConstraintValue;     }$/;"	f	class:ProfileTierLevel
getBitDepthConstraintValue	TLibEncoder/TEncCfg.h	/^  UInt         getBitDepthConstraintValue() const                    { return m_bitDepthConstraintValue; }$/;"	f	class:TEncCfg
getBitDepthY	TLibCommon/TComPattern.h	/^  Int   getBitDepthY() const      { return m_bitDepth;       }$/;"	f	class:TComPattern
getBitDepths	TLibCommon/TComSlice.h	/^  const BitDepths&       getBitDepths() const                                                            { return m_bitDepths;                                                  }$/;"	f	class:TComSPS
getBitRateScale	TLibCommon/TComSlice.h	/^  UInt    getBitRateScale( ) const                                                   { return m_bitRateScale;                                     }$/;"	f	class:TComHRD
getBitRateValueMinus1	TLibCommon/TComSlice.h	/^  UInt    getBitRateValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl ) const         { return m_HRD[layer].bitRateValueMinus1[cpbcnt][nalOrVcl];  }$/;"	f	class:TComHRD
getBitRatio	TLibEncoder/TEncRateCtrl.h	/^  Int  getBitRatio( Int idx )           { assert( idx<m_GOPSize); return m_bitsRatio[idx]; }$/;"	f	class:TEncRCSeq
getBitRatio	TLibEncoder/TEncRateCtrl.h	/^  Int* getBitRatio()                    { return m_bitsRatio; }$/;"	f	class:TEncRCSeq
getBits	TLibEncoder/TEncAnalyze.h	/^  Double  getBits()                   const { return m_runningTotal.bits;   }$/;"	f	class:TEncAnalyze
getBitsCoded	TLibEncoder/TEncRateCtrl.h	/^  Int  getBitsCoded()                                     { return m_targetBits - m_estHeaderBits - m_bitsLeft; }$/;"	f	class:TEncRCPic
getBitsForPOC	TLibCommon/TComSlice.h	/^  UInt                   getBitsForPOC() const                                                           { return m_uiBitsForPOC;                                               }$/;"	f	class:TComSPS
getBitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int  getBitsLeft()                                      { return m_bitsLeft; }$/;"	f	class:TEncRCPic
getBitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int  getBitsLeft()              { return m_bitsLeft; }$/;"	f	class:TEncRCGOP
getBitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int64  getBitsLeft()                  { return m_bitsLeft; }$/;"	f	class:TEncRCSeq
getBitsOfVectorWithPredictor	TLibCommon/TComRdCost.h	/^  UInt getBitsOfVectorWithPredictor( const Int x, const Int y )$/;"	f	class:TComRdCost
getBitstream	TLibDecoder/NALread.h	/^          TComInputBitstream &getBitstream()       { return m_Bitstream; }$/;"	f	class:InputNALUnit
getBitstream	TLibDecoder/NALread.h	/^    const TComInputBitstream &getBitstream() const { return m_Bitstream; }$/;"	f	class:InputNALUnit
getBitstream	TLibDecoder/SyntaxElementParser.h	/^  TComInputBitstream* getBitstream() { return m_pcBitstream; }$/;"	f	class:SyntaxElementParser
getBitstreamRestrictionFlag	TLibCommon/TComSlice.h	/^  Bool              getBitstreamRestrictionFlag() const                    { return m_bitstreamRestrictionFlag;             }$/;"	f	class:TComVUI
getBitstreamRestrictionFlag	TLibEncoder/TEncCfg.h	/^  Bool         getBitstreamRestrictionFlag()                         { return m_bitstreamRestrictionFlag; }$/;"	f	class:TEncCfg
getBlkStats	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::getBlkStats(const ComponentID compIdx, const Int channelBitDepth, SAOStatData* statsDataTypes$/;"	f	class:TEncSampleAdaptiveOffset
getBottomEdgePosInCtus	TLibCommon/TComPicSym.h	/^  UInt      getBottomEdgePosInCtus () const              { return m_bottomEdgePosInCtus; }$/;"	f	class:TComTile
getBuf	TLibCommon/TComPicYuv.h	/^  Pel*          getBuf            (const ComponentID ch)       { return  m_apiPicBuf[ch];   }$/;"	f	class:TComPicYuv
getBuf	TLibCommon/TComPicYuv.h	/^  const Pel*    getBuf            (const ComponentID ch) const { return  m_apiPicBuf[ch];   }$/;"	f	class:TComPicYuv
getBufferingPeriodSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getBufferingPeriodSEIEnabled() const                         { return m_bufferingPeriodSEIEnabled; }$/;"	f	class:TEncCfg
getBufferingRate	TLibEncoder/TEncRateCtrl.h	/^  UInt       getBufferingRate()         { return m_bufferingRate;  }$/;"	f	class:TEncRateCtrl
getByteLocation	TLibCommon/TComBitStream.h	/^  UInt  getByteLocation              ( )                     { return m_fifo_idx                    ; }$/;"	f	class:TComInputBitstream
getByteStream	TLibCommon/TComBitStream.cpp	/^UChar* TComOutputBitstream::getByteStream() const$/;"	f	class:TComOutputBitstream
getByteStreamLength	TLibCommon/TComBitStream.cpp	/^UInt TComOutputBitstream::getByteStreamLength()$/;"	f	class:TComOutputBitstream
getCBFContextOffset	TLibCommon/TComChromaFormat.h	/^static inline UInt getCBFContextOffset (const ComponentID component)$/;"	f
getCLLSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getCLLSEIEnabled()                                           { return m_cllSEIEnabled; }$/;"	f	class:TEncCfg
getCLLSEIMaxContentLightLevel	TLibEncoder/TEncCfg.h	/^  UShort  getCLLSEIMaxContentLightLevel()                            { return m_cllSEIMaxContentLevel; }$/;"	f	class:TEncCfg
getCLLSEIMaxPicAvgLightLevel	TLibEncoder/TEncCfg.h	/^  UShort  getCLLSEIMaxPicAvgLightLevel()                             { return m_cllSEIMaxPicAvgLevel; }$/;"	f	class:TEncCfg
getCU	TLibCommon/TComTU.h	/^    TComDataCU *getCU()                                              { return mpcCU; }$/;"	f	class:TComTU
getCU	TLibCommon/TComTU.h	/^    const TComDataCU *getCU()                                  const { return mpcCU; }$/;"	f	class:TComTU
getCUDepth	TLibCommon/TComTU.h	/^    UInt getCUDepth()                                          const { return mCuDepth; }$/;"	f	class:TComTU
getCUEncoder	TLibEncoder/TEncSlice.h	/^  TEncCu*        getCUEncoder() { return m_pcCuEncoder; }                        \/\/\/< CU encoder$/;"	f	class:TEncSlice
getCUMvField	TLibCommon/TComDataCU.h	/^        TComCUMvField* getCUMvField           ( RefPicList e )                                             { return &m_acCUMvField[e];                  }$/;"	f	class:TComDataCU
getCUMvField	TLibCommon/TComDataCU.h	/^  const TComCUMvField* getCUMvField           ( RefPicList e ) const                                       { return &m_acCUMvField[e];                  }$/;"	f	class:TComDataCU
getCUMvField	TLibCommon/TComPicSym.h	/^    const TComCUMvField* getCUMvField ( RefPicList e )  const { return &m_CUMvField[e];                  }$/;"	f	struct:TComPicSym::DPBPerCtuData
getCUPelX	TLibCommon/TComDataCU.h	/^  UInt          getCUPelX                     ( ) const                                                    { return m_uiCUPelX;                         }$/;"	f	class:TComDataCU
getCUPelY	TLibCommon/TComDataCU.h	/^  UInt          getCUPelY                     ( ) const                                                    { return m_uiCUPelY;                         }$/;"	f	class:TComDataCU
getCUTransquantBypass	TLibCommon/TComDataCU.h	/^  Bool          getCUTransquantBypass         ( UInt uiIdx ) const                                         { return m_CUTransquantBypass[uiIdx];        }$/;"	f	class:TComDataCU
getCUTransquantBypass	TLibCommon/TComDataCU.h	/^  Bool*         getCUTransquantBypass         ( )                                                          { return m_CUTransquantBypass;               }$/;"	f	class:TComDataCU
getCUTransquantBypassFlagForceValue	TLibEncoder/TEncCfg.h	/^  Bool         getCUTransquantBypassFlagForceValue()                 { return m_CUTransquantBypassFlagForce; }$/;"	f	class:TEncCfg
getCabacBypassAlignmentEnabledFlag	TLibCommon/TComSlice.h	/^  Bool getCabacBypassAlignmentEnabledFlag() const                                      { return m_cabacBypassAlignmentEnabledFlag;      }$/;"	f	class:TComSPSRExt
getCabacBypassAlignmentEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool getCabacBypassAlignmentEnabledFlag              ()       const      { return m_cabacBypassAlignmentEnabledFlag;  }$/;"	f	class:TEncCfg
getCabacInitFlag	TLibCommon/TComSlice.h	/^  Bool                        getCabacInitFlag()                                     { return m_cabacInitFlag;                                       } \/\/!< get CABAC initial flag$/;"	f	class:TComSlice
getCabacInitPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getCabacInitPresentFlag() const                                  { return m_cabacInitPresentFlag;                }$/;"	f	class:TComPPS
getCabacZeroWordPaddingEnabled	TLibEncoder/TEncCfg.h	/^  Bool      getCabacZeroWordPaddingEnabled()           const { return m_cabacZeroWordPaddingEnabled;  }$/;"	f	class:TEncCfg
getCavlcCoder	TLibEncoder/TEncTop.h	/^  TEncCavlc*              getCavlcCoder         () { return  &m_cCavlcCoder;          }$/;"	f	class:TEncTop
getCbf	TLibCommon/TComDataCU.h	/^  UChar         getCbf                        ( UInt uiIdx, ComponentID eType ) const                      { return m_puhCbf[eType][uiIdx];             }$/;"	f	class:TComDataCU
getCbf	TLibCommon/TComDataCU.h	/^  UChar         getCbf                        ( UInt uiIdx, ComponentID eType, UInt uiTrDepth ) const      { return ( ( getCbf( uiIdx, eType ) >> uiTrDepth ) & 0x1 ); }$/;"	f	class:TComDataCU
getCbf	TLibCommon/TComDataCU.h	/^  UChar*        getCbf                        ( ComponentID eType )                                        { return m_puhCbf[eType];                    }$/;"	f	class:TComDataCU
getCbrFlag	TLibCommon/TComSlice.h	/^  Bool    getCbrFlag( Int layer, Int cpbcnt, Int nalOrVcl ) const                    { return m_HRD[layer].cbrFlag[cpbcnt][nalOrVcl];             }$/;"	f	class:TComHRD
getCcvSEIAvgLuminanceValue	TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIAvgLuminanceValue  ()                            { return m_ccvSEIAvgLuminanceValue;  }$/;"	f	class:TEncCfg
getCcvSEIAvgLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIAvgLuminanceValuePresentFlag()                   { return m_ccvSEIAvgLuminanceValuePresentFlag; }$/;"	f	class:TEncCfg
getCcvSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEICancelFlag()                                     { return m_ccvSEICancelFlag; }$/;"	f	class:TEncCfg
getCcvSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIEnabled()                                        { return m_ccvSEIEnabled; }$/;"	f	class:TEncCfg
getCcvSEIMaxLuminanceValue	TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIMaxLuminanceValue  ()                            { return m_ccvSEIMaxLuminanceValue;  }$/;"	f	class:TEncCfg
getCcvSEIMaxLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIMaxLuminanceValuePresentFlag()                   { return m_ccvSEIMaxLuminanceValuePresentFlag; }$/;"	f	class:TEncCfg
getCcvSEIMinLuminanceValue	TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIMinLuminanceValue  ()                            { return m_ccvSEIMinLuminanceValue;  }$/;"	f	class:TEncCfg
getCcvSEIMinLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIMinLuminanceValuePresentFlag()                   { return m_ccvSEIMinLuminanceValuePresentFlag; }$/;"	f	class:TEncCfg
getCcvSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIPersistenceFlag()                                { return m_ccvSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getCcvSEIPrimariesPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIPrimariesPresentFlag()                           { return m_ccvSEIPrimariesPresentFlag; }$/;"	f	class:TEncCfg
getCcvSEIPrimariesX	TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIPrimariesX(Int index)                            { return m_ccvSEIPrimariesX[index]; }$/;"	f	class:TEncCfg
getCcvSEIPrimariesY	TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIPrimariesY(Int index)                            { return m_ccvSEIPrimariesY[index]; }$/;"	f	class:TEncCfg
getChangedFlag	TLibCommon/TComSlice.h	/^  Bool getChangedFlag(Int psId) const$/;"	f	class:ParameterSetMap
getChannelTypeScaleX	TLibCommon/TComChromaFormat.h	/^static inline UInt        getChannelTypeScaleX      (const ChannelType id, const ChromaFormat fmt) { return (isLuma(id) || (fmt==CHROMA_444)) ? 0 : 1;                  }$/;"	f
getChannelTypeScaleX	TLibCommon/TComPicYuv.h	/^  UInt          getChannelTypeScaleX(const ChannelType id) const { return ::getChannelTypeScaleX(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getChannelTypeScaleY	TLibCommon/TComChromaFormat.h	/^static inline UInt        getChannelTypeScaleY      (const ChannelType id, const ChromaFormat fmt) { return (isLuma(id) || (fmt!=CHROMA_420)) ? 0 : 1;                  }$/;"	f
getChannelTypeScaleY	TLibCommon/TComPicYuv.h	/^  UInt          getChannelTypeScaleY(const ChannelType id) const { return ::getChannelTypeScaleY(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getCheckLDC	TLibCommon/TComSlice.h	/^  Bool                        getCheckLDC() const                                    { return m_bCheckLDC;                                           }$/;"	f	class:TComSlice
getCheckLTMSBPresent	TLibCommon/TComPic.h	/^  Bool          getCheckLTMSBPresent     () { return m_bCheckLTMSB;}$/;"	f	class:TComPic
getCheckLTMSBPresent	TLibCommon/TComSlice.cpp	/^Bool TComReferencePictureSet::getCheckLTMSBPresent(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getChromaFormat	TLibCommon/TComPic.h	/^  ChromaFormat  getChromaFormat() const                           { return m_apcPicYuv[PIC_YUV_REC]->getChromaFormat(); }$/;"	f	class:TComPic
getChromaFormat	TLibCommon/TComPicYuv.h	/^  ChromaFormat  getChromaFormat   ()                     const { return m_chromaFormatIDC; }$/;"	f	class:TComPicYuv
getChromaFormat	TLibCommon/TComPrediction.h	/^  ChromaFormat getChromaFormat() const { return m_cYuvPredTemp.getChromaFormat(); }$/;"	f	class:TComPrediction
getChromaFormat	TLibCommon/TComYuv.h	/^  ChromaFormat getChromaFormat            ()                     const { return m_chromaFormatIDC; }$/;"	f	class:TComYuv
getChromaFormatConstraint	TLibCommon/TComSlice.h	/^  ChromaFormat  getChromaFormatConstraint() const           { return m_chromaFormatConstraintValue; }$/;"	f	class:ProfileTierLevel
getChromaFormatConstraintValue	TLibEncoder/TEncCfg.h	/^  ChromaFormat getChromaFormatConstraintValue() const                { return m_chromaFormatConstraintValue; }$/;"	f	class:TEncCfg
getChromaFormatIdc	TLibCommon/TComSlice.h	/^  ChromaFormat           getChromaFormatIdc () const                                                     { return m_chromaFormatIdc;                                            }$/;"	f	class:TComSPS
getChromaFormatIdc	TLibEncoder/TEncCfg.h	/^  ChromaFormat  getChromaFormatIdc          ( )              { return m_chromaFormatIDC; }$/;"	f	class:TEncCfg
getChromaLocInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getChromaLocInfoPresentFlag() const                    { return m_chromaLocInfoPresentFlag;             }$/;"	f	class:TComVUI
getChromaLocInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getChromaLocInfoPresentFlag()                         { return m_chromaLocInfoPresentFlag; }$/;"	f	class:TEncCfg
getChromaQpAdj	TLibCommon/TComDataCU.h	/^  UChar         getChromaQpAdj                ( Int idx ) const                                            { return m_ChromaQpAdj[idx];                 } \/\/\/< When value = 0, cu_chroma_qp_offset_flag=0; when value>0, indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=value-1$/;"	f	class:TComDataCU
getChromaQpAdj	TLibCommon/TComDataCU.h	/^  UChar*        getChromaQpAdj                ( )                                                          { return m_ChromaQpAdj;                      } \/\/\/< array of chroma QP adjustments (indexed). when value = 0, cu_chroma_qp_offset_flag=0; when value>0, indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=value-1$/;"	f	class:TComDataCU
getChromaQpOffsetListEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getChromaQpOffsetListEnabledFlag() const                         { return getChromaQpOffsetListLen()>0;            }$/;"	f	class:TComPPSRExt
getChromaQpOffsetListEntry	TLibCommon/TComSlice.h	/^  const ChromaQpAdj&     getChromaQpOffsetListEntry( Int cuChromaQpOffsetIdxPlus1 ) const$/;"	f	class:TComPPSRExt
getChromaQpOffsetListLen	TLibCommon/TComSlice.h	/^  Int                    getChromaQpOffsetListLen() const                                 { return m_chromaQpOffsetListLen;                 }$/;"	f	class:TComPPSRExt
getChromaResamplingFilterHintEnabled	TLibEncoder/TEncCfg.h	/^  Bool         getChromaResamplingFilterHintEnabled()                { return m_chromaResamplingFilterHintEnabled;}$/;"	f	class:TEncCfg
getChromaResamplingHorFilterIdc	TLibEncoder/TEncCfg.h	/^  Int          getChromaResamplingHorFilterIdc()                     { return m_chromaResamplingHorFilterIdc;}$/;"	f	class:TEncCfg
getChromaResamplingVerFilterIdc	TLibEncoder/TEncCfg.h	/^  Int          getChromaResamplingVerFilterIdc()                     { return m_chromaResamplingVerFilterIdc;}$/;"	f	class:TEncCfg
getChromaSampleLocTypeBottomField	TLibCommon/TComSlice.h	/^  Int               getChromaSampleLocTypeBottomField() const              { return m_chromaSampleLocTypeBottomField;       }$/;"	f	class:TComVUI
getChromaSampleLocTypeBottomField	TLibEncoder/TEncCfg.h	/^  Int          getChromaSampleLocTypeBottomField()                   { return m_chromaSampleLocTypeBottomField; }$/;"	f	class:TEncCfg
getChromaSampleLocTypeTopField	TLibCommon/TComSlice.h	/^  Int               getChromaSampleLocTypeTopField() const                 { return m_chromaSampleLocTypeTopField;          }$/;"	f	class:TComVUI
getChromaSampleLocTypeTopField	TLibEncoder/TEncCfg.h	/^  Int          getChromaSampleLocTypeTopField()                      { return m_chromaSampleLocTypeTopField; }$/;"	f	class:TEncCfg
getChromaWeight	TLibCommon/TComRdCost.h	/^  Double  getChromaWeight () { return ((m_distortionWeight[COMPONENT_Cb] + m_distortionWeight[COMPONENT_Cr]) \/ 2.0); }$/;"	f	class:TComRdCost
getChromasCorrespondingPULumaIdx	TLibCommon/TComChromaFormat.h	/^getChromasCorrespondingPULumaIdx(const UInt lumaZOrderIdxInCtu,$/;"	f
getClipForBiPredMeEnabled	TLibEncoder/TEncCfg.h	/^  Bool      getClipForBiPredMeEnabled          () const { return m_bClipForBiPredMeEnabled; }$/;"	f	class:TEncCfg
getCmpSEICmpCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCmpSEICmpCancelFlag()                                  { return m_cmpSEICmpCancelFlag; }$/;"	f	class:TEncCfg
getCmpSEICmpPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool     getCmpSEICmpPersistenceFlag()                             { return m_cmpSEICmpPersistenceFlag; }$/;"	f	class:TEncCfg
getCmpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool     getCmpSEIEnabled()                                        { return m_cmpSEIEnabled; }$/;"	f	class:TEncCfg
getCodeChromaQpAdjFlag	TLibEncoder/TEncCu.h	/^  Bool getCodeChromaQpAdjFlag() { return m_stillToCodeChromaQpOffsetFlag; }$/;"	f	class:TEncCu
getCodedChromaQpAdj	TLibCommon/TComDataCU.h	/^  SChar         getCodedChromaQpAdj           ( ) const                                                    { return m_codedChromaQpAdj;                 }$/;"	f	class:TComDataCU
getCodedQP	TLibCommon/TComDataCU.h	/^  SChar         getCodedQP                    ( ) const                                                    { return m_codedQP;                          }$/;"	f	class:TComDataCU
getCoefScanIdx	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCoefScanIdx(const UInt uiAbsPartIdx, const UInt uiWidth, const UInt uiHeight, const ComponentID compID) const$/;"	f	class:TComDataCU
getCoeff	TLibCommon/TComDataCU.h	/^  TCoeff*       getCoeff                      ( ComponentID component )                                    { return m_pcTrCoeff[component];             }$/;"	f	class:TComDataCU
getCoefficientOffset	TLibCommon/TComTU.h	/^    UInt getCoefficientOffset(const ComponentID compID)        const { return mOffsets[compID]; }$/;"	f	class:TComTU
getColFromL0Flag	TLibCommon/TComSlice.h	/^  Bool                        getColFromL0Flag() const                               { return m_colFromL0Flag;                                       }$/;"	f	class:TComSlice
getColRefIdx	TLibCommon/TComSlice.h	/^  UInt                        getColRefIdx() const                                   { return m_colRefIdx;                                           }$/;"	f	class:TComSlice
getColourDescriptionPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getColourDescriptionPresentFlag() const                { return m_colourDescriptionPresentFlag;         }$/;"	f	class:TComVUI
getColourDescriptionPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getColourDescriptionPresentFlag()                     { return m_colourDescriptionPresentFlag; }$/;"	f	class:TEncCfg
getColourPrimaries	TLibCommon/TComSlice.h	/^  Int               getColourPrimaries() const                             { return m_colourPrimaries;                      }$/;"	f	class:TComVUI
getColourPrimaries	TLibEncoder/TEncCfg.h	/^  Int          getColourPrimaries()                                  { return m_colourPrimaries; }$/;"	f	class:TEncCfg
getColourRemapInfoSEIFileRoot	TLibEncoder/TEncCfg.h	/^  const std::string &getColourRemapInfoSEIFileRoot() const           { return m_colourRemapSEIFileRoot; }$/;"	f	class:TEncCfg
getColumnWidth	TLibEncoder/TEncCfg.h	/^  UInt  getColumnWidth                 ( UInt columnIdx )            { return m_tileColumnWidth[columnIdx]; }$/;"	f	class:TEncCfg
getComponentScaleX	TLibCommon/TComChromaFormat.h	/^static inline UInt        getComponentScaleX        (const ComponentID id, const ChromaFormat fmt) { return getChannelTypeScaleX(toChannelType(id), fmt);               }$/;"	f
getComponentScaleX	TLibCommon/TComPic.h	/^  Int           getComponentScaleX(const ComponentID id) const    { return m_apcPicYuv[PIC_YUV_REC]->getComponentScaleX(id); }$/;"	f	class:TComPic
getComponentScaleX	TLibCommon/TComPicYuv.h	/^  UInt          getComponentScaleX(const ComponentID id) const { return ::getComponentScaleX(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getComponentScaleX	TLibCommon/TComYuv.h	/^  UInt         getComponentScaleX         (const ComponentID id) const { return ::getComponentScaleX(id, m_chromaFormatIDC); }$/;"	f	class:TComYuv
getComponentScaleY	TLibCommon/TComChromaFormat.h	/^static inline UInt        getComponentScaleY        (const ComponentID id, const ChromaFormat fmt) { return getChannelTypeScaleY(toChannelType(id), fmt);               }$/;"	f
getComponentScaleY	TLibCommon/TComPic.h	/^  Int           getComponentScaleY(const ComponentID id) const    { return m_apcPicYuv[PIC_YUV_REC]->getComponentScaleY(id); }$/;"	f	class:TComPic
getComponentScaleY	TLibCommon/TComPicYuv.h	/^  UInt          getComponentScaleY(const ComponentID id) const { return ::getComponentScaleY(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getComponentScaleY	TLibCommon/TComYuv.h	/^  UInt         getComponentScaleY         (const ComponentID id) const { return ::getComponentScaleY(id, m_chromaFormatIDC); }$/;"	f	class:TComYuv
getConformanceWindow	TLibCommon/TComPic.h	/^  const Window& getConformanceWindow() const { return m_picSym.getSPS().getConformanceWindow(); }$/;"	f	class:TComPic
getConformanceWindow	TLibCommon/TComSlice.h	/^  Window&                getConformanceWindow()                                                          { return  m_conformanceWindow;                                         }$/;"	f	class:TComSPS
getConformanceWindow	TLibCommon/TComSlice.h	/^  const Window&          getConformanceWindow() const                                                    { return  m_conformanceWindow;                                         }$/;"	f	class:TComSPS
getConformanceWindow	TLibEncoder/TEncCfg.h	/^  Window   &getConformanceWindow()                           { return m_conformanceWindow; }$/;"	f	class:TEncCfg
getConstrainedIntraPred	TLibCommon/TComSlice.h	/^  Bool                   getConstrainedIntraPred() const                                  { return  m_bConstrainedIntraPred;              }$/;"	f	class:TComPPS
getContextSetIndex	TLibCommon/TComChromaFormat.h	/^static inline UInt getContextSetIndex (const ComponentID  component,$/;"	f
getCost	TLibCommon/TComRdCost.h	/^  Distortion getCost( UInt b )                 { return Distortion(( m_motionLambda * b ) \/ 65536.0); }$/;"	f	class:TComRdCost
getCostMode	TLibEncoder/TEncCfg.h	/^  CostMode     getCostMode( ) const                                  { return m_costMode; }$/;"	f	class:TEncCfg
getCostOfVectorWithPredictor	TLibCommon/TComRdCost.h	/^  Distortion getCostOfVectorWithPredictor( const Int x, const Int y )$/;"	f	class:TComRdCost
getCpbCntMinus1	TLibCommon/TComSlice.h	/^  UInt    getCpbCntMinus1( Int layer ) const                                         { return m_HRD[layer].cpbCntMinus1;                          }$/;"	f	class:TComHRD
getCpbDpbDelaysPresentFlag	TLibCommon/TComSlice.h	/^  Bool    getCpbDpbDelaysPresentFlag( ) const                      { return getNalHrdParametersPresentFlag() || getVclHrdParametersPresentFlag(); }$/;"	f	class:TComHRD
getCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt    getCpbRemovalDelayLengthMinus1( ) const                                    { return m_cpbRemovalDelayLengthMinus1;                      }$/;"	f	class:TComHRD
getCpbSaturationEnabled	TLibEncoder/TEncCfg.h	/^  Bool         getCpbSaturationEnabled()                             { return m_RCCpbSaturationEnabled;}$/;"	f	class:TEncCfg
getCpbSaturationEnabled	TLibEncoder/TEncRateCtrl.h	/^  Bool       getCpbSaturationEnabled()  { return m_CpbSaturationEnabled;  }$/;"	f	class:TEncRateCtrl
getCpbSize	TLibEncoder/TEncCfg.h	/^  UInt         getCpbSize             ()                             { return m_RCCpbSize;}$/;"	f	class:TEncCfg
getCpbSize	TLibEncoder/TEncRateCtrl.h	/^  UInt       getCpbSize()               { return m_cpbSize;        }$/;"	f	class:TEncRateCtrl
getCpbSizeInBits	TLibCommon/ProfileLevelTierFeatures.h	/^    UInt64 getCpbSizeInBits()            const { return (m_pLevelTier!=0 && m_pProfile!=0) ? UInt64(m_pProfile->cpbVclFactor) * m_pLevelTier->maxCpb[m_tier?1:0] : UInt64(0); }$/;"	f	class:ProfileLevelTierFeatures
getCpbSizeInBits	TLibDecoder/TDecConformance.h	/^    UInt64 getCpbSizeInBits()            const { return (m_pLevelTier!=0 && m_pProfile!=0) ? UInt64(m_pProfile->cpbVclFactor) * m_pLevelTier->maxCpb[m_tier?1:0] : UInt64(0); }$/;"	f	class:ProfileLevelTierFeatures
getCpbSizeScale	TLibCommon/TComSlice.h	/^  UInt    getCpbSizeScale( ) const                                                   { return m_cpbSizeScale;                                     }$/;"	f	class:TComHRD
getCpbSizeValueMinus1	TLibCommon/TComSlice.h	/^  UInt    getCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl ) const         { return m_HRD[layer].cpbSizeValue[cpbcnt][nalOrVcl];        }$/;"	f	class:TComHRD
getCpbState	TLibEncoder/TEncRateCtrl.h	/^  UInt       getCpbState()              { return m_cpbState;       }$/;"	f	class:TEncRateCtrl
getCprmsPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getCprmsPresentFlag( UInt i ) const                  { return m_cprmsPresentFlag[ i ];                                  }$/;"	f	class:TComVPS
getCrossComponentPredictionAlpha	TLibCommon/TComDataCU.h	/^  SChar         getCrossComponentPredictionAlpha( UInt uiIdx, ComponentID compID )                         { return m_crossComponentPredictionAlpha[compID][uiIdx]; }$/;"	f	class:TComDataCU
getCrossComponentPredictionAlpha	TLibCommon/TComDataCU.h	/^  SChar*        getCrossComponentPredictionAlpha( ComponentID compID )                                     { return m_crossComponentPredictionAlpha[compID];        }$/;"	f	class:TComDataCU
getCrossComponentPredictionEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getCrossComponentPredictionEnabledFlag() const                   { return m_crossComponentPredictionEnabledFlag;   }$/;"	f	class:TComPPSRExt
getCrossComponentPredictionEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      getCrossComponentPredictionEnabledFlag     ()                const { return m_crossComponentPredictionEnabledFlag;   }$/;"	f	class:TEncCfg
getCtu	TLibCommon/TComPic.h	/^  TComDataCU*   getCtu( UInt ctuRsAddr )           { return  m_picSym.getCtu( ctuRsAddr ); }$/;"	f	class:TComPic
getCtu	TLibCommon/TComPic.h	/^  const TComDataCU* getCtu( UInt ctuRsAddr ) const { return  m_picSym.getCtu( ctuRsAddr ); }$/;"	f	class:TComPic
getCtu	TLibCommon/TComPicSym.h	/^  TComDataCU*        getCtu( UInt ctuRsAddr )                              { return m_pictureCtuArray[ctuRsAddr];  }$/;"	f	class:TComPicSym
getCtu	TLibCommon/TComPicSym.h	/^  const TComDataCU*  getCtu( UInt ctuRsAddr ) const                        { return m_pictureCtuArray[ctuRsAddr];  }$/;"	f	class:TComPicSym
getCtuAbove	TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuAbove                   ( )                                                          { return m_pCtuAbove;                        }$/;"	f	class:TComDataCU
getCtuAboveLeft	TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuAboveLeft               ( )                                                          { return m_pCtuAboveLeft;                    }$/;"	f	class:TComDataCU
getCtuAboveRight	TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuAboveRight              ( )                                                          { return m_pCtuAboveRight;                   }$/;"	f	class:TComDataCU
getCtuLeft	TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuLeft                    ( )                                                          { return m_pCtuLeft;                         }$/;"	f	class:TComDataCU
getCtuRsAddr	TLibCommon/TComDataCU.h	/^  UInt          getCtuRsAddr                  ( ) const                                                    { return m_ctuRsAddr;                        }$/;"	f	class:TComDataCU
getCtuRsAddr	TLibCommon/TComDataCU.h	/^  UInt&         getCtuRsAddr                  ( )                                                          { return m_ctuRsAddr;                        }$/;"	f	class:TComDataCU
getCtuRsToTsAddrMap	TLibCommon/TComPicSym.h	/^  UInt               getCtuRsToTsAddrMap( Int ctuRsAddr ) const            { return *(m_ctuRsToTsAddrMap + (ctuRsAddr>=m_numCtusInFrame ? m_numCtusInFrame : ctuRsAddr)); }$/;"	f	class:TComPicSym
getCtuTsToRsAddrMap	TLibCommon/TComPicSym.h	/^  UInt               getCtuTsToRsAddrMap( Int ctuTsAddr ) const            { return *(m_ctuTsToRsAddrMap + (ctuTsAddr>=m_numCtusInFrame ? m_numCtusInFrame : ctuTsAddr)); }$/;"	f	class:TComPicSym
getCtxInterDir	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxInterDir( UInt uiAbsPartIdx ) const$/;"	f	class:TComDataCU
getCtxQtCbf	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxQtCbf( TComTU &rTu, const ChannelType chType ) const$/;"	f	class:TComDataCU
getCtxSkipFlag	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxSkipFlag( UInt uiAbsPartIdx ) const$/;"	f	class:TComDataCU
getCtxSplitFlag	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxSplitFlag( UInt uiAbsPartIdx, UInt uiDepth ) const$/;"	f	class:TComDataCU
getCuEncoder	TLibEncoder/TEncTop.h	/^  TEncCu*                 getCuEncoder          () { return  &m_cCuEncoder;           }$/;"	f	class:TEncTop
getCurrSliceIdx	TLibCommon/TComPic.h	/^  UInt          getCurrSliceIdx() const           { return m_uiCurrSliceIdx;                }$/;"	f	class:TComPic
getDPBPerCtuData	TLibCommon/TComPicSym.h	/^  DPBPerCtuData&       getDPBPerCtuData(UInt ctuRsAddr)                    { return m_dpbPerCtuData[ctuRsAddr]; }$/;"	f	class:TComPicSym
getDPBPerCtuData	TLibCommon/TComPicSym.h	/^  const DPBPerCtuData& getDPBPerCtuData(UInt ctuRsAddr) const              { return m_dpbPerCtuData[ctuRsAddr]; }$/;"	f	class:TComPicSym
getDeblockingFilterBetaOffsetDiv2	TLibCommon/TComSlice.h	/^  Int                         getDeblockingFilterBetaOffsetDiv2()const               { return m_deblockingFilterBetaOffsetDiv2;                      }$/;"	f	class:TComSlice
getDeblockingFilterBetaOffsetDiv2	TLibCommon/TComSlice.h	/^  Int                    getDeblockingFilterBetaOffsetDiv2() const                        { return m_deblockingFilterBetaOffsetDiv2;      } \/\/!< get beta offset for deblocking filter$/;"	f	class:TComPPS
getDeblockingFilterControlPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getDeblockingFilterControlPresentFlag() const                    { return m_deblockingFilterControlPresentFlag;  }$/;"	f	class:TComPPS
getDeblockingFilterDisable	TLibCommon/TComSlice.h	/^  Bool                        getDeblockingFilterDisable() const                     { return m_deblockingFilterDisable;                             }$/;"	f	class:TComSlice
getDeblockingFilterMetric	TLibEncoder/TEncCfg.h	/^  Int       getDeblockingFilterMetric       ()      { return m_deblockingFilterMetric; }$/;"	f	class:TEncCfg
getDeblockingFilterOverrideEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getDeblockingFilterOverrideEnabledFlag() const                   { return m_deblockingFilterOverrideEnabledFlag; }$/;"	f	class:TComPPS
getDeblockingFilterOverrideFlag	TLibCommon/TComSlice.h	/^  Bool                        getDeblockingFilterOverrideFlag() const                { return m_deblockingFilterOverrideFlag;                        }$/;"	f	class:TComSlice
getDeblockingFilterTcOffsetDiv2	TLibCommon/TComSlice.h	/^  Int                         getDeblockingFilterTcOffsetDiv2() const                { return m_deblockingFilterTcOffsetDiv2;                        }$/;"	f	class:TComSlice
getDeblockingFilterTcOffsetDiv2	TLibCommon/TComSlice.h	/^  Int                    getDeblockingFilterTcOffsetDiv2() const                          { return m_deblockingFilterTcOffsetDiv2;        } \/\/!< get tc offset for deblocking filter$/;"	f	class:TComPPS
getDecimalWidth	TLibCommon/Debug.cpp	/^UInt getDecimalWidth(const Double value)$/;"	f
getDecodedPictureHashSEIType	TLibEncoder/TEncCfg.h	/^  HashType getDecodedPictureHashSEIType() const                      { return m_decodedPictureHashSEIType; }$/;"	f	class:TEncCfg
getDecodingRefreshType	TLibEncoder/TEncCfg.h	/^  UInt      getDecodingRefreshType          ()      { return  m_uiDecodingRefreshType; }$/;"	f	class:TEncCfg
getDecodingUnitInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getDecodingUnitInfoSEIEnabled() const                        { return m_decodingUnitInfoSEIEnabled; }$/;"	f	class:TEncCfg
getDefDisplayWindow	TLibCommon/TComPic.h	/^  Window        getDefDisplayWindow() const  { return m_picSym.getSPS().getVuiParametersPresentFlag() ? m_picSym.getSPS().getVuiParameters()->getDefaultDisplayWindow() : Window(); }$/;"	f	class:TComPic
getDefaultDisplayWindow	TLibCommon/TComSlice.h	/^  Window&           getDefaultDisplayWindow()                              { return m_defaultDisplayWindow;                 }$/;"	f	class:TComVUI
getDefaultDisplayWindow	TLibCommon/TComSlice.h	/^  const Window&     getDefaultDisplayWindow() const                        { return m_defaultDisplayWindow;                 }$/;"	f	class:TComVUI
getDefaultDisplayWindow	TLibEncoder/TEncCfg.h	/^  Window      &getDefaultDisplayWindow()                             { return m_defaultDisplayWindow; }$/;"	f	class:TEncCfg
getDeltaPOC	TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getDeltaPOC(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getDeltaPocMSBCycleLT	TLibCommon/TComSlice.h	/^  Int     getDeltaPocMSBCycleLT(Int i) const           { return m_deltaPOCMSBCycleLT[i];     }$/;"	f	class:TComReferencePictureSet
getDeltaPocMSBPresentFlag	TLibCommon/TComSlice.h	/^  Bool    getDeltaPocMSBPresentFlag(Int i) const       { return m_deltaPocMSBPresentFlag[i]; }$/;"	f	class:TComReferencePictureSet
getDeltaQpRD	TLibEncoder/TEncCfg.h	/^  UInt      getDeltaQpRD                    () const { return m_uiDeltaQpRD; }$/;"	f	class:TEncCfg
getDeltaRIdxMinus1	TLibCommon/TComSlice.h	/^  Int     getDeltaRIdxMinus1() const                   { return m_deltaRIdxMinus1;            }$/;"	f	class:TComReferencePictureSet
getDeltaRPS	TLibCommon/TComSlice.h	/^  Int     getDeltaRPS() const                          { return m_deltaRPS;                   }$/;"	f	class:TComReferencePictureSet
getDependentSliceSegmentFlag	TLibCommon/TComSlice.h	/^  Bool                        getDependentSliceSegmentFlag() const                   { return m_dependentSliceSegmentFlag;                           }$/;"	f	class:TComSlice
getDependentSliceSegmentsEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getDependentSliceSegmentsEnabledFlag() const                     { return m_dependentSliceSegmentsEnabledFlag;   }$/;"	f	class:TComPPS
getDepth	TLibCommon/TComDataCU.h	/^  UChar         getDepth                      ( UInt uiIdx ) const                                         { return m_puhDepth[uiIdx];                  }$/;"	f	class:TComDataCU
getDepth	TLibCommon/TComDataCU.h	/^  UChar*        getDepth                      ( )                                                          { return m_puhDepth;                         }$/;"	f	class:TComDataCU
getDepth	TLibCommon/TComSlice.h	/^  Int                         getDepth() const                                       { return m_iDepth;                                              }$/;"	f	class:TComSlice
getDequantCoeff	TLibCommon/TComTrQuant.h	/^  Int* getDequantCoeff                  ( UInt list, Int qp, UInt size ) { return m_dequantCoef          [size][list][qp]; };  \/\/!< get DeQuant Coefficent$/;"	f	class:TComTrQuant
getDiffCuChromaQpOffsetDepth	TLibCommon/TComSlice.h	/^  UInt                   getDiffCuChromaQpOffsetDepth () const                            { return m_diffCuChromaQpOffsetDepth;             }$/;"	f	class:TComPPSRExt
getDiffCuChromaQpOffsetDepth	TLibEncoder/TEncCfg.h	/^  Int       getDiffCuChromaQpOffsetDepth    ()         const { return m_diffCuChromaQpOffsetDepth;  }$/;"	f	class:TEncCfg
getDifferentialLumaChromaBitDepth	TLibCommon/TComSlice.h	/^  Int                    getDifferentialLumaChromaBitDepth() const                                       { return Int(m_bitDepths.recon[CHANNEL_TYPE_LUMA]) - Int(m_bitDepths.recon[CHANNEL_TYPE_CHROMA]); }$/;"	f	class:TComSPS
getDisableIntraPUsInInterSlices	TLibEncoder/TEncCfg.h	/^  Bool      getDisableIntraPUsInInterSlices    () const { return m_bDisableIntraPUsInInterSlices; }$/;"	f	class:TEncCfg
getDisplayOrientationSEIAngle	TLibEncoder/TEncCfg.h	/^  Int   getDisplayOrientationSEIAngle()                              { return m_displayOrientationSEIAngle; }$/;"	f	class:TEncCfg
getDistPart	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::getDistPart( Int bitDepth, const Pel* piCur, Int iCurStride,  const Pel* piOrg, Int iOrgStride, UInt uiBlkWidth, UInt uiBlkHeight, const ComponentID compID, DFunc eDFunc )$/;"	f	class:TComRdCost
getDistortion	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Int64 TEncSampleAdaptiveOffset::getDistortion(const Int channelBitDepth, Int typeIdc, Int typeAuxInfo, Int* invQuantOffset, SAOStatData& statData)$/;"	f	class:TEncSampleAdaptiveOffset
getDouble	TLibCommon/Debug.h	/^  Double              getDouble()   const       { return m_dVal;    }$/;"	f	class:EnvVar
getDpbOutputDelayDuLengthMinus1	TLibCommon/TComSlice.h	/^  UInt    getDpbOutputDelayDuLengthMinus1( ) const                                   { return m_dpbOutputDelayDuLengthMinus1;                     }$/;"	f	class:TComHRD
getDpbOutputDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt    getDpbOutputDelayLengthMinus1( ) const                                     { return m_dpbOutputDelayLengthMinus1;                       }$/;"	f	class:TComHRD
getDuBitRateValueMinus1	TLibCommon/TComSlice.h	/^  UInt    getDuBitRateValueMinus1(Int layer, Int cpbcnt, Int nalOrVcl ) const        { return m_HRD[layer].duBitRateValue[cpbcnt][nalOrVcl];      }$/;"	f	class:TComHRD
getDuCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt    getDuCpbRemovalDelayLengthMinus1( ) const                                  { return m_duCpbRemovalDelayLengthMinus1;                    }$/;"	f	class:TComHRD
getDuCpbSizeScale	TLibCommon/TComSlice.h	/^  UInt    getDuCpbSizeScale( ) const                                                 { return m_ducpbSizeScale;                                   }$/;"	f	class:TComHRD
getDuCpbSizeValueMinus1	TLibCommon/TComSlice.h	/^  UInt    getDuCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl ) const       { return m_HRD[layer].ducpbSizeValue[cpbcnt][nalOrVcl];      }$/;"	f	class:TComHRD
getEfficientFieldIRAPEnabled	TLibEncoder/TEncCfg.h	/^  Bool         getEfficientFieldIRAPEnabled( ) const                 { return m_bEfficientFieldIRAPEnabled; }$/;"	f	class:TEncCfg
getEmulationPreventionByteLocation	TLibCommon/TComBitStream.h	/^  UInt      getEmulationPreventionByteLocation  ( UInt idx )                         { return m_emulationPreventionByteLocation[ idx ];    }$/;"	f	class:TComInputBitstream
getEmulationPreventionByteLocation	TLibCommon/TComBitStream.h	/^  const std::vector<UInt> &getEmulationPreventionByteLocation  () const              { return m_emulationPreventionByteLocation;           }$/;"	f	class:TComInputBitstream
getEnableTMVPFlag	TLibCommon/TComSlice.h	/^  Bool                        getEnableTMVPFlag() const                              { return m_enableTMVPFlag;                                      }$/;"	f	class:TComSlice
getEncBinIf	TLibEncoder/TEncSbac.h	/^  TEncBinIf* getEncBinIf()  { return m_pcBinIf; }$/;"	f	class:TEncSbac
getEncCABACTableIdx	TLibCommon/TComSlice.h	/^  SliceType                   getEncCABACTableIdx() const                            { return m_encCABACTableIdx;                                    }$/;"	f	class:TComSlice
getEncCABACTableIdx	TLibEncoder/TEncSlice.h	/^  SliceType getEncCABACTableIdx() const           { return m_encCABACTableIdx;        }$/;"	f	class:TEncSlice
getEncRCSeq	TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* getEncRCSeq()        { return m_encRCSeq; }$/;"	f	class:TEncRCGOP
getEntropyBits	TLibCommon/ContextModel.h	/^  Int getEntropyBits(Short val) { return m_entropyBits[m_ucState ^ val]; }$/;"	f	class:ContextModel
getEntropyBitsTrm	TLibCommon/ContextModel.h	/^  static Int getEntropyBitsTrm( Int val ) { return m_entropyBits[126 ^ val]; }$/;"	f	class:ContextModel
getEntropyCoder	TLibEncoder/TEncTop.h	/^  TEncEntropy*            getEntropyCoder       () { return  &m_cEntropyCoder;        }$/;"	f	class:TEncTop
getEntropyCodingSyncEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getEntropyCodingSyncEnabledFlag() const                          { return m_entropyCodingSyncEnabledFlag;        }$/;"	f	class:TComPPS
getEntropyCodingSyncEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool  getEntropyCodingSyncEnabledFlag() const                      { return m_entropyCodingSyncEnabledFlag; }$/;"	f	class:TEncCfg
getEntropyDecoder	TLibDecoder/TDecEntropy.h	/^  TDecEntropyIf* getEntropyDecoder() { return m_pcEntropyDecoderIf; }$/;"	f	class:TDecEntropy
getEnvVarInUse	TLibCommon/Debug.cpp	/^std::list<EnvVar*> &EnvVar::getEnvVarInUse()$/;"	f	class:EnvVar
getEnvVarList	TLibCommon/Debug.cpp	/^std::list<std::pair<std::string, std::string> > &EnvVar::getEnvVarList()$/;"	f	class:EnvVar
getErpSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool  getErpSEICancelFlag()                                        { return m_erpSEICancelFlag; }$/;"	f	class:TEncCfg
getErpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getErpSEIEnabled()                                           { return m_erpSEIEnabled; }$/;"	f	class:TEncCfg
getErpSEIGuardBandFlag	TLibEncoder/TEncCfg.h	/^  Bool  getErpSEIGuardBandFlag()                                     { return m_erpSEIGuardBandFlag; }$/;"	f	class:TEncCfg
getErpSEIGuardBandType	TLibEncoder/TEncCfg.h	/^  UInt  getErpSEIGuardBandType()                                     { return m_erpSEIGuardBandType; }  $/;"	f	class:TEncCfg
getErpSEILeftGuardBandWidth	TLibEncoder/TEncCfg.h	/^  UInt  getErpSEILeftGuardBandWidth()                                { return m_erpSEILeftGuardBandWidth; }  $/;"	f	class:TEncCfg
getErpSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool  getErpSEIPersistenceFlag()                                   { return m_erpSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getErpSEIRightGuardBandWidth	TLibEncoder/TEncCfg.h	/^  UInt  getErpSEIRightGuardBandWidth()                               { return m_erpSEIRightGuardBandWidth; }      $/;"	f	class:TEncCfg
getErrScaleCoeff	TLibCommon/TComTrQuant.h	/^  Double* getErrScaleCoeff              ( UInt list, UInt size, Int qp ) { return m_errScale             [size][list][qp]; };  \/\/!< get Error Scale Coefficent$/;"	f	class:TComTrQuant
getErrScaleCoeffNoScalingList	TLibCommon/TComTrQuant.h	/^  Double& getErrScaleCoeffNoScalingList ( UInt list, UInt size, Int qp ) { return m_errScaleNoScalingList[size][list][qp]; };  \/\/!< get Error Scale Coefficent$/;"	f	class:TComTrQuant
getEstHeaderBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getEstHeaderBits()                                 { return m_estHeaderBits; }$/;"	f	class:TEncRCPic
getExplicitRdpcmMode	TLibCommon/TComDataCU.h	/^  UChar         getExplicitRdpcmMode          ( ComponentID component, UInt partIdx ) const                { return m_explicitRdpcmMode[component][partIdx]; }$/;"	f	class:TComDataCU
getExplicitRdpcmMode	TLibCommon/TComDataCU.h	/^  UChar*        getExplicitRdpcmMode          ( ComponentID component )                                    { return m_explicitRdpcmMode[component];     }$/;"	f	class:TComDataCU
getExt360Data	TLibEncoder/TEncGOP.h	/^  TExt360EncGop &getExt360Data() { return m_ext360; }$/;"	f	class:TEncGOP
getExt360Info	TLibEncoder/TEncAnalyze.h	/^  TExt360EncAnalyze& getExt360Info() { return m_ext360; }$/;"	f	class:TEncAnalyze
getExtendedPrecisionProcessingFlag	TLibCommon/TComSlice.h	/^  Bool getExtendedPrecisionProcessingFlag() const                                      { return m_extendedPrecisionProcessingFlag;      }$/;"	f	class:TComSPSRExt
getExtendedPrecisionProcessingFlag	TLibEncoder/TEncCfg.h	/^  Bool      getExtendedPrecisionProcessingFlag         ()         const { return m_extendedPrecisionProcessingFlag;  }$/;"	f	class:TEncCfg
getFGCSEICompModelPresent	TLibEncoder/TEncCfg.h	/^  Bool  getFGCSEICompModelPresent(Int index)                         { return m_fgcSEICompModelPresent[index]; }$/;"	f	class:TEncCfg
getFGCSEICompModelValue	TLibEncoder/TEncCfg.h	/^  UInt    getFGCSEICompModelValue(Int index, Int ctr, Int modelCtr) { return m_fgcSEICompModelValue[index][ctr][modelCtr]; }$/;"	f	class:TEncCfg
getFGCSEIIntensityIntervalLowerBound	TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEIIntensityIntervalLowerBound(Int index, Int ctr) { return m_fgcSEIIntensityIntervalLowerBound[index][ctr]; }$/;"	f	class:TEncCfg
getFGCSEIIntensityIntervalUpperBound	TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEIIntensityIntervalUpperBound(Int index, Int ctr) { return m_fgcSEIIntensityIntervalUpperBound[index][ctr]; }$/;"	f	class:TEncCfg
getFGCSEINumIntensityIntervalMinus1	TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEINumIntensityIntervalMinus1(Int index) { return m_fgcSEINumIntensityIntervalMinus1[index]; }$/;"	f	class:TEncCfg
getFGCSEINumModelValuesMinus1	TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEINumModelValuesMinus1(Int index) { return m_fgcSEINumModelValuesMinus1[index]; }$/;"	f	class:TEncCfg
getFIFO	TLibCommon/TComBitStream.h	/^  const std::vector<uint8_t>& getFIFO() const { return m_fifo; }$/;"	f	class:TComOutputBitstream
getFIFO	TLibCommon/TComBitStream.h	/^  std::vector<uint8_t>& getFIFO() { return m_fifo; }$/;"	f	class:TComOutputBitstream
getFastDeltaQp	TLibEncoder/TEncCfg.h	/^  Bool      getFastDeltaQp                  () const { return m_bFastDeltaQP; }$/;"	f	class:TEncCfg
getFastDeltaQp	TLibEncoder/TEncCu.h	/^  Bool getFastDeltaQp       () const                  { return m_bFastDeltaQP;      }$/;"	f	class:TEncCu
getFastInterSearchMode	TLibEncoder/TEncCfg.h	/^  FastInterSearchMode getFastInterSearchMode() const{ return m_fastInterSearchMode;  }$/;"	f	class:TEncCfg
getFastMEAssumingSmootherMVEnabled	TLibEncoder/TEncCfg.h	/^  Bool      getFastMEAssumingSmootherMVEnabled () const { return m_bFastMEAssumingSmootherMVEnabled; }$/;"	f	class:TEncCfg
getFastMEForGenBLowDelayEnabled	TLibEncoder/TEncCfg.h	/^  Bool      getFastMEForGenBLowDelayEnabled ()      { return m_bFastMEForGenBLowDelayEnabled; }$/;"	f	class:TEncCfg
getFastUDIUseMPMEnabled	TLibEncoder/TEncCfg.h	/^  Bool      getFastUDIUseMPMEnabled         ()      { return m_bFastUDIUseMPMEnabled; }$/;"	f	class:TEncCfg
getFieldSeqFlag	TLibCommon/TComSlice.h	/^  Bool              getFieldSeqFlag() const                                { return m_fieldSeqFlag;                         }$/;"	f	class:TComVUI
getFifo	TLibCommon/TComBitStream.h	/^        std::vector<uint8_t> &getFifo()       { return m_fifo; }$/;"	f	class:TComInputBitstream
getFifo	TLibCommon/TComBitStream.h	/^  const std::vector<uint8_t> &getFifo() const { return m_fifo; }$/;"	f	class:TComInputBitstream
getFilmGrainCharactersticsSEIBlendingModeID	TLibEncoder/TEncCfg.h	/^  UChar getFilmGrainCharactersticsSEIBlendingModeID()                { return m_fgcSEIBlendingModeID; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEICancelFlag()                    { return m_fgcSEICancelFlag; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEIEnabled()                       { return m_fgcSEIEnabled; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEILog2ScaleFactor	TLibEncoder/TEncCfg.h	/^  UChar getFilmGrainCharactersticsSEILog2ScaleFactor()               { return m_fgcSEILog2ScaleFactor; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEIModelID	TLibEncoder/TEncCfg.h	/^  UChar getFilmGrainCharactersticsSEIModelID()                       { return m_fgcSEIModelID; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEIPersistenceFlag()               { return m_fgcSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEISepColourDescPresent	TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEISepColourDescPresent()          { return m_fgcSEISepColourDescPresentFlag; }$/;"	f	class:TEncCfg
getFinalized	TLibCommon/TComSlice.h	/^  Bool                        getFinalized() const                                   { return m_bFinalized;                                          }$/;"	f	class:TComSlice
getFirstComponentOfChannel	TLibCommon/TComChromaFormat.h	/^static inline ComponentID getFirstComponentOfChannel(const ChannelType id)                         { return (isLuma(id) ? COMPONENT_Y : COMPONENT_Cb);                  }$/;"	f
getFirstCtuRsAddr	TLibCommon/TComPicSym.h	/^  UInt      getFirstCtuRsAddr      () const              { return m_firstCtuRsAddr; }$/;"	f	class:TComTile
getFirstPPS	TLibCommon/TComSlice.h	/^  TComPPS*       getFirstPPS()                                               { return m_ppsMap.getFirstPS(); };$/;"	f	class:ParameterSetManager
getFirstPS	TLibCommon/TComSlice.h	/^  T* getFirstPS()$/;"	f	class:ParameterSetMap
getFirstSPS	TLibCommon/TComSlice.h	/^  TComSPS*       getFirstSPS()                                               { return m_spsMap.getFirstPS(); };$/;"	f	class:ParameterSetManager
getFirstSliceInSequence	TLibDecoder/TDecTop.h	/^  Bool  getFirstSliceInSequence ()         { return m_bFirstSliceInSequence; }$/;"	f	class:TDecTop
getFirstVPS	TLibCommon/TComSlice.h	/^  TComVPS*       getFirstVPS()                                               { return m_vpsMap.getFirstPS(); };$/;"	f	class:ParameterSetManager
getFixedPicRateFlag	TLibCommon/TComSlice.h	/^  Bool    getFixedPicRateFlag( Int layer ) const                                     { return m_HRD[layer].fixedPicRateFlag;                      }$/;"	f	class:TComHRD
getFixedPicRateWithinCvsFlag	TLibCommon/TComSlice.h	/^  Bool    getFixedPicRateWithinCvsFlag( Int layer ) const                            { return m_HRD[layer].fixedPicRateWithinCvsFlag;             }$/;"	f	class:TComHRD
getForceDecodeBitDepth	TLibCommon/TComSlice.h	/^  UInt                   getForceDecodeBitDepth()        const                                           { return m_forceDecodeBitDepth;                                        }$/;"	f	class:TComSPS
getForceIntraQP	TLibEncoder/TEncCfg.h	/^  Bool         getForceIntraQP        ()                             { return m_RCForceIntraQP;        }$/;"	f	class:TEncCfg
getFrameFieldInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getFrameFieldInfoPresentFlag() const                   { return m_frameFieldInfoPresentFlag;            }$/;"	f	class:TComVUI
getFrameFieldInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getFrameFieldInfoPresentFlag()                        { return m_frameFieldInfoPresentFlag; }$/;"	f	class:TEncCfg
getFrameHeightInCtus	TLibCommon/TComPic.h	/^  UInt          getFrameHeightInCtus() const       { return m_picSym.getFrameHeightInCtus();   }$/;"	f	class:TComPic
getFrameHeightInCtus	TLibCommon/TComPicSym.h	/^  UInt               getFrameHeightInCtus() const                          { return m_frameHeightInCtus;           }$/;"	f	class:TComPicSym
getFrameLevel	TLibEncoder/TEncRateCtrl.h	/^  Int  getFrameLevel()                                    { return m_frameLevel; }$/;"	f	class:TEncRCPic
getFrameOnlyConstraintFlag	TLibCommon/TComSlice.h	/^  Bool          getFrameOnlyConstraintFlag() const          { return m_frameOnlyConstraintFlag;     }$/;"	f	class:ProfileTierLevel
getFrameOnlyConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool         getFrameOnlyConstraintFlag() const                    { return m_frameOnlyConstraintFlag; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getFramePackingArrangementSEIEnabled() const                 { return m_framePackingSEIEnabled; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIId	TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIId()                            { return m_framePackingSEIId; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIInterpretation	TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIInterpretation()                { return m_framePackingSEIInterpretation; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIQuincunx	TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIQuincunx()                      { return m_framePackingSEIQuincunx; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIType	TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIType()                          { return m_framePackingSEIType; }$/;"	f	class:TEncCfg
getFrameRate	TLibEncoder/TEncCfg.h	/^  Int       getFrameRate                    ()      { return  m_iFrameRate; }$/;"	f	class:TEncCfg
getFrameRate	TLibEncoder/TEncRateCtrl.h	/^  Int  getFrameRate()                   { return m_frameRate; }$/;"	f	class:TEncRCSeq
getFrameSkip	TLibEncoder/TEncCfg.h	/^  UInt      getFrameSkip                    ()      { return  m_FrameSkip; }$/;"	f	class:TEncCfg
getFrameWidthInCtus	TLibCommon/TComPic.h	/^  UInt          getFrameWidthInCtus() const        { return m_picSym.getFrameWidthInCtus();    }$/;"	f	class:TComPic
getFrameWidthInCtus	TLibCommon/TComPicSym.h	/^  UInt               getFrameWidthInCtus() const                           { return m_frameWidthInCtus;            }$/;"	f	class:TComPicSym
getFramesLeft	TLibEncoder/TEncRateCtrl.h	/^  Int  getFramesLeft()                  { return m_framesLeft; }$/;"	f	class:TEncRCSeq
getFramesToBeEncoded	TLibEncoder/TEncCfg.h	/^  Int       getFramesToBeEncoded            ()      { return  m_framesToBeEncoded; }$/;"	f	class:TEncCfg
getFviSEIData	TLibEncoder/TEncCfg.h	/^  const TComSEIFisheyeVideoInfo& getFviSEIData() const               { return m_fisheyeVideoInfo; }$/;"	f	class:TEncCfg
getFviSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool    getFviSEIEnabled() const                                   { return m_fviSEIEnabled; }$/;"	f	class:TEncCfg
getGOPEncoder	TLibEncoder/TEncTop.h	/^  TEncGOP*                getGOPEncoder         () { return  &m_cGOPEncoder;          }$/;"	f	class:TEncTop
getGOPEntry	TLibEncoder/TEncCfg.h	/^  const GOPEntry &getGOPEntry               ( Int   i ) const { return m_GOPList[i]; }$/;"	f	class:TEncCfg
getGOPID2Level	TLibEncoder/TEncRateCtrl.h	/^  Int  getGOPID2Level( Int ID )         { assert( ID < m_GOPSize ); return m_GOPID2Level[ID]; }$/;"	f	class:TEncRCSeq
getGOPID2Level	TLibEncoder/TEncRateCtrl.h	/^  Int* getGOPID2Level()                 { return m_GOPID2Level; }$/;"	f	class:TEncRCSeq
getGOPSize	TLibEncoder/TEncCfg.h	/^  Int       getGOPSize                      ()      { return  m_iGOPSize; }$/;"	f	class:TEncCfg
getGOPSize	TLibEncoder/TEncGOP.h	/^  Int   getGOPSize()          { return  m_iGopSize;  }$/;"	f	class:TEncGOP
getGOPSize	TLibEncoder/TEncRateCtrl.h	/^  Int  getGOPSize()                     { return m_GOPSize; }$/;"	f	class:TEncRCSeq
getGeneralPTL	TLibCommon/TComSlice.h	/^  ProfileTierLevel*       getGeneralPTL()                              { return &m_generalPTL;                   }$/;"	f	class:TComPTL
getGeneralPTL	TLibCommon/TComSlice.h	/^  const ProfileTierLevel* getGeneralPTL() const                        { return &m_generalPTL;                   }$/;"	f	class:TComPTL
getGolombRiceStatisticsIndex	TLibCommon/TComTU.cpp	/^UInt TComTU::getGolombRiceStatisticsIndex(const ComponentID compID)$/;"	f	class:TComTU
getGopBasedTemporalFilterEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getGopBasedTemporalFilterEnabled() const                     { return m_gopBasedTemporalFilterEnabled; }$/;"	f	class:TEncCfg
getGopID	TLibEncoder/TEncSlice.h	/^  Int     getGopID() const            { return m_gopID;   }$/;"	f	class:TEncSlice
getGradualDecodingRefreshInfoEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getGradualDecodingRefreshInfoEnabled() const                 { return m_gradualDecodingRefreshInfoEnabled; }$/;"	f	class:TEncCfg
getHandleCraAsBlaFlag	TLibCommon/TComSlice.h	/^  Bool                        getHandleCraAsBlaFlag() const                          { return m_handleCraAsBlaFlag;                                  }$/;"	f	class:TComSlice
getHarmonizeGopFirstFieldCoupleEnabled	TLibEncoder/TEncCfg.h	/^  Bool         getHarmonizeGopFirstFieldCoupleEnabled( ) const       { return m_bHarmonizeGopFirstFieldCoupleEnabled; }$/;"	f	class:TEncCfg
getHbrFactor	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt getHbrFactor(Bool bLowerBitRateConstraintFlag) const    \/\/ currently not used for checking$/;"	f	struct:ProfileFeatures
getHbrFactor	TLibDecoder/TDecConformance.h	/^  UInt getHbrFactor(Bool bLowerBitRateConstraintFlag) const    \/\/ currently not used for checking$/;"	f	struct:ProfileFeatures
getHeight	TLibCommon/TComDataCU.h	/^  UChar         getHeight                     ( UInt uiIdx ) const                                         { return m_puhHeight[uiIdx];                 }$/;"	f	class:TComDataCU
getHeight	TLibCommon/TComDataCU.h	/^  UChar*        getHeight                     ( )                                                          { return m_puhHeight;                        }$/;"	f	class:TComDataCU
getHeight	TLibCommon/TComPicYuv.h	/^  Int           getHeight         (const ComponentID id) const { return  m_picHeight >> getComponentScaleY(id);  }$/;"	f	class:TComPicYuv
getHeight	TLibCommon/TComYuv.h	/^  UInt         getHeight                  (const ComponentID id) const { return m_iHeight >> getComponentScaleY(id);  }$/;"	f	class:TComYuv
getHeldBits	TLibCommon/TComBitStream.h	/^  UChar getHeldBits  ()          { return m_held_bits;          }$/;"	f	class:TComInputBitstream
getHeldBits	TLibCommon/TComBitStream.h	/^  UChar getHeldBits  ()          { return m_held_bits;          }$/;"	f	class:TComOutputBitstream
getHighPrecisionOffsetsEnabledFlag	TLibCommon/TComSlice.h	/^  Bool getHighPrecisionOffsetsEnabledFlag() const                                      { return m_highPrecisionOffsetsEnabledFlag;      }$/;"	f	class:TComSPSRExt
getHighPrecisionOffsetsEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      getHighPrecisionOffsetsEnabledFlag() const { return m_highPrecisionOffsetsEnabledFlag; }$/;"	f	class:TEncCfg
getHor	TLibCommon/TComMotionInfo.h	/^  Int getHor   () const { return  m_acMv.getHor(); }$/;"	f	class:TComMvField
getHor	TLibCommon/TComMv.h	/^  Int   getHor    () const { return m_iHor;          }$/;"	f	class:TComMv
getHrdOpSetIdx	TLibCommon/TComSlice.h	/^  UInt              getHrdOpSetIdx( UInt i ) const                       { return m_hrdOpSetIdx[ i ];                                       }$/;"	f	class:TComVPS
getHrdParameters	TLibCommon/TComSlice.h	/^  TComHRD*          getHrdParameters( UInt i )                           { return &m_hrdParameters[ i ];                                    }$/;"	f	class:TComVPS
getHrdParameters	TLibCommon/TComSlice.h	/^  TComHRD*          getHrdParameters()                                     { return &m_hrdParameters;                       }$/;"	f	class:TComVUI
getHrdParameters	TLibCommon/TComSlice.h	/^  const TComHRD*    getHrdParameters( UInt i ) const                     { return &m_hrdParameters[ i ];                                    }$/;"	f	class:TComVPS
getHrdParameters	TLibCommon/TComSlice.h	/^  const TComHRD*    getHrdParameters()  const                              { return &m_hrdParameters;                       }$/;"	f	class:TComVUI
getHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getHrdParametersPresentFlag() const                    { return m_hrdParametersPresentFlag;             }$/;"	f	class:TComVUI
getIPCMFlag	TLibCommon/TComDataCU.h	/^  Bool          getIPCMFlag                   ( UInt uiIdx ) const                                         { return m_pbIPCMFlag[uiIdx];                }$/;"	f	class:TComDataCU
getIPCMFlag	TLibCommon/TComDataCU.h	/^  Bool*         getIPCMFlag                   ( )                                                          { return m_pbIPCMFlag;                       }$/;"	f	class:TComDataCU
getIdrPicFlag	TLibCommon/TComSlice.h	/^  Bool                        getIdrPicFlag() const                                  { return getNalUnitType() == NAL_UNIT_CODED_SLICE_IDR_W_RADL || getNalUnitType() == NAL_UNIT_CODED_SLICE_IDR_N_LP; }$/;"	f	class:TComSlice
getInitialCpbFullness	TLibEncoder/TEncCfg.h	/^  Double       getInitialCpbFullness  ()                             { return m_RCInitialCpbFullness;  }$/;"	f	class:TEncCfg
getInitialCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt    getInitialCpbRemovalDelayLengthMinus1( ) const                             { return m_initialCpbRemovalDelayLengthMinus1;               }$/;"	f	class:TComHRD
getInitialQP	TLibEncoder/TEncCfg.h	/^  Int          getInitialQP           ()                             { return m_RCInitialQP;           }$/;"	f	class:TEncCfg
getInt	TLibCommon/Debug.h	/^  Int                 getInt()      const       { return m_iVal;    }$/;"	f	class:EnvVar
getInterDir	TLibCommon/TComDataCU.h	/^  UChar         getInterDir                   ( UInt uiIdx ) const                                         { return m_puhInterDir[uiIdx];               }$/;"	f	class:TComDataCU
getInterDir	TLibCommon/TComDataCU.h	/^  UChar*        getInterDir                   ( )                                                          { return m_puhInterDir;                      }$/;"	f	class:TComDataCU
getInterMergeCandidates	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getInterMergeCandidates( UInt uiAbsPartIdx, UInt uiPUIdx, TComMvField* pcMvFieldNeighbours, UChar* puhInterDirNeighbours, Int& numValidMergeCand, UInt &numSpatialMergeCandidates, Int mrgCandIdx ) const$/;"	f	class:TComDataCU
getInterRPSPrediction	TLibCommon/TComSlice.h	/^  Bool    getInterRPSPrediction() const                { return m_interRPSPrediction;         }$/;"	f	class:TComReferencePictureSet
getInterlacedSourceFlag	TLibCommon/TComSlice.h	/^  Bool          getInterlacedSourceFlag() const             { return m_interlacedSourceFlag;        }$/;"	f	class:ProfileTierLevel
getInterlacedSourceFlag	TLibEncoder/TEncCfg.h	/^  Bool         getInterlacedSourceFlag() const                       { return m_interlacedSourceFlag; }$/;"	f	class:TEncCfg
getIntraConstraintFlag	TLibCommon/TComSlice.h	/^  Bool          getIntraConstraintFlag() const              { return m_intraConstraintFlag;         }$/;"	f	class:ProfileTierLevel
getIntraConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool         getIntraConstraintFlag() const                        { return m_intraConstraintFlag; }$/;"	f	class:TEncCfg
getIntraDir	TLibCommon/TComDataCU.h	/^  UChar         getIntraDir                   ( const ChannelType channelType, const UInt uiIdx ) const    { return m_puhIntraDir[channelType][uiIdx];  }$/;"	f	class:TComDataCU
getIntraDir	TLibCommon/TComDataCU.h	/^  UChar*        getIntraDir                   ( const ChannelType channelType )                   const    { return m_puhIntraDir[channelType];         }$/;"	f	class:TComDataCU
getIntraDirPredictor	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getIntraDirPredictor( UInt uiAbsPartIdx, Int uiIntraDirPred[NUM_MOST_PROBABLE_MODES], const ComponentID compID, Int* piMode ) const$/;"	f	class:TComDataCU
getIntraLambdaModifier	TLibEncoder/TEncCfg.h	/^  const std::vector<Double>& getIntraLambdaModifier()                        const { return m_adIntraLambdaModifier;         }$/;"	f	class:TEncCfg
getIntraPeriod	TLibEncoder/TEncCfg.h	/^  UInt      getIntraPeriod                  ()      { return  m_uiIntraPeriod; }$/;"	f	class:TEncCfg
getIntraQPOffset	TLibEncoder/TEncCfg.h	/^  Int       getIntraQPOffset                () const    { return  m_intraQPOffset; }$/;"	f	class:TEncCfg
getIntraQpFactor	TLibEncoder/TEncCfg.h	/^  Double    getIntraQpFactor                ()                        const { return m_dIntraQpFactor;                }$/;"	f	class:TEncCfg
getIntraSizeIdx	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getIntraSizeIdx(UInt uiAbsPartIdx) const$/;"	f	class:TComDataCU
getIntraSmoothingDisabledFlag	TLibCommon/TComSlice.h	/^  Bool getIntraSmoothingDisabledFlag() const                                           { return m_intraSmoothingDisabledFlag;           }$/;"	f	class:TComSPSRExt
getIntraSmoothingDisabledFlag	TLibEncoder/TEncCfg.h	/^  Bool getIntraSmoothingDisabledFlag               ()      const { return m_intraSmoothingDisabledFlag; }$/;"	f	class:TEncCfg
getIsChromaQpAdjCoded	TLibDecoder/TDecCu.h	/^  Bool getIsChromaQpAdjCoded    ()                        { return m_IsChromaQpAdjCoded;        }$/;"	f	class:TDecCu
getIsLongTerm	TLibCommon/TComPic.h	/^  Bool          getIsLongTerm() const            { return m_bIsLongTerm; }$/;"	f	class:TComPic
getIsUsedAsLongTerm	TLibCommon/TComSlice.h	/^  Bool                        getIsUsedAsLongTerm(Int i, Int j) const                { return m_bIsUsedAsLongTerm[i][j];                             }$/;"	f	class:TComSlice
getKeepHierBit	TLibEncoder/TEncCfg.h	/^  Int          getKeepHierBit         ()                             { return m_RCKeepHierarchicalBit; }$/;"	f	class:TEncCfg
getKneeFunctionInformationSEI	TLibEncoder/TEncCfg.h	/^  const TEncSEIKneeFunctionInformation &getKneeFunctionInformationSEI() const        { return m_kneeFunctionInformationSEI; }$/;"	f	class:TEncCfg
getKneeSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getKneeSEIEnabled()                                          { return m_kneeSEIEnabled; }$/;"	f	class:TEncCfg
getLCU	TLibEncoder/TEncRateCtrl.h	/^  TRCLCU& getLCU( Int LCUIdx )                            { return m_LCUs[LCUIdx]; }$/;"	f	class:TEncRCPic
getLCU	TLibEncoder/TEncRateCtrl.h	/^  TRCLCU* getLCU()                                        { return m_LCUs; }$/;"	f	class:TEncRCPic
getLCUCoded	TLibEncoder/TEncRateCtrl.h	/^  Int  getLCUCoded()                                      { return m_numberOfLCU - m_LCULeft; }$/;"	f	class:TEncRCPic
getLCUEstLambda	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::getLCUEstLambda( Double bpp )$/;"	f	class:TEncRCPic
getLCUEstLambdaAndQP	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::getLCUEstLambdaAndQP(Double bpp, Int clipPicQP, Int *estQP)$/;"	f	class:TEncRCPic
getLCUEstQP	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::getLCUEstQP( Double lambda, Int clipPicQP )$/;"	f	class:TEncRCPic
getLCUHeight	TLibEncoder/TEncRateCtrl.h	/^  Int  getLCUHeight()                   { return m_LCUHeight; }$/;"	f	class:TEncRCSeq
getLCUInitTargetBits	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::getLCUInitTargetBits()$/;"	f	class:TEncRCPic
getLCULeft	TLibEncoder/TEncRateCtrl.h	/^  Int  getLCULeft()                                       { return m_LCULeft; }$/;"	f	class:TEncRCPic
getLCULevelRC	TLibEncoder/TEncCfg.h	/^  Bool         getLCULevelRC          ()                             { return m_RCLCULevelRC; }$/;"	f	class:TEncCfg
getLCUPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter   getLCUPara( Int level, Int LCUIdx )            { assert( LCUIdx  < m_numberOfLCU ); return getLCUPara(level)[LCUIdx]; }$/;"	f	class:TEncRCSeq
getLCUPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter*  getLCUPara( Int level )                        { assert( level < m_numberOfLevel ); return m_LCUPara[level]; }$/;"	f	class:TEncRCSeq
getLCUPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter** getLCUPara()                                   { return m_LCUPara; }$/;"	f	class:TEncRCSeq
getLCUTargetBpp	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::getLCUTargetBpp(SliceType eSliceType)$/;"	f	class:TEncRCPic
getLCUWidth	TLibEncoder/TEncRateCtrl.h	/^  Int  getLCUWidth()                    { return m_LCUWidth; }$/;"	f	class:TEncRCSeq
getLFCrossSliceBoundaryFlag	TLibCommon/TComSlice.h	/^  Bool                        getLFCrossSliceBoundaryFlag()                          { return m_LFCrossSliceBoundaryFlag;                            }$/;"	f	class:TComSlice
getLFCrossSliceBoundaryFlag	TLibEncoder/TEncCfg.h	/^  Bool      getLFCrossSliceBoundaryFlag     ()                       { return m_bLFCrossSliceBoundaryFlag;   }$/;"	f	class:TEncCfg
getLFCrossTileBoundaryFlag	TLibEncoder/TEncCfg.h	/^  Bool  getLFCrossTileBoundaryFlag               ()                  { return m_loopFilterAcrossTilesEnabledFlag;   }$/;"	f	class:TEncCfg
getLSB	TLibEncoder/TEncGOP.cpp	/^Int getLSB(Int poc, Int maxLSB)$/;"	f
getLambda	TLibCommon/TComRdCost.h	/^  Double  getLambda() { return m_dLambda; }$/;"	f	class:TComRdCost
getLambdaFromQPEnable	TLibEncoder/TEncCfg.h	/^  Int       getLambdaFromQPEnable           () const    { return  m_lambdaFromQPEnable; }$/;"	f	class:TEncCfg
getLambdaModifier	TLibEncoder/TEncCfg.h	/^  Double    getLambdaModifier               ( UInt uiIndex )          const { return m_adLambdaModifier[ uiIndex ]; }$/;"	f	class:TEncCfg
getLambdas	TLibCommon/TComSlice.h	/^  const Double*               getLambdas() const                                     { return m_lambdas;                                             }$/;"	f	class:TComSlice
getLastCodedQP	TLibCommon/TComDataCU.cpp	/^SChar TComDataCU::getLastCodedQP( UInt uiAbsPartIdx ) const$/;"	f	class:TComDataCU
getLastIDR	TLibCommon/TComSlice.h	/^  Int                         getLastIDR() const                                     { return m_iLastIDR;                                            }$/;"	f	class:TComSlice
getLastLambda	TLibEncoder/TEncRateCtrl.h	/^  Double getLastLambda()                { return m_lastLambda;   }$/;"	f	class:TEncRCSeq
getLastSignificantContextParameters	TLibCommon/TComChromaFormat.h	/^static inline Void getLastSignificantContextParameters (const ComponentID  component,$/;"	f
getLastValidPartIdx	TLibCommon/TComDataCU.cpp	/^Int TComDataCU::getLastValidPartIdx( Int iAbsPartIdx ) const$/;"	f	class:TComDataCU
getLayerIdIncludedFlag	TLibCommon/TComSlice.h	/^  Bool              getLayerIdIncludedFlag(UInt opsIdx, UInt id) const   { return m_layerIdIncludedFlag[opsIdx][id];                        }$/;"	f	class:TComVPS
getLeftAverageBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getLeftAverageBits()             { assert( m_framesLeft > 0 ); return (Int)(m_bitsLeft \/ m_framesLeft); }$/;"	f	class:TEncRCSeq
getLevelIdc	TLibCommon/TComSlice.h	/^  Level::Name   getLevelIdc() const                         { return m_levelIdc;                    }$/;"	f	class:ProfileTierLevel
getLevelTierFeatures	TLibCommon/ProfileLevelTierFeatures.h	/^    const LevelTierFeatures   *getLevelTierFeatures() const { return m_pLevelTier; }$/;"	f	class:ProfileLevelTierFeatures
getLevelTierFeatures	TLibDecoder/TDecConformance.h	/^    const LevelTierFeatures   *getLevelTierFeatures() const { return m_pLevelTier; }$/;"	f	class:ProfileLevelTierFeatures
getList1IdxToList0Idx	TLibCommon/TComSlice.h	/^  Int                         getList1IdxToList0Idx( Int list1Idx ) const            { return m_list1IdxToList0Idx[list1Idx];                        }$/;"	f	class:TComSlice
getListOfColourSpaceConverts	TLibCommon/TComChromaFormat.cpp	/^std::string getListOfColourSpaceConverts(const Bool bIsForward)$/;"	f
getListPic	TLibEncoder/TEncGOP.h	/^  TComList<TComPic*>*   getListPic()      { return m_pcListPic; }$/;"	f	class:TEncGOP
getListPic	TLibEncoder/TEncTop.h	/^  TComList<TComPic*>*     getListPic            () { return  &m_cListPic;             }$/;"	f	class:TEncTop
getListsModificationPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getListsModificationPresentFlag() const                          { return m_listsModificationPresentFlag;        }$/;"	f	class:TComPPS
getLocalRPS	TLibCommon/TComSlice.h	/^  TComReferencePictureSet*    getLocalRPS()                                          { return &m_localRPS;                                           }$/;"	f	class:TComSlice
getLog2DiffMaxMinCodingBlockSize	TLibCommon/TComSlice.h	/^  Int                    getLog2DiffMaxMinCodingBlockSize() const                                        { return m_log2DiffMaxMinCodingBlockSize;                              }$/;"	f	class:TComSPS
getLog2MaxMvLengthHorizontal	TLibCommon/TComSlice.h	/^  Int               getLog2MaxMvLengthHorizontal() const                   { return m_log2MaxMvLengthHorizontal;            }$/;"	f	class:TComVUI
getLog2MaxMvLengthHorizontal	TLibEncoder/TEncCfg.h	/^  Int          getLog2MaxMvLengthHorizontal()                        { return m_log2MaxMvLengthHorizontal; }$/;"	f	class:TEncCfg
getLog2MaxMvLengthVertical	TLibCommon/TComSlice.h	/^  Int               getLog2MaxMvLengthVertical() const                     { return m_log2MaxMvLengthVertical;              }$/;"	f	class:TComVUI
getLog2MaxMvLengthVertical	TLibEncoder/TEncCfg.h	/^  Int          getLog2MaxMvLengthVertical()                          { return m_log2MaxMvLengthVertical; }$/;"	f	class:TEncCfg
getLog2MaxTransformSkipBlockSize	TLibCommon/TComSlice.h	/^  UInt                   getLog2MaxTransformSkipBlockSize() const                         { return m_log2MaxTransformSkipBlockSize;         }$/;"	f	class:TComPPSRExt
getLog2MaxTransformSkipBlockSize	TLibEncoder/TEncCfg.h	/^  UInt getLog2MaxTransformSkipBlockSize                () const      { return m_log2MaxTransformSkipBlockSize;     }$/;"	f	class:TEncCfg
getLog2MinCodingBlockSize	TLibCommon/TComSlice.h	/^  Int                    getLog2MinCodingBlockSize() const                                               { return m_log2MinCodingBlockSize;                                     }$/;"	f	class:TComSPS
getLog2ParallelMergeLevelMinus2	TLibCommon/TComSlice.h	/^  UInt                   getLog2ParallelMergeLevelMinus2() const                          { return m_log2ParallelMergeLevelMinus2;        }$/;"	f	class:TComPPS
getLog2ParallelMergeLevelMinus2	TLibEncoder/TEncCfg.h	/^  UInt         getLog2ParallelMergeLevelMinus2   ()                  { return m_log2ParallelMergeLevelMinus2;       }$/;"	f	class:TEncCfg
getLog2SaoOffsetScale	TLibCommon/TComSlice.h	/^  UInt                   getLog2SaoOffsetScale(ChannelType type) const                    { return m_log2SaoOffsetScale[type];             }$/;"	f	class:TComPPSRExt
getLongTermRefsPresent	TLibCommon/TComSlice.h	/^  Bool                   getLongTermRefsPresent() const                                                  { return m_bLongTermRefsPresent;                                       }$/;"	f	class:TComSPS
getLoopFilter	TLibEncoder/TEncTop.h	/^  TComLoopFilter*         getLoopFilter         () { return  &m_cLoopFilter;          }$/;"	f	class:TEncTop
getLoopFilterAcrossSlicesEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getLoopFilterAcrossSlicesEnabledFlag() const                     { return m_loopFilterAcrossSlicesEnabledFlag;   }$/;"	f	class:TComPPS
getLoopFilterAcrossTilesEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getLoopFilterAcrossTilesEnabledFlag() const                      { return m_loopFilterAcrossTilesEnabledFlag;    }$/;"	f	class:TComPPS
getLoopFilterBetaOffset	TLibEncoder/TEncCfg.h	/^  Int       getLoopFilterBetaOffset         ()      { return m_loopFilterBetaOffsetDiv2; }$/;"	f	class:TEncCfg
getLoopFilterDisable	TLibEncoder/TEncCfg.h	/^  Bool      getLoopFilterDisable            ()      { return  m_bLoopFilterDisable;       }$/;"	f	class:TEncCfg
getLoopFilterOffsetInPPS	TLibEncoder/TEncCfg.h	/^  Bool      getLoopFilterOffsetInPPS        ()      { return m_loopFilterOffsetInPPS; }$/;"	f	class:TEncCfg
getLoopFilterTcOffset	TLibEncoder/TEncCfg.h	/^  Int       getLoopFilterTcOffset           ()      { return m_loopFilterTcOffsetDiv2; }$/;"	f	class:TEncCfg
getLowDelayHrdFlag	TLibCommon/TComSlice.h	/^  Bool    getLowDelayHrdFlag( Int layer ) const                                      { return m_HRD[layer].lowDelayHrdFlag;                       }$/;"	f	class:TComHRD
getLowerBitRateConstraintFlag	TLibCommon/TComSlice.h	/^  Bool          getLowerBitRateConstraintFlag() const       { return m_lowerBitRateConstraintFlag;  }$/;"	f	class:ProfileTierLevel
getLowerBitRateConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool         getLowerBitRateConstraintFlag() const                 { return m_lowerBitRateConstraintFlag; }$/;"	f	class:TEncCfg
getLowerBound	TLibEncoder/TEncRateCtrl.h	/^  Int  getLowerBound()                                    { return m_lowerBound; }$/;"	f	class:TEncRCPic
getLtRefPicPocLsbSps	TLibCommon/TComSlice.h	/^  UInt                   getLtRefPicPocLsbSps(UInt index) const                                          { assert( index < MAX_NUM_LONG_TERM_REF_PICS ); return m_ltRefPicPocLsbSps[index]; }$/;"	f	class:TComSPS
getLumaLevelToDeltaQPMapping	TLibEncoder/TEncCfg.h	/^  const LumaLevelToDeltaQPMapping& getLumaLevelToDeltaQPMapping() const { return m_lumaLevelToDeltaQPMapping; }$/;"	f	class:TEncCfg
getMVPIdx	TLibCommon/TComDataCU.h	/^  Int           getMVPIdx                     ( RefPicList eRefPicList, UInt uiIdx) const                  { return m_apiMVPIdx[eRefPicList][uiIdx];    }$/;"	f	class:TComDataCU
getMVPIdx	TLibCommon/TComDataCU.h	/^  SChar*        getMVPIdx                     ( RefPicList eRefPicList )                                   { return m_apiMVPIdx[eRefPicList];           }$/;"	f	class:TComDataCU
getMVPNum	TLibCommon/TComDataCU.h	/^  Int           getMVPNum                     ( RefPicList eRefPicList, UInt uiIdx ) const                 { return m_apiMVPNum[eRefPicList][uiIdx];    }$/;"	f	class:TComDataCU
getMVPNum	TLibCommon/TComDataCU.h	/^  SChar*        getMVPNum                     ( RefPicList eRefPicList )                                   { return m_apiMVPNum[eRefPicList];           }$/;"	f	class:TComDataCU
getMarginX	TLibCommon/TComPicYuv.h	/^  Int           getMarginX        (const ComponentID id) const { return m_marginX >> getComponentScaleX(id);  }$/;"	f	class:TComPicYuv
getMarginY	TLibCommon/TComPicYuv.h	/^  Int           getMarginY        (const ComponentID id) const { return m_marginY >> getComponentScaleY(id);  }$/;"	f	class:TComPicYuv
getMasteringDisplaySEI	TLibEncoder/TEncCfg.h	/^  const TComSEIMasteringDisplay &getMasteringDisplaySEI() const      { return m_masteringDisplay; }$/;"	f	class:TEncCfg
getMatrixCoefficients	TLibCommon/TComSlice.h	/^  Int               getMatrixCoefficients() const                          { return m_matrixCoefficients;                   }$/;"	f	class:TComVUI
getMatrixCoefficients	TLibEncoder/TEncCfg.h	/^  Int          getMatrixCoefficients()                               { return m_matrixCoefficients; }$/;"	f	class:TEncCfg
getMaxAQDepth	TLibEncoder/TEncPic.h	/^  UInt                      getMaxAQDepth()             { return m_uiMaxAQDepth;        }$/;"	f	class:TEncPic
getMaxBitsPerMinCuDenom	TLibCommon/TComSlice.h	/^  Int               getMaxBitsPerMinCuDenom() const                        { return m_maxBitsPerMinCuDenom;                 }$/;"	f	class:TComVUI
getMaxBitsPerMinCuDenom	TLibEncoder/TEncCfg.h	/^  Int          getMaxBitsPerMinCuDenom()                             { return m_maxBitsPerMinCuDenom; }$/;"	f	class:TEncCfg
getMaxBytesPerPicDenom	TLibCommon/TComSlice.h	/^  Int               getMaxBytesPerPicDenom() const                         { return m_maxBytesPerPicDenom;                  }$/;"	f	class:TComVUI
getMaxBytesPerPicDenom	TLibEncoder/TEncCfg.h	/^  Int          getMaxBytesPerPicDenom()                              { return m_maxBytesPerPicDenom; }$/;"	f	class:TEncCfg
getMaxCUDepthOffset	TLibCommon/TComChromaFormat.h	/^static inline UInt getMaxCUDepthOffset(const ChromaFormat chFmt, const UInt quadtreeTULog2MinSize)$/;"	f
getMaxCUHeight	TLibCommon/TComSlice.h	/^  UInt                   getMaxCUHeight() const                                                          { return  m_uiMaxCUHeight;                                             }$/;"	f	class:TComSPS
getMaxCUWidth	TLibCommon/TComSlice.h	/^  UInt                   getMaxCUWidth() const                                                           { return  m_uiMaxCUWidth;                                              }$/;"	f	class:TComSPS
getMaxCuDQPDepth	TLibCommon/TComSlice.h	/^  UInt                   getMaxCuDQPDepth() const                                         { return m_uiMaxCuDQPDepth;                     }$/;"	f	class:TComPPS
getMaxCuDQPDepth	TLibEncoder/TEncCfg.h	/^  Int       getMaxCuDQPDepth                () const { return  m_iMaxCuDQPDepth; }$/;"	f	class:TEncCfg
getMaxDPBNumFrames	TLibCommon/ProfileLevelTierFeatures.cpp	/^Int ProfileLevelTierFeatures::getMaxDPBNumFrames(const UInt PicSizeInSamplesY) \/\/ returns -1 if no limit, otherwise a limit of DPB pictures is indicated.$/;"	f	class:ProfileLevelTierFeatures
getMaxDecPicBuffering	TLibCommon/TComSlice.h	/^  UInt                   getMaxDecPicBuffering(UInt tlayer) const                                        { return m_uiMaxDecPicBuffering[tlayer];                               }$/;"	f	class:TComSPS
getMaxDecPicBuffering	TLibCommon/TComSlice.h	/^  UInt              getMaxDecPicBuffering(UInt tLayer) const             { return m_uiMaxDecPicBuffering[tLayer];                           }$/;"	f	class:TComVPS
getMaxDecPicBuffering	TLibEncoder/TEncCfg.h	/^  Int       getMaxDecPicBuffering           (UInt tlayer) { return m_maxDecPicBuffering[tlayer]; }$/;"	f	class:TEncCfg
getMaxDeltaQP	TLibEncoder/TEncCfg.h	/^  Int       getMaxDeltaQP                   () const { return  m_iMaxDeltaQP; }$/;"	f	class:TEncCfg
getMaxLatencyIncrease	TLibCommon/TComSlice.h	/^  UInt              getMaxLatencyIncrease(UInt tLayer) const             { return m_uiMaxLatencyIncrease[tLayer];                           }$/;"	f	class:TComVPS
getMaxLatencyIncreasePlus1	TLibCommon/TComSlice.h	/^  UInt                   getMaxLatencyIncreasePlus1(UInt tlayer) const                                   { return m_uiMaxLatencyIncreasePlus1[tlayer];                          }$/;"	f	class:TComSPS
getMaxLayers	TLibCommon/TComSlice.h	/^  UInt              getMaxLayers() const                                 { return m_uiMaxLayers;                                            }$/;"	f	class:TComVPS
getMaxLog2CtbSize	TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::getMaxLog2CtbSize(const TComPTL &\/*ptl*\/,$/;"	f	class:TDecConformanceCheck
getMaxLog2TrDynamicRange	TLibCommon/TComSlice.h	/^  Int                    getMaxLog2TrDynamicRange(ChannelType channelType) const                         { return getSpsRangeExtension().getExtendedPrecisionProcessingFlag() ? std::max<Int>(15, Int(m_bitDepths.recon[channelType] + 6)) : 15; }$/;"	f	class:TComSPS
getMaxNuhReservedZeroLayerId	TLibCommon/TComSlice.h	/^  UInt              getMaxNuhReservedZeroLayerId() const                 { return m_maxNuhReservedZeroLayerId;                              }$/;"	f	class:TComVPS
getMaxNumMergeCand	TLibCommon/TComSlice.h	/^  UInt                        getMaxNumMergeCand() const                             { return m_maxNumMergeCand;                                     }$/;"	f	class:TComSlice
getMaxNumMergeCand	TLibEncoder/TEncCfg.h	/^  UInt         getMaxNumMergeCand                ()                  { return m_maxNumMergeCand;   }$/;"	f	class:TEncCfg
getMaxNumOffsetsPerPic	TLibEncoder/TEncCfg.h	/^  Int   getMaxNumOffsetsPerPic                   ()                  { return m_maxNumOffsetsPerPic; }$/;"	f	class:TEncCfg
getMaxOffsetQVal	TLibCommon/TComSampleAdaptiveOffset.h	/^  static Int getMaxOffsetQVal(const Int channelBitDepth) { return (1<<(std::min<Int>(channelBitDepth,MAX_SAO_TRUNCATED_BITDEPTH)-5))-1; } \/\/Table 9-32, inclusive$/;"	f	class:TComSampleAdaptiveOffset
getMaxOpSets	TLibCommon/TComSlice.h	/^  UInt              getMaxOpSets() const                                 { return m_numOpSets;                                              }$/;"	f	class:TComVPS
getMaxPicHeightInLumaSamples	TLibCommon/ProfileLevelTierFeatures.cpp	/^LevelTierFeatures::getMaxPicHeightInLumaSamples() const$/;"	f	class:LevelTierFeatures
getMaxPicHeightInLumaSamples	TLibDecoder/TDecConformance.cpp	/^LevelTierFeatures::getMaxPicHeightInLumaSamples() const$/;"	f	class:LevelTierFeatures
getMaxPicWidthInLumaSamples	TLibCommon/ProfileLevelTierFeatures.cpp	/^LevelTierFeatures::getMaxPicWidthInLumaSamples()  const$/;"	f	class:LevelTierFeatures
getMaxPicWidthInLumaSamples	TLibDecoder/TDecConformance.cpp	/^LevelTierFeatures::getMaxPicWidthInLumaSamples()  const$/;"	f	class:LevelTierFeatures
getMaxRawCtuBits	TLibCommon/ProfileLevelTierFeatures.h	/^    UInt   getMaxRawCtuBits()            const { return m_maxRawCtuBits; }$/;"	f	class:ProfileLevelTierFeatures
getMaxRawCtuBits	TLibDecoder/TDecConformance.h	/^    UInt getMaxRawCtuBits()              const { return m_maxRawCtuBits; }$/;"	f	class:ProfileLevelTierFeatures
getMaxRefPicNum	TLibEncoder/TEncCfg.h	/^  Int       getMaxRefPicNum                 ()                              { return m_iMaxRefPicNum;           }$/;"	f	class:TEncCfg
getMaxTLayers	TLibCommon/TComSlice.h	/^  UInt                   getMaxTLayers() const                                                           { return m_uiMaxTLayers; }$/;"	f	class:TComSPS
getMaxTLayers	TLibCommon/TComSlice.h	/^  UInt              getMaxTLayers() const                                { return m_uiMaxTLayers;                                           }$/;"	f	class:TComVPS
getMaxTempLayer	TLibEncoder/TEncCfg.h	/^  Int       getMaxTempLayer                 ()                              { return m_maxTempLayer;              } $/;"	f	class:TEncCfg
getMaxTotalCUDepth	TLibCommon/TComSlice.h	/^  UInt                   getMaxTotalCUDepth() const                                                      { return  m_uiMaxTotalCUDepth;                                         }$/;"	f	class:TComSPS
getMaxTrSize	TLibCommon/TComSlice.h	/^  UInt                   getMaxTrSize() const                                                            { return  m_uiMaxTrSize;                                               }$/;"	f	class:TComSPS
getMergeAMP	TLibCommon/TComDataCU.h	/^  Bool          getMergeAMP                   ( ) const                                                    { return m_bIsMergeAMP;                      }$/;"	f	class:TComDataCU
getMergeFlag	TLibCommon/TComDataCU.h	/^  Bool          getMergeFlag                  ( UInt uiIdx ) const                                         { return m_pbMergeFlag[uiIdx];               }$/;"	f	class:TComDataCU
getMergeFlag	TLibCommon/TComDataCU.h	/^  Bool*         getMergeFlag                  ( )                                                          { return m_pbMergeFlag;                      }$/;"	f	class:TComDataCU
getMergeIndex	TLibCommon/TComDataCU.h	/^  UChar         getMergeIndex                 ( UInt uiIdx ) const                                         { return m_puhMergeIndex[uiIdx];             }$/;"	f	class:TComDataCU
getMergeIndex	TLibCommon/TComDataCU.h	/^  UChar*        getMergeIndex                 ( )                                                          { return m_puhMergeIndex;                    }$/;"	f	class:TComDataCU
getMergeList	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Int TComSampleAdaptiveOffset::getMergeList(TComPic* pic, Int ctuRsAddr, SAOBlkParam* blkParams, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES])$/;"	f	class:TComSampleAdaptiveOffset
getMinCUHeight	TLibCommon/TComPic.h	/^  UInt          getMinCUHeight() const             { return m_picSym.getMinCUHeight();         }$/;"	f	class:TComPic
getMinCUHeight	TLibCommon/TComPicSym.h	/^  UInt               getMinCUHeight() const                                { return m_uiMinCUHeight;               }$/;"	f	class:TComPicSym
getMinCUWidth	TLibCommon/TComPic.h	/^  UInt          getMinCUWidth() const              { return m_picSym.getMinCUWidth();          }$/;"	f	class:TComPic
getMinCUWidth	TLibCommon/TComPicSym.h	/^  UInt               getMinCUWidth() const                                 { return m_uiMinCUWidth;                }$/;"	f	class:TComPicSym
getMinCr	TLibCommon/ProfileLevelTierFeatures.h	/^    Double getMinCr()                    const { return (m_pLevelTier!=0 && m_pProfile!=0) ? (m_pProfile->minCrScaleFactorx10 * m_pLevelTier->minCrBase[m_tier?1:0])\/10.0 : 0.0 ; }   \/\/ currently not used for checking$/;"	f	class:ProfileLevelTierFeatures
getMinCr	TLibDecoder/TDecConformance.h	/^    Double getMinCr()                    const { return (m_pLevelTier!=0 && m_pProfile!=0) ? (m_pProfile->minCrScaleFactorx10 * m_pLevelTier->minCrBase[m_tier?1:0])\/10.0 : 0.0 ; }   \/\/ currently not used for checking$/;"	f	class:ProfileLevelTierFeatures
getMinLog2CtbSize	TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::getMinLog2CtbSize(const TComPTL &ptl,$/;"	f	class:TDecConformanceCheck
getMinSearchWindow	TLibEncoder/TEncCfg.h	/^  Int       getMinSearchWindow                 () const { return m_minSearchWindow; }$/;"	f	class:TEncCfg
getMinSpatialSegmentationIdc	TLibCommon/TComSlice.h	/^  Int               getMinSpatialSegmentationIdc() const                   { return m_minSpatialSegmentationIdc;            }$/;"	f	class:TComVUI
getMinSpatialSegmentationIdc	TLibEncoder/TEncCfg.h	/^  Int          getMinSpatialSegmentationIdc()                        { return m_minSpatialSegmentationIdc; }$/;"	f	class:TEncCfg
getMotionEstimationSearchMethod	TLibEncoder/TEncCfg.h	/^  MESearchMethod getMotionEstimationSearchMethod ( ) const { return m_motionEstimationSearchMethod; }$/;"	f	class:TEncCfg
getMotionVectorsOverPicBoundariesFlag	TLibCommon/TComSlice.h	/^  Bool              getMotionVectorsOverPicBoundariesFlag() const          { return m_motionVectorsOverPicBoundariesFlag;   }$/;"	f	class:TComVUI
getMotionVectorsOverPicBoundariesFlag	TLibEncoder/TEncCfg.h	/^  Bool         getMotionVectorsOverPicBoundariesFlag()               { return m_motionVectorsOverPicBoundariesFlag; }$/;"	f	class:TEncCfg
getMps	TLibCommon/ContextModel.h	/^  UChar getMps    ()                { return ( m_ucState  & 1 ); }                    \/\/\/< get curret MPS$/;"	f	class:ContextModel
getMsssim	TLibEncoder/TEncAnalyze.h	/^  Double  getMsssim(ComponentID compID) const { return  m_runningTotal.MSSSIM[compID];  }$/;"	f	class:TEncAnalyze
getMv	TLibCommon/TComMotionInfo.h	/^  TComMv       & getMv()       { return  m_acMv; }$/;"	f	class:TComMvField
getMv	TLibCommon/TComMotionInfo.h	/^  TComMv const & getMv    ( Int iIdx ) const { return  m_pcMv    [iIdx]; }$/;"	f	class:TComCUMvField
getMv	TLibCommon/TComMotionInfo.h	/^  TComMv const & getMv() const { return  m_acMv; }$/;"	f	class:TComMvField
getMvField	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getMvField ( const TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefPicList, TComMvField& rcMvField )$/;"	f	class:TComDataCU
getMvPredAMVP	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::getMvPredAMVP( TComDataCU* pcCU, UInt uiPartIdx, UInt uiPartAddr, RefPicList eRefPicList, TComMv& rcMvPred )$/;"	f	class:TComPrediction
getMvPredAbove	TLibCommon/TComDataCU.h	/^  Void          getMvPredAbove                ( TComMv&     rcMvPred ) const                               { rcMvPred = m_cMvFieldB.getMv();            }$/;"	f	class:TComDataCU
getMvPredAboveRight	TLibCommon/TComDataCU.h	/^  Void          getMvPredAboveRight           ( TComMv&     rcMvPred ) const                               { rcMvPred = m_cMvFieldC.getMv();            }$/;"	f	class:TComDataCU
getMvPredLeft	TLibCommon/TComDataCU.h	/^  Void          getMvPredLeft                 ( TComMv&     rcMvPred ) const                               { rcMvPred = m_cMvFieldA.getMv();            }$/;"	f	class:TComDataCU
getMvd	TLibCommon/TComMotionInfo.h	/^  TComMv const & getMvd   ( Int iIdx ) const { return  m_pcMvd   [iIdx]; }$/;"	f	class:TComCUMvField
getMvdL1ZeroFlag	TLibCommon/TComSlice.h	/^  Bool                        getMvdL1ZeroFlag() const                               { return m_bLMvdL1Zero;                                         }$/;"	f	class:TComSlice
getNalHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool    getNalHrdParametersPresentFlag( ) const                                    { return m_nalHrdParametersPresentFlag;                      }$/;"	f	class:TComHRD
getNalUnitType	TLibCommon/TComSlice.h	/^  NalUnitType                 getNalUnitType() const                                 { return m_eNalUnitType;                                        }$/;"	f	class:TComSlice
getNalUnitType	TLibEncoder/TEncGOP.cpp	/^NalUnitType TEncGOP::getNalUnitType(Int pocCurr, Int lastIDR, Bool isField)$/;"	f	class:TEncGOP
getName	TLibCommon/Debug.h	/^  const std::string  &getName()     const       { return m_sName;   }$/;"	f	class:EnvVar
getName	TLibCommon/TComCodingStatistics.h	/^static inline const TChar* getName(TComCodingStatisticsType name)$/;"	f
getNeutralChromaIndicationFlag	TLibCommon/TComSlice.h	/^  Bool              getNeutralChromaIndicationFlag() const                 { return m_neutralChromaIndicationFlag;          }$/;"	f	class:TComVUI
getNeutralChromaIndicationFlag	TLibEncoder/TEncCfg.h	/^  Bool         getNeutralChromaIndicationFlag()                      { return m_neutralChromaIndicationFlag; }$/;"	f	class:TEncCfg
getNoDisplaySEITLayer	TLibEncoder/TEncCfg.h	/^  Int   getNoDisplaySEITLayer()                                      { return m_noDisplaySEITLayer; }$/;"	f	class:TEncCfg
getNoOutputPriorPicsFlag	TLibCommon/TComSlice.h	/^  Bool                        getNoOutputPriorPicsFlag() const                       { return m_noOutputPriorPicsFlag;                               }$/;"	f	class:TComSlice
getNoOutputPriorPicsFlag	TLibDecoder/TDecTop.h	/^  Bool  getNoOutputPriorPicsFlag () { return m_isNoOutputPriorPics; }$/;"	f	class:TDecTop
getNoRaslOutputFlag	TLibCommon/TComSlice.h	/^  Bool                        getNoRaslOutputFlag() const                            { return m_noRaslOutputFlag;                                    }$/;"	f	class:TComSlice
getNonPackedConstraintFlag	TLibCommon/TComSlice.h	/^  Bool          getNonPackedConstraintFlag() const          { return m_nonPackedConstraintFlag;     }$/;"	f	class:ProfileTierLevel
getNonPackedConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool         getNonPackedConstraintFlag() const                    { return m_nonPackedConstraintFlag; }$/;"	f	class:TEncCfg
getNumAQPartInHeight	TLibEncoder/TEncPic.h	/^  UInt                   getNumAQPartInHeight()  { return m_uiNumAQPartInHeight; }$/;"	f	class:TEncPicQPAdaptationLayer
getNumAQPartInWidth	TLibEncoder/TEncPic.h	/^  UInt                   getNumAQPartInWidth()   { return m_uiNumAQPartInWidth;  }$/;"	f	class:TEncPicQPAdaptationLayer
getNumAllocatedSlice	TLibCommon/TComPic.h	/^  UInt          getNumAllocatedSlice() const      {return m_picSym.getNumAllocatedSlice();}$/;"	f	class:TComPic
getNumAllocatedSlice	TLibCommon/TComPicSym.h	/^  UInt               getNumAllocatedSlice() const                          { return UInt(m_apSlices.size());       }$/;"	f	class:TComPicSym
getNumBitsLeft	TLibCommon/TComBitStream.h	/^  UInt getNumBitsLeft() { return 8*((UInt)m_fifo.size() - m_fifo_idx) + m_num_held_bits; }$/;"	f	class:TComInputBitstream
getNumBitsRead	TLibCommon/TComBitStream.h	/^  UInt  getNumBitsRead() { return m_numBitsRead; }$/;"	f	class:TComInputBitstream
getNumBitsUntilByteAligned	TLibCommon/TComBitCounter.h	/^  Int         getNumBitsUntilByteAligned() const                              { return (8 - m_uiBitCounter) & 0x7;}$/;"	f	class:TComBitCounter
getNumBitsUntilByteAligned	TLibCommon/TComBitStream.h	/^  Int getNumBitsUntilByteAligned() const { return (8 - m_num_held_bits) & 0x7; }$/;"	f	class:TComOutputBitstream
getNumBitsUntilByteAligned	TLibCommon/TComBitStream.h	/^  UInt getNumBitsUntilByteAligned() { return m_num_held_bits & (0x7); }$/;"	f	class:TComInputBitstream
getNumColumnsMinus1	TLibEncoder/TEncCfg.h	/^  Int   getNumColumnsMinus1            ()                            { return m_iNumColumnsMinus1; }$/;"	f	class:TEncCfg
getNumExtraSliceHeaderBits	TLibCommon/TComSlice.h	/^  Int                    getNumExtraSliceHeaderBits() const                               { return m_numExtraSliceHeaderBits;             }$/;"	f	class:TComPPS
getNumHrdParameters	TLibCommon/TComSlice.h	/^  UInt              getNumHrdParameters() const                          { return m_numHrdParameters;                                       }$/;"	f	class:TComVPS
getNumLongTermRefPicSPS	TLibCommon/TComSlice.h	/^  UInt                   getNumLongTermRefPicSPS() const                                                 { return m_numLongTermRefPicSPS;                                       }$/;"	f	class:TComSPS
getNumPartInCtuHeight	TLibCommon/TComPic.h	/^  UInt          getNumPartInCtuHeight() const      { return m_picSym.getNumPartInCtuHeight();  }$/;"	f	class:TComPic
getNumPartInCtuHeight	TLibCommon/TComPicSym.h	/^  UInt               getNumPartInCtuHeight() const                         { return m_numPartInCtuHeight;   }$/;"	f	class:TComPicSym
getNumPartInCtuWidth	TLibCommon/TComPic.h	/^  UInt          getNumPartInCtuWidth() const       { return m_picSym.getNumPartInCtuWidth();   }$/;"	f	class:TComPic
getNumPartInCtuWidth	TLibCommon/TComPicSym.h	/^  UInt               getNumPartInCtuWidth() const                          { return m_numPartInCtuWidth;    }$/;"	f	class:TComPicSym
getNumPartitions	TLibCommon/TComDataCU.cpp	/^UChar TComDataCU::getNumPartitions(const UInt uiAbsPartIdx) const$/;"	f	class:TComDataCU
getNumPartitionsInCtu	TLibCommon/TComPic.h	/^  UInt          getNumPartitionsInCtu() const      { return m_picSym.getNumPartitionsInCtu();  }$/;"	f	class:TComPic
getNumPartitionsInCtu	TLibCommon/TComPicSym.h	/^  UInt               getNumPartitionsInCtu() const                         { return m_numPartitionsInCtu;   }$/;"	f	class:TComPicSym
getNumPic	TLibEncoder/TEncAnalyze.h	/^  UInt    getNumPic()                 const { return  m_uiNumPic;   }$/;"	f	class:TEncAnalyze
getNumPic	TLibEncoder/TEncRateCtrl.h	/^  Int  getNumPic()                { return m_numPic;}$/;"	f	class:TEncRCGOP
getNumPixel	TLibEncoder/TEncRateCtrl.h	/^  Int  getNumPixel()                    { return m_numberOfPixel; }$/;"	f	class:TEncRCSeq
getNumRectRegions	TLibCommon/SEI.h	/^  UInt getNumRectRegions()  const  { return (UInt) m_regions.size(); }$/;"	f	class:SEIRegionalNesting
getNumRefIdc	TLibCommon/TComSlice.h	/^  Int     getNumRefIdc() const                         { return m_numRefIdc;                  }$/;"	f	class:TComReferencePictureSet
getNumRefIdx	TLibCommon/TComSlice.h	/^  Int                         getNumRefIdx( RefPicList e ) const                     { return m_aiNumRefIdx[e];                                      }$/;"	f	class:TComSlice
getNumRefIdxL0DefaultActive	TLibCommon/TComSlice.h	/^  UInt                   getNumRefIdxL0DefaultActive() const                              { return m_numRefIdxL0DefaultActive;            }$/;"	f	class:TComPPS
getNumRefIdxL1DefaultActive	TLibCommon/TComSlice.h	/^  UInt                   getNumRefIdxL1DefaultActive() const                              { return m_numRefIdxL1DefaultActive;            }$/;"	f	class:TComPPS
getNumRegions	TLibCommon/SEI.h	/^  UInt getNumRegions() const { return (UInt) m_regions.size(); }$/;"	f	class:RegionalSEI
getNumReorderPics	TLibCommon/TComSlice.h	/^  Int                    getNumReorderPics(UInt tlayer) const                                            { return m_numReorderPics[tlayer];                                     }$/;"	f	class:TComSPS
getNumReorderPics	TLibCommon/TComSlice.h	/^  UInt              getNumReorderPics(UInt tLayer) const                 { return m_numReorderPics[tLayer];                                 }$/;"	f	class:TComVPS
getNumReorderPics	TLibEncoder/TEncCfg.h	/^  Int       getNumReorderPics               (UInt tlayer) { return m_numReorderPics[tlayer]; }$/;"	f	class:TEncCfg
getNumRnSEIMessage	TLibCommon/SEI.h	/^  UInt getNumRnSEIMessage() const  { return (UInt) m_rnSeiMessages.size(); }$/;"	f	class:SEIRegionalNesting
getNumRowsMinus1	TLibEncoder/TEncCfg.h	/^  Int   getNumRowsMinus1               ()                            { return m_iNumRowsMinus1; }$/;"	f	class:TEncCfg
getNumRpsCurrTempList	TLibCommon/TComSlice.cpp	/^Int TComSlice::getNumRpsCurrTempList() const$/;"	f	class:TComSlice
getNumTicksPocDiffOneMinus1	TLibCommon/TComSlice.h	/^  Int  getNumTicksPocDiffOneMinus1( ) const    { return m_numTicksPocDiffOneMinus1;    }$/;"	f	class:TimingInfo
getNumTicksPocDiffOneMinus1	TLibEncoder/TEncCfg.h	/^  Int          getNumTicksPocDiffOneMinus1()                         { return m_numTicksPocDiffOneMinus1;    }$/;"	f	class:TEncCfg
getNumTileColumnsMinus1	TLibCommon/TComPicSym.h	/^  Int                getNumTileColumnsMinus1() const                       { return m_numTileColumnsMinus1; }$/;"	f	class:TComPicSym
getNumTileColumnsMinus1	TLibCommon/TComSlice.h	/^  Int                    getNumTileColumnsMinus1() const                                  { return m_numTileColumnsMinus1;                }$/;"	f	class:TComPPS
getNumTileRowsMinus1	TLibCommon/TComPicSym.h	/^  Int                getNumTileRowsMinus1() const                          { return m_numTileRowsMinus1;    }$/;"	f	class:TComPicSym
getNumTileRowsMinus1	TLibCommon/TComSlice.h	/^  Int                    getNumTileRowsMinus1() const                                     { return m_numTileRowsMinus1;                   }$/;"	f	class:TComPPS
getNumTiles	TLibCommon/TComPicSym.h	/^  Int                getNumTiles() const                                   { return (m_numTileRowsMinus1+1)*(m_numTileColumnsMinus1+1); }$/;"	f	class:TComPicSym
getNumUnitsInTick	TLibCommon/TComSlice.h	/^  UInt getNumUnitsInTick( ) const              { return m_numUnitsInTick;              }$/;"	f	class:TimingInfo
getNumWrittenBits	TLibEncoder/TEncBinCoderCABAC.cpp	/^UInt TEncBinCABAC::getNumWrittenBits()$/;"	f	class:TEncBinCABAC
getNumWrittenBits	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^UInt TEncBinCABACCounter::getNumWrittenBits()$/;"	f	class:TEncBinCABACCounter
getNumberOfChecksumErrorsDetected	TLibDecoder/TDecGop.h	/^  UInt getNumberOfChecksumErrorsDetected() const { return m_numberOfChecksumErrorsDetected; }$/;"	f	class:TDecGop
getNumberOfChecksumErrorsDetected	TLibDecoder/TDecTop.h	/^  UInt  getNumberOfChecksumErrorsDetected() const { return m_cGopDecoder.getNumberOfChecksumErrorsDetected(); }$/;"	f	class:TDecTop
getNumberOfCtusInFrame	TLibCommon/TComPic.h	/^  UInt          getNumberOfCtusInFrame() const     { return m_picSym.getNumberOfCtusInFrame(); }$/;"	f	class:TComPic
getNumberOfCtusInFrame	TLibCommon/TComPicSym.h	/^  UInt               getNumberOfCtusInFrame() const                        { return m_numCtusInFrame;              }$/;"	f	class:TComPicSym
getNumberOfLCU	TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfLCU()                                   { return m_numberOfLCU; }$/;"	f	class:TEncRCPic
getNumberOfLCU	TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfLCU()                 { return m_numberOfLCU; }$/;"	f	class:TEncRCSeq
getNumberOfLevel	TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfLevel()               { return m_numberOfLevel; }$/;"	f	class:TEncRCSeq
getNumberOfLongtermPictures	TLibCommon/TComSlice.h	/^  Int     getNumberOfLongtermPictures() const          { return m_numberOfLongtermPictures;   }$/;"	f	class:TComReferencePictureSet
getNumberOfNegativePictures	TLibCommon/TComSlice.h	/^  Int     getNumberOfNegativePictures() const          { return m_numberOfNegativePictures;   }$/;"	f	class:TComReferencePictureSet
getNumberOfPictures	TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getNumberOfPictures() const$/;"	f	class:TComReferencePictureSet
getNumberOfPixel	TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfPixel()                                 { return m_numberOfPixel; }$/;"	f	class:TEncRCPic
getNumberOfPositivePictures	TLibCommon/TComSlice.h	/^  Int     getNumberOfPositivePictures() const          { return m_numberOfPositivePictures;   }$/;"	f	class:TComReferencePictureSet
getNumberOfReferencePictureSets	TLibCommon/TComSlice.h	/^  Int                            getNumberOfReferencePictureSets() const                  { return Int(m_referencePictureSets.size());              }$/;"	f	class:TComRPSList
getNumberOfSubstreamSizes	TLibCommon/TComSlice.h	/^  UInt                        getNumberOfSubstreamSizes( )                           { return (UInt) m_substreamSizes.size();                        }$/;"	f	class:TComSlice
getNumberOfTileRects	TLibCommon/SEI.h	/^      Int  getNumberOfTileRects() const$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
getNumberOfTileSets	TLibCommon/SEI.h	/^  Int  getNumberOfTileSets()                 const { return Int(m_tile_set_data.size()); }$/;"	f	class:SEITempMotionConstrainedTileSets
getNumberOfTimesets	TLibEncoder/TEncCfg.h	/^  Int   getNumberOfTimesets()                                        { return m_timeCodeSEINumTs; }$/;"	f	class:TEncCfg
getNumberOfWrittenBits	TLibCommon/TComBitCounter.h	/^  UInt        getNumberOfWrittenBits() const                                  { return m_uiBitCounter; }$/;"	f	class:TComBitCounter
getNumberOfWrittenBits	TLibCommon/TComBitStream.h	/^  UInt getNumberOfWrittenBits() const { return UInt(m_fifo.size()) * 8 + m_num_held_bits; }$/;"	f	class:TComOutputBitstream
getNumberOfWrittenBits	TLibEncoder/TEncCavlc.h	/^  UInt  getNumberOfWrittenBits()                { return  m_pcBitIf->getNumberOfWrittenBits();  }$/;"	f	class:TEncCavlc
getNumberOfWrittenBits	TLibEncoder/TEncEntropy.h	/^  UInt    getNumberOfWrittenBits    ()                        { return m_pcEntropyCoderIf->getNumberOfWrittenBits(); }$/;"	f	class:TEncEntropy
getNumberOfWrittenBits	TLibEncoder/TEncSbac.h	/^  UInt  getNumberOfWrittenBits ()                { return m_pcBinIf->getNumWrittenBits(); }$/;"	f	class:TEncSbac
getNumberValidChannelTypes	TLibCommon/TComChromaFormat.h	/^static inline UInt        getNumberValidChannelTypes(const ChromaFormat fmt)                       { return (fmt==CHROMA_400) ? 1 : MAX_NUM_CHANNEL_TYPE;               }$/;"	f
getNumberValidComponents	TLibCommon/TComChromaFormat.h	/^static inline UInt        getNumberValidComponents  (const ChromaFormat fmt)                       { return (fmt==CHROMA_400) ? 1 : MAX_NUM_COMPONENT;                  }$/;"	f
getNumberValidComponents	TLibCommon/TComPic.h	/^  Int           getNumberValidComponents() const                  { return m_apcPicYuv[PIC_YUV_REC]->getNumberValidComponents(); }$/;"	f	class:TComPic
getNumberValidComponents	TLibCommon/TComPicYuv.h	/^  UInt          getNumberValidComponents() const { return ::getNumberValidComponents(m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getNumberValidComponents	TLibCommon/TComYuv.h	/^  UInt         getNumberValidComponents   ()                     const { return ::getNumberValidComponents(m_chromaFormatIDC); }$/;"	f	class:TComYuv
getOmniViewportSEIAzimuthCentre	TLibEncoder/TEncCfg.h	/^  Int   getOmniViewportSEIAzimuthCentre(Int idx)                     { return m_omniViewportSEIAzimuthCentre[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool  getOmniViewportSEICancelFlag()                               { return m_omniViewportSEICancelFlag; }$/;"	f	class:TEncCfg
getOmniViewportSEICntMinus1	TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEICntMinus1()                                { return m_omniViewportSEICntMinus1; }$/;"	f	class:TEncCfg
getOmniViewportSEIElevationCentre	TLibEncoder/TEncCfg.h	/^  Int   getOmniViewportSEIElevationCentre(Int idx)                   { return m_omniViewportSEIElevationCentre[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getOmniViewportSEIEnabled()                                  { return m_omniViewportSEIEnabled; }$/;"	f	class:TEncCfg
getOmniViewportSEIHorRange	TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEIHorRange(Int idx)                          { return m_omniViewportSEIHorRange[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEIId	TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEIId()                                       { return m_omniViewportSEIId; }$/;"	f	class:TEncCfg
getOmniViewportSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool  getOmniViewportSEIPersistenceFlag()                          { return m_omniViewportSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getOmniViewportSEITiltCentre	TLibEncoder/TEncCfg.h	/^  Int   getOmniViewportSEITiltCentre(Int idx)                        { return m_omniViewportSEITiltCentre[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEIVerRange	TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEIVerRange(Int idx)                          { return m_omniViewportSEIVerRange[idx]; }$/;"	f	class:TEncCfg
getOnePictureOnlyConstraintFlag	TLibCommon/TComSlice.h	/^  Bool          getOnePictureOnlyConstraintFlag() const     { return m_onePictureOnlyConstraintFlag;}$/;"	f	class:ProfileTierLevel
getOnePictureOnlyConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool         getOnePictureOnlyConstraintFlag() const               { return m_onePictureOnlyConstraintFlag; }$/;"	f	class:TEncCfg
getOutputFlagPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getOutputFlagPresentFlag() const                                 { return m_OutputFlagPresentFlag;               }$/;"	f	class:TComPPS
getOutputLogControl	TLibEncoder/TEncTop.h	/^  TEncAnalyze::OutputLogControl getOutputLogControl() const$/;"	f	class:TEncTop
getOutputMark	TLibCommon/TComPic.h	/^  Bool          getOutputMark () const      { return m_bNeededForOutput;  }$/;"	f	class:TComPic
getOverscanAppropriateFlag	TLibCommon/TComSlice.h	/^  Bool              getOverscanAppropriateFlag() const                     { return m_overscanAppropriateFlag;              }$/;"	f	class:TComVUI
getOverscanAppropriateFlag	TLibEncoder/TEncCfg.h	/^  Bool         getOverscanAppropriateFlag()                          { return m_overscanAppropriateFlag; }$/;"	f	class:TEncCfg
getOverscanInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool              getOverscanInfoPresentFlag() const                     { return m_overscanInfoPresentFlag;              }$/;"	f	class:TComVUI
getOverscanInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getOverscanInfoPresentFlag()                          { return m_overscanInfoPresentFlag; }$/;"	f	class:TEncCfg
getPCMBitDepth	TLibCommon/TComSlice.h	/^  UInt                   getPCMBitDepth(ChannelType type) const                                          { return m_pcmBitDepths[type];                                         }$/;"	f	class:TComSPS
getPCMFilterDisableFlag	TLibCommon/TComSlice.h	/^  Bool                   getPCMFilterDisableFlag() const                                                 { return m_bPCMFilterDisableFlag;                                      }$/;"	f	class:TComSPS
getPCMFilterDisableFlag	TLibEncoder/TEncCfg.h	/^  Bool      getPCMFilterDisableFlag         ()      { return m_bPCMFilterDisableFlag;   }$/;"	f	class:TEncCfg
getPCMInputBitDepthFlag	TLibEncoder/TEncCfg.h	/^  Bool      getPCMInputBitDepthFlag         ()      { return m_bPCMInputBitDepthFlag;   }$/;"	f	class:TEncCfg
getPCMLog2MaxSize	TLibCommon/TComSlice.h	/^  UInt                   getPCMLog2MaxSize() const                                                       { return  m_pcmLog2MaxSize;                                            }$/;"	f	class:TComSPS
getPCMLog2MaxSize	TLibEncoder/TEncCfg.h	/^  UInt      getPCMLog2MaxSize               ()      { return m_pcmLog2MaxSize;  }$/;"	f	class:TEncCfg
getPCMLog2MinSize	TLibCommon/TComSlice.h	/^  UInt                   getPCMLog2MinSize() const                                                       { return  m_uiPCMLog2MinSize;                                          }$/;"	f	class:TComSPS
getPCMLog2MinSize	TLibEncoder/TEncCfg.h	/^  UInt      getPCMLog2MinSize               ()      { return  m_uiPCMLog2MinSize;  }$/;"	f	class:TEncCfg
getPCMSample	TLibCommon/TComDataCU.h	/^  Pel*          getPCMSample                  ( ComponentID component )                                    { return m_pcIPCMSample[component];          }$/;"	f	class:TComDataCU
getPOC	TLibCommon/TComPic.h	/^  Int           getPOC() const                     { return  m_picSym.getSlice(m_uiCurrSliceIdx)->getPOC();  }$/;"	f	class:TComPic
getPOC	TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getPOC(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getPOC	TLibCommon/TComSlice.h	/^  Int                         getPOC() const                                         { return m_iPOC;                                                }$/;"	f	class:TComSlice
getPPS	TLibCommon/TComPicSym.h	/^  const TComPPS&     getPPS()                 const                        { return m_pps; }$/;"	f	class:TComPicSym
getPPS	TLibCommon/TComSlice.h	/^  TComPPS*       getPPS(Int ppsId)                                           { return m_ppsMap.getPS(ppsId); };$/;"	f	class:ParameterSetManager
getPPS	TLibCommon/TComSlice.h	/^  const TComPPS*              getPPS() const                                         { return m_pcPPS;                                               }$/;"	f	class:TComSlice
getPPSChangedFlag	TLibCommon/TComSlice.h	/^  Bool           getPPSChangedFlag(Int ppsId) const                          { return m_ppsMap.getChangedFlag(ppsId); }$/;"	f	class:ParameterSetManager
getPPSDeblockingFilterDisabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getPPSDeblockingFilterDisabledFlag() const                       { return m_ppsDeblockingFilterDisabledFlag;     } \/\/!< get offset for deblocking filter disabled$/;"	f	class:TComPPS
getPPSId	TLibCommon/TComSlice.h	/^  Int                         getPPSId() const                                       { return m_iPPSId;                                              }$/;"	f	class:TComSlice
getPPSId	TLibCommon/TComSlice.h	/^  Int                    getPPSId() const                                                 { return m_PPSId;                               }$/;"	f	class:TComPPS
getPS	TLibCommon/TComSlice.h	/^  T* getPS(Int psId)$/;"	f	class:ParameterSetMap
getPS	TLibCommon/TComSlice.h	/^  const T* getPS(Int psId) const$/;"	f	class:ParameterSetMap
getPTL	TLibCommon/TComSlice.h	/^  TComPTL*               getPTL()                                                                        { return &m_pcPTL;                                                     }$/;"	f	class:TComSPS
getPTL	TLibCommon/TComSlice.h	/^  TComPTL*          getPTL()                                             { return &m_pcPTL;                                                 }$/;"	f	class:TComVPS
getPTL	TLibCommon/TComSlice.h	/^  const TComPTL*         getPTL() const                                                                  { return &m_pcPTL;                                                     }$/;"	f	class:TComSPS
getPTL	TLibCommon/TComSlice.h	/^  const TComPTL*    getPTL() const                                       { return &m_pcPTL;                                                 }$/;"	f	class:TComVPS
getPUAbove	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUAbove( UInt& uiAPartUnitIdx,$/;"	f	class:TComDataCU
getPUAboveLeft	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUAboveLeft( UInt& uiALPartUnitIdx, UInt uiCurrPartUnitIdx, Bool bEnforceSliceRestriction ) const$/;"	f	class:TComDataCU
getPUAboveRight	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUAboveRight(UInt&  uiARPartUnitIdx, UInt uiCurrPartUnitIdx, UInt uiPartUnitOffset, Bool bEnforceSliceRestriction) const$/;"	f	class:TComDataCU
getPUBelowLeft	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUBelowLeft(UInt& uiBLPartUnitIdx,  UInt uiCurrPartUnitIdx, UInt uiPartUnitOffset, Bool bEnforceSliceRestriction) const$/;"	f	class:TComDataCU
getPULeft	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPULeft( UInt& uiLPartUnitIdx,$/;"	f	class:TComDataCU
getPad	TLibEncoder/TEncCfg.h	/^  Int       getPad                          ( Int i )      { assert (i < 2 );                      return  m_aiPad[i]; }$/;"	f	class:TEncCfg
getPartIndexAndSize	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getPartIndexAndSize( UInt uiPartIdx, UInt& ruiPartAddr, Int& riWidth, Int& riHeight ) const$/;"	f	class:TComDataCU
getPartPosition	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getPartPosition( UInt partIdx, Int& xP, Int& yP, Int& nPSW, Int& nPSH) const$/;"	f	class:TComDataCU
getPartitionSize	TLibCommon/TComDataCU.h	/^  PartSize      getPartitionSize              ( UInt uiIdx ) const                                         { return static_cast<PartSize>( m_pePartSize[uiIdx] ); }$/;"	f	class:TComDataCU
getPartitionSize	TLibCommon/TComDataCU.h	/^  SChar*        getPartitionSize              ( )                                                          { return m_pePartSize;                       }$/;"	f	class:TComDataCU
getPartitionSize	TLibCommon/TComPicSym.h	/^    PartSize getPartitionSize( const UInt absPartAddr ) const { return static_cast<PartSize>( m_pePartSize[absPartAddr] ); }$/;"	f	struct:TComPicSym::DPBPerCtuData
getPatternLStride	TLibCommon/TComPattern.h	/^  Int   getPatternLStride() const { return m_patternStride;  }$/;"	f	class:TComPattern
getPcPic	TLibDecoder/TDecTop.h	/^  TComPic* getPcPic() const { return m_pcPic; }$/;"	f	class:TDecTop
getPersistentRiceAdaptationEnabledFlag	TLibCommon/TComSlice.h	/^  Bool getPersistentRiceAdaptationEnabledFlag() const                                  { return m_persistentRiceAdaptationEnabledFlag;  }$/;"	f	class:TComSPSRExt
getPersistentRiceAdaptationEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool getPersistentRiceAdaptationEnabledFlag          ()                 const { return m_persistentRiceAdaptationEnabledFlag;  }$/;"	f	class:TEncCfg
getPic	TLibCommon/TComDataCU.h	/^  TComPic*         getPic                     ( )                                                          { return m_pcPic;                            }$/;"	f	class:TComDataCU
getPic	TLibCommon/TComDataCU.h	/^  const TComPic*   getPic                     ( ) const                                                    { return m_pcPic;                            }$/;"	f	class:TComDataCU
getPic	TLibCommon/TComSlice.h	/^  TComPic*                    getPic()                                               { return m_pcPic;                                               }$/;"	f	class:TComSlice
getPic	TLibCommon/TComSlice.h	/^  const TComPic*              getPic() const                                         { return m_pcPic;                                               }$/;"	f	class:TComSlice
getPicActualBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicActualBits()                                 { return m_picActualBits; }$/;"	f	class:TEncRCPic
getPicActualHeaderBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicActualHeaderBits()                           { return m_picActualHeaderBits; }$/;"	f	class:TEncRCPic
getPicActualLambda	TLibEncoder/TEncRateCtrl.h	/^  Double getPicActualLambda()                             { return m_picLambda; }$/;"	f	class:TEncRCPic
getPicActualQP	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicActualQP()                                   { return m_picQP; }$/;"	f	class:TEncRCPic
getPicDurationInTcMinus1	TLibCommon/TComSlice.h	/^  UInt    getPicDurationInTcMinus1( Int layer ) const                                { return m_HRD[layer].picDurationInTcMinus1;                 }$/;"	f	class:TComHRD
getPicEstLambda	TLibEncoder/TEncRateCtrl.h	/^  Double getPicEstLambda()                                { return m_estPicLambda; }$/;"	f	class:TEncRCPic
getPicEstQP	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicEstQP()                                      { return m_estPicQP; }$/;"	f	class:TEncRCPic
getPicHeight	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicHeight()                   { return m_picHeight; }$/;"	f	class:TEncRCSeq
getPicHeightInLumaSamples	TLibCommon/TComSlice.h	/^  UInt                   getPicHeightInLumaSamples() const                                               { return  m_picHeightInLumaSamples;                                    }$/;"	f	class:TComSPS
getPicInitQPMinus26	TLibCommon/TComSlice.h	/^  Int                    getPicInitQPMinus26() const                                      { return  m_picInitQPMinus26;                   }$/;"	f	class:TComPPS
getPicLeft	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicLeft()               { return m_picLeft; }$/;"	f	class:TEncRCGOP
getPicList	TLibEncoder/TEncRateCtrl.h	/^  list<TEncRCPic*>& getPicList() { return m_listRCPictures; }$/;"	f	class:TEncRateCtrl
getPicMSE	TLibEncoder/TEncRateCtrl.h	/^  Double getPicMSE()                                      { return m_picMSE; }$/;"	f	class:TEncRCPic
getPicOutputFlag	TLibCommon/TComSlice.h	/^  Bool                        getPicOutputFlag() const                               { return m_PicOutputFlag;                                       }$/;"	f	class:TComSlice
getPicPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter   getPicPara( Int level )                        { assert( level < m_numberOfLevel ); return m_picPara[level]; }$/;"	f	class:TEncRCSeq
getPicPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter*  getPicPara()                                   { return m_picPara; }$/;"	f	class:TEncRCSeq
getPicSym	TLibCommon/TComPic.h	/^  TComPicSym*   getPicSym()                        { return  &m_picSym;    }$/;"	f	class:TComPic
getPicSym	TLibCommon/TComPic.h	/^  const TComPicSym* getPicSym() const              { return  &m_picSym;    }$/;"	f	class:TComPic
getPicWidth	TLibEncoder/TEncRateCtrl.h	/^  Int  getPicWidth()                    { return m_picWidth; }$/;"	f	class:TEncRCSeq
getPicWidthInLumaSamples	TLibCommon/TComSlice.h	/^  UInt                   getPicWidthInLumaSamples() const                                                { return  m_picWidthInLumaSamples;                                     }$/;"	f	class:TComSPS
getPicYuvDisp	TLibCommon/TComPic.cpp	/^TComPicYuv* TComPic::getPicYuvDisp()$/;"	f	class:TComPic
getPicYuvOrg	TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvOrg()        { return  m_apcPicYuv[PIC_YUV_ORG]; }$/;"	f	class:TComPic
getPicYuvPred	TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvPred()       { return  m_pcPicYuvPred; }$/;"	f	class:TComPic
getPicYuvRec	TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvRec()        { return  m_apcPicYuv[PIC_YUV_REC]; }$/;"	f	class:TComPic
getPicYuvResi	TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvResi()       { return  m_pcPicYuvResi; }$/;"	f	class:TComPic
getPicYuvTrueOrg	TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvTrueOrg()        { return  m_apcPicYuv[PIC_YUV_TRUE_ORG]; }$/;"	f	class:TComPic
getPictureTimingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getPictureTimingSEIEnabled() const                           { return m_pictureTimingSEIEnabled; }$/;"	f	class:TEncCfg
getPixelsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int  getPixelsLeft()                                    { return m_pixelsLeft; }$/;"	f	class:TEncRCPic
getPocLSBLT	TLibCommon/TComSlice.h	/^  Int     getPocLSBLT(Int i) const                     { return m_pocLSBLT[i];               }$/;"	f	class:TComReferencePictureSet
getPocProportionalToTimingFlag	TLibCommon/TComSlice.h	/^  Bool getPocProportionalToTimingFlag( ) const { return m_pocProportionalToTimingFlag; }$/;"	f	class:TimingInfo
getPocProportionalToTimingFlag	TLibEncoder/TEncCfg.h	/^  Bool         getPocProportionalToTimingFlag()                      { return m_pocProportionalToTimingFlag; }$/;"	f	class:TEncCfg
getPpsRangeExtension	TLibCommon/TComSlice.h	/^  TComPPSRExt&           getPpsRangeExtension()                                           { return m_ppsRangeExtension;                   }$/;"	f	class:TComPPS
getPpsRangeExtension	TLibCommon/TComSlice.h	/^  const TComPPSRExt&     getPpsRangeExtension() const                                     { return m_ppsRangeExtension;                   }$/;"	f	class:TComPPS
getPreDBFStatistics	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::getPreDBFStatistics(TComPic* pPic)$/;"	f	class:TEncSampleAdaptiveOffset
getPredSearch	TLibEncoder/TEncTop.h	/^  TEncSearch*             getPredSearch         () { return  &m_cSearch;              }$/;"	f	class:TEncTop
getPredictionMode	TLibCommon/TComDataCU.h	/^  PredMode      getPredictionMode             ( UInt uiIdx ) const                                         { return static_cast<PredMode>( m_pePredMode[uiIdx] ); }$/;"	f	class:TComDataCU
getPredictionMode	TLibCommon/TComDataCU.h	/^  SChar*        getPredictionMode             ( )                                                          { return m_pePredMode;                       }$/;"	f	class:TComDataCU
getPredictorPtr	TLibCommon/TComPrediction.h	/^  Pel*  getPredictorPtr           ( const ComponentID compID, const Bool bUseFilteredPredictions )$/;"	f	class:TComPrediction
getPrintFrameMSE	TLibEncoder/TEncCfg.h	/^  Bool      getPrintFrameMSE                ()         const { return m_printFrameMSE;              }$/;"	f	class:TEncCfg
getPrintHexPsnr	TLibEncoder/TEncCfg.h	/^  Bool      getPrintHexPsnr                 ()         const { return m_printHexPsnr;               }$/;"	f	class:TEncCfg
getPrintMSEBasedSequencePSNR	TLibEncoder/TEncCfg.h	/^  Bool      getPrintMSEBasedSequencePSNR    ()         const { return m_printMSEBasedSequencePSNR;  }$/;"	f	class:TEncCfg
getPrintMSSSIM	TLibEncoder/TEncCfg.h	/^  Bool      getPrintMSSSIM                  ()         const { return m_printMSSSIM;               }$/;"	f	class:TEncCfg
getPrintSequenceMSE	TLibEncoder/TEncCfg.h	/^  Bool      getPrintSequenceMSE             ()         const { return m_printSequenceMSE;           }$/;"	f	class:TEncCfg
getProfileCompatibilityFlag	TLibCommon/TComSlice.h	/^  Bool          getProfileCompatibilityFlag(Int i) const    { return m_profileCompatibilityFlag[i]; }$/;"	f	class:ProfileTierLevel
getProfileFeatures	TLibCommon/ProfileLevelTierFeatures.h	/^    const ProfileFeatures     *getProfileFeatures()   const { return m_pProfile; }$/;"	f	class:ProfileLevelTierFeatures
getProfileFeatures	TLibDecoder/TDecConformance.h	/^    const ProfileFeatures     *getProfileFeatures()   const { return m_pProfile; }$/;"	f	class:ProfileLevelTierFeatures
getProfileIdc	TLibCommon/TComSlice.h	/^  Profile::Name getProfileIdc() const                       { return m_profileIdc;                  }$/;"	f	class:ProfileTierLevel
getProfileSpace	TLibCommon/TComSlice.h	/^  Int           getProfileSpace() const                     { return m_profileSpace;                }$/;"	f	class:ProfileTierLevel
getProgressiveSourceFlag	TLibCommon/TComSlice.h	/^  Bool          getProgressiveSourceFlag() const            { return m_progressiveSourceFlag;       }$/;"	f	class:ProfileTierLevel
getProgressiveSourceFlag	TLibEncoder/TEncCfg.h	/^  Bool         getProgressiveSourceFlag() const                      { return m_progressiveSourceFlag; }$/;"	f	class:TEncCfg
getPsnr	TLibEncoder/TEncAnalyze.h	/^  Double  getPsnr(ComponentID compID) const { return  m_runningTotal.psnr[compID];  }$/;"	f	class:TEncAnalyze
getQP	TLibCommon/TComDataCU.h	/^  SChar         getQP                         ( UInt uiIdx ) const                                         { return m_phQP[uiIdx];                      }$/;"	f	class:TComDataCU
getQP	TLibCommon/TComDataCU.h	/^  SChar*        getQP                         ( )                                                          { return m_phQP;                             }$/;"	f	class:TComDataCU
getQPAdaptationRange	TLibEncoder/TEncCfg.h	/^  Int       getQPAdaptationRange            () const { return  m_iQPAdaptationRange; }$/;"	f	class:TEncCfg
getQPAdaptationUnit	TLibEncoder/TEncPic.h	/^  TEncQPAdaptationUnit*  getQPAdaptationUnit()   { return m_acTEncAQU;           }$/;"	f	class:TEncPicQPAdaptationLayer
getQPForPicture	TLibEncoder/TEncTop.cpp	/^Int TEncCfg::getQPForPicture(const UInt gopIndex, const TComSlice *pSlice) const$/;"	f	class:TEncCfg
getQpBDOffset	TLibCommon/TComSlice.h	/^  Int                    getQpBDOffset(ChannelType type) const                                           { return m_qpBDOffset[type];                                           }$/;"	f	class:TComSPS
getQpDelta	TLibCommon/TComTrQuant.h	/^  Int     getQpDelta(Int qp) { return m_qpDelta[qp]; }$/;"	f	class:TComTrQuant
getQpMinCuAbove	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getQpMinCuAbove( UInt& uiAPartUnitIdx, UInt uiCurrAbsIdxInCtu ) const$/;"	f	class:TComDataCU
getQpMinCuLeft	TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getQpMinCuLeft( UInt& uiLPartUnitIdx, UInt uiCurrAbsIdxInCtu ) const$/;"	f	class:TComDataCU
getQpOffset	TLibCommon/TComSlice.h	/^  Int                    getQpOffset(ComponentID compID) const$/;"	f	class:TComPPS
getQtRootCbf	TLibCommon/TComDataCU.cpp	/^UChar TComDataCU::getQtRootCbf( UInt uiIdx ) const$/;"	f	class:TComDataCU
getQuadtreeTULog2MaxSize	TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTULog2MaxSize() const                                                { return m_uiQuadtreeTULog2MaxSize;                                    }$/;"	f	class:TComSPS
getQuadtreeTULog2MaxSize	TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTULog2MaxSize        ()      const { return m_uiQuadtreeTULog2MaxSize; }$/;"	f	class:TEncCfg
getQuadtreeTULog2MinSize	TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTULog2MinSize() const                                                { return m_uiQuadtreeTULog2MinSize;                                    }$/;"	f	class:TComSPS
getQuadtreeTULog2MinSize	TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTULog2MinSize        ()      const { return m_uiQuadtreeTULog2MinSize; }$/;"	f	class:TEncCfg
getQuadtreeTULog2MinSizeInCU	TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getQuadtreeTULog2MinSizeInCU( UInt absPartIdx ) const$/;"	f	class:TComDataCU
getQuadtreeTUMaxDepthInter	TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTUMaxDepthInter() const                                              { return m_uiQuadtreeTUMaxDepthInter;                                  }$/;"	f	class:TComSPS
getQuadtreeTUMaxDepthInter	TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTUMaxDepthInter      ()      const { return m_uiQuadtreeTUMaxDepthInter; }$/;"	f	class:TEncCfg
getQuadtreeTUMaxDepthIntra	TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTUMaxDepthIntra() const                                              { return m_uiQuadtreeTUMaxDepthIntra;                                  }$/;"	f	class:TComSPS
getQuadtreeTUMaxDepthIntra	TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTUMaxDepthIntra      ()      const { return m_uiQuadtreeTUMaxDepthIntra; }$/;"	f	class:TEncCfg
getQuantCoeff	TLibCommon/TComTrQuant.h	/^  Int* getQuantCoeff                    ( UInt list, Int qp, UInt size ) { return m_quantCoef            [size][list][qp]; };  \/\/!< get Quant Coefficent$/;"	f	class:TComTrQuant
getRCGOP	TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP*      getRCGOP()                              { return m_encRCGOP; }$/;"	f	class:TEncRCPic
getRCGOP	TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP* getRCGOP()          { assert ( m_encRCGOP != NULL ); return m_encRCGOP; }$/;"	f	class:TEncRateCtrl
getRCPic	TLibEncoder/TEncRateCtrl.h	/^  TEncRCPic* getRCPic()          { assert ( m_encRCPic != NULL ); return m_encRCPic; }$/;"	f	class:TEncRateCtrl
getRCQP	TLibEncoder/TEncRateCtrl.h	/^  Int        getRCQP ()         { return m_RCQP; }$/;"	f	class:TEncRateCtrl
getRCSeq	TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* getRCSeq()          { assert ( m_encRCSeq != NULL ); return m_encRCSeq; }$/;"	f	class:TEncRateCtrl
getRCSequence	TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq*      getRCSequence()                         { return m_encRCSeq; }$/;"	f	class:TEncRCPic
getRDGoOnSbacCoder	TLibEncoder/TEncTop.h	/^  TEncSbac*               getRDGoOnSbacCoder    () { return  &m_cRDGoOnSbacCoder;     }$/;"	f	class:TEncTop
getRDSbacCoder	TLibEncoder/TEncTop.h	/^  TEncSbac***             getRDSbacCoder        () { return  m_pppcRDSbacCoder;       }$/;"	f	class:TEncTop
getRDpenalty	TLibEncoder/TEncCfg.h	/^  Int       getRDpenalty                    ()      { return m_rdPenalty;  }$/;"	f	class:TEncCfg
getRNId	TLibCommon/SEI.h	/^  UInt getRNId()            const  { return m_rnId; }$/;"	f	class:SEIRegionalNesting
getROIY	TLibCommon/TComPattern.h	/^  __inline Pel*  getROIY()$/;"	f	class:TComPattern
getROIY	TLibCommon/TComPattern.h	/^  __inline const Pel*  getROIY() const$/;"	f	class:TComPattern
getROIYHeight	TLibCommon/TComPattern.h	/^  Int   getROIYHeight() const     { return m_roiHeight;      }$/;"	f	class:TComPattern
getROIYPosX	TLibCommon/TComPattern.h	/^  Int   getROIYPosX() const       { return m_roiPosX; }$/;"	f	class:TComPattern
getROIYPosY	TLibCommon/TComPattern.h	/^  Int   getROIYPosY() const       { return m_roiPosY; }$/;"	f	class:TComPattern
getROIYWidth	TLibCommon/TComPattern.h	/^  Int   getROIYWidth() const      { return m_roiWidth;       }$/;"	f	class:TComPattern
getRPS	TLibCommon/TComSlice.h	/^  const TComReferencePictureSet* getRPS()                                            { return m_pRPS;                                                }$/;"	f	class:TComSlice
getRPSList	TLibCommon/TComSlice.h	/^  TComRPSList*           getRPSList()                                                                    { return &m_RPSList;                                                   }$/;"	f	class:TComSPS
getRPSList	TLibCommon/TComSlice.h	/^  const TComRPSList*     getRPSList() const                                                              { return &m_RPSList;                                                   }$/;"	f	class:TComSPS
getRPSidx	TLibCommon/TComSlice.h	/^  Int                         getRPSidx() const                                      { return m_rpsIdx;                                              }$/;"	f	class:TComSlice
getRapPicFlag	TLibCommon/TComSlice.cpp	/^Bool TComSlice::getRapPicFlag() const$/;"	f	class:TComSlice
getRateCtrl	TLibEncoder/TEncGOP.h	/^  TEncRateCtrl* getRateCtrl()       { return m_pcRateCtrl;  }$/;"	f	class:TEncGOP
getRateCtrl	TLibEncoder/TEncTop.h	/^  TEncRateCtrl*           getRateCtrl           () { return &m_cRateCtrl;             }$/;"	f	class:TEncTop
getRdCost	TLibEncoder/TEncTop.h	/^  TComRdCost*             getRdCost             () { return  &m_cRdCost;              }$/;"	f	class:TEncTop
getRdpcmEnabledFlag	TLibCommon/TComSlice.h	/^  Bool getRdpcmEnabledFlag(const RDPCMSignallingMode signallingMode) const             { return m_rdpcmEnabledFlag[signallingMode];     }$/;"	f	class:TComSPSRExt
getRdpcmEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool getRdpcmEnabledFlag                             (const RDPCMSignallingMode signallingMode)        const      { return m_rdpcmEnabledFlag[signallingMode];  }$/;"	f	class:TEncCfg
getReWriteParamSetsFlag	TLibEncoder/TEncCfg.h	/^  Bool      getReWriteParamSetsFlag         ()      { return m_bReWriteParamSetsFlag; }$/;"	f	class:TEncCfg
getReconMark	TLibCommon/TComPic.h	/^  Bool          getReconMark () const      { return m_bReconstructed;  }$/;"	f	class:TComPic
getRecoveryPointSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getRecoveryPointSEIEnabled() const                           { return m_recoveryPointSEIEnabled; }$/;"	f	class:TEncCfg
getRect	TLibCommon/TComTU.h	/^    const TComRectangle &getRect(const ComponentID compID)     const { return mRect[compID];    }$/;"	f	class:TComTU
getRefIdc	TLibCommon/TComSlice.cpp	/^Int  TComReferencePictureSet::getRefIdc(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getRefIdx	TLibCommon/TComMotionInfo.h	/^  Int            getRefIdx( Int iIdx ) const { return  m_piRefIdx[iIdx]; }$/;"	f	class:TComCUMvField
getRefIdx	TLibCommon/TComMotionInfo.h	/^  Int getRefIdx() const { return  m_iRefIdx;       }$/;"	f	class:TComMvField
getRefMatrixId	TLibCommon/TComSlice.h	/^  UInt       getRefMatrixId(UInt sizeId, UInt listId) const                     { return m_refMatrixId[sizeId][listId];                      } \/\/!< get reference matrix ID$/;"	f	class:TComScalingList
getRefPOC	TLibCommon/TComSlice.h	/^  Int                         getRefPOC( RefPicList e, Int iRefIdx) const            { return m_aiRefPOCList[e][iRefIdx];                            }$/;"	f	class:TComSlice
getRefPUPartPos	TLibCommon/TComPrediction.cpp	/^Void getRefPUPartPos(TComDataCU* pcCU, TComMv& cMv, Int uiPartIdx, Int& ruiPredXLeft, Int& ruiPredYTop, Int& ruiPredXRight, Int& ruiPredYBottom, Int iWidth, Int iHeight)$/;"	f
getRefPic	TLibCommon/TComSlice.h	/^  TComPic*                    getRefPic( RefPicList e, Int iRefIdx)                  { return m_apcRefPicList[e][iRefIdx];                           }$/;"	f	class:TComSlice
getRefPic	TLibCommon/TComSlice.h	/^  const TComPic*              getRefPic( RefPicList e, Int iRefIdx) const            { return m_apcRefPicList[e][iRefIdx];                           }$/;"	f	class:TComSlice
getRefPicListModification	TLibCommon/TComSlice.h	/^  TComRefPicListModification* getRefPicListModification()                            { return &m_RefPicListModification;                             }$/;"	f	class:TComSlice
getRefPicListModificationFlagL0	TLibCommon/TComSlice.h	/^  Bool    getRefPicListModificationFlagL0() const        { return m_refPicListModificationFlagL0;                                  }$/;"	f	class:TComRefPicListModification
getRefPicListModificationFlagL1	TLibCommon/TComSlice.h	/^  Bool    getRefPicListModificationFlagL1() const        { return m_refPicListModificationFlagL1;                                  }$/;"	f	class:TComRefPicListModification
getRefPicSetIdxL0	TLibCommon/TComSlice.h	/^  UInt    getRefPicSetIdxL0(UInt idx) const              { assert(idx<REF_PIC_LIST_NUM_IDX); return m_RefPicSetIdxL0[idx];         }$/;"	f	class:TComRefPicListModification
getRefPicSetIdxL1	TLibCommon/TComSlice.h	/^  UInt    getRefPicSetIdxL1(UInt idx) const              { assert(idx<REF_PIC_LIST_NUM_IDX); return m_RefPicSetIdxL1[idx];         }$/;"	f	class:TComRefPicListModification
getRefQP	TLibCommon/TComDataCU.cpp	/^SChar TComDataCU::getRefQP( UInt uiCurrAbsIdxInCtu ) const$/;"	f	class:TComDataCU
getReferencePictureSet	TLibCommon/TComSlice.h	/^  TComReferencePictureSet*       getReferencePictureSet(Int referencePictureSetNum)       { return &m_referencePictureSets[referencePictureSetNum]; }$/;"	f	class:TComRPSList
getReferencePictureSet	TLibCommon/TComSlice.h	/^  const TComReferencePictureSet* getReferencePictureSet(Int referencePictureSetNum) const { return &m_referencePictureSets[referencePictureSetNum]; }$/;"	f	class:TComRPSList
getReferencePictureSetIdxForSOP	TLibEncoder/TEncTop.cpp	/^Int TEncTop::getReferencePictureSetIdxForSOP(Int POCCurr, Int GOPid )$/;"	f	class:TEncTop
getRefineBitsForIntra	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::getRefineBitsForIntra( Int orgBits )$/;"	f	class:TEncRCPic
getRegionId	TLibCommon/TypeDef.h	/^  Int  getRegionId() const     { return getWindowEnabledFlag() ? m_regionId : 0;    }$/;"	f	class:RNSEIWindow
getRegionalNestingSEIFileRoot	TLibEncoder/TEncCfg.h	/^  const std::string &getRegionalNestingSEIFileRoot() const           { return m_regionalNestingSEIFileRoot; }$/;"	f	class:TEncCfg
getRegions	TLibCommon/SEI.h	/^  const RNSEIWindowVec& getRegions() { return m_regions; }$/;"	f	class:RegionalSEI
getRegions	TLibCommon/SEI.h	/^  const std::vector<RNSEIWindow> &getRegions() const { return m_regions; }$/;"	f	class:SEIRegionalNesting
getResetEncoderStateAfterIRAP	TLibEncoder/TEncCfg.h	/^  Bool  getResetEncoderStateAfterIRAP() const                        { return m_resetEncoderStateAfterIRAP; }$/;"	f	class:TEncCfg
getRestrictMESampling	TLibEncoder/TEncCfg.h	/^  Bool      getRestrictMESampling              () const { return m_bRestrictMESampling; }$/;"	f	class:TEncCfg
getRestrictedRefPicListsFlag	TLibCommon/TComSlice.h	/^  Bool              getRestrictedRefPicListsFlag() const                   { return m_restrictedRefPicListsFlag;            }$/;"	f	class:TComVUI
getRightEdgePosInCtus	TLibCommon/TComPicSym.h	/^  UInt      getRightEdgePosInCtus  () const              { return m_rightEdgePosInCtus; }$/;"	f	class:TComTile
getRnSEIMessages	TLibCommon/SEI.h	/^  const std::vector< SEIListOfIndices >& getRnSEIMessages() const { return m_rnSeiMessages; }$/;"	f	class:SEIRegionalNesting
getRowHeight	TLibEncoder/TEncCfg.h	/^  UInt  getRowHeight                   ( UInt rowIdx )               { return m_tileRowHeight[rowIdx]; }$/;"	f	class:TEncCfg
getRpcListPic	TLibDecoder/TDecTop.h	/^  TComList<TComPic*>*  getRpcListPic()  { return &m_cListPic; };$/;"	f	class:TDecTop
getRwpSEIConstituentPictureMatchingFlag	TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIConstituentPictureMatchingFlag ()                                                   { return m_rwpSEIConstituentPictureMatchingFlag; }$/;"	f	class:TEncCfg
getRwpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIEnabled()                                                                           { return m_rwpSEIEnabled; }$/;"	f	class:TEncCfg
getRwpSEINumPackedRegions	TLibEncoder/TEncCfg.h	/^  Int      getRwpSEINumPackedRegions ()                                                                 { return m_rwpSEINumPackedRegions; }$/;"	f	class:TEncCfg
getRwpSEIPackedPictureHeight	TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIPackedPictureHeight ()                                                              { return m_rwpSEIPackedPictureHeight; }$/;"	f	class:TEncCfg
getRwpSEIPackedPictureWidth	TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIPackedPictureWidth ()                                                               { return m_rwpSEIPackedPictureWidth; }$/;"	f	class:TEncCfg
getRwpSEIPackedRegionHeight	TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionHeight(UInt idx) const                                                   { return m_rwpSEIPackedRegionHeight[idx]; } $/;"	f	class:TEncCfg
getRwpSEIPackedRegionLeft	TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionLeft(UInt idx) const                                                     { return m_rwpSEIPackedRegionLeft[idx]; }$/;"	f	class:TEncCfg
getRwpSEIPackedRegionTop	TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionTop(UInt idx) const                                                      { return m_rwpSEIPackedRegionTop[idx]; } $/;"	f	class:TEncCfg
getRwpSEIPackedRegionWidth	TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionWidth(UInt idx) const                                                    { return m_rwpSEIPackedRegionWidth[idx]; } $/;"	f	class:TEncCfg
getRwpSEIProjPictureHeight	TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIProjPictureHeight ()                                                                { return m_rwpSEIProjPictureHeight; }$/;"	f	class:TEncCfg
getRwpSEIProjPictureWidth	TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIProjPictureWidth ()                                                                 { return m_rwpSEIProjPictureWidth; }$/;"	f	class:TEncCfg
getRwpSEIProjRegionHeight	TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIProjRegionHeight(UInt idx) const                                                    { return m_rwpSEIProjRegionHeight[idx]; } $/;"	f	class:TEncCfg
getRwpSEIProjRegionLeft	TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIProjRegionLeft(UInt idx) const                                                      { return m_rwpSEIProjRegionLeft[idx]; } $/;"	f	class:TEncCfg
getRwpSEIProjRegionWidth	TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIProjRegionWidth(UInt idx) const                                                     { return m_rwpSEIProjRegionWidth[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpBottomGuardBandHeight	TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpBottomGuardBandHeight(UInt idx) const                                             { return m_rwpSEIRwpBottomGuardBandHeight[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIRwpCancelFlag()                                                                     { return m_rwpSEIRwpCancelFlag; }$/;"	f	class:TEncCfg
getRwpSEIRwpGuardBandFlag	TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIRwpGuardBandFlag(UInt idx) const                                                    { return m_rwpSEIRwpGuardBandFlag[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpGuardBandNotUsedForPredFlag	TLibEncoder/TEncCfg.h	/^  Bool    getRwpSEIRwpGuardBandNotUsedForPredFlag(UInt idx) const                                         { return m_rwpSEIRwpGuardBandNotUsedForPredFlag[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpGuardBandType	TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpGuardBandType(UInt idx) const                                                       { return m_rwpSEIRwpGuardBandType[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpLeftGuardBandWidth	TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpLeftGuardBandWidth(UInt idx) const                                                { return m_rwpSEIRwpLeftGuardBandWidth[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIRwpPersistenceFlag ()                                                               { return m_rwpSEIRwpPersistenceFlag; }$/;"	f	class:TEncCfg
getRwpSEIRwpRightGuardBandWidth	TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpRightGuardBandWidth(UInt idx) const                                               { return m_rwpSEIRwpRightGuardBandWidth[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpSEIProjRegionTop	TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIRwpSEIProjRegionTop(UInt idx) const                                                 { return m_rwpSEIRwpSEIProjRegionTop[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpTopGuardBandHeight	TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpTopGuardBandHeight(UInt idx) const                                                { return m_rwpSEIRwpTopGuardBandHeight[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpTransformType	TLibEncoder/TEncCfg.h	/^  UChar    getRwpSEIRwpTransformType(UInt idx) const                                                    { return m_rwpSEIRwpTransformType[idx]; } $/;"	f	class:TEncCfg
getSAO	TLibEncoder/TEncTop.h	/^  TEncSampleAdaptiveOffset* getSAO              () { return  &m_cEncSAO;              }$/;"	f	class:TEncTop
getSAOBlkParam	TLibCommon/TComPicSym.h	/^  SAOBlkParam*       getSAOBlkParam()                                      { return m_saoBlkParams;}$/;"	f	class:TComPicSym
getSAOBlkParam	TLibCommon/TComPicSym.h	/^  const SAOBlkParam* getSAOBlkParam() const                                { return m_saoBlkParams;}$/;"	f	class:TComPicSym
getSAOMergeAvailability	TLibCommon/TComPic.cpp	/^Bool  TComPic::getSAOMergeAvailability(Int currAddr, Int mergeAddr)$/;"	f	class:TComPic
getSEIAlternativeTransferCharacteristicsSEIEnable	TLibEncoder/TEncCfg.h	/^  Bool  getSEIAlternativeTransferCharacteristicsSEIEnable( ) const   { return m_alternativeTransferCharacteristicsSEIEnabled; }$/;"	f	class:TEncCfg
getSEIGreenMetadataInfoSEIEnable	TLibEncoder/TEncCfg.h	/^  Bool  getSEIGreenMetadataInfoSEIEnable( ) const                    { return m_greenMetadataInfoSEIEnabled; }$/;"	f	class:TEncCfg
getSEIGreenMetadataType	TLibEncoder/TEncCfg.h	/^  UChar getSEIGreenMetadataType() const                              { return m_greenMetadataType; }$/;"	f	class:TEncCfg
getSEIMessageString	TLibCommon/SEI.cpp	/^const TChar *SEI::getSEIMessageString(SEI::PayloadType payloadType)$/;"	f	class:SEI
getSEIPreferredTransferCharacteristics	TLibEncoder/TEncCfg.h	/^  UChar getSEIPreferredTransferCharacteristics() const               { return m_preferredTransferCharacteristics; }$/;"	f	class:TEncCfg
getSEIXSDMetricType	TLibEncoder/TEncCfg.h	/^  UChar getSEIXSDMetricType() const                                  { return m_xsdMetricType; }$/;"	f	class:TEncCfg
getSEIs	TLibCommon/TComPic.h	/^  SEIMessages& getSEIs() { return m_SEIs; }$/;"	f	class:TComPic
getSEIs	TLibCommon/TComPic.h	/^  const SEIMessages& getSEIs() const { return m_SEIs; }$/;"	f	class:TComPic
getSEIs	TLibDecoder/TDecTop.h	/^  SEIMessages& getSEIs() { return m_SEIs; }$/;"	f	class:TDecTop
getSOPDescriptionSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getSOPDescriptionSEIEnabled() const                          { return m_SOPDescriptionSEIEnabled; }$/;"	f	class:TEncCfg
getSPS	TLibCommon/TComPicSym.h	/^  const TComSPS&     getSPS()                 const                        { return m_sps; }$/;"	f	class:TComPicSym
getSPS	TLibCommon/TComSlice.h	/^  TComSPS*       getSPS(Int spsId)                                           { return m_spsMap.getPS(spsId); };$/;"	f	class:ParameterSetManager
getSPS	TLibCommon/TComSlice.h	/^  const TComSPS*              getSPS() const                                         { return m_pcSPS;                                               }$/;"	f	class:TComSlice
getSPSChangedFlag	TLibCommon/TComSlice.h	/^  Bool           getSPSChangedFlag(Int spsId) const                          { return m_spsMap.getChangedFlag(spsId); }$/;"	f	class:ParameterSetManager
getSPSId	TLibCommon/TComSlice.h	/^  Int                    getSPSId() const                                                                { return m_SPSId;                                                      }$/;"	f	class:TComSPS
getSPSId	TLibCommon/TComSlice.h	/^  Int                    getSPSId() const                                                 { return m_SPSId;                               }$/;"	f	class:TComPPS
getSPSTemporalMVPEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getSPSTemporalMVPEnabledFlag() const                                            { return m_SPSTemporalMVPEnabledFlag;                                  }$/;"	f	class:TComSPS
getSaoCtuBoundary	TLibEncoder/TEncCfg.h	/^  Bool  getSaoCtuBoundary              ()                            { return m_saoCtuBoundary; }$/;"	f	class:TEncCfg
getSaoEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                        getSaoEnabledFlag(ChannelType chType) const            { return m_saoEnabledFlag[chType];                              }$/;"	f	class:TComSlice
getSaoEncodingRate	TLibEncoder/TEncCfg.h	/^  Double getSaoEncodingRate() const                                  { return m_saoEncodingRate; }$/;"	f	class:TEncCfg
getSaoEncodingRateChroma	TLibEncoder/TEncCfg.h	/^  Double getSaoEncodingRateChroma() const                            { return m_saoEncodingRateChroma; }$/;"	f	class:TEncCfg
getSarHeight	TLibCommon/TComSlice.h	/^  Int               getSarHeight() const                                   { return m_sarHeight;                            }$/;"	f	class:TComVUI
getSarHeight	TLibEncoder/TEncCfg.h	/^  Int          getSarHeight()                                        { return m_sarHeight; }$/;"	f	class:TEncCfg
getSarWidth	TLibCommon/TComSlice.h	/^  Int               getSarWidth() const                                    { return m_sarWidth;                             }$/;"	f	class:TComVUI
getSarWidth	TLibEncoder/TEncCfg.h	/^  Int          getSarWidth()                                         { return m_sarWidth; }$/;"	f	class:TEncCfg
getSbacCoder	TLibEncoder/TEncTop.h	/^  TEncSbac*               getSbacCoder          () { return  &m_cSbacCoder;           }$/;"	f	class:TEncTop
getScalableNestingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getScalableNestingSEIEnabled() const                         { return m_scalableNestingSEIEnabled; }$/;"	f	class:TEncCfg
getScaledChromaQP	TLibCommon/TComChromaFormat.h	/^static inline Int getScaledChromaQP(Int unscaledChromaQP, const ChromaFormat chFmt)$/;"	f
getScalingList	TLibCommon/TComSlice.h	/^  TComScalingList&       getScalingList()                                                                { return m_scalingList;                                                }$/;"	f	class:TComSPS
getScalingList	TLibCommon/TComSlice.h	/^  TComScalingList&       getScalingList()                                                 { return m_scalingList;                         }$/;"	f	class:TComPPS
getScalingList	TLibCommon/TComSlice.h	/^  const TComScalingList& getScalingList() const                                                          { return m_scalingList;                                                }$/;"	f	class:TComSPS
getScalingList	TLibCommon/TComSlice.h	/^  const TComScalingList& getScalingList() const                                           { return m_scalingList;                         }$/;"	f	class:TComPPS
getScalingListAddress	TLibCommon/TComSlice.h	/^  Int*       getScalingListAddress(UInt sizeId, UInt listId)                    { return &(m_scalingListCoef[sizeId][listId][0]);            } \/\/!< get matrix coefficient$/;"	f	class:TComScalingList
getScalingListAddress	TLibCommon/TComSlice.h	/^  const Int* getScalingListAddress(UInt sizeId, UInt listId) const              { return &(m_scalingListCoef[sizeId][listId][0]);            } \/\/!< get matrix coefficient$/;"	f	class:TComScalingList
getScalingListDC	TLibCommon/TComSlice.h	/^  Int        getScalingListDC(UInt sizeId, UInt listId) const                   { return m_scalingListDC[sizeId][listId];                    } \/\/!< get DC value$/;"	f	class:TComScalingList
getScalingListDefaultAddress	TLibCommon/TComSlice.cpp	/^const Int* TComScalingList::getScalingListDefaultAddress(UInt sizeId, UInt listId)$/;"	f	class:TComScalingList
getScalingListFileName	TLibEncoder/TEncCfg.h	/^  const std::string& getScalingListFileName () const                 { return m_scalingListFileName;   }$/;"	f	class:TEncCfg
getScalingListFlag	TLibCommon/TComSlice.h	/^  Bool                   getScalingListFlag() const                                                      { return m_scalingListEnabledFlag;                                     }$/;"	f	class:TComSPS
getScalingListPredModeFlag	TLibCommon/TComSlice.h	/^  Bool       getScalingListPredModeFlag(UInt sizeId, UInt listId) const         { return m_scalingListPredModeFlagIsDPCM[sizeId][listId];    }$/;"	f	class:TComScalingList
getScalingListPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getScalingListPresentFlag() const                                               { return m_scalingListPresentFlag;                                     }$/;"	f	class:TComSPS
getScalingListPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getScalingListPresentFlag() const                                { return m_scalingListPresentFlag;              }$/;"	f	class:TComPPS
getScalingListType	TLibCommon/TComChromaFormat.h	/^static inline Int getScalingListType(const PredMode predMode, const ComponentID compID)$/;"	f
getSearchRange	TLibEncoder/TEncCfg.h	/^  Int       getSearchRange                     () const { return m_iSearchRange; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEICancel	TLibEncoder/TEncCfg.h	/^  Int   getSegmentedRectFramePackingArrangementSEICancel()           { return m_segmentedRectFramePackingSEICancel; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getSegmentedRectFramePackingArrangementSEIEnabled() const    { return m_segmentedRectFramePackingSEIEnabled; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEIPersistence	TLibEncoder/TEncCfg.h	/^  Int   getSegmentedRectFramePackingArrangementSEIPersistence()      { return m_segmentedRectFramePackingSEIPersistence; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEIType	TLibEncoder/TEncCfg.h	/^  Int   getSegmentedRectFramePackingArrangementSEIType()             { return m_segmentedRectFramePackingSEIType; }$/;"	f	class:TEncCfg
getSeisByType	TLibCommon/SEI.cpp	/^SEIMessages getSeisByType(SEIMessages &seiList, SEI::PayloadType seiType)$/;"	f
getSeqBpp	TLibEncoder/TEncRateCtrl.h	/^  Double getSeqBpp()                    { return m_seqTargetBpp; }$/;"	f	class:TEncRCSeq
getSigCoeffGroupCtxInc	TLibCommon/TComTrQuant.cpp	/^UInt TComTrQuant::getSigCoeffGroupCtxInc  (const UInt*  uiSigCoeffGroupFlag,$/;"	f	class:TComTrQuant
getSigCtxInc	TLibCommon/TComTrQuant.cpp	/^Int TComTrQuant::getSigCtxInc    (       Int                        patternSigCtx,$/;"	f	class:TComTrQuant
getSignDataHidingEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getSignDataHidingEnabledFlag() const                             { return m_signDataHidingEnabledFlag;           }$/;"	f	class:TComPPS
getSignDataHidingEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool         getSignDataHidingEnabledFlag()                        { return m_SignDataHidingEnabledFlag; }$/;"	f	class:TEncCfg
getSignificanceMapContextOffset	TLibCommon/TComChromaFormat.h	/^static inline UInt getSignificanceMapContextOffset (const ComponentID component)$/;"	f
getSiiSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool     getSiiSEIEnabled()                                        { return m_siiSEIEnabled; }$/;"	f	class:TEncCfg
getSiiSEIFixedSIwithinCLVS	TLibEncoder/TEncCfg.h	/^  Bool     getSiiSEIFixedSIwithinCLVS()                              { return m_siiSEISubLayerNumUnitsInSI.empty(); }$/;"	f	class:TEncCfg
getSiiSEIMaxSubLayersMinus1	TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEIMaxSubLayersMinus1()                             { return UInt(std::max(1u, UInt(m_siiSEISubLayerNumUnitsInSI.size()))-1 ); }$/;"	f	class:TEncCfg
getSiiSEINumUnitsInShutterInterval	TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEINumUnitsInShutterInterval()                      { return m_siiSEINumUnitsInShutterInterval; }$/;"	f	class:TEncCfg
getSiiSEISubLayerNumUnitsInSI	TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEISubLayerNumUnitsInSI(UInt idx) const             { return m_siiSEISubLayerNumUnitsInSI[idx]; }$/;"	f	class:TEncCfg
getSiiSEITimeScale	TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEITimeScale()                                      { return m_siiSEITimeScale; }$/;"	f	class:TEncCfg
getSkipFlag	TLibCommon/TComDataCU.h	/^  Bool          getSkipFlag                   ( UInt idx ) const                                           { return m_skipFlag[idx];                    }$/;"	f	class:TComDataCU
getSkipFlag	TLibCommon/TComDataCU.h	/^  Bool*         getSkipFlag                   ( )                                                          { return m_skipFlag;                         }$/;"	f	class:TComDataCU
getSlice	TLibCommon/TComDataCU.h	/^  TComSlice*       getSlice                   ( )                                                          { return m_pcSlice;                          }$/;"	f	class:TComDataCU
getSlice	TLibCommon/TComDataCU.h	/^  const TComSlice* getSlice                   ( ) const                                                    { return m_pcSlice;                          }$/;"	f	class:TComDataCU
getSlice	TLibCommon/TComPic.h	/^  TComSlice*    getSlice(Int i)                    { return  m_picSym.getSlice(i);  }$/;"	f	class:TComPic
getSlice	TLibCommon/TComPic.h	/^  const TComSlice* getSlice(Int i) const           { return  m_picSym.getSlice(i);  }$/;"	f	class:TComPic
getSlice	TLibCommon/TComPicSym.h	/^    const TComSlice* getSlice()                         const { return m_pSlice; }$/;"	f	struct:TComPicSym::DPBPerCtuData
getSlice	TLibCommon/TComPicSym.h	/^  TComSlice*         getSlice(UInt i)                                      { return m_apSlices[i];             }$/;"	f	class:TComPicSym
getSlice	TLibCommon/TComPicSym.h	/^  const TComSlice*   getSlice(UInt i) const                                { return m_apSlices[i];             }$/;"	f	class:TComPicSym
getSliceArgument	TLibCommon/TComSlice.h	/^  UInt                        getSliceArgument() const                               { return m_sliceArgument;                                       }$/;"	f	class:TComSlice
getSliceArgument	TLibEncoder/TEncCfg.h	/^  Int   getSliceArgument               ()                            { return m_sliceArgument;       }$/;"	f	class:TEncCfg
getSliceBits	TLibCommon/TComSlice.h	/^  UInt                        getSliceBits() const                                   { return m_sliceBits;                                           }$/;"	f	class:TComSlice
getSliceChromaOffsetQpIntraOrPeriodic	TLibEncoder/TEncCfg.h	/^  Int       getSliceChromaOffsetQpIntraOrPeriodic( Bool bIsCr) const                                            { return m_sliceChromaQpOffsetIntraOrPeriodic[bIsCr?1:0]; }$/;"	f	class:TEncCfg
getSliceChromaOffsetQpPeriodicity	TLibEncoder/TEncCfg.h	/^  UInt      getSliceChromaOffsetQpPeriodicity() const                                                           { return m_sliceChromaQpOffsetPeriodicity; }$/;"	f	class:TEncCfg
getSliceChromaQpDelta	TLibCommon/TComSlice.h	/^  Int                         getSliceChromaQpDelta(ComponentID compID) const        { return isLuma(compID) ? 0 : m_iSliceChromaQpDelta[compID];    }$/;"	f	class:TComSlice
getSliceChromaQpFlag	TLibCommon/TComSlice.h	/^  Bool                   getSliceChromaQpFlag() const                                     { return  m_bSliceChromaQpFlag;                 }$/;"	f	class:TComPPS
getSliceCurEndCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                        getSliceCurEndCtuTsAddr() const                        { return m_sliceCurEndCtuTsAddr;                                } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceCurStartCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                        getSliceCurStartCtuTsAddr() const                      { return m_sliceCurStartCtuTsAddr;                              } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceEncoder	TLibEncoder/TEncCu.h	/^  TEncSlice* getSliceEncoder() { return m_pcSliceEncoder; }$/;"	f	class:TEncCu
getSliceEncoder	TLibEncoder/TEncGOP.h	/^  TEncSlice*  getSliceEncoder()   { return m_pcSliceEncoder; }$/;"	f	class:TEncGOP
getSliceEncoder	TLibEncoder/TEncTop.h	/^  TEncSlice*              getSliceEncoder       () { return  &m_cSliceEncoder;        }$/;"	f	class:TEncTop
getSliceHeaderExtensionPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getSliceHeaderExtensionPresentFlag() const                       { return m_sliceHeaderExtensionPresentFlag;     }$/;"	f	class:TComPPS
getSliceIdx	TLibCommon/TComSlice.h	/^  UInt                        getSliceIdx() const                                    { return  m_sliceIdx;                                           }$/;"	f	class:TComSlice
getSliceIdx	TLibEncoder/TEncSlice.h	/^  UInt    getSliceIdx()         { return m_uiSliceIdx;                    }$/;"	f	class:TEncSlice
getSliceMode	TLibCommon/TComSlice.h	/^  SliceConstraint             getSliceMode() const                                   { return m_sliceMode;                                           }$/;"	f	class:TComSlice
getSliceMode	TLibEncoder/TEncCfg.h	/^  SliceConstraint getSliceMode         () const                      { return m_sliceMode;           }$/;"	f	class:TEncCfg
getSliceNSamples	TLibCommon/TComTrQuant.h	/^  Int*    getSliceNSamples(){ return m_sliceNsamples ;}$/;"	f	class:TComTrQuant
getSliceQp	TLibCommon/TComSlice.h	/^  Int                         getSliceQp() const                                     { return m_iSliceQp;                                            }$/;"	f	class:TComSlice
getSliceQpBase	TLibCommon/TComSlice.h	/^  Int                         getSliceQpBase() const                                 { return m_iSliceQpBase;                                        }$/;"	f	class:TComSlice
getSliceQpDelta	TLibCommon/TComSlice.h	/^  Int                         getSliceQpDelta() const                                { return m_iSliceQpDelta;                                       }$/;"	f	class:TComSlice
getSliceSegmentArgument	TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentArgument() const                        { return m_sliceSegmentArgument;                                }$/;"	f	class:TComSlice
getSliceSegmentArgument	TLibEncoder/TEncCfg.h	/^  Int   getSliceSegmentArgument        ()                            { return m_sliceSegmentArgument;}$/;"	f	class:TEncCfg
getSliceSegmentBits	TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentBits() const                            { return m_sliceSegmentBits;                                    }$/;"	f	class:TComSlice
getSliceSegmentCurEndCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentCurEndCtuTsAddr() const                 { return m_sliceSegmentCurEndCtuTsAddr;                         } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceSegmentCurStartCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentCurStartCtuTsAddr() const               { return m_sliceSegmentCurStartCtuTsAddr;                       } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceSegmentMode	TLibCommon/TComSlice.h	/^  SliceConstraint             getSliceSegmentMode() const                            { return m_sliceSegmentMode;                                    }$/;"	f	class:TComSlice
getSliceSegmentMode	TLibEncoder/TEncCfg.h	/^  SliceConstraint getSliceSegmentMode  () const                      { return m_sliceSegmentMode;    }$/;"	f	class:TEncCfg
getSliceSumC	TLibCommon/TComTrQuant.h	/^  Double* getSliceSumC()    { return m_sliceSumC; }$/;"	f	class:TComTrQuant
getSliceType	TLibCommon/TComSlice.h	/^  SliceType                   getSliceType() const                                   { return m_eSliceType;                                          }$/;"	f	class:TComSlice
getSourceHeight	TLibEncoder/TEncCfg.h	/^  Int       getSourceHeight                 ()      { return  m_iSourceHeight; }$/;"	f	class:TEncCfg
getSourceWidth	TLibEncoder/TEncCfg.h	/^  Int       getSourceWidth                  ()      { return  m_iSourceWidth; }$/;"	f	class:TEncCfg
getSphereRotationSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool  getSphereRotationSEICancelFlag()                             { return m_sphereRotationSEICancelFlag; }$/;"	f	class:TEncCfg
getSphereRotationSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getSphereRotationSEIEnabled()                                { return m_sphereRotationSEIEnabled; }$/;"	f	class:TEncCfg
getSphereRotationSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool  getSphereRotationSEIPersistenceFlag()                        { return m_sphereRotationSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getSphereRotationSEIPitch	TLibEncoder/TEncCfg.h	/^  Int   getSphereRotationSEIPitch()                                  { return m_sphereRotationSEIPitch; }$/;"	f	class:TEncCfg
getSphereRotationSEIRoll	TLibEncoder/TEncCfg.h	/^  Int   getSphereRotationSEIRoll()                                   { return m_sphereRotationSEIRoll; }$/;"	f	class:TEncCfg
getSphereRotationSEIYaw	TLibEncoder/TEncCfg.h	/^  Int   getSphereRotationSEIYaw()                                    { return m_sphereRotationSEIYaw; }$/;"	f	class:TEncCfg
getSpsRangeExtension	TLibCommon/TComSlice.h	/^  TComSPSRExt&           getSpsRangeExtension()                                                          { return m_spsRangeExtension;                                          }$/;"	f	class:TComSPS
getSpsRangeExtension	TLibCommon/TComSlice.h	/^  const TComSPSRExt&     getSpsRangeExtension() const                                                    { return m_spsRangeExtension;                                          }$/;"	f	class:TComSPS
getSqrtLambda	TLibCommon/TComRdCost.h	/^  Double  getSqrtLambda ()   { return m_sqrtLambda; }$/;"	f	class:TComRdCost
getState	TLibCommon/ContextModel.h	/^  UChar getState  ()                { return ( m_ucState >> 1 ); }                    \/\/\/< get current state$/;"	f	class:ContextModel
getStatistics	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::getStatistics(SAOStatData*** blkStats, TComPicYuv* orgYuv, TComPicYuv* srcYuv, TComPic* pPic, Bool isCalculatePreDeblockSamples)$/;"	f	class:TEncSampleAdaptiveOffset
getStream	TLibDecoder/TDecConformance.h	/^  static inline std::ostream &getStream()  { return std::cout; }$/;"	f	class:TDecConformanceCheck
getStream	TLibDecoder/TDecConformance.h	/^  static inline std::ostream &getStream()$/;"	f	class:TDecConformanceCheck
getStreamBitDepth	TLibCommon/TComSlice.h	/^  Int                    getStreamBitDepth(ChannelType type) const                                       { return m_bitDepths.stream[type];                                     }$/;"	f	class:TComSPS
getStride	TLibCommon/TComPic.h	/^  Int           getStride(const ComponentID id) const          { return m_apcPicYuv[PIC_YUV_REC]->getStride(id); }$/;"	f	class:TComPic
getStride	TLibCommon/TComPicYuv.h	/^  Int           getStride         (const ChannelType id) const { return ((m_picWidth     ) + (m_marginX  <<1)) >> getChannelTypeScaleX(id); }$/;"	f	class:TComPicYuv
getStride	TLibCommon/TComPicYuv.h	/^  Int           getStride         (const ComponentID id) const { return ((m_picWidth     ) + (m_marginX  <<1)) >> getComponentScaleX(id); }$/;"	f	class:TComPicYuv
getStride	TLibCommon/TComYuv.h	/^  UInt         getStride                  (const ComponentID id) const { return m_iWidth >> getComponentScaleX(id);   }$/;"	f	class:TComYuv
getString	TLibCommon/Debug.h	/^  const std::string  &getString()   const       { return m_sVal;    }$/;"	f	class:EnvVar
getSubLayerLevelPresentFlag	TLibCommon/TComSlice.h	/^  Bool                    getSubLayerLevelPresentFlag(Int i) const     { return m_subLayerLevelPresentFlag[i];   }$/;"	f	class:TComPTL
getSubLayerPTL	TLibCommon/TComSlice.h	/^  ProfileTierLevel*       getSubLayerPTL(Int i)                        { return &m_subLayerPTL[i];               }$/;"	f	class:TComPTL
getSubLayerPTL	TLibCommon/TComSlice.h	/^  const ProfileTierLevel* getSubLayerPTL(Int i) const                  { return &m_subLayerPTL[i];               }$/;"	f	class:TComPTL
getSubLayerProfilePresentFlag	TLibCommon/TComSlice.h	/^  Bool                    getSubLayerProfilePresentFlag(Int i) const   { return m_subLayerProfilePresentFlag[i]; }$/;"	f	class:TComPTL
getSubPicCpbParamsInPicTimingSEIFlag	TLibCommon/TComSlice.h	/^  Bool    getSubPicCpbParamsInPicTimingSEIFlag( ) const                              { return m_subPicCpbParamsInPicTimingSEIFlag;                }$/;"	f	class:TComHRD
getSubPicCpbParamsPresentFlag	TLibCommon/TComSlice.h	/^  Bool    getSubPicCpbParamsPresentFlag( ) const                                     { return m_subPicCpbParamsPresentFlag;                       }$/;"	f	class:TComHRD
getSubstreamForCtuAddr	TLibCommon/TComPic.cpp	/^UInt TComPic::getSubstreamForCtuAddr(const UInt ctuAddr, const Bool bAddressInRaster, TComSlice *pcSlice)$/;"	f	class:TComPic
getSubstreamSize	TLibCommon/TComSlice.h	/^  UInt                        getSubstreamSize( Int idx )                            { assert(idx<getNumberOfSubstreamSizes()); return m_substreamSizes[idx]; }$/;"	f	class:TComSlice
getSummaryOutFilename	TLibEncoder/TEncCfg.h	/^  const std::string& getSummaryOutFilename() const                   { return m_summaryOutFilename; }$/;"	f	class:TEncCfg
getSummaryPicFilenameBase	TLibEncoder/TEncCfg.h	/^  const std::string& getSummaryPicFilenameBase() const               { return m_summaryPicFilenameBase; }$/;"	f	class:TEncCfg
getSummaryVerboseness	TLibEncoder/TEncCfg.h	/^  UInt      getSummaryVerboseness( ) const                           { return m_summaryVerboseness; }$/;"	f	class:TEncCfg
getTComTile	TLibCommon/TComPicSym.h	/^  TComTile*          getTComTile  ( UInt tileIdx )                         { return &(m_tileParameters[tileIdx]); }$/;"	f	class:TComPicSym
getTComTile	TLibCommon/TComPicSym.h	/^  const TComTile*    getTComTile  ( UInt tileIdx ) const                   { return &(m_tileParameters[tileIdx]); }$/;"	f	class:TComPicSym
getTDecBinCABAC	TLibDecoder/TDecBinCoder.h	/^  virtual TDecBinCABAC*   getTDecBinCABAC   ()             { return 0; }$/;"	f	class:TDecBinIf
getTDecBinCABAC	TLibDecoder/TDecBinCoder.h	/^  virtual const TDecBinCABAC*   getTDecBinCABAC   () const { return 0; }$/;"	f	class:TDecBinIf
getTDecBinCABAC	TLibDecoder/TDecBinCoderCABAC.h	/^  TDecBinCABAC* getTDecBinCABAC()             { return this; }$/;"	f	class:TDecBinCABAC
getTDecBinCABAC	TLibDecoder/TDecBinCoderCABAC.h	/^  const TDecBinCABAC* getTDecBinCABAC() const { return this; }$/;"	f	class:TDecBinCABAC
getTEncBinCABAC	TLibEncoder/TEncBinCoder.h	/^  virtual TEncBinCABAC*   getTEncBinCABAC   ()  { return 0; }$/;"	f	class:TEncBinIf
getTEncBinCABAC	TLibEncoder/TEncBinCoder.h	/^  virtual const TEncBinCABAC*   getTEncBinCABAC   () const { return 0; }$/;"	f	class:TEncBinIf
getTEncBinCABAC	TLibEncoder/TEncBinCoderCABAC.h	/^  TEncBinCABAC* getTEncBinCABAC()  { return this; }$/;"	f	class:TEncBinCABAC
getTEncBinCABAC	TLibEncoder/TEncBinCoderCABAC.h	/^  const TEncBinCABAC* getTEncBinCABAC() const { return this; }$/;"	f	class:TEncBinCABAC
getTLayer	TLibCommon/TComPic.h	/^  UInt          getTLayer() const               { return m_uiTLayer;   }$/;"	f	class:TComPic
getTLayer	TLibCommon/TComSlice.h	/^  UInt                        getTLayer() const                                      { return m_uiTLayer;                                            }$/;"	f	class:TComSlice
getTMCTSExtractionSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getTMCTSExtractionSEIEnabled() const                         { return m_tmctsExtractionSEIEnabled; }$/;"	f	class:TEncCfg
getTMCTSSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getTMCTSSEIEnabled()                                         { return m_tmctsSEIEnabled; }$/;"	f	class:TEncCfg
getTMCTSSEITileConstraint	TLibEncoder/TEncCfg.h	/^  Bool  getTMCTSSEITileConstraint()                                  { return m_tmctsSEITileConstraint; }$/;"	f	class:TEncCfg
getTMISEICameraIsoSpeedIdc	TLibEncoder/TEncCfg.h	/^  Int   getTMISEICameraIsoSpeedIdc()                                 { return m_cameraIsoSpeedIdc;  }$/;"	f	class:TEncCfg
getTMISEICameraIsoSpeedValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEICameraIsoSpeedValue()                               { return m_cameraIsoSpeedValue;  }$/;"	f	class:TEncCfg
getTMISEICodedDataBitDepth	TLibEncoder/TEncCfg.h	/^  Int   getTMISEICodedDataBitDepth()                                 { return m_codedDataBitDepth;  }$/;"	f	class:TEncCfg
getTMISEICodedPivotValue	TLibEncoder/TEncCfg.h	/^  Int*  getTMISEICodedPivotValue()                                   { return m_codedPivotValue;  }$/;"	f	class:TEncCfg
getTMISEIExposurIndexIdc	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposurIndexIdc()                                   { return m_exposureIndexIdc;  }$/;"	f	class:TEncCfg
getTMISEIExposurIndexValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposurIndexValue()                                 { return m_exposureIndexValue;  }$/;"	f	class:TEncCfg
getTMISEIExposureCompensationValueDenomIdc	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposureCompensationValueDenomIdc()                 { return m_exposureCompensationValueDenomIdc;  }$/;"	f	class:TEncCfg
getTMISEIExposureCompensationValueNumerator	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposureCompensationValueNumerator()                { return m_exposureCompensationValueNumerator;  }$/;"	f	class:TEncCfg
getTMISEIExposureCompensationValueSignFlag	TLibEncoder/TEncCfg.h	/^  Bool  getTMISEIExposureCompensationValueSignFlag()                 { return m_exposureCompensationValueSignFlag;  }$/;"	f	class:TEncCfg
getTMISEIExtendedRangeWhiteLevel	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExtendedRangeWhiteLevel()                           { return m_extendedRangeWhiteLevel;  }$/;"	f	class:TEncCfg
getTMISEIExtendedWhiteLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExtendedWhiteLevelLumaCodeValue()                   { return m_extendedWhiteLevelLumaCodeValue;  }$/;"	f	class:TEncCfg
getTMISEIMaxValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIMaxValue()                                          { return m_maxValue;  }$/;"	f	class:TEncCfg
getTMISEIMinValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIMinValue()                                          { return m_minValue;  }$/;"	f	class:TEncCfg
getTMISEIModelID	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIModelID()                                           { return m_modelId;  }$/;"	f	class:TEncCfg
getTMISEINominalBlackLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEINominalBlackLevelLumaCodeValue()                    { return m_nominalBlackLevelLumaCodeValue;  }$/;"	f	class:TEncCfg
getTMISEINominalWhiteLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Int   getTMISEINominalWhiteLevelLumaCodeValue()                    { return m_nominalWhiteLevelLumaCodeValue;  }$/;"	f	class:TEncCfg
getTMISEINumPivots	TLibEncoder/TEncCfg.h	/^  Int   getTMISEINumPivots()                                         { return m_numPivots;  }$/;"	f	class:TEncCfg
getTMISEIRefScreenLuminanceWhite	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIRefScreenLuminanceWhite()                           { return m_refScreenLuminanceWhite;  }$/;"	f	class:TEncCfg
getTMISEISigmoidMidpoint	TLibEncoder/TEncCfg.h	/^  Int   getTMISEISigmoidMidpoint()                                   { return m_sigmoidMidpoint;  }$/;"	f	class:TEncCfg
getTMISEISigmoidWidth	TLibEncoder/TEncCfg.h	/^  Int   getTMISEISigmoidWidth()                                      { return m_sigmoidWidth;  }$/;"	f	class:TEncCfg
getTMISEIStartOfCodedInterva	TLibEncoder/TEncCfg.h	/^  Int*  getTMISEIStartOfCodedInterva()                               { return m_startOfCodedInterval;  }$/;"	f	class:TEncCfg
getTMISEITargetBitDepth	TLibEncoder/TEncCfg.h	/^  Int   getTMISEITargetBitDepth()                                    { return m_targetBitDepth;  }$/;"	f	class:TEncCfg
getTMISEITargetPivotValue	TLibEncoder/TEncCfg.h	/^  Int*  getTMISEITargetPivotValue()                                  { return m_targetPivotValue;  }$/;"	f	class:TEncCfg
getTMISEIToneMapCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool  getTMISEIToneMapCancelFlag()                                 { return m_toneMapCancelFlag;  }$/;"	f	class:TEncCfg
getTMISEIToneMapId	TLibEncoder/TEncCfg.h	/^  Int   getTMISEIToneMapId()                                         { return m_toneMapId;  }$/;"	f	class:TEncCfg
getTMISEIToneMapPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool   getTMISEIToneMapPersistenceFlag()                           { return m_toneMapPersistenceFlag;  }$/;"	f	class:TEncCfg
getTMVPModeId	TLibEncoder/TEncCfg.h	/^  Int          getTMVPModeId ()                                      { return m_TMVPModeId; }$/;"	f	class:TEncCfg
getTMctsCheck	TLibDecoder/TDecConformance.h	/^  Bool getTMctsCheck() const { return m_tmctsCheckEnabled;  }$/;"	f	class:TDecConformanceCheck
getTMctsMvpIsValid	TLibCommon/TComDataCU.h	/^  Bool          getTMctsMvpIsValid()          { return m_tMctsMvpIsValid; }$/;"	f	class:TComDataCU
getTUEntropyCodingParameters	TLibCommon/TComChromaFormat.cpp	/^Void getTUEntropyCodingParameters(      TUEntropyCodingParameters &result,$/;"	f
getTargetBitInGOP	TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetBitInGOP( Int i ) { return m_picTargetBitInGOP[i]; }$/;"	f	class:TEncRCGOP
getTargetBitrate	TLibEncoder/TEncCfg.h	/^  Int          getTargetBitrate       ()                             { return m_RCTargetBitrate;       }$/;"	f	class:TEncCfg
getTargetBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetBits()                                    { return m_targetBits; }$/;"	f	class:TEncRCPic
getTargetBits	TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetBits()            { return m_targetBits; }$/;"	f	class:TEncRCGOP
getTargetBits	TLibEncoder/TEncRateCtrl.h	/^  Int64  getTargetBits()                { return m_targetBits; }$/;"	f	class:TEncRCSeq
getTargetRate	TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetRate()                  { return m_targetRate; }$/;"	f	class:TEncRCSeq
getTemporalIdNestingFlag	TLibCommon/TComSlice.h	/^  Bool                   getTemporalIdNestingFlag() const                                                { return m_bTemporalIdNestingFlag;                                     }$/;"	f	class:TComSPS
getTemporalLayerNonReferenceFlag	TLibCommon/TComSlice.h	/^  Bool                        getTemporalLayerNonReferenceFlag()                     { return m_temporalLayerNonReferenceFlag;                       }$/;"	f	class:TComSlice
getTemporalLevel0IndexSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getTemporalLevel0IndexSEIEnabled() const                     { return m_temporalLevel0IndexSEIEnabled; }$/;"	f	class:TEncCfg
getTemporalNestingFlag	TLibCommon/TComSlice.h	/^  Bool              getTemporalNestingFlag() const                       { return m_bTemporalIdNestingFlag;                                 }$/;"	f	class:TComVPS
getTemporalSubsampleRatio	TLibEncoder/TEncCfg.h	/^  UInt      getTemporalSubsampleRatio       ()      { return  m_temporalSubsampleRatio; }$/;"	f	class:TEncCfg
getTestSAODisableAtPictureLevel	TLibEncoder/TEncCfg.h	/^  Bool  getTestSAODisableAtPictureLevel ( ) const                    { return m_bTestSAODisableAtPictureLevel; }$/;"	f	class:TEncCfg
getTickDivisorMinus2	TLibCommon/TComSlice.h	/^  UInt    getTickDivisorMinus2( ) const                                              { return m_tickDivisorMinus2;                                }$/;"	f	class:TComHRD
getTier	TLibCommon/ProfileLevelTierFeatures.h	/^    Level::Tier                getTier() const { return m_tier; }$/;"	f	class:ProfileLevelTierFeatures
getTier	TLibDecoder/TDecConformance.h	/^    Level::Tier                getTier() const { return m_tier; }$/;"	f	class:ProfileLevelTierFeatures
getTierFlag	TLibCommon/TComSlice.h	/^  Level::Tier   getTierFlag() const                         { return m_tierFlag;                    }$/;"	f	class:ProfileTierLevel
getTileColumnWidth	TLibCommon/TComSlice.h	/^  UInt                   getTileColumnWidth(UInt columnIdx) const                         { return  m_tileColumnWidth[columnIdx];         }$/;"	f	class:TComPPS
getTileHeightInCtus	TLibCommon/TComPicSym.h	/^  UInt      getTileHeightInCtus    () const              { return m_tileHeightInCtus; }$/;"	f	class:TComTile
getTileIdxMap	TLibCommon/TComPicSym.h	/^  UInt               getTileIdxMap( Int ctuRsAddr ) const                  { return *(m_puiTileIdxMap + ctuRsAddr); }$/;"	f	class:TComPicSym
getTileLeftTopPelPosX	TLibCommon/TComPattern.h	/^  Int   getTileLeftTopPelPosX() const { return m_tileLeftTopPelPosX; }$/;"	f	class:TComPattern
getTileLeftTopPelPosY	TLibCommon/TComPattern.h	/^  Int   getTileLeftTopPelPosY() const { return m_tileLeftTopPelPosY; }$/;"	f	class:TComPattern
getTilePosition	TLibCommon/TComPicSym.cpp	/^Void getTilePosition(const TComDataCU* const pcCU, UInt &tileXPosInCtus, UInt &tileYPosInCtus, UInt &tileWidthtInCtus, UInt &tileHeightInCtus)$/;"	f
getTileRightBottomPelPosX	TLibCommon/TComPattern.h	/^  Int   getTileRightBottomPelPosX() const { return m_tileRightBottomPelPosX; }$/;"	f	class:TComPattern
getTileRightBottomPelPosY	TLibCommon/TComPattern.h	/^  Int   getTileRightBottomPelPosY() const { return m_tileRightBottomPelPosY; }$/;"	f	class:TComPattern
getTileRowHeight	TLibCommon/TComSlice.h	/^  UInt                   getTileRowHeight(UInt rowIdx) const                              { return m_tileRowHeight[rowIdx];               }$/;"	f	class:TComPPS
getTileUniformSpacingFlag	TLibCommon/TComSlice.h	/^  Bool                   getTileUniformSpacingFlag() const                                { return m_uniformSpacingFlag;                  }$/;"	f	class:TComPPS
getTileUniformSpacingFlag	TLibEncoder/TEncCfg.h	/^  Bool  getTileUniformSpacingFlag      ()                            { return m_tileUniformSpacingFlag; }$/;"	f	class:TEncCfg
getTileWidthInCtus	TLibCommon/TComPicSym.h	/^  UInt      getTileWidthInCtus     () const              { return m_tileWidthInCtus; }$/;"	f	class:TComTile
getTilesEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getTilesEnabledFlag() const                                      { return m_tilesEnabledFlag;                    }$/;"	f	class:TComPPS
getTilesFixedStructureFlag	TLibCommon/TComSlice.h	/^  Bool              getTilesFixedStructureFlag() const                     { return m_tilesFixedStructureFlag;              }$/;"	f	class:TComVUI
getTilesFixedStructureFlag	TLibEncoder/TEncCfg.h	/^  Bool         getTilesFixedStructureFlag()                          { return m_tilesFixedStructureFlag; }$/;"	f	class:TEncCfg
getTimeCodeSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getTimeCodeSEIEnabled()                                      { return m_timeCodeSEIEnabled; }$/;"	f	class:TEncCfg
getTimeScale	TLibCommon/TComSlice.h	/^  UInt getTimeScale( ) const                   { return m_timeScale;                   }$/;"	f	class:TimingInfo
getTimeSet	TLibEncoder/TEncCfg.h	/^  TComSEITimeSet &getTimeSet(Int index)                              { return m_timeSetArray[index]; }$/;"	f	class:TEncCfg
getTimeSet	TLibEncoder/TEncCfg.h	/^  const TComSEITimeSet &getTimeSet(Int index) const                  { return m_timeSetArray[index]; }$/;"	f	class:TEncCfg
getTimingInfo	TLibCommon/TComSlice.h	/^  TimingInfo*       getTimingInfo()                                        { return &m_timingInfo;                          }$/;"	f	class:TComVUI
getTimingInfo	TLibCommon/TComSlice.h	/^  TimingInfo*       getTimingInfo()                                      { return &m_timingInfo;                                            }$/;"	f	class:TComVPS
getTimingInfo	TLibCommon/TComSlice.h	/^  const TimingInfo* getTimingInfo() const                                  { return &m_timingInfo;                          }$/;"	f	class:TComVUI
getTimingInfo	TLibCommon/TComSlice.h	/^  const TimingInfo* getTimingInfo() const                                { return &m_timingInfo;                                            }$/;"	f	class:TComVPS
getTimingInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool getTimingInfoPresentFlag( ) const       { return m_timingInfoPresentFlag;       }$/;"	f	class:TimingInfo
getToneMappingInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool  getToneMappingInfoSEIEnabled()                               { return m_toneMappingInfoSEIEnabled;  }$/;"	f	class:TEncCfg
getTotalBins	TLibCommon/TComDataCU.h	/^  UInt&         getTotalBins                  ( )                                                          { return m_uiTotalBins;       }$/;"	f	class:TComDataCU
getTotalBits	TLibCommon/TComChromaFormat.h	/^static inline UInt getTotalBits(const UInt width, const UInt height, const ChromaFormat format, const Int bitDepths[MAX_NUM_CHANNEL_TYPE])$/;"	f
getTotalBits	TLibCommon/TComDataCU.h	/^  UInt&         getTotalBits                  ( )                                                          { return m_uiTotalBits;       }$/;"	f	class:TComDataCU
getTotalCost	TLibCommon/TComDataCU.h	/^  Double&       getTotalCost                  ( )                                                          { return m_dTotalCost;        }$/;"	f	class:TComDataCU
getTotalDistortion	TLibCommon/TComDataCU.h	/^  Distortion&   getTotalDistortion            ( )                                                          { return m_uiTotalDistortion; }$/;"	f	class:TComDataCU
getTotalFrames	TLibEncoder/TEncRateCtrl.h	/^  Int  getTotalFrames()                 { return m_totalFrames; }$/;"	f	class:TEncRCSeq
getTotalHeight	TLibCommon/TComPicYuv.h	/^  Int           getTotalHeight    (const ComponentID id) const { return ((m_picHeight    ) + (m_marginY  <<1)) >> getComponentScaleY(id); }$/;"	f	class:TComPicYuv
getTotalNumPart	TLibCommon/TComDataCU.h	/^  UInt&         getTotalNumPart               ( )                                                          { return m_uiNumPartition;    }$/;"	f	class:TComDataCU
getTotalSamples	TLibCommon/TComChromaFormat.h	/^static inline UInt getTotalSamples(const UInt width, const UInt height, const ChromaFormat format)$/;"	f
getTrQuant	TLibEncoder/TEncTop.h	/^  TComTrQuant*            getTrQuant            () { return  &m_cTrQuant;             }$/;"	f	class:TEncTop
getTransferCharacteristics	TLibCommon/TComSlice.h	/^  Int               getTransferCharacteristics() const                     { return m_transferCharacteristics;              }$/;"	f	class:TComVUI
getTransferCharacteristics	TLibEncoder/TEncCfg.h	/^  Int          getTransferCharacteristics()                          { return m_transferCharacteristics; }$/;"	f	class:TEncCfg
getTransformIdx	TLibCommon/TComDataCU.h	/^  UChar         getTransformIdx               ( UInt uiIdx ) const                                         { return m_puhTrIdx[uiIdx];                  }$/;"	f	class:TComDataCU
getTransformIdx	TLibCommon/TComDataCU.h	/^  UChar*        getTransformIdx               ( )                                                          { return m_puhTrIdx;                         }$/;"	f	class:TComDataCU
getTransformShift	TLibCommon/TComChromaFormat.h	/^static inline Int getTransformShift(const Int channelBitDepth, const UInt uiLog2TrSize, const Int maxLog2TrDynamicRange)$/;"	f
getTransformSkip	TLibCommon/TComDataCU.h	/^  UChar         getTransformSkip              ( UInt uiIdx, ComponentID compID ) const                     { return m_puhTransformSkip[compID][uiIdx];  }$/;"	f	class:TComDataCU
getTransformSkip	TLibCommon/TComDataCU.h	/^  UChar*        getTransformSkip              ( ComponentID compID )                                       { return m_puhTransformSkip[compID];         }$/;"	f	class:TComDataCU
getTransformSkipContextEnabledFlag	TLibCommon/TComSlice.h	/^  Bool getTransformSkipContextEnabledFlag() const                                      { return m_transformSkipContextEnabledFlag;      }$/;"	f	class:TComSPSRExt
getTransformSkipContextEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool getTransformSkipContextEnabledFlag              ()            const { return m_transformSkipContextEnabledFlag;  }$/;"	f	class:TEncCfg
getTransformSkipRotationEnabledFlag	TLibCommon/TComSlice.h	/^  Bool getTransformSkipRotationEnabledFlag() const                                     { return m_transformSkipRotationEnabledFlag;     }$/;"	f	class:TComSPSRExt
getTransformSkipRotationEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool getTransformSkipRotationEnabledFlag             ()            const { return m_transformSkipRotationEnabledFlag;  }$/;"	f	class:TEncCfg
getTransquantBypassEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                   getTransquantBypassEnabledFlag() const                           { return m_TransquantBypassEnabledFlag;         }$/;"	f	class:TComPPS
getTransquantBypassEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool         getTransquantBypassEnabledFlag()                      { return m_TransquantBypassEnabledFlag; }$/;"	f	class:TEncCfg
getUseAMP	TLibCommon/TComSlice.h	/^  Bool                   getUseAMP() const                                                               { return m_useAMP;                                                     }$/;"	f	class:TComSPS
getUseASR	TLibEncoder/TEncCfg.h	/^  Bool      getUseASR                       ()      { return m_bUseASR;     }$/;"	f	class:TEncCfg
getUseAdaptQpSelect	TLibEncoder/TEncCfg.h	/^  Bool      getUseAdaptQpSelect             ()           { return   m_bUseAdaptQpSelect; }$/;"	f	class:TEncCfg
getUseAdaptiveQP	TLibEncoder/TEncCfg.h	/^  Bool      getUseAdaptiveQP                () const { return  m_bUseAdaptiveQP; }$/;"	f	class:TEncCfg
getUseBLambdaForNonKeyLowDelayPictures	TLibEncoder/TEncCfg.h	/^  Bool      getUseBLambdaForNonKeyLowDelayPictures () { return m_bUseBLambdaForNonKeyLowDelayPictures; }$/;"	f	class:TEncCfg
getUseCbfFastMode	TLibEncoder/TEncCfg.h	/^  Bool      getUseCbfFastMode               ()      { return m_bUseCbfFastMode; }$/;"	f	class:TEncCfg
getUseChromaQpAdj	TLibCommon/TComSlice.h	/^  Bool                        getUseChromaQpAdj() const                              { return m_ChromaQpAdjEnabled;                                  }$/;"	f	class:TComSlice
getUseConstrainedIntraPred	TLibEncoder/TEncCfg.h	/^  Bool      getUseConstrainedIntraPred      ()      { return m_bUseConstrainedIntraPred; }$/;"	f	class:TEncCfg
getUseDQP	TLibCommon/TComSlice.h	/^  Bool                   getUseDQP() const                                                { return m_useDQP;                              }$/;"	f	class:TComPPS
getUseEarlyCU	TLibEncoder/TEncCfg.h	/^  Bool      getUseEarlyCU                   ()      { return m_bUseEarlyCU; }$/;"	f	class:TEncCfg
getUseEarlySkipDetection	TLibEncoder/TEncCfg.h	/^  Bool      getUseEarlySkipDetection        ()      { return m_useEarlySkipDetection; }$/;"	f	class:TEncCfg
getUseFastDecisionForMerge	TLibEncoder/TEncCfg.h	/^  Bool      getUseFastDecisionForMerge      ()      { return m_useFastDecisionForMerge; }$/;"	f	class:TEncCfg
getUseHADME	TLibEncoder/TEncCfg.h	/^  Bool      getUseHADME                     ()      { return m_bUseHADME;   }$/;"	f	class:TEncCfg
getUseLCUSeparateModel	TLibEncoder/TEncCfg.h	/^  Bool         getUseLCUSeparateModel ()                             { return m_RCUseLCUSeparateModel; }$/;"	f	class:TEncCfg
getUseLCUSeparateModel	TLibEncoder/TEncRateCtrl.h	/^  Bool getUseLCUSeparateModel()         { return m_useLCUSeparateModel; }$/;"	f	class:TEncRCSeq
getUsePCM	TLibCommon/TComSlice.h	/^  Bool                   getUsePCM() const                                                               { return m_usePCM;                                                     }$/;"	f	class:TComSPS
getUsePCM	TLibEncoder/TEncCfg.h	/^  Bool      getUsePCM                       ()      { return m_usePCM;                 }$/;"	f	class:TEncCfg
getUseRDOQ	TLibEncoder/TEncCfg.h	/^  Bool      getUseRDOQ                      ()      { return m_useRDOQ;    }$/;"	f	class:TEncCfg
getUseRDOQTS	TLibEncoder/TEncCfg.h	/^  Bool      getUseRDOQTS                    ()      { return m_useRDOQTS;  }$/;"	f	class:TEncCfg
getUseRateCtrl	TLibEncoder/TEncCfg.h	/^  Bool         getUseRateCtrl         ()                             { return m_RCEnableRateControl;   }$/;"	f	class:TEncCfg
getUseRecalculateQPAccordingToLambda	TLibEncoder/TEncCfg.h	/^  Bool         getUseRecalculateQPAccordingToLambda ()               { return m_recalculateQPAccordingToLambda; }$/;"	f	class:TEncCfg
getUseReconBasedCrossCPredictionEstimate	TLibEncoder/TEncCfg.h	/^  Bool      getUseReconBasedCrossCPredictionEstimate ()                const { return m_reconBasedCrossCPredictionEstimate;  }$/;"	f	class:TEncCfg
getUseSAO	TLibCommon/TComSlice.h	/^  Bool                   getUseSAO() const                                                               { return m_bUseSAO;                                                    }$/;"	f	class:TComSPS
getUseSAO	TLibEncoder/TEncCfg.h	/^  Bool      getUseSAO                  ()                            { return m_bUseSAO; }$/;"	f	class:TEncCfg
getUseScalingList	TLibCommon/TComTrQuant.h	/^  Bool getUseScalingList   (const UInt width, const UInt height, const Bool isTransformSkip){ return m_scalingListEnabledFlag && (!isTransformSkip || ((width == 4) && (height == 4))); };$/;"	f	class:TComTrQuant
getUseScalingListId	TLibEncoder/TEncCfg.h	/^  ScalingListMode getUseScalingListId    ()                          { return m_useScalingListId;      }$/;"	f	class:TEncCfg
getUseSelectiveRDOQ	TLibEncoder/TEncCfg.h	/^  Bool      getUseSelectiveRDOQ             ()      { return m_useSelectiveRDOQ; }$/;"	f	class:TEncCfg
getUseStrongIntraSmoothing	TLibCommon/TComSlice.h	/^  Bool                   getUseStrongIntraSmoothing() const                                              { return m_useStrongIntraSmoothing;                                    }$/;"	f	class:TComSPS
getUseStrongIntraSmoothing	TLibEncoder/TEncCfg.h	/^  Bool         getUseStrongIntraSmoothing ()                         { return m_useStrongIntraSmoothing; }$/;"	f	class:TEncCfg
getUseTransformSkip	TLibCommon/TComSlice.h	/^  Bool                   getUseTransformSkip() const                                      { return m_useTransformSkip;                    }$/;"	f	class:TComPPS
getUseTransformSkip	TLibEncoder/TEncCfg.h	/^  Bool getUseTransformSkip                             ()      { return m_useTransformSkip;        }$/;"	f	class:TEncCfg
getUseTransformSkipFast	TLibEncoder/TEncCfg.h	/^  Bool getUseTransformSkipFast                         ()      { return m_useTransformSkipFast;    }$/;"	f	class:TEncCfg
getUseWP	TLibCommon/TComSlice.h	/^  Bool                   getUseWP() const                                                 { return m_bUseWeightPred;                      }$/;"	f	class:TComPPS
getUseWP	TLibEncoder/TEncCfg.h	/^  Bool         getUseWP               ()                             { return m_useWeightedPred;   }$/;"	f	class:TEncCfg
getUseWeightedPrediction	TLibCommon/TComSlice.h	/^  Bool                        getUseWeightedPrediction() const                       { return( (m_eSliceType==P_SLICE && testWeightPred()) || (m_eSliceType==B_SLICE && testWeightBiPred()) ); }$/;"	f	class:TComSlice
getUsed	TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getUsed(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getUsedByCurr	TLibCommon/TComPic.h	/^  Bool          getUsedByCurr() const            { return m_bUsedByCurr; }$/;"	f	class:TComPic
getUsedByCurrPicLtSPSFlag	TLibCommon/TComSlice.h	/^  Bool                   getUsedByCurrPicLtSPSFlag(Int i) const                                          { assert( i < MAX_NUM_LONG_TERM_REF_PICS ); return m_usedByCurrPicLtSPSFlag[i];    }$/;"	f	class:TComSPS
getVPS	TLibCommon/TComSlice.h	/^  TComVPS*       getVPS(Int vpsId)                                           { return m_vpsMap.getPS(vpsId); };$/;"	f	class:ParameterSetManager
getVPS	TLibCommon/TComSlice.h	/^  const TComVPS*              getVPS() const                                         { return m_pcVPS;                                               }$/;"	f	class:TComSlice
getVPS	TLibEncoder/TEncCfg.h	/^  TComVPS *    getVPS()                                              { return &m_cVPS; }$/;"	f	class:TEncCfg
getVPSChangedFlag	TLibCommon/TComSlice.h	/^  Bool           getVPSChangedFlag(Int vpsId) const                          { return m_vpsMap.getChangedFlag(vpsId); }$/;"	f	class:ParameterSetManager
getVPSId	TLibCommon/TComSlice.h	/^  Int                    getVPSId() const                                                                { return m_VPSId;                                                      }$/;"	f	class:TComSPS
getVPSId	TLibCommon/TComSlice.h	/^  Int               getVPSId() const                                     { return m_VPSId;                                                  }$/;"	f	class:TComVPS
getVclHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool    getVclHrdParametersPresentFlag( ) const                                    { return m_vclHrdParametersPresentFlag;                      }$/;"	f	class:TComHRD
getVer	TLibCommon/TComMotionInfo.h	/^  Int getVer   () const { return  m_acMv.getVer(); }$/;"	f	class:TComMvField
getVer	TLibCommon/TComMv.h	/^  Int   getVer    () const { return m_iVer;          }$/;"	f	class:TComMv
getVideoFormat	TLibCommon/TComSlice.h	/^  Int               getVideoFormat() const                                 { return m_videoFormat;                          }$/;"	f	class:TComVUI
getVideoFormat	TLibEncoder/TEncCfg.h	/^  Int          getVideoFormat()                                      { return m_videoFormat; }$/;"	f	class:TEncCfg
getVideoFullRangeFlag	TLibCommon/TComSlice.h	/^  Bool              getVideoFullRangeFlag() const                          { return m_videoFullRangeFlag;                   }$/;"	f	class:TComVUI
getVideoFullRangeFlag	TLibEncoder/TEncCfg.h	/^  Bool         getVideoFullRangeFlag()                               { return m_videoFullRangeFlag; }$/;"	f	class:TEncCfg
getVideoSignalTypePresentFlag	TLibCommon/TComSlice.h	/^  Bool              getVideoSignalTypePresentFlag() const                  { return m_videoSignalTypePresentFlag;           }$/;"	f	class:TComVUI
getVideoSignalTypePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getVideoSignalTypePresentFlag()                       { return m_videoSignalTypePresentFlag; }$/;"	f	class:TEncCfg
getVuiParameters	TLibCommon/TComSlice.h	/^  TComVUI*               getVuiParameters()                                                              { return &m_vuiParameters;                                             }$/;"	f	class:TComSPS
getVuiParameters	TLibCommon/TComSlice.h	/^  const TComVUI*         getVuiParameters() const                                                        { return &m_vuiParameters;                                             }$/;"	f	class:TComSPS
getVuiParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool                   getVuiParametersPresentFlag() const                                             { return m_vuiParametersPresentFlag;                                   }$/;"	f	class:TComSPS
getVuiParametersPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool         getVuiParametersPresentFlag()                         { return m_vuiParametersPresentFlag; }$/;"	f	class:TEncCfg
getWCGChromaQPControl	TLibEncoder/TEncCfg.h	/^  const WCGChromaQPControl &getWCGChromaQPControl () const { return m_wcgChromaQpControl; }$/;"	f	class:TEncCfg
getWPBiPred	TLibCommon/TComSlice.h	/^  Bool                   getWPBiPred() const                                              { return m_useWeightedBiPred;                   }$/;"	f	class:TComPPS
getWPBiPred	TLibEncoder/TEncCfg.h	/^  Bool         getWPBiPred            ()                             { return m_useWeightedBiPred; }$/;"	f	class:TEncCfg
getWeightedPredictionMethod	TLibEncoder/TEncCfg.h	/^  WeightedPredictionMethod getWeightedPredictionMethod() const       { return m_weightedPredictionMethod; }$/;"	f	class:TEncCfg
getWidth	TLibCommon/TComDataCU.h	/^  UChar         getWidth                      ( UInt uiIdx ) const                                         { return m_puhWidth[uiIdx];                  }$/;"	f	class:TComDataCU
getWidth	TLibCommon/TComDataCU.h	/^  UChar*        getWidth                      ( )                                                          { return m_puhWidth;                         }$/;"	f	class:TComDataCU
getWidth	TLibCommon/TComPicYuv.h	/^  Int           getWidth          (const ComponentID id) const { return  m_picWidth >> getComponentScaleX(id);   }$/;"	f	class:TComPicYuv
getWidth	TLibCommon/TComYuv.h	/^  UInt         getWidth                   (const ComponentID id) const { return m_iWidth >> getComponentScaleX(id);   }$/;"	f	class:TComYuv
getWinUnitX	TLibCommon/TComSlice.h	/^  static Int             getWinUnitX (Int chromaFormatIdc)                                               { assert (chromaFormatIdc >= 0 && chromaFormatIdc < NUM_CHROMA_FORMAT); return m_winUnitX[chromaFormatIdc]; }$/;"	f	class:TComSPS
getWinUnitY	TLibCommon/TComSlice.h	/^  static Int             getWinUnitY (Int chromaFormatIdc)                                               { assert (chromaFormatIdc >= 0 && chromaFormatIdc < NUM_CHROMA_FORMAT); return m_winUnitY[chromaFormatIdc]; }$/;"	f	class:TComSPS
getWindowBottomOffset	TLibCommon/TypeDef.h	/^  Int  getWindowBottomOffset() const  { return m_enabledFlag ? m_winBottomOffset: 0;   }$/;"	f	class:Window
getWindowEnabledFlag	TLibCommon/TypeDef.h	/^  Bool getWindowEnabledFlag() const   { return m_enabledFlag;                          }$/;"	f	class:Window
getWindowLeftOffset	TLibCommon/TypeDef.h	/^  Int  getWindowLeftOffset() const    { return m_enabledFlag ? m_winLeftOffset : 0;    }$/;"	f	class:Window
getWindowRightOffset	TLibCommon/TypeDef.h	/^  Int  getWindowRightOffset() const   { return m_enabledFlag ? m_winRightOffset : 0;   }$/;"	f	class:Window
getWindowTopOffset	TLibCommon/TypeDef.h	/^  Int  getWindowTopOffset() const     { return m_enabledFlag ? m_winTopOffset : 0;     }$/;"	f	class:Window
getWpAcDcParam	TLibCommon/TComSlice.cpp	/^Void  TComSlice::getWpAcDcParam(WPACDCParam *&wp)$/;"	f	class:TComSlice
getWpScaling	TLibCommon/TComSlice.cpp	/^Void  TComSlice::getWpScaling( RefPicList e, Int iRefIdx, WPScalingParam *&wp )$/;"	f	class:TComSlice
getWpScaling	TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::getWpScaling(       TComDataCU *const pcCU,$/;"	f	class:TComWeightPrediction
getXPSNREnableFlag	TLibEncoder/TEncCfg.h	/^  Bool      getXPSNREnableFlag              () const                     { return m_bXPSNREnableFlag;}$/;"	f	class:TEncCfg
getXPSNRWeight	TLibEncoder/TEncCfg.h	/^  Double    getXPSNRWeight                  (const ComponentID id) const { return m_dXPSNRWeight[id];}$/;"	f	class:TEncCfg
getZScanIndex	TLibCommon/Debug.cpp	/^UInt getZScanIndex(const UInt x, const UInt y)$/;"	f
getZorderIdxInCtu	TLibCommon/TComDataCU.h	/^  UInt          getZorderIdxInCtu             ( ) const                                                    { return m_absZIdxInCtu;                     }$/;"	f	class:TComDataCU
getdQPFlag	TLibDecoder/TDecCu.h	/^  Bool getdQPFlag               ()                        { return m_bDecodeDQP;        }$/;"	f	class:TDecCu
getdQPFlag	TLibEncoder/TEncCu.h	/^  Bool getdQPFlag           ()                        { return m_bEncodeDQP;        }$/;"	f	class:TEncCu
getdQPs	TLibEncoder/TEncCfg.h	/^  const Int* getdQPs                        () const { return m_aidQP;       }$/;"	f	class:TEncCfg
getxPSNR	TLibEncoder/TEncAnalyze.h	/^  Double  getxPSNR()                  const { return m_runningTotal.xpsnr;}$/;"	f	class:TEncAnalyze
golombRiceAdaptationStatistics	TLibCommon/TComTrQuant.h	/^  Int golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	struct:__anon5
grainSynthesizeAndBlend	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::grainSynthesizeAndBlend(TComPicYuv* pGrainBuf, Bool isIdrPic)$/;"	f	class:SEIFilmGrainSynthesizer
grainValidateParams	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^uint8_t SEIFilmGrainSynthesizer::grainValidateParams()$/;"	f	class:SEIFilmGrainSynthesizer
hasDPBPerCtuData	TLibCommon/TComPicSym.h	/^  Bool                 hasDPBPerCtuData() const                            { return (m_dpbPerCtuData!=0); };$/;"	f	class:TComPicSym
hasEqualMotion	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::hasEqualMotion( UInt uiAbsPartIdx, const TComDataCU* pcCandCU, UInt uiCandAbsPartIdx ) const$/;"	f	class:TComDataCU
hash	TLibCommon/TypeDef.h	/^  std::vector<UChar> hash;$/;"	m	struct:TComPictureHash
hashToString	TLibCommon/TComPicYuvMD5.cpp	/^std::string hashToString(const TComPictureHash &digest, Int numChar)$/;"	f
hbrFactorEqn	TLibCommon/ProfileLevelTierFeatures.h	/^  HBRFACTOREQN             hbrFactorEqn;$/;"	m	struct:ProfileFeatures
hbrFactorEqn	TLibDecoder/TDecConformance.h	/^  HBRFACTOREQN             hbrFactorEqn;$/;"	m	struct:ProfileFeatures
height	TLibCommon/TComRectangle.h	/^  UInt height;$/;"	m	struct:TComRectangle
heightInGroups	TLibCommon/TypeDef.h	/^        UInt             heightInGroups;$/;"	m	struct:TUEntropyCodingParameters
horFlip	TLibCommon/SEI.h	/^  Bool horFlip;$/;"	m	class:SEIDisplayOrientation
horRange	TLibCommon/SEI.h	/^    UInt horRange;$/;"	m	struct:SEIOmniViewport::OmniViewport
hoursFlag	TLibCommon/TypeDef.h	/^  Bool hoursFlag;$/;"	m	struct:TComSEITimeSet
hoursValue	TLibCommon/TypeDef.h	/^  Int  hoursValue;$/;"	m	struct:TComSEITimeSet
iAC	TLibCommon/TComSlice.h	/^  Int64 iAC;$/;"	m	struct:WPACDCParam
iBestX	TLibEncoder/TEncSearch.h	/^    Int         iBestX;$/;"	m	struct:TEncSearch::__anon2
iBestY	TLibEncoder/TEncSearch.h	/^    Int         iBestY;$/;"	m	struct:TEncSearch::__anon2
iCols	TLibCommon/TComRdCost.h	/^  Int                   iCols;$/;"	m	class:DistParam
iDC	TLibCommon/TComSlice.h	/^  Int64 iDC;$/;"	m	struct:WPACDCParam
iN	TLibCommon/TComMotionInfo.h	/^  Int    iN;                                \/\/\/< number of motion vector predictor candidates$/;"	m	struct:_AMVPInfo
iNNZbeforePos0	TLibCommon/TComTrQuant.cpp	/^  Int    iNNZbeforePos0;$/;"	m	struct:__anon3	file:
iOffset	TLibCommon/TComSlice.h	/^  Int  iOffset;$/;"	m	struct:WPScalingParam
iRows	TLibCommon/TComRdCost.h	/^  Int                   iRows;$/;"	m	class:DistParam
iStep	TLibCommon/TComRdCost.h	/^  Int                   iStep;$/;"	m	class:DistParam
iStrideCur	TLibCommon/TComRdCost.h	/^  Int                   iStrideCur;$/;"	m	class:DistParam
iStrideOrg	TLibCommon/TComRdCost.h	/^  Int                   iStrideOrg;$/;"	m	class:DistParam
iSubShift	TLibCommon/TComRdCost.h	/^  Int             iSubShift;$/;"	m	class:DistParam
iWeight	TLibCommon/TComSlice.h	/^  Int  iWeight;$/;"	m	struct:WPScalingParam
iYStride	TLibEncoder/TEncSearch.h	/^    Int         iYStride;$/;"	m	struct:TEncSearch::__anon2
in	libmd5/libmd5.h	/^  } in;$/;"	m	struct:_context_md5_t	typeref:union:_context_md5_t::__anon1
indentNewLines	TLibCommon/Debug.cpp	/^std::string indentNewLines(const std::string &input, const UInt indentBy)$/;"	f
init	TLibCommon/ContextModel.cpp	/^Void ContextModel::init( Int qp, Int initValue )$/;"	f	class:ContextModel
init	TLibCommon/TComRdCost.cpp	/^Void TComRdCost::init()$/;"	f	class:TComRdCost
init	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::init(   UInt  uiMaxTrSize,$/;"	f	class:TComTrQuant
init	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::init( TComInputBitstream* pcTComBitstream )$/;"	f	class:TDecBinCABAC
init	TLibDecoder/TDecCu.cpp	/^Void TDecCu::init( TDecEntropy* pcEntropyDecoder, TComTrQuant* pcTrQuant, TComPrediction* pcPrediction, TDecConformanceCheck* pConformanceCheck)$/;"	f	class:TDecCu
init	TLibDecoder/TDecEntropy.h	/^    Void init (TComPrediction* p, TDecConformanceCheck* pConformanceCheck) {m_pcPrediction = p; m_pConformanceCheck=pConformanceCheck;}$/;"	f	class:TDecEntropy
init	TLibDecoder/TDecEntropy.h	/^  Void init (TComPrediction* p) {m_pcPrediction = p;}$/;"	f	class:TDecEntropy
init	TLibDecoder/TDecGop.cpp	/^Void TDecGop::init( TDecEntropy*            pcEntropyDecoder,$/;"	f	class:TDecGop
init	TLibDecoder/TDecSbac.h	/^  Void  init                      ( TDecBinIf* p )    { m_pcTDecBinIf = p; }$/;"	f	class:TDecSbac
init	TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::init(TDecEntropy* pcEntropyDecoder, TDecCu* pcCuDecoder, TDecConformanceCheck *pDecConformanceCheck)$/;"	f	class:TDecSlice
init	TLibDecoder/TDecTop.cpp	/^Void TDecTop::init()$/;"	f	class:TDecTop
init	TLibEncoder/SEIEncoder.h	/^  Void init(TEncCfg* encCfg, TEncTop *encTop, TEncGOP *encGOP) $/;"	f	class:SEIEncoder
init	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::init( TComBitIf* pcTComBitIf )$/;"	f	class:TEncBinCABAC
init	TLibEncoder/TEncCu.cpp	/^Void TEncCu::init( TEncTop* pcEncTop )$/;"	f	class:TEncCu
init	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::init ( TEncTop* pcTEncTop )$/;"	f	class:TEncGOP
init	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::init( Int totalFrames, Int targetBitrate, Int frameRate, Int GOPSize, Int picWidth, Int picHeight, Int LCUWidth, Int LCUHeight, Int keepHierBits, Bool useLCUSeparateModel, GOPEntry  GOPList[MAX_GOP] )$/;"	f	class:TEncRateCtrl
init	TLibEncoder/TEncSbac.h	/^  Void  init                   ( TEncBinIf* p )  { m_pcBinIf = p; }$/;"	f	class:TEncSbac
init	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::init(TEncCfg*       pcEncCfg,$/;"	f	class:TEncSearch
init	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::init( TEncTop* pcEncTop )$/;"	f	class:TEncSlice
init	TLibEncoder/TEncTemporalFilter.cpp	/^void TEncTemporalFilter::init(const Int frameSkip,$/;"	f	class:TEncTemporalFilter
init	TLibEncoder/TEncTop.cpp	/^Void TEncTop::init(Bool isFieldCoding)$/;"	f	class:TEncTop
initBitsRatio	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initBitsRatio( Int bitsRatio[])$/;"	f	class:TEncRCSeq
initBuffer	TLibCommon/ContextModel3DBuffer.cpp	/^Void ContextModel3DBuffer::initBuffer( SliceType sliceType, Int qp, UChar* ctxModel )$/;"	f	class:ContextModel3DBuffer
initCtu	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::initCtu( TComPic* pcPic, UInt ctuRsAddr )$/;"	f	class:TComDataCU
initDecodedPictureHashSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initDecodedPictureHashSEI(SEIDecodedPictureHash *decodedPictureHashSEI, TComPic *pcPic, std::string &rHashString, const BitDepths &bitDepths)$/;"	f	class:SEIEncoder
initEncSlice	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::initEncSlice( TComPic* pcPic, const Int pocLast, const Int pocCurr, const Int iGOPid, TComSlice*& rpcSlice, const Bool isField )$/;"	f	class:TEncSlice
initEqualRef	TLibCommon/TComSlice.cpp	/^Void TComSlice::initEqualRef()$/;"	f	class:TComSlice
initEstData	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::initEstData( const UInt uiDepth, const Int qp, const Bool bTransquantBypass )$/;"	f	class:TComDataCU
initGOPID2Level	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initGOPID2Level( Int GOPID2Level[] )$/;"	f	class:TEncRCSeq
initHrdParam	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::initHrdParam(const TComHRD* pcHrd, Int iFrameRate, Double fInitialCpbFullness)$/;"	f	class:TEncRateCtrl
initIntraPatternChType	TLibCommon/TComPattern.cpp	/^Void TComPrediction::initIntraPatternChType( TComTU &rTu, const ComponentID compID, const Bool bFilterRefSamples DEBUG_STRING_FN_DECLARE(sDebug))$/;"	f	class:TComPrediction
initLCUPara	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initLCUPara( TRCParameter** LCUPara )$/;"	f	class:TEncRCSeq
initLumaDeltaQpLUT	TLibEncoder/TEncCu.cpp	/^Void TEncCu::initLumaDeltaQpLUT()$/;"	f	class:TEncCu
initPattern	TLibCommon/TComPattern.cpp	/^Void TComPattern::initPattern(Pel* piY,$/;"	f	class:TComPattern
initPicPara	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initPicPara( TRCParameter* picPara )$/;"	f	class:TEncRCSeq
initRCGOP	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::initRCGOP( Int numberOfPictures )$/;"	f	class:TEncRateCtrl
initRCPic	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::initRCPic( Int frameLevel )$/;"	f	class:TEncRateCtrl
initRDOCabacCoder	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::initRDOCabacCoder(TEncSbac* pcRDGoOnSbacCoder, TComSlice* pcSlice)$/;"	f	class:TEncSampleAdaptiveOffset
initROM	TLibCommon/TComRom.cpp	/^Void initROM()$/;"	f
initRasterToPelXY	TLibCommon/TComRom.cpp	/^Void initRasterToPelXY ( UInt uiMaxCUWidth, UInt uiMaxCUHeight, UInt uiMaxDepth )$/;"	f
initRasterToZscan	TLibCommon/TComRom.cpp	/^Void initRasterToZscan ( UInt uiMaxCUWidth, UInt uiMaxCUHeight, UInt uiMaxDepth )$/;"	f
initSEIActiveParameterSets	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIActiveParameterSets (SEIActiveParameterSets *seiActiveParameterSets, const TComVPS *vps, const TComSPS *sps)$/;"	f	class:SEIEncoder
initSEIAlternativeTransferCharacteristics	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIAlternativeTransferCharacteristics(SEIAlternativeTransferCharacteristics *seiAltTransCharacteristics)$/;"	f	class:SEIEncoder
initSEIAmbientViewingEnvironment	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIAmbientViewingEnvironment(SEIAmbientViewingEnvironment *seiAmbViewEnvironment)$/;"	f	class:SEIEncoder
initSEIAnnotatedRegions	TLibEncoder/SEIEncoder.cpp	/^Bool SEIEncoder::initSEIAnnotatedRegions(SEIAnnotatedRegions* SEIAnnoReg, Int currPOC)$/;"	f	class:SEIEncoder
initSEIBufferingPeriod	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIBufferingPeriod(SEIBufferingPeriod *bufferingPeriodSEI, TComSlice *slice)$/;"	f	class:SEIEncoder
initSEIChromaResamplingFilterHint	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIChromaResamplingFilterHint(SEIChromaResamplingFilterHint *seiChromaResamplingFilterHint, Int iHorFilterIndex, Int iVerFilterIndex)$/;"	f	class:SEIEncoder
initSEIColourRemappingInfo	TLibEncoder/SEIEncoder.cpp	/^Bool SEIEncoder::initSEIColourRemappingInfo(SEIColourRemappingInfo* seiColourRemappingInfo, Int currPOC) \/\/ returns true on success, false on failure.$/;"	f	class:SEIEncoder
initSEIContentColourVolume	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIContentColourVolume(SEIContentColourVolume *seiContentColourVolume)$/;"	f	class:SEIEncoder
initSEIContentLightLevel	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIContentLightLevel(SEIContentLightLevelInfo *seiCLL)$/;"	f	class:SEIEncoder
initSEICubemapProjection	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEICubemapProjection(SEICubemapProjection *seiCubemapProjection)$/;"	f	class:SEIEncoder
initSEIDisplayOrientation	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIDisplayOrientation(SEIDisplayOrientation* seiDisplayOrientation)$/;"	f	class:SEIEncoder
initSEIErp	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIErp(SEIEquirectangularProjection* seiEquirectangularProjection)$/;"	f	class:SEIEncoder
initSEIFilmGrainCharacteristics	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIFilmGrainCharacteristics(SEIFilmGrainCharacteristics *seiFilmGrain)$/;"	f	class:SEIEncoder
initSEIFisheyeVideoInfo	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIFisheyeVideoInfo(SEIFisheyeVideoInfo *seiFisheyeVideoInfo)$/;"	f	class:SEIEncoder
initSEIFramePacking	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIFramePacking(SEIFramePacking *seiFramePacking, Int currPicNum)$/;"	f	class:SEIEncoder
initSEIGreenMetadataInfo	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIGreenMetadataInfo(SEIGreenMetadataInfo *seiGreenMetadataInfo, UInt u)$/;"	f	class:SEIEncoder
initSEIKneeFunctionInfo	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIKneeFunctionInfo(SEIKneeFunctionInfo *seiKneeFunctionInfo)$/;"	f	class:SEIEncoder
initSEIMCTSExtractionInfo	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIMCTSExtractionInfo(SEIMCTSExtractionInfoSet *sei, const TComVPS *vps, const TComSPS *sps, const TComPPS *pps)$/;"	f	class:SEIEncoder
initSEIOmniViewport	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIOmniViewport(SEIOmniViewport* seiOmniViewport)$/;"	f	class:SEIEncoder
initSEIRecoveryPoint	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIRecoveryPoint(SEIRecoveryPoint *recoveryPointSEI, TComSlice *slice)$/;"	f	class:SEIEncoder
initSEIRegionWisePacking	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIRegionWisePacking(SEIRegionWisePacking *seiRegionWisePacking)$/;"	f	class:SEIEncoder
initSEIRegionalNesting	TLibEncoder/SEIEncoder.cpp	/^Bool SEIEncoder::initSEIRegionalNesting(SEIRegionalNesting* seiRegionalNesting, Int currPOC) \/\/ returns true on success, false on failure.$/;"	f	class:SEIEncoder
initSEISOPDescription	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEISOPDescription(SEISOPDescription *sopDescriptionSEI, TComSlice *slice, Int picInGOP, Int lastIdr, Int currGOPSize)$/;"	f	class:SEIEncoder
initSEIScalableNesting	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIScalableNesting(SEIScalableNesting *scalableNestingSEI, SEIMessages &nestedSEIs)$/;"	f	class:SEIEncoder
initSEISegmentedRectFramePacking	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEISegmentedRectFramePacking(SEISegmentedRectFramePacking *seiSegmentedRectFramePacking)$/;"	f	class:SEIEncoder
initSEIShutterIntervalInfo	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIShutterIntervalInfo(SEIShutterIntervalInfo *seiShutterIntervalInfo)$/;"	f	class:SEIEncoder
initSEISphereRotation	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEISphereRotation(SEISphereRotation* seiSphereRotation)$/;"	f	class:SEIEncoder
initSEITempMotionConstrainedTileSets	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEITempMotionConstrainedTileSets (SEITempMotionConstrainedTileSets *sei, const TComPPS *pps)$/;"	f	class:SEIEncoder
initSEITimeCode	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEITimeCode(SEITimeCode *seiTimeCode)$/;"	f	class:SEIEncoder
initSEIToneMappingInfo	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIToneMappingInfo(SEIToneMappingInfo *seiToneMappingInfo)$/;"	f	class:SEIEncoder
initScalingList	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::initScalingList()$/;"	f	class:TComTrQuant
initSlice	TLibCommon/TComSlice.cpp	/^Void TComSlice::initSlice()$/;"	f	class:TComSlice
initSliceQpDelta	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::initSliceQpDelta()$/;"	f	class:TComTrQuant
initSubCU	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::initSubCU( TComDataCU* pcCU, UInt uiPartUnitIdx, UInt uiDepth, Int qp )$/;"	f	class:TComDataCU
initTempBuff	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::initTempBuff(ChromaFormat chromaFormatIDC)$/;"	f	class:TComPrediction
initTemporalLevel0IndexSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initTemporalLevel0IndexSEI(SEITemporalLevel0Index *temporalLevel0IndexSEI, TComSlice *slice)$/;"	f	class:SEIEncoder
initWpAcDcParam	TLibCommon/TComSlice.cpp	/^Void  TComSlice::initWpAcDcParam()$/;"	f	class:TComSlice
initWpScaling	TLibCommon/TComSlice.cpp	/^Void  TComSlice::initWpScaling(const TComSPS *sps)$/;"	f	class:TComSlice
initZscanToRaster	TLibCommon/TComRom.cpp	/^Void initZscanToRaster ( Int iMaxDepth, Int iDepth, UInt uiStartVal, UInt*& rpuiCurrIdx )$/;"	f
initialize	TLibEncoder/TEncGOP.cpp	/^Void EfficientFieldIRAPMapping::initialize(const Bool isField, const Int gopSize, const Int POCLast, const Int numPicRcvd, const Int lastIDR, TEncGOP *pEncGop, TEncCfg *pCfg )$/;"	f	class:EfficientFieldIRAPMapping
inputKneePoint	TLibEncoder/TEncCfg.h	/^    Int inputKneePoint;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation::KneePointPair
insertAt	TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::insertAt(const TComOutputBitstream& src, UInt pos)$/;"	f	class:TComOutputBitstream
intensityInterval	TLibCommon/SEIFilmGrainSynthesizer.h	/^  int16_t intensityInterval[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	struct:GrainSynthesisStruct_t
intensityIntervalLowerBound	TLibCommon/SEI.h	/^    UChar intensityIntervalLowerBound;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModelIntensityValues
intensityIntervalUpperBound	TLibCommon/SEI.h	/^    UChar intensityIntervalUpperBound;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModelIntensityValues
intensityValues	TLibCommon/SEI.h	/^    std::vector<CompModelIntensityValues> intensityValues;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModel
invRdpcmNxN	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invRdpcmNxN( TComTU& rTu, const ComponentID compID, Pel* pcResidual, const UInt uiStride )$/;"	f	class:TComTrQuant
invRecurTransformNxN	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invRecurTransformNxN( const ComponentID compID,$/;"	f	class:TComTrQuant
invTrSkipDeQuantOneSample	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invTrSkipDeQuantOneSample( TComTU &rTu, ComponentID compID, TCoeff inSample, Pel &reconSample, const QpParam &cQP, UInt uiPos )$/;"	f	class:TComTrQuant
invTransformNxN	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invTransformNxN(      TComTU        &rTu,$/;"	f	class:TComTrQuant
invertQuantOffsets	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::invertQuantOffsets(ComponentID compIdx, Int typeIdc, Int typeAuxInfo, Int* dstOffsets, Int* srcOffsets)$/;"	f	class:TComSampleAdaptiveOffset
isAboveAvailable	TLibCommon/TComPattern.cpp	/^Int isAboveAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxRT, Bool *bValidFlags )$/;"	f
isAboveLeftAvailable	TLibCommon/TComPattern.cpp	/^Bool isAboveLeftAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT )$/;"	f
isAboveRightAvailable	TLibCommon/TComPattern.cpp	/^Int isAboveRightAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxRT, Bool *bValidFlags )$/;"	f
isAlignedBins	TLibCommon/TComCodingStatistics.h	/^static inline Bool isAlignedBins(TComCodingStatisticsType statT) { return statT==STATS__CABAC_BITS__ALIGNED_SIGN_BIT || statT==STATS__CABAC_BITS__ALIGNED_ESCAPE_BITS; }$/;"	f
isBelowLeftAvailable	TLibCommon/TComPattern.cpp	/^Int isBelowLeftAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxLB, Bool *bValidFlags )$/;"	f
isBipredRestriction	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isBipredRestriction(UInt puIdx) const$/;"	f	class:TComDataCU
isChroma	TLibCommon/TComChromaFormat.h	/^static inline Bool        isChroma                  (const ChannelType id)                         { return (id!=CHANNEL_TYPE_LUMA);                                    }$/;"	f
isChroma	TLibCommon/TComChromaFormat.h	/^static inline Bool        isChroma                  (const ComponentID id)                         { return (id!=COMPONENT_Y);                                          }$/;"	f
isChromaEnabled	TLibCommon/TComChromaFormat.h	/^static inline Bool        isChromaEnabled           (const ChromaFormat fmt)                       { return  fmt!=CHROMA_400;                                           }$/;"	f
isDiffMER	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isDiffMER(Int xN, Int yN, Int xP, Int yP) const$/;"	f	class:TComDataCU
isEnabled	TLibCommon/TypeDef.h	/^  Bool isEnabled() const { return enabled; }$/;"	f	struct:WCGChromaQPControl
isEnabled	TLibCommon/TypeDef.h	/^  Bool isEnabled() const { return mode!=LUMALVL_TO_DQP_DISABLED; }$/;"	f	struct:LumaLevelToDeltaQPMapping
isEof	Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::isEof()$/;"	f	class:TVideoIOYuv
isEqualCol	TLibCommon/TComDataCU.h	/^  static inline Bool isEqualCol( Int addrA, Int addrB, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isEqualRef	TLibCommon/TComSlice.h	/^  Bool                        isEqualRef( RefPicList e, Int iRefIdx1, Int iRefIdx2 )$/;"	f	class:TComSlice
isEqualRow	TLibCommon/TComDataCU.h	/^  static inline Bool isEqualRow( Int addrA, Int addrB, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isEqualRowOrCol	TLibCommon/TComDataCU.h	/^  static inline Bool isEqualRowOrCol( Int addrA, Int addrB, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isFail	Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::isFail()$/;"	f	class:TVideoIOYuv
isField	TLibCommon/TComPic.h	/^   Bool              isField() const                      {return m_isField;}$/;"	f	class:TComPic
isFirstAbsZorderIdxInDepth	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isFirstAbsZorderIdxInDepth (UInt uiAbsPartIdx, UInt uiDepth) const$/;"	f	class:TComDataCU
isIRAP	TLibCommon/TComSlice.h	/^  Bool                        isIRAP() const                                         { return (getNalUnitType() >= 16) && (getNalUnitType() <= 23);  }$/;"	f	class:TComSlice
isInter	TLibCommon/TComDataCU.h	/^  Bool          isInter                       ( UInt uiPartIdx ) const                                     { return m_pePredMode[ uiPartIdx ] == MODE_INTER; }$/;"	f	class:TComDataCU
isInter	TLibCommon/TComPicSym.h	/^    Bool isInter(const UInt absPartAddr)                const { return m_pePredMode[absPartAddr] == MODE_INTER; }$/;"	f	struct:TComPicSym::DPBPerCtuData
isInterB	TLibCommon/TComSlice.h	/^  Bool                        isInterB() const                                       { return m_eSliceType == B_SLICE;                               }$/;"	f	class:TComSlice
isInterP	TLibCommon/TComSlice.h	/^  Bool                        isInterP() const                                       { return m_eSliceType == P_SLICE;                               }$/;"	f	class:TComSlice
isIntra	TLibCommon/TComDataCU.h	/^  Bool          isIntra                       ( UInt uiPartIdx ) const                                     { return m_pePredMode[ uiPartIdx ] == MODE_INTRA; }$/;"	f	class:TComDataCU
isIntra	TLibCommon/TComSlice.h	/^  Bool                        isIntra() const                                        { return m_eSliceType == I_SLICE;                               }$/;"	f	class:TComSlice
isLastColumnCTUInTile	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isLastColumnCTUInTile() const$/;"	f	class:TComDataCU
isLastSubCUOfCtu	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isLastSubCUOfCtu(const UInt absPartIdx) const$/;"	f	class:TComDataCU
isLeftAvailable	TLibCommon/TComPattern.cpp	/^Int isLeftAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxLB, Bool *bValidFlags )$/;"	f
isLosslessCoded	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isLosslessCoded(UInt absPartIdx) const$/;"	f	class:TComDataCU
isLuma	TLibCommon/TComChromaFormat.h	/^static inline Bool        isLuma                    (const ChannelType id)                         { return (id==CHANNEL_TYPE_LUMA);                                    }$/;"	f
isLuma	TLibCommon/TComChromaFormat.h	/^static inline Bool        isLuma                    (const ComponentID id)                         { return (id==COMPONENT_Y);                                          }$/;"	f
isNonTransformedResidualRotated	TLibCommon/TComTU.cpp	/^Bool TComTU::isNonTransformedResidualRotated(const ComponentID compID)$/;"	f	class:TComTU
isRDPCMEnabled	TLibCommon/TComDataCU.h	/^  Bool          isRDPCMEnabled                ( UInt uiAbsPartIdx ) const                                  { return getSlice()->getSPS()->getSpsRangeExtension().getRdpcmEnabledFlag(isIntra(uiAbsPartIdx) ? RDPCM_SIGNAL_IMPLICIT : RDPCM_SIGNAL_EXPLICIT); }$/;"	f	class:TComDataCU
isRandomAccessSkipPicture	TLibDecoder/TDecTop.cpp	/^Bool TDecTop::isRandomAccessSkipPicture(Int& iSkipFrame,  Int& iPOCLastDisplay)$/;"	f	class:TDecTop
isReferenceNalu	TLibCommon/TComSlice.h	/^  Bool                        isReferenceNalu() const                                { return ((getNalUnitType() <= NAL_UNIT_RESERVED_VCL_R15) && (getNalUnitType()%2 != 0)) || ((getNalUnitType() >= NAL_UNIT_CODED_SLICE_BLA_W_LP) && (getNalUnitType() <= NAL_UNIT_RESERVED_IRAP_VCL23) ); }$/;"	f	class:TComSlice
isReferenced	TLibCommon/TComSlice.h	/^  Bool                        isReferenced() const                                   { return m_bRefenced;                                           }$/;"	f	class:TComSlice
isSei	TLibCommon/NAL.h	/^  Bool isSei()$/;"	f	struct:NALUnit
isSet	TLibCommon/Debug.h	/^  Bool                isSet()       const       { return m_bSet;    }$/;"	f	class:EnvVar
isSkipPictureForBLA	TLibDecoder/TDecTop.cpp	/^Bool TDecTop::isSkipPictureForBLA(Int& iPOCLastDisplay)$/;"	f	class:TDecTop
isSkipped	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isSkipped( UInt uiPartIdx ) const$/;"	f	class:TComDataCU
isSlice	TLibCommon/NAL.h	/^  Bool isSlice()$/;"	f	struct:NALUnit
isStepwiseTemporalLayerSwitchingPointCandidate	TLibCommon/TComSlice.cpp	/^Bool TComSlice::isStepwiseTemporalLayerSwitchingPointCandidate(TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
isTemporalLayerSwitchingPoint	TLibCommon/TComSlice.cpp	/^Bool TComSlice::isTemporalLayerSwitchingPoint(TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
isTopField	TLibCommon/TComPic.h	/^   Bool              isTopField()                         {return m_isTop;}$/;"	f	class:TComPic
isTrue	TLibCommon/Debug.h	/^  Bool                isTrue()      const       { return m_iVal!=0; }$/;"	f	class:EnvVar
isVcl	TLibCommon/NAL.h	/^  Bool isVcl()$/;"	f	struct:NALUnit
isZeroCol	TLibCommon/TComDataCU.h	/^  static inline Bool isZeroCol( Int addr, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isZeroRow	TLibCommon/TComDataCU.h	/^  static inline Bool isZeroRow( Int addr, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
is_errored	Utilities/program_options_lite.h	/^      bool is_errored;$/;"	m	struct:df::program_options_lite::ErrorReporter
label	TLibCommon/SEI.h	/^    std::string label;           \/\/ only valid if bLabelValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionLabel
labelValid	TLibCommon/SEI.h	/^    Bool        labelValid;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionLabel
lastXBits	TLibCommon/TComTrQuant.h	/^  Int lastXBits[MAX_NUM_CHANNEL_TYPE][LAST_SIGNIFICANT_GROUPS];$/;"	m	struct:__anon5
lastYBits	TLibCommon/TComTrQuant.h	/^  Int lastYBits[MAX_NUM_CHANNEL_TYPE][LAST_SIGNIFICANT_GROUPS];$/;"	m	struct:__anon5
leftOffset	TLibCommon/SEI.h	/^    Int leftOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
leftShift	TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType leftShift       (const ValueType value, const Int shift) { return (shift >= 0) ? ( value                                  << shift) : ( value                                   >> -shift); }$/;"	f
leftShift_round	TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType leftShift_round (const ValueType value, const Int shift) { return (shift >= 0) ? ( value                                  << shift) : ((value + (ValueType(1) << (-shift - 1))) >> -shift); }$/;"	f
lessThanCol	TLibCommon/TComDataCU.h	/^  static inline Bool lessThanCol( Int addr, Int val, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
lessThanRow	TLibCommon/TComDataCU.h	/^  static inline Bool lessThanRow( Int addr, Int val, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
level	TLibCommon/ProfileLevelTierFeatures.h	/^  Level::Name level;$/;"	m	struct:LevelTierFeatures
level	TLibDecoder/TDecConformance.h	/^  Level::Name level;$/;"	m	struct:LevelTierFeatures
lineWrap	TLibCommon/Debug.cpp	/^std::string lineWrap(const std::string &input, const UInt maximumLineLength)$/;"	f
linenum	Utilities/program_options_lite.cpp	/^      int linenum;$/;"	m	struct:df::program_options_lite::CfgStreamParser	file:
linkToWithOffset	TLibCommon/TComMotionInfo.h	/^  Void linkToWithOffset( TComCUMvField const * src, Int offset )$/;"	f	class:TComCUMvField
load	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::load ( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
load	TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::load ( const TEncSbac* pSrc)$/;"	f	class:TEncSbac
loadContexts	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::loadContexts ( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
loadContexts	TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::loadContexts ( const TEncSbac* pSrc)$/;"	f	class:TEncSbac
loadIntraDirMode	TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::loadIntraDirMode( const TEncSbac* pSrc, const ChannelType chType )$/;"	f	class:TEncSbac
loopFilterPic	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::loopFilterPic( TComPic* pcPic )$/;"	f	class:TComLoopFilter
lowDelayHrdFlag	TLibCommon/TComSlice.h	/^  Bool lowDelayHrdFlag;$/;"	m	struct:HrdSubLayerInfo
mAbsPartIdxCU	TLibCommon/TComTU.h	/^    UInt          mAbsPartIdxCU;$/;"	m	class:TComTU
mAbsPartIdxStep	TLibCommon/TComTU.h	/^    UInt          mAbsPartIdxStep;$/;"	m	class:TComTU
mAbsPartIdxTURelCU	TLibCommon/TComTU.h	/^    UInt          mAbsPartIdxTURelCU;$/;"	m	class:TComTU
mChromaFormat	TLibCommon/TComTU.h	/^    ChromaFormat  mChromaFormat;$/;"	m	class:TComTU
mCodeAll	TLibCommon/TComTU.h	/^    Bool          mCodeAll[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mCuDepth	TLibCommon/TComTU.h	/^    UInt          mCuDepth;$/;"	m	class:TComTU
mLog2TrLumaSize	TLibCommon/TComTU.h	/^    UInt          mLog2TrLumaSize;$/;"	m	class:TComTU
mOffsets	TLibCommon/TComTU.h	/^    UInt          mOffsets[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mOrigWidth	TLibCommon/TComTU.h	/^    UInt          mOrigWidth[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mRect	TLibCommon/TComTU.h	/^    TComRectangle mRect[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mSection	TLibCommon/TComTU.h	/^    UInt          mSection;$/;"	m	class:TComTU
mSplitMode	TLibCommon/TComTU.h	/^    TU_SPLIT_MODE mSplitMode;$/;"	m	class:TComTU
mTrDepthRelCU	TLibCommon/TComTU.h	/^    UInt          mTrDepthRelCU[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
m_AccessUnitDelimiter	TLibEncoder/TEncCfg.h	/^  Bool      m_AccessUnitDelimiter;               \/\/\/< add Access Unit Delimiter NAL units$/;"	m	class:TEncCfg
m_ArlCoeffIsAliasedAllocation	TLibCommon/TComDataCU.h	/^  Bool          m_ArlCoeffIsAliasedAllocation;          \/\/\/< ARL coefficient buffer is an alias of the global buffer and must not be free()'d$/;"	m	class:TComDataCU
m_Bitstream	TLibDecoder/NALread.h	/^    TComInputBitstream m_Bitstream;$/;"	m	class:InputNALUnit
m_Bitstream	TLibEncoder/NALwrite.h	/^  TComOutputBitstream m_Bitstream;$/;"	m	struct:OutputNALUnit
m_CUMvField	TLibCommon/TComPicSym.h	/^    TComCUMvField  m_CUMvField[NUM_REF_PIC_LIST_01];$/;"	m	struct:TComPicSym::DPBPerCtuData
m_CUTransquantBypass	TLibCommon/TComDataCU.h	/^  Bool*         m_CUTransquantBypass;                   \/\/\/< array of cu_transquant_bypass flags$/;"	m	class:TComDataCU
m_CUTransquantBypassFlagForce	TLibEncoder/TEncCfg.h	/^  Bool      m_CUTransquantBypassFlagForce;                    \/\/\/< if transquant_bypass_enabled_flag, then, if true, all CU transquant bypass flags will be set to true.$/;"	m	class:TEncCfg
m_CUTransquantBypassFlagSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_CUTransquantBypassFlagSCModel;$/;"	m	class:TDecSbac
m_CUTransquantBypassFlagSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_CUTransquantBypassFlagSCModel;$/;"	m	class:TEncSbac
m_CbQPoffset	TLibEncoder/TEncCfg.h	/^  Int m_CbQPoffset;$/;"	m	struct:GOPEntry
m_ChromaQpAdj	TLibCommon/TComDataCU.h	/^  UChar*        m_ChromaQpAdj;                          \/\/\/< array of chroma QP adjustments (indexed). when value = 0, cu_chroma_qp_offset_flag=0; when value>0, indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=value-1$/;"	m	class:TComDataCU
m_ChromaQpAdjEnabled	TLibCommon/TComSlice.h	/^  Bool                       m_ChromaQpAdjEnabled;$/;"	m	class:TComSlice
m_ChromaQpAdjFlagSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjFlagSCModel;$/;"	m	class:TDecSbac
m_ChromaQpAdjFlagSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjFlagSCModel;$/;"	m	class:TEncSbac
m_ChromaQpAdjIdcSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjIdcSCModel;$/;"	m	class:TDecSbac
m_ChromaQpAdjIdcSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjIdcSCModel;$/;"	m	class:TEncSbac
m_ChromaQpAdjTableIncludingNullEntry	TLibCommon/TComSlice.h	/^  ChromaQpAdj      m_ChromaQpAdjTableIncludingNullEntry[1+MAX_QP_OFFSET_LIST_SIZE]; \/\/!< Array includes entry [0] for the null offset used when cu_chroma_qp_offset_flag=0, and entries [cu_chroma_qp_offset_idx+1...] otherwise$/;"	m	class:TComPPSRExt
m_CpbSaturationEnabled	TLibEncoder/TEncRateCtrl.h	/^  Bool       m_CpbSaturationEnabled;    \/\/ Enable target bits saturation to avoid CPB overflow and underflow$/;"	m	class:TEncRateCtrl
m_CrQPoffset	TLibEncoder/TEncCfg.h	/^  Int m_CrQPoffset;$/;"	m	struct:GOPEntry
m_DBParam	TLibEncoder/TEncGOP.h	/^  Int                     m_DBParam[MAX_ENCODER_DEBLOCKING_QUALITY_LAYERS][4];   \/\/[layer_id][0: available; 1: bDBDisabled; 2: Beta Offset Div2; 3: Tc Offset Div2;]$/;"	m	class:TEncGOP
m_FrameSkip	TLibEncoder/TEncCfg.h	/^  Int       m_FrameSkip;$/;"	m	class:TEncCfg
m_FrameSkip	TLibEncoder/TEncTemporalFilter.h	/^  Int m_FrameSkip;$/;"	m	class:TEncTemporalFilter
m_FutureBytes	TLibDecoder/AnnexBread.h	/^  uint32_t m_FutureBytes; \/* bytes that have been peeked *\/$/;"	m	class:InputByteStream
m_GOPID2Level	TLibEncoder/TEncRateCtrl.h	/^  Int* m_GOPID2Level;$/;"	m	class:TEncRCSeq
m_GOPList	TLibEncoder/TEncCfg.h	/^  GOPEntry  m_GOPList[MAX_GOP];$/;"	m	class:TEncCfg
m_GOPSize	TLibEncoder/TEncRateCtrl.h	/^  Int m_GOPSize;$/;"	m	class:TEncRCSeq
m_GOPSize	TLibEncoder/TEncTemporalFilter.h	/^  Int m_GOPSize;$/;"	m	class:TEncTemporalFilter
m_HRD	TLibCommon/TComSlice.h	/^  HrdSubLayerInfo m_HRD[MAX_TLAYER];$/;"	m	class:TComHRD
m_Input	TLibDecoder/AnnexBread.h	/^  std::istream& m_Input; \/* Input stream to read from *\/$/;"	m	class:InputByteStream
m_IsChromaQpAdjCoded	TLibDecoder/TDecCu.h	/^  Bool                m_IsChromaQpAdjCoded;$/;"	m	class:TDecCu
m_LCUHeight	TLibEncoder/TEncRateCtrl.h	/^  Int m_LCUHeight;$/;"	m	class:TEncRCSeq
m_LCULeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_LCULeft;$/;"	m	class:TEncRCPic
m_LCUPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter** m_LCUPara;$/;"	m	class:TEncRCSeq
m_LCUWidth	TLibEncoder/TEncRateCtrl.h	/^  Int m_LCUWidth;$/;"	m	class:TEncRCSeq
m_LCUs	TLibEncoder/TEncRateCtrl.h	/^  TRCLCU* m_LCUs;$/;"	m	class:TEncRCPic
m_LFCrossSliceBoundaryFlag	TLibCommon/TComSlice.h	/^  Bool                       m_LFCrossSliceBoundaryFlag;$/;"	m	class:TComSlice
m_MCTSExtractionInfoSets	TLibCommon/SEI.h	/^    std::vector<MCTSExtractionInfo> m_MCTSExtractionInfoSets;$/;"	m	class:SEIMCTSExtractionInfoSet
m_MSBExtendedBitDepth	TLibEncoder/TEncTemporalFilter.h	/^  Int m_MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncTemporalFilter
m_MSBExtendedBitDepth	Utilities/TVideoIOYuv.h	/^  Int       m_MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE];  \/\/\/< bitdepth after addition of MSBs (with value 0)$/;"	m	class:TVideoIOYuv
m_NumFutureBytes	TLibDecoder/AnnexBread.h	/^  UInt m_NumFutureBytes; \/* number of valid bytes in m_FutureBytes *\/$/;"	m	class:InputByteStream
m_OutputFlagPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_OutputFlagPresentFlag;             \/\/!< Indicates the presence of output_flag in slice header$/;"	m	class:TComPPS
m_PCMBitDepth	TLibEncoder/TEncCfg.h	/^  Int       m_PCMBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncCfg
m_POC	TLibCommon/TComSlice.h	/^  Int  m_POC[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_POC	TLibEncoder/TEncCfg.h	/^  Int m_POC;$/;"	m	struct:GOPEntry
m_PPSId	TLibCommon/TComSlice.h	/^  Int              m_PPSId;                    \/\/ pic_parameter_set_id$/;"	m	class:TComPPS
m_PicOutputFlag	TLibCommon/TComSlice.h	/^  Bool                       m_PicOutputFlag;        \/\/\/< pic_output_flag$/;"	m	class:TComSlice
m_QP	TLibEncoder/TEncRateCtrl.h	/^  Int m_QP;     \/\/ QP of skip mode is set to g_RCInvalidQPValue$/;"	m	struct:TRCLCU
m_QP	TLibEncoder/TEncTemporalFilter.h	/^  Int m_QP;$/;"	m	class:TEncTemporalFilter
m_QPFactor	TLibEncoder/TEncCfg.h	/^  Double m_QPFactor;$/;"	m	struct:GOPEntry
m_QPOffset	TLibEncoder/TEncCfg.h	/^  Int m_QPOffset;$/;"	m	struct:GOPEntry
m_QPOffsetModelOffset	TLibEncoder/TEncCfg.h	/^  Double m_QPOffsetModelOffset;$/;"	m	struct:GOPEntry
m_QPOffsetModelScale	TLibEncoder/TEncCfg.h	/^  Double m_QPOffsetModelScale;$/;"	m	struct:GOPEntry
m_RASPOCforResetEncoder	TLibEncoder/TEncGOP.h	/^  Int                     m_RASPOCforResetEncoder; \/\/ an IDR POC number, after which the next POC (in output order) will be reset. If MAX_INT, then no reset is pending.$/;"	m	class:TEncGOP
m_RCCpbSaturationEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_RCCpbSaturationEnabled;$/;"	m	class:TEncCfg
m_RCCpbSize	TLibEncoder/TEncCfg.h	/^  UInt      m_RCCpbSize;$/;"	m	class:TEncCfg
m_RCEnableRateControl	TLibEncoder/TEncCfg.h	/^  Bool      m_RCEnableRateControl;$/;"	m	class:TEncCfg
m_RCForceIntraQP	TLibEncoder/TEncCfg.h	/^  Bool      m_RCForceIntraQP;$/;"	m	class:TEncCfg
m_RCInitialCpbFullness	TLibEncoder/TEncCfg.h	/^  Double    m_RCInitialCpbFullness;$/;"	m	class:TEncCfg
m_RCInitialQP	TLibEncoder/TEncCfg.h	/^  Int       m_RCInitialQP;$/;"	m	class:TEncCfg
m_RCKeepHierarchicalBit	TLibEncoder/TEncCfg.h	/^  Int       m_RCKeepHierarchicalBit;$/;"	m	class:TEncCfg
m_RCLCULevelRC	TLibEncoder/TEncCfg.h	/^  Bool      m_RCLCULevelRC;$/;"	m	class:TEncCfg
m_RCQP	TLibEncoder/TEncRateCtrl.h	/^  Int        m_RCQP;$/;"	m	class:TEncRateCtrl
m_RCTargetBitrate	TLibEncoder/TEncCfg.h	/^  Int       m_RCTargetBitrate;$/;"	m	class:TEncCfg
m_RCUseLCUSeparateModel	TLibEncoder/TEncCfg.h	/^  Bool      m_RCUseLCUSeparateModel;$/;"	m	class:TEncCfg
m_RPSList	TLibCommon/TComSlice.h	/^  TComRPSList      m_RPSList;$/;"	m	class:TComSPS
m_RefPicListModification	TLibCommon/TComSlice.h	/^  TComRefPicListModification m_RefPicListModification;$/;"	m	class:TComSlice
m_RefPicSetIdxL0	TLibCommon/TComSlice.h	/^  UInt m_RefPicSetIdxL0[REF_PIC_LIST_NUM_IDX];$/;"	m	class:TComRefPicListModification
m_RefPicSetIdxL1	TLibCommon/TComSlice.h	/^  UInt m_RefPicSetIdxL1[REF_PIC_LIST_NUM_IDX];$/;"	m	class:TComRefPicListModification
m_SEIs	TLibCommon/TComPic.h	/^  SEIMessages  m_SEIs; \/\/\/< Any SEI messages that have been received.  If !NULL we own the object.$/;"	m	class:TComPic
m_SEIs	TLibDecoder/TDecTop.h	/^  SEIMessages             m_SEIs; \/\/\/< List of SEI messages that have been received before the first slice and between slices, excluding prefix SEIs...$/;"	m	class:TDecTop
m_SOPDescriptionSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_SOPDescriptionSEIEnabled;$/;"	m	class:TEncCfg
m_SPSId	TLibCommon/TComSlice.h	/^  Int              m_SPSId;                    \/\/ seq_parameter_set_id$/;"	m	class:TComPPS
m_SPSId	TLibCommon/TComSlice.h	/^  Int              m_SPSId;$/;"	m	class:TComSPS
m_SPSTemporalMVPEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_SPSTemporalMVPEnabledFlag;$/;"	m	class:TComSPS
m_SignDataHidingEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_SignDataHidingEnabledFlag;$/;"	m	class:TEncCfg
m_TMVPModeId	TLibEncoder/TEncCfg.h	/^  Int       m_TMVPModeId;$/;"	m	class:TEncCfg
m_TransquantBypassEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_TransquantBypassEnabledFlag;       \/\/!< Indicates presence of cu_transquant_bypass_flag in CUs.$/;"	m	class:TComPPS
m_TransquantBypassEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_TransquantBypassEnabledFlag;                    \/\/\/< transquant_bypass_enabled_flag setting in PPS.$/;"	m	class:TEncCfg
m_VPSId	TLibCommon/TComSlice.h	/^  Int                   m_VPSId;$/;"	m	class:TComVPS
m_VPSId	TLibCommon/TComSlice.h	/^  Int              m_VPSId;$/;"	m	class:TComSPS
m_aaiAdaptSR	TLibEncoder/TEncSearch.h	/^  Int             m_aaiAdaptSR[MAX_NUM_REF_LIST_ADAPT_SR][MAX_IDX_ADAPT_SR];$/;"	m	class:TEncSearch
m_aapbEdgeFilter	TLibCommon/TComLoopFilter.h	/^  Bool*     m_aapbEdgeFilter[NUM_EDGE_DIR];$/;"	m	class:TComLoopFilter
m_aapucBS	TLibCommon/TComLoopFilter.h	/^  UChar*    m_aapucBS[NUM_EDGE_DIR];         \/\/\/< Bs for [Ver\/Hor][Y\/U\/V][Blk_Idx]$/;"	m	class:TComLoopFilter
m_abEqualRef	TLibCommon/TComSlice.h	/^  Bool                       m_abEqualRef  [NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_REF];$/;"	m	class:TComSlice
m_absZIdxInCtu	TLibCommon/TComDataCU.h	/^  UInt          m_absZIdxInCtu;                         \/\/\/< absolute address in a CTU. It's Z scan order$/;"	m	class:TComDataCU
m_acAQLayer	TLibEncoder/TEncPic.h	/^  TEncPicQPAdaptationLayer* m_acAQLayer;$/;"	m	class:TEncPic
m_acCUMvField	TLibCommon/TComDataCU.h	/^  TComCUMvField m_acCUMvField[NUM_REF_PIC_LIST_01];     \/\/\/< array of motion vectors.$/;"	m	class:TComDataCU
m_acMv	TLibCommon/TComMotionInfo.h	/^  TComMv    m_acMv;$/;"	m	class:TComMvField
m_acMvCand	TLibCommon/TComMotionInfo.h	/^  TComMv m_acMvCand[ AMVP_MAX_NUM_CANDS ];  \/\/\/< array of motion vector predictor candidates$/;"	m	struct:_AMVPInfo
m_acMvPredictors	TLibEncoder/TEncSearch.h	/^  TComMv          m_acMvPredictors[NUM_MV_PREDICTORS]; \/\/ Left, Above, AboveRight. enum MVP_DIR first NUM_MV_PREDICTORS entries are suitable for accessing.$/;"	m	class:TEncSearch
m_acTEncAQU	TLibEncoder/TEncPic.h	/^  TEncQPAdaptationUnit* m_acTEncAQU;$/;"	m	class:TEncPicQPAdaptationLayer
m_acYuvPred	TLibCommon/TComPrediction.h	/^  TComYuv   m_acYuvPred[NUM_REF_PIC_LIST_01];$/;"	m	class:TComPrediction
m_activatedFeatures	TLibDecoder/TDecConformance.h	/^  ProfileLevelTierFeatures m_activatedFeatures;$/;"	m	class:TDecConformanceCheck
m_activeParameterSetsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Int       m_activeParameterSetsSEIEnabled;                  \/\/\/< enable active parameter set SEI message$/;"	m	class:TEncCfg
m_activeSPSId	TLibCommon/TComSlice.h	/^  Int m_activeSPSId; \/\/ -1 for nothing active$/;"	m	class:ParameterSetManager
m_activeVPSId	TLibCommon/TComSlice.h	/^  Int m_activeVPSId; \/\/ -1 for nothing active$/;"	m	class:ParameterSetManager
m_actualBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_actualBits;$/;"	m	struct:TRCLCU
m_actualMSE	TLibEncoder/TEncRateCtrl.h	/^  Double m_actualMSE;$/;"	m	struct:TRCLCU
m_actualSSE	TLibEncoder/TEncRateCtrl.h	/^  Double m_actualSSE;$/;"	m	struct:TRCLCU
m_adIntraLambdaModifier	TLibEncoder/TEncCfg.h	/^  std::vector<Double> m_adIntraLambdaModifier;$/;"	m	class:TEncCfg
m_adLambdaModifier	TLibEncoder/TEncCfg.h	/^  Double    m_adLambdaModifier[ MAX_TLAYER ];$/;"	m	class:TEncCfg
m_adaptiveBit	TLibEncoder/TEncRateCtrl.h	/^  Int m_adaptiveBit;$/;"	m	class:TEncRCSeq
m_afpDistortFunc	TLibCommon/TComRdCost.h	/^  FpDistFunc              m_afpDistortFunc[DF_TOTAL_FUNCTIONS]; \/\/ [eDFunc]$/;"	m	class:TComRdCost
m_aiNumRefIdx	TLibCommon/TComSlice.h	/^  Int                        m_aiNumRefIdx   [NUM_REF_PIC_LIST_01];    \/\/  for multiple reference of current slice$/;"	m	class:TComSlice
m_aiPad	TLibEncoder/TEncCfg.h	/^  Int       m_aiPad[2];$/;"	m	class:TEncCfg
m_aiPad	TLibEncoder/TEncTemporalFilter.h	/^  Int m_aiPad[2];$/;"	m	class:TEncTemporalFilter
m_aiRefPOCList	TLibCommon/TComSlice.h	/^  Int                        m_aiRefPOCList  [NUM_REF_PIC_LIST_01][MAX_NUM_REF+1];$/;"	m	class:TComSlice
m_aidQP	TLibEncoder/TEncCfg.h	/^  Int*      m_aidQP;$/;"	m	class:TEncCfg
m_allLayersFlag	TLibCommon/SEI.h	/^  Bool  m_allLayersFlag;                             \/\/value valid if m_nestingOpFlag == 0$/;"	m	class:SEIScalableNesting
m_alpha	TLibEncoder/TEncRateCtrl.h	/^  Double m_alpha;$/;"	m	struct:TRCParameter
m_alphaUpdate	TLibEncoder/TEncRateCtrl.h	/^  Double m_alphaUpdate;$/;"	m	class:TEncRCSeq
m_alternativeTransferCharacteristicsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_alternativeTransferCharacteristicsSEIEnabled;$/;"	m	class:TEncCfg
m_ambientIlluminance	TLibCommon/SEI.h	/^  UInt m_ambientIlluminance;$/;"	m	class:SEIAmbientViewingEnvironment
m_ambientLightX	TLibCommon/SEI.h	/^  UShort m_ambientLightX;$/;"	m	class:SEIAmbientViewingEnvironment
m_ambientLightY	TLibCommon/SEI.h	/^  UShort m_ambientLightY;$/;"	m	class:SEIAmbientViewingEnvironment
m_annotatedLabels	TLibCommon/SEI.h	/^  std::vector<std::pair<AnnotatedRegionLabelIndex,  AnnotatedRegionLabel>  > m_annotatedLabels;$/;"	m	class:SEIAnnotatedRegions
m_annotatedRegions	TLibCommon/SEI.h	/^  std::vector<std::pair<AnnotatedRegionObjectIndex, AnnotatedRegionObject> > m_annotatedRegions;$/;"	m	class:SEIAnnotatedRegions
m_annotatedRegionsObjectLabelLang	TLibCommon/SEI.h	/^    std::string m_annotatedRegionsObjectLabelLang;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_apSlices	TLibCommon/TComPicSym.h	/^  std::deque<TComSlice*> m_apSlices;$/;"	m	class:TComPicSym
m_apcPicYuv	TLibCommon/TComPic.h	/^  TComPicYuv*           m_apcPicYuv[NUM_PIC_YUV];$/;"	m	class:TComPic
m_apcRefPicList	TLibCommon/TComSlice.h	/^  TComPic*                   m_apcRefPicList [NUM_REF_PIC_LIST_01][MAX_NUM_REF+1];$/;"	m	class:TComSlice
m_apcSlicePilot	TLibDecoder/TDecTop.h	/^  TComSlice*              m_apcSlicePilot;$/;"	m	class:TDecTop
m_apiBuf	TLibCommon/TComYuv.h	/^  Pel*    m_apiBuf[MAX_NUM_COMPONENT];$/;"	m	class:TComYuv
m_apiMVPIdx	TLibCommon/TComDataCU.h	/^  SChar*        m_apiMVPIdx[NUM_REF_PIC_LIST_01];       \/\/\/< array of motion vector predictor candidates$/;"	m	class:TComDataCU
m_apiMVPNum	TLibCommon/TComDataCU.h	/^  SChar*        m_apiMVPNum[NUM_REF_PIC_LIST_01];       \/\/\/< array of number of possible motion vectors predictors$/;"	m	class:TComDataCU
m_apiPicBuf	TLibCommon/TComPicYuv.h	/^  Pel*  m_apiPicBuf[MAX_NUM_COMPONENT];             \/\/\/< Buffer (including margin)$/;"	m	class:TComPicYuv
m_arSEIFileRoot	TLibEncoder/TEncCfg.h	/^  std::string           m_arSEIFileRoot;  \/\/ Annotated region SEI - initialized from external file$/;"	m	class:TEncCfg
m_arrangementCancelFlag	TLibCommon/SEI.h	/^  Bool m_arrangementCancelFlag;$/;"	m	class:SEIFramePacking
m_arrangementCancelFlag	TLibCommon/SEI.h	/^  Bool m_arrangementCancelFlag;$/;"	m	class:SEISegmentedRectFramePacking
m_arrangementId	TLibCommon/SEI.h	/^  Int  m_arrangementId;$/;"	m	class:SEIFramePacking
m_arrangementPersistenceFlag	TLibCommon/SEI.h	/^  Bool m_arrangementPersistenceFlag;$/;"	m	class:SEIFramePacking
m_arrangementPersistenceFlag	TLibCommon/SEI.h	/^  Bool m_arrangementPersistenceFlag;$/;"	m	class:SEISegmentedRectFramePacking
m_arrangementReservedByte	TLibCommon/SEI.h	/^  Int  m_arrangementReservedByte;$/;"	m	class:SEIFramePacking
m_arrangementType	TLibCommon/SEI.h	/^  Int  m_arrangementType;$/;"	m	class:SEIFramePacking
m_aspectRatioIdc	TLibCommon/TComSlice.h	/^  Int        m_aspectRatioIdc;$/;"	m	class:TComVUI
m_aspectRatioIdc	TLibEncoder/TEncCfg.h	/^  Int       m_aspectRatioIdc;                                 \/\/\/< aspect_ratio_idc$/;"	m	class:TEncCfg
m_aspectRatioInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_aspectRatioInfoPresentFlag;$/;"	m	class:TComVUI
m_aspectRatioInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_aspectRatioInfoPresentFlag;                     \/\/\/< Signals whether aspect_ratio_idc is present$/;"	m	class:TEncCfg
m_associatedIRAPPOC	TLibEncoder/TEncGOP.h	/^  Int                     m_associatedIRAPPOC;$/;"	m	class:TEncGOP
m_associatedIRAPType	TLibDecoder/TDecTop.h	/^  NalUnitType             m_associatedIRAPType; \/\/\/< NAL unit type of the associated IRAP picture$/;"	m	class:TDecTop
m_associatedIRAPType	TLibEncoder/TEncGOP.h	/^  NalUnitType             m_associatedIRAPType;$/;"	m	class:TEncGOP
m_auCpbRemovalDelay	TLibCommon/SEI.h	/^  UInt  m_auCpbRemovalDelay;$/;"	m	class:SEIPictureTiming
m_auCpbRemovalDelayDelta	TLibCommon/SEI.h	/^  UInt m_auCpbRemovalDelayDelta;$/;"	m	class:SEIBufferingPeriod
m_aucIntraFilter	TLibCommon/TComPrediction.cpp	/^const UChar TComPrediction::m_aucIntraFilter[MAX_NUM_CHANNEL_TYPE][MAX_INTRA_FILTER_DEPTHS] =$/;"	m	class:TComPrediction	file:
m_aucIntraFilter	TLibCommon/TComPrediction.h	/^  static const UChar m_aucIntraFilter[MAX_NUM_CHANNEL_TYPE][MAX_INTRA_FILTER_DEPTHS];$/;"	m	class:TComPrediction
m_aucNextStateLPS	TLibCommon/ContextModel.cpp	/^const UChar ContextModel::m_aucNextStateLPS[ ContextModel::m_totalStates ] =$/;"	m	class:ContextModel	file:
m_aucNextStateLPS	TLibCommon/ContextModel.h	/^  static const  UChar m_aucNextStateLPS[m_totalStates];$/;"	m	class:ContextModel
m_aucNextStateMPS	TLibCommon/ContextModel.cpp	/^const UChar ContextModel::m_aucNextStateMPS[ ContextModel::m_totalStates ] =$/;"	m	class:ContextModel	file:
m_aucNextStateMPS	TLibCommon/ContextModel.h	/^  static const  UChar m_aucNextStateMPS[m_totalStates];$/;"	m	class:ContextModel
m_auiMVPIdxCost	TLibEncoder/TEncSearch.h	/^  UInt            m_auiMVPIdxCost[AMVP_MAX_NUM_CANDS+1][AMVP_MAX_NUM_CANDS+1]; \/\/th array bounds$/;"	m	class:TEncSearch
m_aveSEIAmbientIlluminance	TLibEncoder/TEncCfg.h	/^  UInt      m_aveSEIAmbientIlluminance;$/;"	m	class:TEncCfg
m_aveSEIAmbientLightX	TLibEncoder/TEncCfg.h	/^  UShort    m_aveSEIAmbientLightX;$/;"	m	class:TEncCfg
m_aveSEIAmbientLightY	TLibEncoder/TEncCfg.h	/^  UShort    m_aveSEIAmbientLightY;$/;"	m	class:TEncCfg
m_aveSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_aveSEIEnabled;$/;"	m	class:TEncCfg
m_averageBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_averageBits;$/;"	m	class:TEncRCSeq
m_bCheckLDC	TLibCommon/TComSlice.h	/^  Bool                       m_bCheckLDC;$/;"	m	class:TComSlice
m_bCheckLTMSB	TLibCommon/TComPic.h	/^  Bool                  m_bCheckLTMSB;$/;"	m	class:TComPic
m_bCheckLTMSB	TLibCommon/TComSlice.h	/^  Bool m_bCheckLTMSB[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_bClipForBiPredMeEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bClipForBiPredMeEnabled;$/;"	m	class:TEncCfg
m_bClipInputVideoToRec709Range	TLibEncoder/TEncTemporalFilter.h	/^  Bool m_bClipInputVideoToRec709Range;$/;"	m	class:TEncTemporalFilter
m_bConstrainedIntraPred	TLibCommon/TComSlice.h	/^  Bool             m_bConstrainedIntraPred;    \/\/ constrained_intra_pred_flag$/;"	m	class:TComPPS
m_bDecSubCu	TLibCommon/TComDataCU.h	/^  Bool          m_bDecSubCu;                            \/\/\/< indicates decoder-mode$/;"	m	class:TComDataCU
m_bDecodeDQP	TLibDecoder/TDecCu.h	/^  Bool                m_bDecodeDQP;$/;"	m	class:TDecCu
m_bDisableIntraPUsInInterSlices	TLibEncoder/TEncCfg.h	/^  Bool      m_bDisableIntraPUsInInterSlices;$/;"	m	class:TEncCfg
m_bEfficientFieldIRAPEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bEfficientFieldIRAPEnabled;                     \/\/\/< enable to code fields in a specific, potentially more efficient, order.$/;"	m	class:TEncCfg
m_bEnc	TLibCommon/TComTrQuant.h	/^  Bool     m_bEnc;$/;"	m	class:TComTrQuant
m_bEncodeDQP	TLibEncoder/TEncCu.h	/^  Bool                    m_bEncodeDQP;$/;"	m	class:TEncCu
m_bFastDeltaQP	TLibEncoder/TEncCfg.h	/^  Bool      m_bFastDeltaQP;$/;"	m	class:TEncCfg
m_bFastDeltaQP	TLibEncoder/TEncCu.h	/^  Bool                    m_bFastDeltaQP;$/;"	m	class:TEncCu
m_bFastMEAssumingSmootherMVEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bFastMEAssumingSmootherMVEnabled;$/;"	m	class:TEncCfg
m_bFastMEForGenBLowDelayEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bFastMEForGenBLowDelayEnabled;$/;"	m	class:TEncCfg
m_bFastUDIUseMPMEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bFastUDIUseMPMEnabled;$/;"	m	class:TEncCfg
m_bFinalized	TLibCommon/TComSlice.h	/^  Bool                       m_bFinalized;$/;"	m	class:TComSlice
m_bFirst	TLibEncoder/TEncGOP.h	/^  Bool                    m_bFirst;$/;"	m	class:TEncGOP
m_bFirstPictureInSequence	TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstPictureInSequence;$/;"	m	class:TDecTop
m_bFirstSliceInBitstream	TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstSliceInBitstream;$/;"	m	class:TDecTop
m_bFirstSliceInPicture	TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstSliceInPicture;$/;"	m	class:TDecTop
m_bFirstSliceInSequence	TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstSliceInSequence;$/;"	m	class:TDecTop
m_bHarmonizeGopFirstFieldCoupleEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bHarmonizeGopFirstFieldCoupleEnabled;$/;"	m	class:TEncCfg
m_bIsBorderExtended	TLibCommon/TComPicYuv.h	/^  Bool  m_bIsBorderExtended;$/;"	m	class:TComPicYuv
m_bIsLongTerm	TLibCommon/TComPic.h	/^  Bool                  m_bIsLongTerm;            \/\/  IS long term picture$/;"	m	class:TComPic
m_bIsMergeAMP	TLibCommon/TComDataCU.h	/^  Bool          m_bIsMergeAMP;$/;"	m	class:TComDataCU
m_bIsMonochrome	TLibCommon/SEI.h	/^  Bool             m_bIsMonochrome;$/;"	m	class:SEIPostFilterHint
m_bIsUsedAsLongTerm	TLibCommon/TComSlice.h	/^  Bool                       m_bIsUsedAsLongTerm[NUM_REF_PIC_LIST_01][MAX_NUM_REF+1];$/;"	m	class:TComSlice
m_bLFCrossSliceBoundaryFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_bLFCrossSliceBoundaryFlag;$/;"	m	class:TEncCfg
m_bLFCrossTileBoundary	TLibCommon/TComLoopFilter.h	/^  Bool      m_bLFCrossTileBoundary;$/;"	m	class:TComLoopFilter
m_bLMvdL1Zero	TLibCommon/TComSlice.h	/^  Bool                       m_bLMvdL1Zero;$/;"	m	class:TComSlice
m_bLongTermRefsPresent	TLibCommon/TComSlice.h	/^  Bool             m_bLongTermRefsPresent;$/;"	m	class:TComSPS
m_bLongtermTestPictureHasBeenCoded	TLibEncoder/TEncGOP.h	/^  Bool                    m_bLongtermTestPictureHasBeenCoded;$/;"	m	class:TEncGOP
m_bLongtermTestPictureHasBeenCoded2	TLibEncoder/TEncGOP.h	/^  Bool                    m_bLongtermTestPictureHasBeenCoded2;$/;"	m	class:TEncGOP
m_bLoopFilterDisable	TLibEncoder/TEncCfg.h	/^  Bool      m_bLoopFilterDisable;$/;"	m	class:TEncCfg
m_bNeededForOutput	TLibCommon/TComPic.h	/^  Bool                  m_bNeededForOutput;$/;"	m	class:TComPic
m_bPCMFilterDisableFlag	TLibCommon/TComSlice.h	/^  Bool             m_bPCMFilterDisableFlag;$/;"	m	class:TComSPS
m_bPCMFilterDisableFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_bPCMFilterDisableFlag;$/;"	m	class:TEncCfg
m_bPCMInputBitDepthFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_bPCMInputBitDepthFlag;$/;"	m	class:TEncCfg
m_bPrevSceneIdValidFlag	TLibCommon/SEI.h	/^  Bool m_bPrevSceneIdValidFlag;$/;"	m	class:SEISceneInfo
m_bReWriteParamSetsFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_bReWriteParamSetsFlag;$/;"	m	class:TEncCfg
m_bReconstructed	TLibCommon/TComPic.h	/^  Bool                  m_bReconstructed;$/;"	m	class:TComPic
m_bRefenced	TLibCommon/TComSlice.h	/^  Bool                       m_bRefenced;$/;"	m	class:TComSlice
m_bRefreshPending	TLibEncoder/TEncGOP.h	/^  Bool                    m_bRefreshPending;$/;"	m	class:TEncGOP
m_bRestrictMESampling	TLibEncoder/TEncCfg.h	/^  Bool      m_bRestrictMESampling;$/;"	m	class:TEncCfg
m_bSceneInfoPresentFlag	TLibCommon/SEI.h	/^  Bool m_bSceneInfoPresentFlag;$/;"	m	class:SEISceneInfo
m_bSeqFirst	TLibEncoder/TEncGOP.h	/^  Bool                    m_bSeqFirst;$/;"	m	class:TEncGOP
m_bSet	TLibCommon/Debug.h	/^  Bool        m_bSet;$/;"	m	class:EnvVar
m_bSliceChromaQpFlag	TLibCommon/TComSlice.h	/^  Bool             m_bSliceChromaQpFlag;       \/\/ slicelevel_chroma_qp_flag$/;"	m	class:TComPPS
m_bTLayerSwitchingFlag	TLibCommon/TComSlice.h	/^  Bool                       m_bTLayerSwitchingFlag;$/;"	m	class:TComSlice
m_bTemporalIdNestingFlag	TLibCommon/TComSlice.h	/^  Bool                  m_bTemporalIdNestingFlag;$/;"	m	class:TComVPS
m_bTemporalIdNestingFlag	TLibCommon/TComSlice.h	/^  Bool             m_bTemporalIdNestingFlag; \/\/ temporal_id_nesting_flag$/;"	m	class:TComSPS
m_bTestSAODisableAtPictureLevel	TLibEncoder/TEncCfg.h	/^  Bool      m_bTestSAODisableAtPictureLevel;$/;"	m	class:TEncCfg
m_bTestWeightBiPred	TLibCommon/TComSlice.h	/^  Bool                       m_bTestWeightBiPred;$/;"	m	class:TComSlice
m_bTestWeightPred	TLibCommon/TComSlice.h	/^  Bool                       m_bTestWeightPred;$/;"	m	class:TComSlice
m_bUseASR	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseASR;$/;"	m	class:TEncCfg
m_bUseAdaptQpSelect	TLibCommon/TComTrQuant.h	/^  Bool     m_bUseAdaptQpSelect;$/;"	m	class:TComTrQuant
m_bUseAdaptQpSelect	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseAdaptQpSelect;$/;"	m	class:TEncCfg
m_bUseAdaptiveQP	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseAdaptiveQP;$/;"	m	class:TEncCfg
m_bUseBLambdaForNonKeyLowDelayPictures	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseBLambdaForNonKeyLowDelayPictures;$/;"	m	class:TEncCfg
m_bUseCbfFastMode	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseCbfFastMode;$/;"	m	class:TEncCfg
m_bUseConstrainedIntraPred	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseConstrainedIntraPred;$/;"	m	class:TEncCfg
m_bUseEarlyCU	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseEarlyCU;$/;"	m	class:TEncCfg
m_bUseHADME	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseHADME;$/;"	m	class:TEncCfg
m_bUseSAO	TLibCommon/TComSlice.h	/^  Bool             m_bUseSAO;$/;"	m	class:TComSPS
m_bUseSAO	TLibEncoder/TEncCfg.h	/^  Bool      m_bUseSAO;$/;"	m	class:TEncCfg
m_bUseWeightPred	TLibCommon/TComSlice.h	/^  Bool             m_bUseWeightPred;                    \/\/!< Use of Weighting Prediction (P_SLICE)$/;"	m	class:TComPPS
m_bUsedByCurr	TLibCommon/TComPic.h	/^  Bool                  m_bUsedByCurr;            \/\/  Used by current picture$/;"	m	class:TComPic
m_bXPSNREnableFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_bXPSNREnableFlag;$/;"	m	class:TEncCfg
m_beta	TLibEncoder/TEncRateCtrl.h	/^  Double m_beta;$/;"	m	struct:TRCParameter
m_betaOffsetDiv2	TLibEncoder/TEncCfg.h	/^  Int m_betaOffsetDiv2;$/;"	m	struct:GOPEntry
m_betaUpdate	TLibEncoder/TEncRateCtrl.h	/^  Double m_betaUpdate;$/;"	m	class:TEncRCSeq
m_binCountIncrement	TLibEncoder/TEncBinCoderCABAC.h	/^  Int                 m_binCountIncrement;$/;"	m	class:TEncBinCABAC
m_binsCoded	TLibCommon/ContextModel.h	/^  UInt          m_binsCoded;$/;"	m	class:ContextModel
m_bipredSearchRange	TLibEncoder/TEncCfg.h	/^  Int       m_bipredSearchRange;$/;"	m	class:TEncCfg
m_bipredSearchRange	TLibEncoder/TEncSearch.h	/^  Int             m_bipredSearchRange; \/\/ Search range for bi-prediction$/;"	m	class:TEncSearch
m_bitDepth	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint8_t                      m_bitDepth;$/;"	m	class:SEIFilmGrainSynthesizer
m_bitDepth	TLibCommon/TComPattern.h	/^  Int   m_bitDepth;$/;"	m	class:TComPattern
m_bitDepth	TLibEncoder/TEncCfg.h	/^  Int       m_bitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncCfg
m_bitDepthConstraintValue	TLibCommon/TComSlice.h	/^  UInt              m_bitDepthConstraintValue;$/;"	m	class:ProfileTierLevel
m_bitDepthConstraintValue	TLibEncoder/TEncCfg.h	/^  UInt              m_bitDepthConstraintValue;$/;"	m	class:TEncCfg
m_bitDepths	TLibCommon/TComSlice.h	/^  BitDepths        m_bitDepths;$/;"	m	class:TComSPS
m_bitRateScale	TLibCommon/TComSlice.h	/^  UInt m_bitRateScale;$/;"	m	class:TComHRD
m_bitStreamSubsetFlag	TLibCommon/SEI.h	/^  Bool  m_bitStreamSubsetFlag;$/;"	m	class:SEIScalableNesting
m_bitWeight	TLibEncoder/TEncRateCtrl.h	/^  Double m_bitWeight;$/;"	m	struct:TRCLCU
m_bitdepthShift	Utilities/TVideoIOYuv.h	/^  Int       m_bitdepthShift[MAX_NUM_CHANNEL_TYPE];  \/\/\/< number of bits to increase or decrease image by before\/after write\/read$/;"	m	class:TVideoIOYuv
m_bitsLeft	TLibEncoder/TEncBinCoderCABAC.h	/^  Int                 m_bitsLeft;$/;"	m	class:TEncBinCABAC
m_bitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_bitsLeft;$/;"	m	class:TEncRCGOP
m_bitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_bitsLeft;$/;"	m	class:TEncRCPic
m_bitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int64 m_bitsLeft;$/;"	m	class:TEncRCSeq
m_bitsNeeded	TLibDecoder/TDecBinCoderCABAC.h	/^  Int                 m_bitsNeeded;$/;"	m	class:TDecBinCABAC
m_bitsRatio	TLibEncoder/TEncRateCtrl.h	/^  Int* m_bitsRatio;$/;"	m	class:TEncRCSeq
m_bitstreamRestrictionFlag	TLibCommon/TComSlice.h	/^  Bool       m_bitstreamRestrictionFlag;$/;"	m	class:TComVUI
m_bitstreamRestrictionFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_bitstreamRestrictionFlag;                       \/\/\/< Signals whether bitstream restriction parameters are present$/;"	m	class:TEncCfg
m_blendingModeId	TLibCommon/SEI.h	/^  UChar     m_blendingModeId;$/;"	m	class:SEIFilmGrainCharacteristics
m_blockHeight	TLibCommon/TComRom.cpp	/^  const UInt m_blockWidth, m_blockHeight;$/;"	m	class:ScanGenerator	file:
m_blockWidth	TLibCommon/TComRom.cpp	/^  const UInt m_blockWidth, m_blockHeight;$/;"	m	class:ScanGenerator	file:
m_bottomEdgePosInCtus	TLibCommon/TComPicSym.h	/^  UInt      m_bottomEdgePosInCtus;$/;"	m	class:TComTile
m_bottom_right_tile_index	TLibCommon/SEI.h	/^      std::vector<Int> m_bottom_right_tile_index;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_bpSeqParameterSetId	TLibCommon/SEI.h	/^  UInt m_bpSeqParameterSetId;$/;"	m	class:SEIBufferingPeriod
m_brokenLinkFlag	TLibCommon/SEI.h	/^  Bool m_brokenLinkFlag;$/;"	m	class:SEIRecoveryPoint
m_bufferedByte	TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_bufferedByte;$/;"	m	class:TEncBinCABAC
m_bufferingPeriodSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_bufferingPeriodSEIEnabled;$/;"	m	class:TEncCfg
m_bufferingPeriodSEIPresentInAU	TLibEncoder/TEncGOP.h	/^  Bool                    m_bufferingPeriodSEIPresentInAU;$/;"	m	class:TEncGOP
m_bufferingRate	TLibEncoder/TEncRateCtrl.h	/^  UInt       m_bufferingRate;           \/\/ Buffering rate$/;"	m	class:TEncRateCtrl
m_bytesInPicture	TLibDecoder/TDecConformance.h	/^  UInt64 m_bytesInPicture;$/;"	m	class:TDecConformanceCheck
m_cAMVPInfo	TLibCommon/TComMotionInfo.h	/^  AMVPInfo  m_cAMVPInfo;$/;"	m	class:TComCUMvField
m_cBinCABAC	TLibDecoder/TDecTop.h	/^  TDecBinCABAC            m_cBinCABAC;$/;"	m	class:TDecTop
m_cBinCoderCABAC	TLibEncoder/TEncTop.h	/^  TEncBinCABAC            m_cBinCoderCABAC;               \/\/\/< bin coder CABAC$/;"	m	class:TEncTop
m_cCUAbsSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUAbsSCModel;$/;"	m	class:TDecSbac
m_cCUAbsSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUAbsSCModel;$/;"	m	class:TEncSbac
m_cCUChromaPredSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUChromaPredSCModel;$/;"	m	class:TDecSbac
m_cCUChromaPredSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUChromaPredSCModel;$/;"	m	class:TEncSbac
m_cCUDeltaQpSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUDeltaQpSCModel;$/;"	m	class:TDecSbac
m_cCUDeltaQpSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUDeltaQpSCModel;$/;"	m	class:TEncSbac
m_cCUInterDirSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUInterDirSCModel;$/;"	m	class:TDecSbac
m_cCUInterDirSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUInterDirSCModel;$/;"	m	class:TEncSbac
m_cCUIntraPredSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUIntraPredSCModel;$/;"	m	class:TDecSbac
m_cCUIntraPredSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUIntraPredSCModel;$/;"	m	class:TEncSbac
m_cCUMergeFlagExtSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUMergeFlagExtSCModel;$/;"	m	class:TDecSbac
m_cCUMergeFlagExtSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUMergeFlagExtSCModel;$/;"	m	class:TEncSbac
m_cCUMergeIdxExtSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUMergeIdxExtSCModel;$/;"	m	class:TDecSbac
m_cCUMergeIdxExtSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUMergeIdxExtSCModel;$/;"	m	class:TEncSbac
m_cCUMvdSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUMvdSCModel;$/;"	m	class:TDecSbac
m_cCUMvdSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUMvdSCModel;$/;"	m	class:TEncSbac
m_cCUOneSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUOneSCModel;$/;"	m	class:TDecSbac
m_cCUOneSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUOneSCModel;$/;"	m	class:TEncSbac
m_cCUPartSizeSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUPartSizeSCModel;$/;"	m	class:TDecSbac
m_cCUPartSizeSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUPartSizeSCModel;$/;"	m	class:TEncSbac
m_cCUPredModeSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUPredModeSCModel;$/;"	m	class:TDecSbac
m_cCUPredModeSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUPredModeSCModel;$/;"	m	class:TEncSbac
m_cCUQtCbfSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUQtCbfSCModel;$/;"	m	class:TDecSbac
m_cCUQtCbfSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUQtCbfSCModel;$/;"	m	class:TEncSbac
m_cCUQtRootCbfSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUQtRootCbfSCModel;$/;"	m	class:TDecSbac
m_cCUQtRootCbfSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUQtRootCbfSCModel;$/;"	m	class:TEncSbac
m_cCURefPicSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCURefPicSCModel;$/;"	m	class:TDecSbac
m_cCURefPicSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCURefPicSCModel;$/;"	m	class:TEncSbac
m_cCUSigCoeffGroupSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSigCoeffGroupSCModel;$/;"	m	class:TDecSbac
m_cCUSigCoeffGroupSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSigCoeffGroupSCModel;$/;"	m	class:TEncSbac
m_cCUSigSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSigSCModel;$/;"	m	class:TDecSbac
m_cCUSigSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSigSCModel;$/;"	m	class:TEncSbac
m_cCUSkipFlagSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSkipFlagSCModel;$/;"	m	class:TDecSbac
m_cCUSkipFlagSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSkipFlagSCModel;$/;"	m	class:TEncSbac
m_cCUSplitFlagSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSplitFlagSCModel;$/;"	m	class:TDecSbac
m_cCUSplitFlagSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSplitFlagSCModel;$/;"	m	class:TEncSbac
m_cCUTransSubdivFlagSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUTransSubdivFlagSCModel;$/;"	m	class:TDecSbac
m_cCUTransSubdivFlagSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUTransSubdivFlagSCModel;$/;"	m	class:TEncSbac
m_cCavlcCoder	TLibEncoder/TEncTop.h	/^  TEncCavlc               m_cCavlcCoder;                  \/\/\/< CAVLC encoder$/;"	m	class:TEncTop
m_cCavlcDecoder	TLibDecoder/TDecTop.h	/^  TDecCavlc               m_cCavlcDecoder;$/;"	m	class:TDecTop
m_cCrossComponentPredictionSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCrossComponentPredictionSCModel;$/;"	m	class:TDecSbac
m_cCrossComponentPredictionSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCrossComponentPredictionSCModel;$/;"	m	class:TEncSbac
m_cCuCtxLastX	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastX;$/;"	m	class:TDecSbac
m_cCuCtxLastX	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastX;$/;"	m	class:TEncSbac
m_cCuCtxLastY	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastY;$/;"	m	class:TDecSbac
m_cCuCtxLastY	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastY;$/;"	m	class:TEncSbac
m_cCuDecoder	TLibDecoder/TDecTop.h	/^  TDecCu                  m_cCuDecoder;$/;"	m	class:TDecTop
m_cCuEncoder	TLibEncoder/TEncTop.h	/^  TEncCu                  m_cCuEncoder;                   \/\/\/< CU encoder$/;"	m	class:TEncTop
m_cDistParam	TLibEncoder/TEncSearch.h	/^  DistParam       m_cDistParam;$/;"	m	class:TEncSearch
m_cEncSAO	TLibEncoder/TEncTop.h	/^  TEncSampleAdaptiveOffset m_cEncSAO;                     \/\/\/< sample adaptive offset class$/;"	m	class:TEncTop
m_cEntropyCoder	TLibEncoder/TEncTop.h	/^  TEncEntropy             m_cEntropyCoder;                \/\/\/< entropy encoder$/;"	m	class:TEncTop
m_cEntropyDecoder	TLibDecoder/TDecTop.h	/^  TDecEntropy             m_cEntropyDecoder;$/;"	m	class:TDecTop
m_cGOPEncoder	TLibEncoder/TEncTop.h	/^  TEncGOP                 m_cGOPEncoder;                  \/\/\/< GOP encoder$/;"	m	class:TEncTop
m_cGopDecoder	TLibDecoder/TDecTop.h	/^  TDecGop                 m_cGopDecoder;$/;"	m	class:TDecTop
m_cHandle	Utilities/TVideoIOYuv.h	/^  fstream   m_cHandle;                                      \/\/\/< file handle$/;"	m	class:TVideoIOYuv
m_cListPic	TLibDecoder/TDecGop.h	/^  TComList<TComPic*>    m_cListPic;         \/\/  Dynamic buffer$/;"	m	class:TDecGop
m_cListPic	TLibDecoder/TDecTop.h	/^  TComList<TComPic*>      m_cListPic;         \/\/  Dynamic buffer$/;"	m	class:TDecTop
m_cListPic	TLibEncoder/TEncTop.h	/^  TComList<TComPic*>      m_cListPic;                     \/\/\/< dynamic list of pictures$/;"	m	class:TEncTop
m_cLoopFilter	TLibDecoder/TDecTop.h	/^  TComLoopFilter          m_cLoopFilter;$/;"	m	class:TDecTop
m_cLoopFilter	TLibEncoder/TEncTop.h	/^  TComLoopFilter          m_cLoopFilter;                  \/\/\/< deblocking filter class$/;"	m	class:TEncTop
m_cMVPIdxSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cMVPIdxSCModel;$/;"	m	class:TDecSbac
m_cMVPIdxSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cMVPIdxSCModel;$/;"	m	class:TEncSbac
m_cMvFieldA	TLibCommon/TComDataCU.h	/^  TComMvField   m_cMvFieldA;                            \/\/\/< motion vector of position A$/;"	m	class:TComDataCU
m_cMvFieldB	TLibCommon/TComDataCU.h	/^  TComMvField   m_cMvFieldB;                            \/\/\/< motion vector of position B$/;"	m	class:TComDataCU
m_cMvFieldC	TLibCommon/TComDataCU.h	/^  TComMvField   m_cMvFieldC;                            \/\/\/< motion vector of position C$/;"	m	class:TComDataCU
m_cMvPred	TLibCommon/TComDataCU.h	/^  TComMv        m_cMvPred;                              \/\/\/< motion vector predictor$/;"	m	class:TComDataCU
m_cPreanalyzer	TLibEncoder/TEncTop.h	/^  TEncPreanalyzer         m_cPreanalyzer;                 \/\/\/< image characteristics analyzer for TM5-step3-like adaptive QP$/;"	m	class:TEncTop
m_cPrediction	TLibDecoder/TDecTop.h	/^  TComPrediction          m_cPrediction;$/;"	m	class:TDecTop
m_cRDGoOnBinCoderCABAC	TLibEncoder/TEncTop.h	/^  TEncBinCABAC            m_cRDGoOnBinCoderCABAC;         \/\/\/< going on bin coder CABAC for RD stage$/;"	m	class:TEncTop
m_cRDGoOnBinCoderCABAC	TLibEncoder/TEncTop.h	/^  TEncBinCABACCounter     m_cRDGoOnBinCoderCABAC;         \/\/\/< going on bin coder CABAC for RD stage$/;"	m	class:TEncTop
m_cRDGoOnSbacCoder	TLibEncoder/TEncTop.h	/^  TEncSbac                m_cRDGoOnSbacCoder;             \/\/\/< going on SBAC model for RD stage$/;"	m	class:TEncTop
m_cRateCtrl	TLibEncoder/TEncTop.h	/^  TEncRateCtrl            m_cRateCtrl;                    \/\/\/< Rate control class$/;"	m	class:TEncTop
m_cRdCost	TLibEncoder/TEncTop.h	/^  TComRdCost              m_cRdCost;                      \/\/\/< RD cost computation class$/;"	m	class:TEncTop
m_cSAO	TLibDecoder/TDecTop.h	/^  TComSampleAdaptiveOffset m_cSAO;$/;"	m	class:TDecTop
m_cSaoMergeSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cSaoMergeSCModel;$/;"	m	class:TDecSbac
m_cSaoMergeSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cSaoMergeSCModel;$/;"	m	class:TEncSbac
m_cSaoTypeIdxSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cSaoTypeIdxSCModel;$/;"	m	class:TDecSbac
m_cSaoTypeIdxSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cSaoTypeIdxSCModel;$/;"	m	class:TEncSbac
m_cSbacCoder	TLibEncoder/TEncTop.h	/^  TEncSbac                m_cSbacCoder;                   \/\/\/< SBAC encoder$/;"	m	class:TEncTop
m_cSbacDecoder	TLibDecoder/TDecTop.h	/^  TDecSbac                m_cSbacDecoder;$/;"	m	class:TDecTop
m_cSearch	TLibEncoder/TEncTop.h	/^  TEncSearch              m_cSearch;                      \/\/\/< encoder search class$/;"	m	class:TEncTop
m_cSliceDecoder	TLibDecoder/TDecTop.h	/^  TDecSlice               m_cSliceDecoder;$/;"	m	class:TDecTop
m_cSliceEncoder	TLibEncoder/TEncTop.h	/^  TEncSlice               m_cSliceEncoder;                \/\/\/< slice encoder$/;"	m	class:TEncTop
m_cTrQuant	TLibDecoder/TDecTop.h	/^  TComTrQuant             m_cTrQuant;$/;"	m	class:TDecTop
m_cTrQuant	TLibEncoder/TEncTop.h	/^  TComTrQuant             m_cTrQuant;                     \/\/\/< transform & quantization class$/;"	m	class:TEncTop
m_cTransformSkipSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cTransformSkipSCModel;$/;"	m	class:TDecSbac
m_cTransformSkipSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cTransformSkipSCModel;$/;"	m	class:TEncSbac
m_cVPS	TLibEncoder/TEncCfg.h	/^  TComVPS   m_cVPS;$/;"	m	class:TEncCfg
m_cYuvPredTemp	TLibCommon/TComPrediction.h	/^  TComYuv   m_cYuvPredTemp;$/;"	m	class:TComPrediction
m_cabacBypassAlignmentEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_cabacBypassAlignmentEnabledFlag;$/;"	m	class:TComSPSRExt
m_cabacBypassAlignmentEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_cabacBypassAlignmentEnabledFlag;$/;"	m	class:TEncCfg
m_cabacInitFlag	TLibCommon/TComSlice.h	/^  Bool                       m_cabacInitFlag;$/;"	m	class:TComSlice
m_cabacInitPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_cabacInitPresentFlag;$/;"	m	class:TComPPS
m_cabacZeroWordPaddingEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_cabacZeroWordPaddingEnabled;$/;"	m	class:TEncCfg
m_cameraIsoSpeedIdc	TLibCommon/SEI.h	/^  Int    m_cameraIsoSpeedIdc;$/;"	m	class:SEIToneMappingInfo
m_cameraIsoSpeedIdc	TLibEncoder/TEncCfg.h	/^  Int       m_cameraIsoSpeedIdc;$/;"	m	class:TEncCfg
m_cameraIsoSpeedValue	TLibCommon/SEI.h	/^  Int    m_cameraIsoSpeedValue;$/;"	m	class:SEIToneMappingInfo
m_cameraIsoSpeedValue	TLibEncoder/TEncCfg.h	/^  Int       m_cameraIsoSpeedValue;$/;"	m	class:TEncCfg
m_cancelFlag	TLibCommon/SEI.h	/^    Bool      m_cancelFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_ccvAvgLuminanceValue	TLibCommon/SEI.h	/^  UInt    m_ccvAvgLuminanceValue;$/;"	m	class:SEIContentColourVolume
m_ccvAvgLuminanceValuePresentFlag	TLibCommon/SEI.h	/^  Bool    m_ccvAvgLuminanceValuePresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvCancelFlag	TLibCommon/SEI.h	/^  Bool    m_ccvCancelFlag;$/;"	m	class:SEIContentColourVolume
m_ccvMaxLuminanceValue	TLibCommon/SEI.h	/^  UInt    m_ccvMaxLuminanceValue;$/;"	m	class:SEIContentColourVolume
m_ccvMaxLuminanceValuePresentFlag	TLibCommon/SEI.h	/^  Bool    m_ccvMaxLuminanceValuePresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvMinLuminanceValue	TLibCommon/SEI.h	/^  UInt    m_ccvMinLuminanceValue;$/;"	m	class:SEIContentColourVolume
m_ccvMinLuminanceValuePresentFlag	TLibCommon/SEI.h	/^  Bool    m_ccvMinLuminanceValuePresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvPersistenceFlag	TLibCommon/SEI.h	/^  Bool    m_ccvPersistenceFlag;$/;"	m	class:SEIContentColourVolume
m_ccvPrimariesPresentFlag	TLibCommon/SEI.h	/^  Bool    m_ccvPrimariesPresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvPrimariesX	TLibCommon/SEI.h	/^  Int     m_ccvPrimariesX[MAX_NUM_COMPONENT];$/;"	m	class:SEIContentColourVolume
m_ccvPrimariesY	TLibCommon/SEI.h	/^  Int     m_ccvPrimariesY[MAX_NUM_COMPONENT];$/;"	m	class:SEIContentColourVolume
m_ccvSEIAvgLuminanceValue	TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIAvgLuminanceValue;$/;"	m	class:TEncCfg
m_ccvSEIAvgLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIAvgLuminanceValuePresentFlag;$/;"	m	class:TEncCfg
m_ccvSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEICancelFlag;$/;"	m	class:TEncCfg
m_ccvSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIEnabled;$/;"	m	class:TEncCfg
m_ccvSEIMaxLuminanceValue	TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIMaxLuminanceValue;$/;"	m	class:TEncCfg
m_ccvSEIMaxLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIMaxLuminanceValuePresentFlag;$/;"	m	class:TEncCfg
m_ccvSEIMinLuminanceValue	TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIMinLuminanceValue;$/;"	m	class:TEncCfg
m_ccvSEIMinLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIMinLuminanceValuePresentFlag;$/;"	m	class:TEncCfg
m_ccvSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_ccvSEIPrimariesPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIPrimariesPresentFlag;$/;"	m	class:TEncCfg
m_ccvSEIPrimariesX	TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIPrimariesX[MAX_NUM_COMPONENT]; $/;"	m	class:TEncCfg
m_ccvSEIPrimariesY	TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIPrimariesY[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_chromaCbQpOffset	TLibCommon/TComSlice.h	/^  Int              m_chromaCbQpOffset;$/;"	m	class:TComPPS
m_chromaCbQpOffset	TLibEncoder/TEncCfg.h	/^  Int       m_chromaCbQpOffset;                 \/\/  Chroma Cb QP Offset (0:default)$/;"	m	class:TEncCfg
m_chromaCrQpOffset	TLibCommon/TComSlice.h	/^  Int              m_chromaCrQpOffset;$/;"	m	class:TComPPS
m_chromaCrQpOffset	TLibEncoder/TEncCfg.h	/^  Int       m_chromaCrQpOffset;                 \/\/  Chroma Cr Qp Offset (0:default)$/;"	m	class:TEncCfg
m_chromaFilter	TLibCommon/TComInterpolationFilter.cpp	/^const TFilterCoeff TComInterpolationFilter::m_chromaFilter[CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_CHROMA] =$/;"	m	class:TComInterpolationFilter	file:
m_chromaFilter	TLibCommon/TComInterpolationFilter.h	/^  static const TFilterCoeff m_chromaFilter[CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_CHROMA]; \/\/\/< Chroma filter taps$/;"	m	class:TComInterpolationFilter
m_chromaFormat	TLibCommon/SEIFilmGrainSynthesizer.h	/^  ChromaFormat                 m_chromaFormat;$/;"	m	class:SEIFilmGrainSynthesizer
m_chromaFormatConstraintValue	TLibCommon/TComSlice.h	/^  ChromaFormat      m_chromaFormatConstraintValue;$/;"	m	class:ProfileTierLevel
m_chromaFormatConstraintValue	TLibEncoder/TEncCfg.h	/^  ChromaFormat      m_chromaFormatConstraintValue;$/;"	m	class:TEncCfg
m_chromaFormatIDC	TLibCommon/TComPicYuv.h	/^  ChromaFormat m_chromaFormatIDC;                   \/\/\/< Chroma Format$/;"	m	class:TComPicYuv
m_chromaFormatIDC	TLibCommon/TComSampleAdaptiveOffset.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TComSampleAdaptiveOffset
m_chromaFormatIDC	TLibCommon/TComYuv.h	/^  ChromaFormat m_chromaFormatIDC; \/\/\/\/< Chroma Format$/;"	m	class:TComYuv
m_chromaFormatIDC	TLibEncoder/TEncCfg.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TEncCfg
m_chromaFormatIDC	TLibEncoder/TEncTemporalFilter.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TEncTemporalFilter
m_chromaFormatIdc	TLibCommon/TComSlice.h	/^  ChromaFormat     m_chromaFormatIdc;$/;"	m	class:TComSPS
m_chromaLocInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_chromaLocInfoPresentFlag;$/;"	m	class:TComVUI
m_chromaLocInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_chromaLocInfoPresentFlag;                       \/\/\/< Signals whether chroma_sample_loc_type_top_field and chroma_sample_loc_type_bottom_field are present$/;"	m	class:TEncCfg
m_chromaQpOffsetListLen	TLibCommon/TComSlice.h	/^  Int              m_chromaQpOffsetListLen; \/\/ size (excludes the null entry used in the following array).$/;"	m	class:TComPPSRExt
m_chromaResamplingFilterHintEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_chromaResamplingFilterHintEnabled;              \/\/\/< Signals whether chroma sampling filter hint data is present$/;"	m	class:TEncCfg
m_chromaResamplingHorFilterIdc	TLibEncoder/TEncCfg.h	/^  Int       m_chromaResamplingHorFilterIdc;                   \/\/\/< Specifies the Index of filter to use$/;"	m	class:TEncCfg
m_chromaResamplingVerFilterIdc	TLibEncoder/TEncCfg.h	/^  Int       m_chromaResamplingVerFilterIdc;                   \/\/\/< Specifies the Index of filter to use$/;"	m	class:TEncCfg
m_chromaSampleLocTypeBottomField	TLibCommon/TComSlice.h	/^  Int        m_chromaSampleLocTypeBottomField;$/;"	m	class:TComVUI
m_chromaSampleLocTypeBottomField	TLibEncoder/TEncCfg.h	/^  Int       m_chromaSampleLocTypeBottomField;                 \/\/\/< Specifies the location of chroma samples for bottom field$/;"	m	class:TEncCfg
m_chromaSampleLocTypeTopField	TLibCommon/TComSlice.h	/^  Int        m_chromaSampleLocTypeTopField;$/;"	m	class:TComVUI
m_chromaSampleLocTypeTopField	TLibEncoder/TEncCfg.h	/^  Int       m_chromaSampleLocTypeTopField;                    \/\/\/< Specifies the location of chroma samples for top field$/;"	m	class:TEncCfg
m_cllSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_cllSEIEnabled;$/;"	m	class:TEncCfg
m_cllSEIMaxContentLevel	TLibEncoder/TEncCfg.h	/^  UShort    m_cllSEIMaxContentLevel;$/;"	m	class:TEncCfg
m_cllSEIMaxPicAvgLevel	TLibEncoder/TEncCfg.h	/^  UShort    m_cllSEIMaxPicAvgLevel;$/;"	m	class:TEncCfg
m_cmpCancelFlag	TLibCommon/SEI.h	/^  Bool                  m_cmpCancelFlag;$/;"	m	class:SEICubemapProjection
m_cmpPersistenceFlag	TLibCommon/SEI.h	/^  Bool                  m_cmpPersistenceFlag;$/;"	m	class:SEICubemapProjection
m_cmpSEICmpCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool                  m_cmpSEICmpCancelFlag;$/;"	m	class:TEncCfg
m_cmpSEICmpPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool                  m_cmpSEICmpPersistenceFlag;$/;"	m	class:TEncCfg
m_cmpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool                  m_cmpSEIEnabled;$/;"	m	class:TEncCfg
m_codedChromaQpAdj	TLibCommon/TComDataCU.h	/^  UInt          m_codedChromaQpAdj;$/;"	m	class:TComDataCU
m_codedDataBitDepth	TLibCommon/SEI.h	/^  Int    m_codedDataBitDepth;$/;"	m	class:SEIToneMappingInfo
m_codedDataBitDepth	TLibEncoder/TEncCfg.h	/^  Int       m_codedDataBitDepth;$/;"	m	class:TEncCfg
m_codedPivotValue	TLibCommon/SEI.h	/^  std::vector<Int> m_codedPivotValue;$/;"	m	class:SEIToneMappingInfo
m_codedPivotValue	TLibEncoder/TEncCfg.h	/^  Int*      m_codedPivotValue;$/;"	m	class:TEncCfg
m_codedQP	TLibCommon/TComDataCU.h	/^  SChar         m_codedQP;$/;"	m	class:TComDataCU
m_colFromL0Flag	TLibCommon/TComSlice.h	/^  Bool                       m_colFromL0Flag;  \/\/ collocated picture from List0 flag$/;"	m	class:TComSlice
m_colRefIdx	TLibCommon/TComSlice.h	/^  UInt                       m_colRefIdx;$/;"	m	class:TComSlice
m_colourDescriptionPresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_colourDescriptionPresentFlag;$/;"	m	class:TComVUI
m_colourDescriptionPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_colourDescriptionPresentFlag;                   \/\/\/< Signals whether colour_primaries, transfer_characteristics and matrix_coefficients are present$/;"	m	class:TEncCfg
m_colourPrimaries	TLibCommon/TComSlice.h	/^  Int        m_colourPrimaries;$/;"	m	class:TComVUI
m_colourPrimaries	TLibEncoder/TEncCfg.h	/^  Int       m_colourPrimaries;                                \/\/\/< Indicates chromaticity coordinates of the source primaries$/;"	m	class:TEncCfg
m_colourRemapBitDepth	TLibCommon/SEI.h	/^  Int                 m_colourRemapBitDepth;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapCancelFlag	TLibCommon/SEI.h	/^  Bool                m_colourRemapCancelFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapCoeffs	TLibCommon/SEI.h	/^  Int                 m_colourRemapCoeffs[3][3];$/;"	m	class:SEIColourRemappingInfo
m_colourRemapFullRangeFlag	TLibCommon/SEI.h	/^  Bool                m_colourRemapFullRangeFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapId	TLibCommon/SEI.h	/^  UInt                m_colourRemapId;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapInputBitDepth	TLibCommon/SEI.h	/^  Int                 m_colourRemapInputBitDepth;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapMatrixCoefficients	TLibCommon/SEI.h	/^  Int                 m_colourRemapMatrixCoefficients;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapMatrixPresentFlag	TLibCommon/SEI.h	/^  Bool                m_colourRemapMatrixPresentFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapPersistenceFlag	TLibCommon/SEI.h	/^  Bool                m_colourRemapPersistenceFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapPrimaries	TLibCommon/SEI.h	/^  Int                 m_colourRemapPrimaries;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapSEIFileRoot	TLibEncoder/TEncCfg.h	/^  std::string m_colourRemapSEIFileRoot;          \/\/\/< SEI Colour Remapping File (initialized from external file)$/;"	m	class:TEncCfg
m_colourRemapTransferFunction	TLibCommon/SEI.h	/^  Int                 m_colourRemapTransferFunction;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapVideoSignalInfoPresentFlag	TLibCommon/SEI.h	/^  Bool                m_colourRemapVideoSignalInfoPresentFlag;$/;"	m	class:SEIColourRemappingInfo
m_column	TLibCommon/TComRom.cpp	/^  UInt m_line, m_column;$/;"	m	class:ScanGenerator	file:
m_compModel	TLibCommon/SEI.h	/^  CompModel m_compModel[MAX_NUM_COMPONENT];$/;"	m	class:SEIFilmGrainCharacteristics
m_concatenationFlag	TLibCommon/SEI.h	/^  Bool m_concatenationFlag;$/;"	m	class:SEIBufferingPeriod
m_conformanceCheck	TLibDecoder/TDecTop.h	/^  TDecConformanceCheck    m_conformanceCheck;$/;"	m	class:TDecTop
m_conformanceWindow	TLibCommon/TComSlice.h	/^  Window           m_conformanceWindow;$/;"	m	class:TComSPS
m_conformanceWindow	TLibEncoder/TEncCfg.h	/^  Window    m_conformanceWindow;$/;"	m	class:TEncCfg
m_constituentPictureMatchingFlag	TLibCommon/SEI.h	/^  Bool                  m_constituentPictureMatchingFlag;$/;"	m	class:SEIRegionWisePacking
m_contentInterpretationType	TLibCommon/SEI.h	/^  Int  m_contentInterpretationType;$/;"	m	class:SEIFramePacking
m_contentInterpretationType	TLibCommon/SEI.h	/^  Int  m_contentInterpretationType;$/;"	m	class:SEISegmentedRectFramePacking
m_contextModel	TLibCommon/ContextModel3DBuffer.h	/^  ContextModel* m_contextModel; \/\/\/< array of context models$/;"	m	class:ContextModel3DBuffer
m_contextModels	TLibDecoder/TDecSbac.h	/^  ContextModel         m_contextModels[MAX_NUM_CTX_MOD];$/;"	m	class:TDecSbac
m_contextModels	TLibEncoder/TEncSbac.h	/^  ContextModel         m_contextModels[MAX_NUM_CTX_MOD];$/;"	m	class:TEncSbac
m_costIntra	TLibEncoder/TEncRateCtrl.h	/^  Double m_costIntra;$/;"	m	struct:TRCLCU
m_costMode	TLibCommon/TComRdCost.h	/^  CostMode                m_costMode;$/;"	m	class:TComRdCost
m_costMode	TLibEncoder/TEncCfg.h	/^  CostMode  m_costMode;                                       \/\/\/< The cost function to use, primarily when considering lossless coding.$/;"	m	class:TEncCfg
m_cpbDelayOffset	TLibCommon/SEI.h	/^  UInt m_cpbDelayOffset;$/;"	m	class:SEIBufferingPeriod
m_cpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt m_cpbRemovalDelayLengthMinus1;$/;"	m	class:TComHRD
m_cpbSize	TLibEncoder/TEncRateCtrl.h	/^  UInt       m_cpbSize;                 \/\/ CPB size$/;"	m	class:TEncRateCtrl
m_cpbSizeScale	TLibCommon/TComSlice.h	/^  UInt m_cpbSizeScale;$/;"	m	class:TComHRD
m_cpbState	TLibEncoder/TEncRateCtrl.h	/^  Int        m_cpbState;                \/\/ CPB State $/;"	m	class:TEncRateCtrl
m_cprmsPresentFlag	TLibCommon/TComSlice.h	/^  std::vector<Bool>     m_cprmsPresentFlag;$/;"	m	class:TComVPS
m_craNoRaslOutputFlag	TLibDecoder/TDecTop.h	/^  Bool                    m_craNoRaslOutputFlag;    \/\/value of variable NoRaslOutputFlag of the last CRA pic$/;"	m	class:TDecTop
m_crossComponentPredictionAlpha	TLibCommon/TComDataCU.h	/^  SChar*        m_crossComponentPredictionAlpha[MAX_NUM_COMPONENT]; \/\/\/< array of cross-component prediction alpha values$/;"	m	class:TComDataCU
m_crossComponentPredictionEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_crossComponentPredictionEnabledFlag;$/;"	m	class:TComPPSRExt
m_crossComponentPredictionEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_crossComponentPredictionEnabledFlag;$/;"	m	class:TEncCfg
m_ctuOffsetInBuffer	TLibCommon/TComPicYuv.h	/^  Int*  m_ctuOffsetInBuffer[MAX_NUM_CHANNEL_TYPE];  \/\/\/< Gives an offset in the buffer for a given CTU (and channel)$/;"	m	class:TComPicYuv
m_ctuRsAddr	TLibCommon/TComDataCU.h	/^  UInt          m_ctuRsAddr;                            \/\/\/< CTU (also known as LCU) address in a slice (Raster-scan address, as opposed to tile-scan\/encoding order).$/;"	m	class:TComDataCU
m_ctuRsToTsAddrMap	TLibCommon/TComPicSym.h	/^  UInt*         m_ctuRsToTsAddrMap;    \/\/\/< for a given RS (Raster-Scan) address, returns the TS (Tile-Scan; coding order) address. cf CtbAddrRsToTs in specification.$/;"	m	class:TComPicSym
m_ctuTsToRsAddrMap	TLibCommon/TComPicSym.h	/^  UInt*         m_ctuTsToRsAddrMap;    \/\/\/< for a given TS (Tile-Scan; coding order) address, returns the RS (Raster-Scan) address. cf CtbAddrTsToRs in specification.$/;"	m	class:TComPicSym
m_cuChromaQpOffsetIdxPlus1	TLibEncoder/TEncCu.h	/^  Int                     m_cuChromaQpOffsetIdxPlus1; \/\/ if 0, then cu_chroma_qp_offset_flag will be 0, otherwise cu_chroma_qp_offset_flag will be 1.$/;"	m	class:TEncCu
m_currentFrameIsFrame0Flag	TLibCommon/SEI.h	/^  Bool m_currentFrameIsFrame0Flag;$/;"	m	class:SEIFramePacking
m_dActivity	TLibEncoder/TEncPic.h	/^  Double m_dActivity;$/;"	m	class:TEncQPAdaptationUnit
m_dAvgActivity	TLibEncoder/TEncPic.h	/^  Double                m_dAvgActivity;$/;"	m	class:TEncPicQPAdaptationLayer
m_dDecTime	TLibDecoder/TDecGop.h	/^  Double                m_dDecTime;$/;"	m	class:TDecGop
m_dFrameLambda	TLibCommon/TComRdCost.h	/^  Double                  m_dFrameLambda;$/;"	m	class:TComRdCost
m_dFrmRate	TLibEncoder/TEncAnalyze.h	/^  Double    m_dFrmRate; \/\/--CFG_KDY$/;"	m	class:TEncAnalyze
m_dIntraQpFactor	TLibEncoder/TEncCfg.h	/^  Double    m_dIntraQpFactor;                                 \/\/\/< Intra Q Factor. If negative, use a default equation: 0.57*(1.0 - Clip3( 0.0, 0.5, 0.05*(Double)(isField ? (GopSize-1)\/2 : GopSize-1) ))$/;"	m	class:TEncCfg
m_dLambda	TLibCommon/TComRdCost.h	/^  Double                  m_dLambda;$/;"	m	class:TComRdCost
m_dLambda	TLibCommon/TComTrQuant.h	/^  Double   m_dLambda;$/;"	m	class:TComTrQuant
m_dLambdaMotionSAD	TLibCommon/TComRdCost.h	/^  Double                  m_dLambdaMotionSAD[2 \/* 0=standard, 1=for transquant bypass when mixed-lossless cost evaluation enabled*\/];$/;"	m	class:TComRdCost
m_dLambdaMotionSSE	TLibCommon/TComRdCost.h	/^  Double                  m_dLambdaMotionSSE[2 \/* 0=standard, 1=for transquant bypass when mixed-lossless cost evaluation enabled*\/];$/;"	m	class:TComRdCost
m_dPicRdCost	TLibEncoder/TEncSlice.h	/^  Double                  m_dPicRdCost;                         \/\/\/< picture-level RD cost$/;"	m	class:TEncSlice
m_dTotalCost	TLibCommon/TComDataCU.h	/^  Double        m_dTotalCost;                           \/\/\/< sum of partition RD costs$/;"	m	class:TComDataCU
m_dVal	TLibCommon/Debug.h	/^  Double      m_dVal;$/;"	m	class:EnvVar
m_dXPSNRWeight	TLibEncoder/TEncCfg.h	/^  Double    m_dXPSNRWeight[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_deblockingFilterBetaOffsetDiv2	TLibCommon/TComSlice.h	/^  Int                        m_deblockingFilterBetaOffsetDiv2;    \/\/< beta offset for deblocking filter$/;"	m	class:TComSlice
m_deblockingFilterBetaOffsetDiv2	TLibCommon/TComSlice.h	/^  Int              m_deblockingFilterBetaOffsetDiv2;    \/\/< beta offset for deblocking filter$/;"	m	class:TComPPS
m_deblockingFilterControlPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_deblockingFilterControlPresentFlag;$/;"	m	class:TComPPS
m_deblockingFilterDisable	TLibCommon/TComSlice.h	/^  Bool                       m_deblockingFilterDisable;$/;"	m	class:TComSlice
m_deblockingFilterMetric	TLibEncoder/TEncCfg.h	/^  Int       m_deblockingFilterMetric;$/;"	m	class:TEncCfg
m_deblockingFilterOverrideEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_deblockingFilterOverrideEnabledFlag;$/;"	m	class:TComPPS
m_deblockingFilterOverrideFlag	TLibCommon/TComSlice.h	/^  Bool                       m_deblockingFilterOverrideFlag;      \/\/< offsets for deblocking filter inherit from PPS$/;"	m	class:TComSlice
m_deblockingFilterTcOffsetDiv2	TLibCommon/TComSlice.h	/^  Int                        m_deblockingFilterTcOffsetDiv2;      \/\/< tc offset for deblocking filter$/;"	m	class:TComSlice
m_deblockingFilterTcOffsetDiv2	TLibCommon/TComSlice.h	/^  Int              m_deblockingFilterTcOffsetDiv2;      \/\/< tc offset for deblocking filter$/;"	m	class:TComPPS
m_decodedPictureHashSEIEnabled	TLibDecoder/TDecGop.h	/^  Int                   m_decodedPictureHashSEIEnabled;  \/\/\/< Checksum(3)\/CRC(2)\/MD5(1)\/disable(0) acting on decoded picture hash SEI message$/;"	m	class:TDecGop
m_decodedPictureHashSEIType	TLibEncoder/TEncCfg.h	/^  HashType  m_decodedPictureHashSEIType;$/;"	m	class:TEncCfg
m_decodingUnitIdx	TLibCommon/SEI.h	/^  Int m_decodingUnitIdx;$/;"	m	class:SEIDecodingUnitInfo
m_decodingUnitInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_decodingUnitInfoSEIEnabled;$/;"	m	class:TEncCfg
m_defaultDisplayWindow	TLibCommon/TComSlice.h	/^  Window     m_defaultDisplayWindow;$/;"	m	class:TComVUI
m_defaultDisplayWindow	TLibEncoder/TEncCfg.h	/^  Window    m_defaultDisplayWindow;                           \/\/\/< Represents the default display window parameters$/;"	m	class:TEncCfg
m_defaultOpFlag	TLibCommon/SEI.h	/^  Bool  m_defaultOpFlag;                             \/\/value valid if m_nestingOpFlag != 0$/;"	m	class:SEIScalableNesting
m_deinterlacedPictureSourceParityFlag	TLibCommon/SEI.h	/^    Bool m_deinterlacedPictureSourceParityFlag;$/;"	m	class:SEIDeinterlaceFieldIdentification
m_deltaPOC	TLibCommon/TComSlice.h	/^  Int  m_deltaPOC[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_deltaPOCMSBCycleLT	TLibCommon/TComSlice.h	/^  Int  m_deltaPOCMSBCycleLT[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_deltaPocMSBPresentFlag	TLibCommon/TComSlice.h	/^  Bool m_deltaPocMSBPresentFlag[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_deltaRIdxMinus1	TLibCommon/TComSlice.h	/^  Int  m_deltaRIdxMinus1;$/;"	m	class:TComReferencePictureSet
m_deltaRPS	TLibCommon/TComSlice.h	/^  Int  m_deltaRPS;$/;"	m	class:TComReferencePictureSet
m_deltaRPS	TLibEncoder/TEncCfg.h	/^  Int m_deltaRPS;$/;"	m	struct:GOPEntry
m_dependentSliceSegmentFlag	TLibCommon/TComSlice.h	/^  Bool                       m_dependentSliceSegmentFlag;$/;"	m	class:TComSlice
m_dependentSliceSegmentsEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_dependentSliceSegmentsEnabledFlag; \/\/!< Indicates the presence of dependent slices$/;"	m	class:TComPPS
m_dequantCoef	TLibCommon/TComTrQuant.h	/^  Int      *m_dequantCoef          [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of dequantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_diffCuChromaQpOffsetDepth	TLibCommon/TComSlice.h	/^  Int              m_diffCuChromaQpOffsetDepth;$/;"	m	class:TComPPSRExt
m_diffCuChromaQpOffsetDepth	TLibEncoder/TEncCfg.h	/^  Int       m_diffCuChromaQpOffsetDepth;        \/\/\/< If negative, then do not apply chroma qp offsets.$/;"	m	class:TEncCfg
m_displayOrientationSEIAngle	TLibEncoder/TEncCfg.h	/^  Int       m_displayOrientationSEIAngle;$/;"	m	class:TEncCfg
m_display_tile_set_flag	TLibCommon/SEI.h	/^      Bool    m_display_tile_set_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_distortionWeight	TLibCommon/TComRdCost.h	/^  Double                  m_distortionWeight[MAX_NUM_COMPONENT]; \/\/ only chroma values are used.$/;"	m	class:TComRdCost
m_dpbDelayOffset	TLibCommon/SEI.h	/^  UInt m_dpbDelayOffset;$/;"	m	class:SEIBufferingPeriod
m_dpbOutputDelayDuLengthMinus1	TLibCommon/TComSlice.h	/^  UInt m_dpbOutputDelayDuLengthMinus1;$/;"	m	class:TComHRD
m_dpbOutputDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt m_dpbOutputDelayLengthMinus1;$/;"	m	class:TComHRD
m_dpbOutputDuDelayPresentFlag	TLibCommon/SEI.h	/^  Bool m_dpbOutputDuDelayPresentFlag;$/;"	m	class:SEIDecodingUnitInfo
m_dpbPerCtuData	TLibCommon/TComPicSym.h	/^  DPBPerCtuData *m_dpbPerCtuData;$/;"	m	class:TComPicSym
m_duCommonCpbRemovalDelayFlag	TLibCommon/SEI.h	/^  Bool  m_duCommonCpbRemovalDelayFlag;$/;"	m	class:SEIPictureTiming
m_duCommonCpbRemovalDelayMinus1	TLibCommon/SEI.h	/^  UInt  m_duCommonCpbRemovalDelayMinus1;$/;"	m	class:SEIPictureTiming
m_duCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt m_duCpbRemovalDelayLengthMinus1;$/;"	m	class:TComHRD
m_duCpbRemovalDelayMinus1	TLibCommon/SEI.h	/^  std::vector<UInt> m_duCpbRemovalDelayMinus1;$/;"	m	class:SEIPictureTiming
m_duSptCpbRemovalDelay	TLibCommon/SEI.h	/^  Int m_duSptCpbRemovalDelay;$/;"	m	class:SEIDecodingUnitInfo
m_ducpbSizeScale	TLibCommon/TComSlice.h	/^  UInt m_ducpbSizeScale;$/;"	m	class:TComHRD
m_duplicateFlag	TLibCommon/SEI.h	/^  Bool  m_duplicateFlag;$/;"	m	class:SEIPictureTiming
m_eNalUnitType	TLibCommon/TComSlice.h	/^  NalUnitType                m_eNalUnitType;         \/\/\/< Nal unit type for the slice$/;"	m	class:TComSlice
m_eSliceType	TLibCommon/TComSlice.h	/^  SliceType                  m_eSliceType;$/;"	m	class:TComSlice
m_each_tile_one_tile_set_flag	TLibCommon/SEI.h	/^  Bool    m_each_tile_one_tile_set_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_emulationPreventionByteLocation	TLibCommon/TComBitStream.h	/^  std::vector<UInt>    m_emulationPreventionByteLocation;$/;"	m	class:TComInputBitstream
m_enableDeblocking	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint8_t                      m_enableDeblocking;$/;"	m	class:SEIFilmGrainSynthesizer
m_enableTMVPFlag	TLibCommon/TComSlice.h	/^  Bool                       m_enableTMVPFlag;$/;"	m	class:TComSlice
m_enabledFlag	TLibCommon/TypeDef.h	/^  Bool m_enabledFlag;$/;"	m	class:Window
m_encCABACTableIdx	TLibCommon/TComSlice.h	/^  SliceType                  m_encCABACTableIdx;           \/\/ Used to transmit table selection across slices.$/;"	m	class:TComSlice
m_encCABACTableIdx	TLibEncoder/TEncSlice.h	/^  SliceType               m_encCABACTableIdx;$/;"	m	class:TEncSlice
m_encRCGOP	TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP* m_encRCGOP;$/;"	m	class:TEncRCPic
m_encRCGOP	TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP* m_encRCGOP;$/;"	m	class:TEncRateCtrl
m_encRCPic	TLibEncoder/TEncRateCtrl.h	/^  TEncRCPic* m_encRCPic;$/;"	m	class:TEncRateCtrl
m_encRCSeq	TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* m_encRCSeq;$/;"	m	class:TEncRCGOP
m_encRCSeq	TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* m_encRCSeq;$/;"	m	class:TEncRCPic
m_encRCSeq	TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* m_encRCSeq;$/;"	m	class:TEncRateCtrl
m_entropyBits	TLibCommon/ContextModel.cpp	/^const Int ContextModel::m_entropyBits[ ContextModel::m_totalStates ] =$/;"	m	class:ContextModel	file:
m_entropyBits	TLibCommon/ContextModel.h	/^  static const  Int   m_entropyBits    [m_totalStates];$/;"	m	class:ContextModel
m_entropyCodingSyncContextState	TLibDecoder/TDecSlice.h	/^  TDecSbac        m_entropyCodingSyncContextState;      \/\/\/< context storate for state of contexts at the wavefront\/WPP\/entropy-coding-sync second CTU of tile-row$/;"	m	class:TDecSlice
m_entropyCodingSyncContextState	TLibEncoder/TEncSlice.h	/^  TEncSbac                m_entropyCodingSyncContextState;      \/\/\/< context storate for state of contexts at the wavefront\/WPP\/entropy-coding-sync second CTU of tile-row$/;"	m	class:TEncSlice
m_entropyCodingSyncEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_entropyCodingSyncEnabledFlag;      \/\/!< Indicates the presence of wavefronts$/;"	m	class:TComPPS
m_entropyCodingSyncEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_entropyCodingSyncEnabledFlag;$/;"	m	class:TEncCfg
m_erpCancelFlag	TLibCommon/SEI.h	/^  Bool   m_erpCancelFlag;$/;"	m	class:SEIEquirectangularProjection
m_erpGuardBandFlag	TLibCommon/SEI.h	/^  Bool   m_erpGuardBandFlag;$/;"	m	class:SEIEquirectangularProjection
m_erpGuardBandType	TLibCommon/SEI.h	/^  UChar  m_erpGuardBandType;$/;"	m	class:SEIEquirectangularProjection
m_erpLeftGuardBandWidth	TLibCommon/SEI.h	/^  UChar  m_erpLeftGuardBandWidth;$/;"	m	class:SEIEquirectangularProjection
m_erpPersistenceFlag	TLibCommon/SEI.h	/^  Bool   m_erpPersistenceFlag;$/;"	m	class:SEIEquirectangularProjection
m_erpRightGuardBandWidth	TLibCommon/SEI.h	/^  UChar  m_erpRightGuardBandWidth;$/;"	m	class:SEIEquirectangularProjection
m_erpSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEICancelFlag;$/;"	m	class:TEncCfg
m_erpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEIEnabled;          $/;"	m	class:TEncCfg
m_erpSEIGuardBandFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEIGuardBandFlag;$/;"	m	class:TEncCfg
m_erpSEIGuardBandType	TLibEncoder/TEncCfg.h	/^  UInt      m_erpSEIGuardBandType;$/;"	m	class:TEncCfg
m_erpSEILeftGuardBandWidth	TLibEncoder/TEncCfg.h	/^  UInt      m_erpSEILeftGuardBandWidth;$/;"	m	class:TEncCfg
m_erpSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_erpSEIRightGuardBandWidth	TLibEncoder/TEncCfg.h	/^  UInt      m_erpSEIRightGuardBandWidth;$/;"	m	class:TEncCfg
m_errScale	TLibCommon/TComTrQuant.h	/^  Double   *m_errScale             [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of quantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_errScaleNoScalingList	TLibCommon/TComTrQuant.h	/^  Double    m_errScaleNoScalingList[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of quantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_errorCode	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_errorCode;$/;"	m	class:SEIFilmGrainSynthesizer
m_estHeaderBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_estHeaderBits;$/;"	m	class:TEncRCPic
m_estPicLambda	TLibEncoder/TEncRateCtrl.h	/^  Double m_estPicLambda;$/;"	m	class:TEncRCPic
m_estPicQP	TLibEncoder/TEncRateCtrl.h	/^  Int m_estPicQP;$/;"	m	class:TEncRCPic
m_exactMatchingFlag	TLibCommon/SEI.h	/^  Bool m_exactMatchingFlag;$/;"	m	class:SEIRecoveryPoint
m_exact_sample_value_match_flag	TLibCommon/SEI.h	/^      Bool    m_exact_sample_value_match_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_explicitRdpcmDirSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmDirSCModel;$/;"	m	class:TDecSbac
m_explicitRdpcmDirSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmDirSCModel;$/;"	m	class:TEncSbac
m_explicitRdpcmFlagSCModel	TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmFlagSCModel;$/;"	m	class:TDecSbac
m_explicitRdpcmFlagSCModel	TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmFlagSCModel;$/;"	m	class:TEncSbac
m_explicitRdpcmMode	TLibCommon/TComDataCU.h	/^  UChar*        m_explicitRdpcmMode[MAX_NUM_COMPONENT]; \/\/\/< Stores the explicit RDPCM mode for all TUs belonging to this CU$/;"	m	class:TComDataCU
m_exposureCompensationValueDenomIdc	TLibCommon/SEI.h	/^  Int    m_exposureCompensationValueDenomIdc;$/;"	m	class:SEIToneMappingInfo
m_exposureCompensationValueDenomIdc	TLibEncoder/TEncCfg.h	/^  Int       m_exposureCompensationValueDenomIdc;$/;"	m	class:TEncCfg
m_exposureCompensationValueNumerator	TLibCommon/SEI.h	/^  Int    m_exposureCompensationValueNumerator;$/;"	m	class:SEIToneMappingInfo
m_exposureCompensationValueNumerator	TLibEncoder/TEncCfg.h	/^  Int       m_exposureCompensationValueNumerator;$/;"	m	class:TEncCfg
m_exposureCompensationValueSignFlag	TLibCommon/SEI.h	/^  Bool   m_exposureCompensationValueSignFlag;$/;"	m	class:SEIToneMappingInfo
m_exposureCompensationValueSignFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_exposureCompensationValueSignFlag;$/;"	m	class:TEncCfg
m_exposureIndexIdc	TLibCommon/SEI.h	/^  Int    m_exposureIndexIdc;$/;"	m	class:SEIToneMappingInfo
m_exposureIndexIdc	TLibEncoder/TEncCfg.h	/^  Int       m_exposureIndexIdc;$/;"	m	class:TEncCfg
m_exposureIndexValue	TLibCommon/SEI.h	/^  Int    m_exposureIndexValue;$/;"	m	class:SEIToneMappingInfo
m_exposureIndexValue	TLibEncoder/TEncCfg.h	/^  Int       m_exposureIndexValue;$/;"	m	class:TEncCfg
m_ext360	TLibEncoder/TEncAnalyze.h	/^  TExt360EncAnalyze m_ext360;$/;"	m	class:TEncAnalyze
m_ext360	TLibEncoder/TEncGOP.h	/^  TExt360EncGop           m_ext360;$/;"	m	class:TEncGOP
m_extendedPrecisionProcessingFlag	TLibCommon/TComSlice.h	/^  Bool             m_extendedPrecisionProcessingFlag;$/;"	m	class:TComSPSRExt
m_extendedPrecisionProcessingFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_extendedPrecisionProcessingFlag;$/;"	m	class:TEncCfg
m_extendedRangeWhiteLevel	TLibCommon/SEI.h	/^  Int    m_extendedRangeWhiteLevel;$/;"	m	class:SEIToneMappingInfo
m_extendedRangeWhiteLevel	TLibEncoder/TEncCfg.h	/^  Int       m_extendedRangeWhiteLevel;$/;"	m	class:TEncCfg
m_extendedWhiteLevelLumaCodeValue	TLibCommon/SEI.h	/^  Int    m_extendedWhiteLevelLumaCodeValue;$/;"	m	class:SEIToneMappingInfo
m_extendedWhiteLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Int       m_extendedWhiteLevelLumaCodeValue;$/;"	m	class:TEncCfg
m_extraRPSs	TLibEncoder/TEncCfg.h	/^  Int       m_extraRPSs;$/;"	m	class:TEncCfg
m_fastInterSearchMode	TLibEncoder/TEncCfg.h	/^  FastInterSearchMode m_fastInterSearchMode;$/;"	m	class:TEncCfg
m_fgcSEIBlendingModeID	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIBlendingModeID;$/;"	m	class:TEncCfg
m_fgcSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEICancelFlag;$/;"	m	class:TEncCfg
m_fgcSEICompModelPresent	TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEICompModelPresent[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_fgcSEICompModelValue	TLibEncoder/TEncCfg.h	/^  UInt      m_fgcSEICompModelValue[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES][MAX_NUM_MODEL_VALUES];$/;"	m	class:TEncCfg
m_fgcSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEIEnabled;$/;"	m	class:TEncCfg
m_fgcSEIIntensityIntervalLowerBound	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIIntensityIntervalLowerBound[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	class:TEncCfg
m_fgcSEIIntensityIntervalUpperBound	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIIntensityIntervalUpperBound[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	class:TEncCfg
m_fgcSEILog2ScaleFactor	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEILog2ScaleFactor;$/;"	m	class:TEncCfg
m_fgcSEIModelID	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIModelID;$/;"	m	class:TEncCfg
m_fgcSEINumIntensityIntervalMinus1	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEINumIntensityIntervalMinus1[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_fgcSEINumModelValuesMinus1	TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEINumModelValuesMinus1[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_fgcSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_fgcSEISepColourDescPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEISepColourDescPresentFlag;$/;"	m	class:TEncCfg
m_fieldSeqFlag	TLibCommon/TComSlice.h	/^  Bool       m_fieldSeqFlag;$/;"	m	class:TComVUI
m_fieldViewsFlag	TLibCommon/SEI.h	/^  Bool m_fieldViewsFlag;$/;"	m	class:SEIFramePacking
m_fifo	TLibCommon/TComBitStream.h	/^  std::vector<uint8_t> m_fifo; \/\/\/ FIFO for storage of complete bytes$/;"	m	class:TComInputBitstream
m_fifo	TLibCommon/TComBitStream.h	/^  std::vector<uint8_t> m_fifo;$/;"	m	class:TComOutputBitstream
m_fifo_idx	TLibCommon/TComBitStream.h	/^  UInt m_fifo_idx; \/\/\/ Read index into m_fifo$/;"	m	class:TComInputBitstream
m_fileBitdepth	Utilities/TVideoIOYuv.h	/^  Int       m_fileBitdepth[MAX_NUM_CHANNEL_TYPE]; \/\/\/< bitdepth of input\/output video file$/;"	m	class:TVideoIOYuv
m_filmGrainBitDepthChromaMinus8	TLibCommon/SEI.h	/^  UChar     m_filmGrainBitDepthChromaMinus8;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainBitDepthLumaMinus8	TLibCommon/SEI.h	/^  UChar     m_filmGrainBitDepthLumaMinus8;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainCharacteristicsCancelFlag	TLibCommon/SEI.h	/^  Bool      m_filmGrainCharacteristicsCancelFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainCharacteristicsPersistenceFlag	TLibCommon/SEI.h	/^  Bool      m_filmGrainCharacteristicsPersistenceFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainColourPrimaries	TLibCommon/SEI.h	/^  UChar     m_filmGrainColourPrimaries;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainFullRangeFlag	TLibCommon/SEI.h	/^  Bool      m_filmGrainFullRangeFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainMatrixCoeffs	TLibCommon/SEI.h	/^  UChar     m_filmGrainMatrixCoeffs;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainModelId	TLibCommon/SEI.h	/^  UChar     m_filmGrainModelId;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainTransferCharacteristics	TLibCommon/SEI.h	/^  UChar     m_filmGrainTransferCharacteristics;$/;"	m	class:SEIFilmGrainCharacteristics
m_filterHintSizeX	TLibCommon/SEI.h	/^  UInt             m_filterHintSizeX;$/;"	m	class:SEIPostFilterHint
m_filterHintSizeY	TLibCommon/SEI.h	/^  UInt             m_filterHintSizeY;$/;"	m	class:SEIPostFilterHint
m_filterHintType	TLibCommon/SEI.h	/^  UInt             m_filterHintType;$/;"	m	class:SEIPostFilterHint
m_filterHintValues	TLibCommon/SEI.h	/^  std::vector<Int> m_filterHintValues; \/\/ values stored in linear array, [ ( ( component * sizeY + y ) * SizeX ) + x ]$/;"	m	class:SEIPostFilterHint
m_filteredBlock	TLibCommon/TComPrediction.h	/^  TComYuv m_filteredBlock[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS];$/;"	m	class:TComPrediction
m_filteredBlockTmp	TLibCommon/TComPrediction.h	/^  TComYuv m_filteredBlockTmp[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS];$/;"	m	class:TComPrediction
m_firstCtuRsAddr	TLibCommon/TComPicSym.h	/^  UInt      m_firstCtuRsAddr;$/;"	m	class:TComTile
m_fisheyeActiveAreas	TLibCommon/TypeDef.h	/^  std::vector<ActiveAreaInfo> m_fisheyeActiveAreas;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_fisheyeCameraCentreAzimuth	TLibCommon/TypeDef.h	/^    Int  m_fisheyeCameraCentreAzimuth;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreElevation	TLibCommon/TypeDef.h	/^    Int  m_fisheyeCameraCentreElevation;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreOffsetX	TLibCommon/TypeDef.h	/^    UInt m_fisheyeCameraCentreOffsetX;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreOffsetY	TLibCommon/TypeDef.h	/^    UInt m_fisheyeCameraCentreOffsetY;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreOffsetZ	TLibCommon/TypeDef.h	/^    UInt m_fisheyeCameraCentreOffsetZ;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreTilt	TLibCommon/TypeDef.h	/^    Int  m_fisheyeCameraCentreTilt;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCancelFlag	TLibCommon/TypeDef.h	/^  Bool  m_fisheyeCancelFlag;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_fisheyeCircularRegionCentreX	TLibCommon/TypeDef.h	/^    UInt m_fisheyeCircularRegionCentreX;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCircularRegionCentreY	TLibCommon/TypeDef.h	/^    UInt m_fisheyeCircularRegionCentreY;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCircularRegionRadius	TLibCommon/TypeDef.h	/^    UInt m_fisheyeCircularRegionRadius;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeFieldOfView	TLibCommon/TypeDef.h	/^    UInt m_fisheyeFieldOfView;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyePersistenceFlag	TLibCommon/TypeDef.h	/^  Bool  m_fisheyePersistenceFlag;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_fisheyePolynomialCoeff	TLibCommon/TypeDef.h	/^    std::vector<Int> m_fisheyePolynomialCoeff;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionHeight	TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionHeight;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionLeft	TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionLeft;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionTop	TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionTop;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionWidth	TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionWidth;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeSceneRadius	TLibCommon/TypeDef.h	/^    UInt m_fisheyeSceneRadius;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeVideoInfo	TLibEncoder/TEncCfg.h	/^  TComSEIFisheyeVideoInfo m_fisheyeVideoInfo;$/;"	m	class:TEncCfg
m_fisheyeViewDimensionIdc	TLibCommon/TypeDef.h	/^  UInt  m_fisheyeViewDimensionIdc;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_forceDecodeBitDepth	TLibCommon/TComSlice.h	/^  UInt             m_forceDecodeBitDepth; \/\/ 0 = do not force the decoder's bit depth, other = force the decoder's bit depth to this value (best effort decoding)$/;"	m	class:TComSPS
m_forceDecodeBitDepth	TLibDecoder/TDecTop.h	/^  UInt                    m_forceDecodeBitDepth;$/;"	m	class:TDecTop
m_fracBits	TLibEncoder/TEncBinCoderCABAC.h	/^  UInt64 m_fracBits;$/;"	m	class:TEncBinCABAC
m_frame0FlippedFlag	TLibCommon/SEI.h	/^  Bool m_frame0FlippedFlag;$/;"	m	class:SEIFramePacking
m_frame0GridPositionX	TLibCommon/SEI.h	/^  Int  m_frame0GridPositionX;$/;"	m	class:SEIFramePacking
m_frame0GridPositionY	TLibCommon/SEI.h	/^  Int  m_frame0GridPositionY;$/;"	m	class:SEIFramePacking
m_frame0SelfContainedFlag	TLibCommon/SEI.h	/^  Bool m_frame0SelfContainedFlag;$/;"	m	class:SEIFramePacking
m_frame1GridPositionX	TLibCommon/SEI.h	/^  Int  m_frame1GridPositionX;$/;"	m	class:SEIFramePacking
m_frame1GridPositionY	TLibCommon/SEI.h	/^  Int  m_frame1GridPositionY;$/;"	m	class:SEIFramePacking
m_frame1SelfContainedFlag	TLibCommon/SEI.h	/^  Bool m_frame1SelfContainedFlag;$/;"	m	class:SEIFramePacking
m_frameFieldInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_frameFieldInfoPresentFlag;$/;"	m	class:TComVUI
m_frameFieldInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_frameFieldInfoPresentFlag;                      \/\/\/< Indicates that pic_struct and other field coding related values are present in picture timing SEI messages$/;"	m	class:TEncCfg
m_frameHeightInCtus	TLibCommon/TComPicSym.h	/^  UInt          m_frameHeightInCtus;$/;"	m	class:TComPicSym
m_frameLevel	TLibEncoder/TEncRateCtrl.h	/^  Int m_frameLevel;$/;"	m	class:TEncRCPic
m_frameOnlyConstraintFlag	TLibCommon/TComSlice.h	/^  Bool              m_frameOnlyConstraintFlag;$/;"	m	class:ProfileTierLevel
m_frameOnlyConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool m_frameOnlyConstraintFlag;$/;"	m	class:TEncCfg
m_framePackingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_framePackingSEIEnabled;$/;"	m	class:TEncCfg
m_framePackingSEIId	TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIId;$/;"	m	class:TEncCfg
m_framePackingSEIInterpretation	TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIInterpretation;$/;"	m	class:TEncCfg
m_framePackingSEIQuincunx	TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIQuincunx;$/;"	m	class:TEncCfg
m_framePackingSEIType	TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIType;$/;"	m	class:TEncCfg
m_frameRate	TLibEncoder/TEncRateCtrl.h	/^  Int m_frameRate;$/;"	m	class:TEncRCSeq
m_frameWidthInCtus	TLibCommon/TComPicSym.h	/^  UInt          m_frameWidthInCtus;$/;"	m	class:TComPicSym
m_framesLeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_framesLeft;$/;"	m	class:TEncRCSeq
m_framesToBeEncoded	TLibEncoder/TEncCfg.h	/^  Int       m_framesToBeEncoded;$/;"	m	class:TEncCfg
m_framesToBeEncoded	TLibEncoder/TEncTemporalFilter.h	/^  Int m_framesToBeEncoded;$/;"	m	class:TEncTemporalFilter
m_fviSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool                    m_fviSEIEnabled;$/;"	m	class:TEncCfg
m_gcAnalyzeAll	TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeAll;$/;"	m	class:TEncGOP
m_gcAnalyzeAll_in	TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeAll_in;$/;"	m	class:TEncGOP
m_gcAnalyzeB	TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeB;$/;"	m	class:TEncGOP
m_gcAnalyzeI	TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeI;$/;"	m	class:TEncGOP
m_gcAnalyzeP	TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeP;$/;"	m	class:TEncGOP
m_gdrForegroundFlag	TLibCommon/SEI.h	/^  Bool m_gdrForegroundFlag;$/;"	m	class:SEIRegionRefreshInfo
m_generalPTL	TLibCommon/TComSlice.h	/^  ProfileTierLevel m_generalPTL;$/;"	m	class:TComPTL
m_golombRiceAdaptationStatistics	TLibDecoder/TDecSbac.h	/^  UInt m_golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	class:TDecSbac
m_golombRiceAdaptationStatistics	TLibEncoder/TEncSbac.h	/^  UInt m_golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	class:TEncSbac
m_gopBasedTemporalFilterEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_gopBasedTemporalFilterEnabled;$/;"	m	class:TEncCfg
m_gopBasedTemporalFilterFutureReference	TLibEncoder/TEncTemporalFilter.h	/^  Bool m_gopBasedTemporalFilterFutureReference;$/;"	m	class:TEncTemporalFilter
m_gopID	TLibEncoder/TEncSlice.h	/^  Int                     m_gopID;$/;"	m	class:TEncSlice
m_gradualDecodingRefreshInfoEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_gradualDecodingRefreshInfoEnabled;$/;"	m	class:TEncCfg
m_grainBuf	TLibCommon/TComPic.h	/^  TComPicYuv              *m_grainBuf;$/;"	m	class:TComPic
m_grainBuf	TLibDecoder/TDecTop.h	/^  TComPicYuv              m_grainBuf;$/;"	m	class:TDecTop
m_grainCharacteristic	TLibCommon/TComPic.h	/^  SEIFilmGrainSynthesizer *m_grainCharacteristic;$/;"	m	class:TComPic
m_grainCharacteristic	TLibDecoder/TDecTop.h	/^  SEIFilmGrainSynthesizer m_grainCharacteristic;$/;"	m	class:TDecTop
m_greaterOneBits	TLibCommon/TComTrQuant.h	/^  Int m_greaterOneBits[NUM_ONE_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon5
m_greenMetadataInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_greenMetadataInfoSEIEnabled;$/;"	m	class:TEncCfg
m_greenMetadataType	TLibCommon/SEI.h	/^    UInt m_greenMetadataType;$/;"	m	class:SEIGreenMetadataInfo
m_greenMetadataType	TLibEncoder/TEncCfg.h	/^  UChar     m_greenMetadataType;$/;"	m	class:TEncCfg
m_handleCraAsBlaFlag	TLibCommon/TComSlice.h	/^  Bool                       m_handleCraAsBlaFlag;$/;"	m	class:TComSlice
m_hbrFactor	TLibDecoder/TDecConformance.h	/^    UInt                     m_hbrFactor;               \/\/ currently not used for checking$/;"	m	class:ProfileLevelTierFeatures
m_hdr	TLibCommon/SEI.h	/^  AnnotatedRegionHeader m_hdr;$/;"	m	class:SEIAnnotatedRegions
m_height	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_height;$/;"	m	class:SEIFilmGrainSynthesizer
m_height	TLibEncoder/TEncTemporalFilter.h	/^  UInt m_width, m_height;$/;"	m	struct:Array2D
m_held_bits	TLibCommon/TComBitStream.h	/^  UChar m_held_bits; \/\/\/ the bits held and not flushed to bytestream.$/;"	m	class:TComOutputBitstream
m_held_bits	TLibCommon/TComBitStream.h	/^  UChar m_held_bits;$/;"	m	class:TComInputBitstream
m_highPrecisionOffsetsEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_highPrecisionOffsetsEnabledFlag;$/;"	m	class:TComSPSRExt
m_highPrecisionOffsetsEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_highPrecisionOffsetsEnabledFlag;$/;"	m	class:TEncCfg
m_horChromaFilterIdc	TLibCommon/SEI.h	/^  Int                            m_horChromaFilterIdc;$/;"	m	class:SEIChromaResamplingFilterHint
m_horFilterCoeff	TLibCommon/SEI.h	/^  std::vector<std::vector<Int> > m_horFilterCoeff;$/;"	m	class:SEIChromaResamplingFilterHint
m_hrdOpSetIdx	TLibCommon/TComSlice.h	/^  std::vector<UInt>     m_hrdOpSetIdx;$/;"	m	class:TComVPS
m_hrdParameters	TLibCommon/TComSlice.h	/^  TComHRD    m_hrdParameters;$/;"	m	class:TComVUI
m_hrdParameters	TLibCommon/TComSlice.h	/^  std::vector<TComHRD>  m_hrdParameters;$/;"	m	class:TComVPS
m_hrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_hrdParametersPresentFlag;$/;"	m	class:TComVUI
m_iAssociatedIRAP	TLibCommon/TComSlice.h	/^  Int                        m_iAssociatedIRAP;$/;"	m	class:TComSlice
m_iAssociatedIRAPType	TLibCommon/TComSlice.h	/^  NalUnitType                m_iAssociatedIRAPType;$/;"	m	class:TComSlice
m_iCostScale	TLibCommon/TComRdCost.h	/^  Int                     m_iCostScale;$/;"	m	class:TComRdCost
m_iDepth	TLibCommon/TComSlice.h	/^  Int                        m_iDepth;$/;"	m	class:TComSlice
m_iFrameRate	TLibEncoder/TEncCfg.h	/^  Int       m_iFrameRate;$/;"	m	class:TEncCfg
m_iGOPSize	TLibEncoder/TEncCfg.h	/^  Int       m_iGOPSize;$/;"	m	class:TEncCfg
m_iGopSize	TLibEncoder/TEncGOP.h	/^  Int                     m_iGopSize;$/;"	m	class:TEncGOP
m_iHeight	TLibCommon/TComYuv.h	/^  UInt     m_iHeight;$/;"	m	class:TComYuv
m_iHor	TLibCommon/TComMv.h	/^  Short m_iHor;     \/\/\/< horizontal component of motion vector$/;"	m	class:TComMv
m_iLastIDR	TLibCommon/TComSlice.h	/^  Int                        m_iLastIDR;$/;"	m	class:TComSlice
m_iLastIDR	TLibEncoder/TEncGOP.h	/^  Int                     m_iLastIDR;$/;"	m	class:TEncGOP
m_iLastRecoveryPicPOC	TLibEncoder/TEncGOP.h	/^  Int                     m_iLastRecoveryPicPOC;$/;"	m	class:TEncGOP
m_iLumaRecStride	TLibCommon/TComPrediction.h	/^  Int    m_iLumaRecStride;       \/\/\/< stride of #m_pLumaRecBuffer array$/;"	m	class:TComPrediction
m_iMaxCuDQPDepth	TLibEncoder/TEncCfg.h	/^  Int       m_iMaxCuDQPDepth;                   \/\/  Max. depth for a minimum CuDQP (0:default)$/;"	m	class:TEncCfg
m_iMaxDeltaQP	TLibEncoder/TEncCfg.h	/^  Int       m_iMaxDeltaQP;                      \/\/  Max. absolute delta QP (1:default)$/;"	m	class:TEncCfg
m_iMaxRefPicNum	TLibDecoder/TDecTop.h	/^  Int                     m_iMaxRefPicNum;$/;"	m	class:TDecTop
m_iMaxRefPicNum	TLibEncoder/TEncCfg.h	/^  Int       m_iMaxRefPicNum;                     \/\/\/< this is used to mimic the sliding mechanism used by the decoder$/;"	m	class:TEncCfg
m_iNumColumnsMinus1	TLibEncoder/TEncCfg.h	/^  Int       m_iNumColumnsMinus1;$/;"	m	class:TEncCfg
m_iNumPicCoded	TLibEncoder/TEncGOP.h	/^  Int                     m_iNumPicCoded;$/;"	m	class:TEncGOP
m_iNumPicRcvd	TLibEncoder/TEncTop.h	/^  Int                     m_iNumPicRcvd;                  \/\/\/< number of received pictures$/;"	m	class:TEncTop
m_iNumRowsMinus1	TLibEncoder/TEncCfg.h	/^  Int       m_iNumRowsMinus1;$/;"	m	class:TEncCfg
m_iPOC	TLibCommon/TComSlice.h	/^  Int                        m_iPOC;$/;"	m	class:TComSlice
m_iPOCLast	TLibEncoder/TEncTop.h	/^  Int                     m_iPOCLast;                     \/\/\/< time index (POC)$/;"	m	class:TEncTop
m_iPPSId	TLibCommon/TComSlice.h	/^  Int                        m_iPPSId;               \/\/\/< picture parameter set ID$/;"	m	class:TComSlice
m_iQP	TLibEncoder/TEncCfg.h	/^  Int       m_iQP;                              \/\/  if (AdaptiveQP == OFF)$/;"	m	class:TEncCfg
m_iQPAdaptationRange	TLibEncoder/TEncCfg.h	/^  Int       m_iQPAdaptationRange;$/;"	m	class:TEncCfg
m_iRefIdx	TLibCommon/TComMotionInfo.h	/^  Int       m_iRefIdx;$/;"	m	class:TComMvField
m_iSearchRange	TLibEncoder/TEncCfg.h	/^  Int       m_iSearchRange;                     \/\/  0:Full frame$/;"	m	class:TEncCfg
m_iSearchRange	TLibEncoder/TEncSearch.h	/^  Int             m_iSearchRange;$/;"	m	class:TEncSearch
m_iSliceChromaQpDelta	TLibCommon/TComSlice.h	/^  Int                        m_iSliceChromaQpDelta[MAX_NUM_COMPONENT];$/;"	m	class:TComSlice
m_iSliceQp	TLibCommon/TComSlice.h	/^  Int                        m_iSliceQp;$/;"	m	class:TComSlice
m_iSliceQpBase	TLibCommon/TComSlice.h	/^  Int                        m_iSliceQpBase;$/;"	m	class:TComSlice
m_iSliceQpDelta	TLibCommon/TComSlice.h	/^  Int                        m_iSliceQpDelta;$/;"	m	class:TComSlice
m_iSourceHeight	TLibEncoder/TEncCfg.h	/^  Int       m_iSourceHeight;$/;"	m	class:TEncCfg
m_iSourceWidth	TLibEncoder/TEncCfg.h	/^  Int       m_iSourceWidth;$/;"	m	class:TEncCfg
m_iVal	TLibCommon/Debug.h	/^  Int         m_iVal;$/;"	m	class:EnvVar
m_iVer	TLibCommon/TComMv.h	/^  Short m_iVer;     \/\/\/< vertical component of motion vector$/;"	m	class:TComMv
m_iWidth	TLibCommon/TComYuv.h	/^  UInt     m_iWidth;$/;"	m	class:TComYuv
m_iYuvExtSize	TLibCommon/TComPrediction.h	/^  Int       m_iYuvExtSize;$/;"	m	class:TComPrediction
m_idrPicId	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_idrPicId;$/;"	m	class:SEIFilmGrainSynthesizer
m_idxOfMctsInSet	TLibCommon/SEI.h	/^    std::vector< std::vector<UInt> > m_idxOfMctsInSet;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_if	TLibCommon/TComPrediction.h	/^  TComInterpolationFilter m_if;$/;"	m	class:TComPrediction
m_independentSliceSegmentFlag	TLibCommon/SEI.h	/^  Bool m_independentSliceSegmentFlag;$/;"	m	class:SEICodedRegionCompletion
m_initialAltCpbRemovalDelay	TLibCommon/SEI.h	/^  UInt m_initialAltCpbRemovalDelay      [MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_initialAltCpbRemovalDelayOffset	TLibCommon/SEI.h	/^  UInt m_initialAltCpbRemovalDelayOffset[MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_initialCpbRemovalDelay	TLibCommon/SEI.h	/^  UInt m_initialCpbRemovalDelay         [MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_initialCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  UInt m_initialCpbRemovalDelayLengthMinus1;$/;"	m	class:TComHRD
m_initialCpbRemovalDelayOffset	TLibCommon/SEI.h	/^  UInt m_initialCpbRemovalDelayOffset   [MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_inputBitDepth	TLibEncoder/TEncTemporalFilter.h	/^  Int m_inputBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncTemporalFilter
m_inputColourSpaceConvert	TLibEncoder/TEncTemporalFilter.h	/^  InputColourSpaceConversion m_inputColourSpaceConvert;$/;"	m	class:TEncTemporalFilter
m_inputDRange	TLibEncoder/TEncCfg.h	/^  Int       m_inputDRange;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_inputDispLuminance	TLibEncoder/TEncCfg.h	/^  Int       m_inputDispLuminance;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_inputFileName	TLibEncoder/TEncTemporalFilter.h	/^  std::string m_inputFileName;$/;"	m	class:TEncTemporalFilter
m_integerMv2Nx2N	TLibEncoder/TEncSearch.h	/^  TComMv          m_integerMv2Nx2N[NUM_REF_PIC_LIST_01][MAX_NUM_REF];$/;"	m	class:TEncSearch
m_interRPSPrediction	TLibCommon/TComSlice.h	/^  Bool m_interRPSPrediction;$/;"	m	class:TComReferencePictureSet
m_interRPSPrediction	TLibEncoder/TEncCfg.h	/^  Int m_interRPSPrediction;$/;"	m	struct:GOPEntry
m_interlacedSourceFlag	TLibCommon/TComSlice.h	/^  Bool              m_interlacedSourceFlag;$/;"	m	class:ProfileTierLevel
m_interlacedSourceFlag	TLibEncoder/TEncCfg.h	/^  Bool m_interlacedSourceFlag;$/;"	m	class:TEncCfg
m_internalBitDepth	TLibEncoder/TEncTemporalFilter.h	/^  Int m_internalBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncTemporalFilter
m_intraConstraintFlag	TLibCommon/TComSlice.h	/^  Bool              m_intraConstraintFlag;$/;"	m	class:ProfileTierLevel
m_intraConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool              m_intraConstraintFlag;$/;"	m	class:TEncCfg
m_intraQPOffset	TLibEncoder/TEncCfg.h	/^  Int       m_intraQPOffset;                    \/\/\/< QP offset for intra slice (integer)$/;"	m	class:TEncCfg
m_intraSmoothingDisabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_intraSmoothingDisabledFlag;$/;"	m	class:TComSPSRExt
m_intraSmoothingDisabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_intraSmoothingDisabledFlag;$/;"	m	class:TEncCfg
m_isEncoded	TLibEncoder/TEncCfg.h	/^  Bool m_isEncoded;$/;"	m	struct:GOPEntry
m_isField	TLibCommon/TComPic.h	/^  Bool                  m_isField;$/;"	m	class:TComPic
m_isInitialized	TLibEncoder/SEIEncoder.h	/^  Bool m_isInitialized;$/;"	m	class:SEIEncoder
m_isInitialized	TLibEncoder/TEncSearch.h	/^  Bool            m_isInitialized;$/;"	m	class:TEncSearch
m_isNoOutputPriorPics	TLibDecoder/TDecTop.h	/^  Bool                    m_isNoOutputPriorPics;$/;"	m	class:TDecTop
m_isTop	TLibCommon/TComPic.h	/^  Bool                  m_isTop;$/;"	m	class:TComPic
m_ituCountryCode	TLibCommon/SEI.h	/^  UShort m_ituCountryCode;$/;"	m	class:SEIUserDataRegistered
m_kneeCancelFlag	TLibCommon/SEI.h	/^  Bool  m_kneeCancelFlag;$/;"	m	class:SEIKneeFunctionInfo
m_kneeFunctionCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_kneeFunctionCancelFlag;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_kneeFunctionId	TLibEncoder/TEncCfg.h	/^  Int       m_kneeFunctionId;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_kneeFunctionInformationSEI	TLibEncoder/TEncCfg.h	/^  TEncSEIKneeFunctionInformation m_kneeFunctionInformationSEI;$/;"	m	class:TEncCfg
m_kneeFunctionPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_kneeFunctionPersistenceFlag;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_kneeId	TLibCommon/SEI.h	/^  Int   m_kneeId;$/;"	m	class:SEIKneeFunctionInfo
m_kneeInputDispLuminance	TLibCommon/SEI.h	/^  Int   m_kneeInputDispLuminance;$/;"	m	class:SEIKneeFunctionInfo
m_kneeInputDrange	TLibCommon/SEI.h	/^  Int   m_kneeInputDrange;$/;"	m	class:SEIKneeFunctionInfo
m_kneeInputKneePoint	TLibCommon/SEI.h	/^  std::vector<Int> m_kneeInputKneePoint;$/;"	m	class:SEIKneeFunctionInfo
m_kneeNumKneePointsMinus1	TLibCommon/SEI.h	/^  Int   m_kneeNumKneePointsMinus1;$/;"	m	class:SEIKneeFunctionInfo
m_kneeOutputDispLuminance	TLibCommon/SEI.h	/^  Int   m_kneeOutputDispLuminance;$/;"	m	class:SEIKneeFunctionInfo
m_kneeOutputDrange	TLibCommon/SEI.h	/^  Int   m_kneeOutputDrange;$/;"	m	class:SEIKneeFunctionInfo
m_kneeOutputKneePoint	TLibCommon/SEI.h	/^  std::vector<Int> m_kneeOutputKneePoint;$/;"	m	class:SEIKneeFunctionInfo
m_kneePersistenceFlag	TLibCommon/SEI.h	/^  Bool  m_kneePersistenceFlag;$/;"	m	class:SEIKneeFunctionInfo
m_kneeSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_kneeSEIEnabled;$/;"	m	class:TEncCfg
m_kneeSEIKneePointPairs	TLibEncoder/TEncCfg.h	/^  std::vector<KneePointPair> m_kneeSEIKneePointPairs;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_lambda	TLibEncoder/TEncRateCtrl.h	/^  Double m_lambda;$/;"	m	struct:TRCLCU
m_lambda	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Double                 m_lambda[MAX_NUM_COMPONENT];$/;"	m	class:TEncSampleAdaptiveOffset
m_lambdaFromQPEnable	TLibEncoder/TEncCfg.h	/^  Int       m_lambdaFromQPEnable;               \/\/\/< enable lambda derivation from QP$/;"	m	class:TEncCfg
m_lambdas	TLibCommon/TComSlice.h	/^  Double                     m_lambdas[MAX_NUM_COMPONENT];$/;"	m	class:TComSlice
m_lambdas	TLibCommon/TComTrQuant.h	/^  Double   m_lambdas[MAX_NUM_COMPONENT];$/;"	m	class:TComTrQuant
m_lastBPSEI	TLibEncoder/TEncGOP.h	/^  UInt                    m_lastBPSEI;$/;"	m	class:TEncGOP
m_lastLambda	TLibEncoder/TEncRateCtrl.h	/^  Double m_lastLambda;$/;"	m	class:TEncRCSeq
m_lastPOCNoOutputPriorPics	TLibDecoder/TDecTop.h	/^  Int                     m_lastPOCNoOutputPriorPics;$/;"	m	class:TDecTop
m_lastSliceSegmentEndContextState	TLibDecoder/TDecSlice.h	/^  TDecSbac        m_lastSliceSegmentEndContextState;    \/\/\/< context storage for state at the end of the previous slice-segment (used for dependent slices only).$/;"	m	class:TDecSlice
m_lastSliceSegmentEndContextState	TLibEncoder/TEncSlice.h	/^  TEncSbac                m_lastSliceSegmentEndContextState;    \/\/\/< context storage for state at the end of the previous slice-segment (used for dependent slices only).$/;"	m	class:TEncSlice
m_layerIdIncludedFlag	TLibCommon/TComSlice.h	/^  Bool                  m_layerIdIncludedFlag[MAX_VPS_OP_SETS_PLUS1][MAX_VPS_NUH_RESERVED_ZERO_LAYER_ID_PLUS1];$/;"	m	class:TComVPS
m_level	TLibEncoder/TEncCfg.h	/^  Level::Name   m_level;$/;"	m	class:TEncCfg
m_levelAbsBits	TLibCommon/TComTrQuant.h	/^  Int m_levelAbsBits[NUM_ABS_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon5
m_levelIdc	TLibCommon/TComSlice.h	/^  Level::Name       m_levelIdc;$/;"	m	class:ProfileTierLevel
m_levelTier	TLibEncoder/TEncCfg.h	/^  Level::Tier   m_levelTier;$/;"	m	class:TEncCfg
m_limited_tile_set_display_flag	TLibCommon/SEI.h	/^  Bool    m_limited_tile_set_display_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_line	TLibCommon/TComRom.cpp	/^  UInt m_line, m_column;$/;"	m	class:ScanGenerator	file:
m_lineBufWidth	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_lineBufWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_list1IdxToList0Idx	TLibCommon/TComSlice.h	/^  Int                        m_list1IdxToList0Idx[MAX_NUM_REF];$/;"	m	class:TComSlice
m_listOfIndices	TLibCommon/SEI.h	/^    std::vector<UInt> m_listOfIndices;$/;"	m	struct:SEIRegionalNesting::SEIListOfIndices
m_listRCPictures	TLibEncoder/TEncRateCtrl.h	/^  list<TEncRCPic*> m_listRCPictures;$/;"	m	class:TEncRateCtrl
m_listsModificationPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_listsModificationPresentFlag;$/;"	m	class:TComPPS
m_localRPS	TLibCommon/TComSlice.h	/^  TComReferencePictureSet    m_localRPS;             \/\/< RPS when present in slice header$/;"	m	class:TComSlice
m_log2DiffMaxMinCodingBlockSize	TLibCommon/TComSlice.h	/^  Int              m_log2DiffMaxMinCodingBlockSize;$/;"	m	class:TComSPS
m_log2DiffMaxMinCodingBlockSize	TLibEncoder/TEncCfg.h	/^  UInt      m_log2DiffMaxMinCodingBlockSize;$/;"	m	class:TEncCfg
m_log2MatrixDenom	TLibCommon/SEI.h	/^  Int                 m_log2MatrixDenom;$/;"	m	class:SEIColourRemappingInfo
m_log2MaxMvLengthHorizontal	TLibCommon/TComSlice.h	/^  Int        m_log2MaxMvLengthHorizontal;$/;"	m	class:TComVUI
m_log2MaxMvLengthHorizontal	TLibEncoder/TEncCfg.h	/^  Int       m_log2MaxMvLengthHorizontal;                      \/\/\/< Indicate the maximum absolute value of a decoded horizontal MV component in quarter-pel luma units$/;"	m	class:TEncCfg
m_log2MaxMvLengthVertical	TLibCommon/TComSlice.h	/^  Int        m_log2MaxMvLengthVertical;$/;"	m	class:TComVUI
m_log2MaxMvLengthVertical	TLibEncoder/TEncCfg.h	/^  Int       m_log2MaxMvLengthVertical;                        \/\/\/< Indicate the maximum absolute value of a decoded vertical MV component in quarter-pel luma units$/;"	m	class:TEncCfg
m_log2MaxTransformSkipBlockSize	TLibCommon/TComSlice.h	/^  Int              m_log2MaxTransformSkipBlockSize;$/;"	m	class:TComPPSRExt
m_log2MaxTransformSkipBlockSize	TLibEncoder/TEncCfg.h	/^  UInt      m_log2MaxTransformSkipBlockSize;$/;"	m	class:TEncCfg
m_log2MinCodingBlockSize	TLibCommon/TComSlice.h	/^  Int              m_log2MinCodingBlockSize;$/;"	m	class:TComSPS
m_log2ParallelMergeLevelMinus2	TLibCommon/TComSlice.h	/^  UInt             m_log2ParallelMergeLevelMinus2;$/;"	m	class:TComPPS
m_log2ParallelMergeLevelMinus2	TLibEncoder/TEncCfg.h	/^  UInt      m_log2ParallelMergeLevelMinus2;       \/\/\/< Parallel merge estimation region$/;"	m	class:TEncCfg
m_log2SaoOffsetScale	TLibCommon/TComSlice.h	/^  UInt             m_log2SaoOffsetScale[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComPPSRExt
m_log2SaoOffsetScale	TLibEncoder/TEncCfg.h	/^  UInt      m_log2SaoOffsetScale[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncCfg
m_log2ScaleFactor	TLibCommon/SEI.h	/^  UChar     m_log2ScaleFactor;$/;"	m	class:SEIFilmGrainCharacteristics
m_loopFilterAcrossSlicesEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_loopFilterAcrossSlicesEnabledFlag;$/;"	m	class:TComPPS
m_loopFilterAcrossTilesEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_loopFilterAcrossTilesEnabledFlag;$/;"	m	class:TComPPS
m_loopFilterAcrossTilesEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_loopFilterAcrossTilesEnabledFlag;$/;"	m	class:TEncCfg
m_loopFilterBetaOffsetDiv2	TLibEncoder/TEncCfg.h	/^  Int       m_loopFilterBetaOffsetDiv2;$/;"	m	class:TEncCfg
m_loopFilterOffsetInPPS	TLibEncoder/TEncCfg.h	/^  Bool      m_loopFilterOffsetInPPS;$/;"	m	class:TEncCfg
m_loopFilterTcOffsetDiv2	TLibEncoder/TEncCfg.h	/^  Int       m_loopFilterTcOffsetDiv2;$/;"	m	class:TEncCfg
m_lowerBitRateConstraintFlag	TLibCommon/TComSlice.h	/^  Bool              m_lowerBitRateConstraintFlag;$/;"	m	class:ProfileTierLevel
m_lowerBitRateConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool              m_lowerBitRateConstraintFlag;$/;"	m	class:TEncCfg
m_lowerBound	TLibEncoder/TEncRateCtrl.h	/^  Int m_lowerBound;$/;"	m	class:TEncRCPic
m_ltRefPicPocLsbSps	TLibCommon/TComSlice.h	/^  UInt             m_ltRefPicPocLsbSps[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TComSPS
m_ltRefPicPocLsbSps	TLibEncoder/TEncGOP.h	/^  UInt                    m_ltRefPicPocLsbSps[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TEncGOP
m_ltRefPicUsedByCurrPicFlag	TLibEncoder/TEncGOP.h	/^  Bool                    m_ltRefPicUsedByCurrPicFlag[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TEncGOP
m_lumaFilter	TLibCommon/TComInterpolationFilter.cpp	/^const TFilterCoeff TComInterpolationFilter::m_lumaFilter[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_LUMA] =$/;"	m	class:TComInterpolationFilter	file:
m_lumaFilter	TLibCommon/TComInterpolationFilter.h	/^  static const TFilterCoeff m_lumaFilter[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_LUMA];     \/\/\/< Luma filter taps$/;"	m	class:TComInterpolationFilter
m_lumaLevelToDeltaQPLUT	TLibEncoder/TEncCu.h	/^  Int                     m_lumaLevelToDeltaQPLUT[LUMA_LEVEL_TO_DQP_LUT_MAXSIZE];$/;"	m	class:TEncCu
m_lumaLevelToDeltaQPMapping	TLibEncoder/TEncCfg.h	/^  LumaLevelToDeltaQPMapping m_lumaLevelToDeltaQPMapping; \/\/\/< mapping from luma level to delta QP.$/;"	m	class:TEncCfg
m_lumaQPOffset	TLibEncoder/TEncCu.h	/^  Int                     m_lumaQPOffset;$/;"	m	class:TEncCu
m_marginX	TLibCommon/TComPicYuv.h	/^  Int   m_marginX;                                  \/\/\/< margin of Luma channel (chroma's may be smaller, depending on ratio)$/;"	m	class:TComPicYuv
m_marginY	TLibCommon/TComPicYuv.h	/^  Int   m_marginY;                                  \/\/\/< margin of Luma channel (chroma's may be smaller, depending on ratio)$/;"	m	class:TComPicYuv
m_masteringDisplay	TLibEncoder/TEncCfg.h	/^  TComSEIMasteringDisplay m_masteringDisplay;$/;"	m	class:TEncCfg
m_matrixCoefficients	TLibCommon/TComSlice.h	/^  Int        m_matrixCoefficients;$/;"	m	class:TComVUI
m_matrixCoefficients	TLibEncoder/TEncCfg.h	/^  Int       m_matrixCoefficients;                             \/\/\/< Describes the matrix coefficients used in deriving luma and chroma from RGB primaries$/;"	m	class:TEncCfg
m_maxBitsPerMinCuDenom	TLibCommon/TComSlice.h	/^  Int        m_maxBitsPerMinCuDenom;$/;"	m	class:TComVUI
m_maxBitsPerMinCuDenom	TLibEncoder/TEncCfg.h	/^  Int       m_maxBitsPerMinCuDenom;                           \/\/\/< Indicates an upper bound for the number of bits of coding_unit() data$/;"	m	class:TEncCfg
m_maxBytesPerPicDenom	TLibCommon/TComSlice.h	/^  Int        m_maxBytesPerPicDenom;$/;"	m	class:TComVUI
m_maxBytesPerPicDenom	TLibEncoder/TEncCfg.h	/^  Int       m_maxBytesPerPicDenom;                            \/\/\/< Indicates a number of bytes not exceeded by the sum of the sizes of the VCL NAL units associated with any coded picture$/;"	m	class:TEncCfg
m_maxCUHeight	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_maxCUHeight;$/;"	m	class:TComSampleAdaptiveOffset
m_maxCUHeight	TLibEncoder/TEncCfg.h	/^  UInt      m_maxCUHeight;$/;"	m	class:TEncCfg
m_maxCUWidth	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_maxCUWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_maxCUWidth	TLibEncoder/TEncCfg.h	/^  UInt      m_maxCUWidth;$/;"	m	class:TEncCfg
m_maxContentLightLevel	TLibCommon/SEI.h	/^    UInt m_maxContentLightLevel;$/;"	m	class:SEIContentLightLevelInfo
m_maxDecPicBuffering	TLibEncoder/TEncCfg.h	/^  Int       m_maxDecPicBuffering[MAX_TLAYER];$/;"	m	class:TEncCfg
m_maxId	TLibCommon/TComSlice.h	/^  Int                       m_maxId;$/;"	m	class:ParameterSetMap
m_maxNuhReservedZeroLayerId	TLibCommon/TComSlice.h	/^  UInt                  m_maxNuhReservedZeroLayerId;$/;"	m	class:TComVPS
m_maxNumMergeCand	TLibCommon/TComSlice.h	/^  UInt                       m_maxNumMergeCand;$/;"	m	class:TComSlice
m_maxNumMergeCand	TLibEncoder/TEncCfg.h	/^  UInt      m_maxNumMergeCand;                    \/\/\/< Maximum number of merge candidates$/;"	m	class:TEncCfg
m_maxNumOffsetsPerPic	TLibEncoder/TEncCfg.h	/^  Int       m_maxNumOffsetsPerPic;$/;"	m	class:TEncCfg
m_maxPicAverageLightLevel	TLibCommon/SEI.h	/^    UInt m_maxPicAverageLightLevel;$/;"	m	class:SEIContentLightLevelInfo
m_maxRawCtuBits	TLibCommon/ProfileLevelTierFeatures.h	/^    UInt                     m_maxRawCtuBits;$/;"	m	class:ProfileLevelTierFeatures
m_maxRawCtuBits	TLibDecoder/TDecConformance.h	/^    UInt                     m_maxRawCtuBits;$/;"	m	class:ProfileLevelTierFeatures
m_maxTempLayer	TLibEncoder/TEncCfg.h	/^  Int       m_maxTempLayer;                      \/\/\/< Max temporal layer$/;"	m	class:TEncCfg
m_maxTotalCUDepth	TLibEncoder/TEncCfg.h	/^  UInt      m_maxTotalCUDepth;$/;"	m	class:TEncCfg
m_maxValue	TLibCommon/SEI.h	/^  Int    m_maxValue;$/;"	m	class:SEIToneMappingInfo
m_maxValue	TLibEncoder/TEncCfg.h	/^  Int       m_maxValue;$/;"	m	class:TEncCfg
m_max_mcs_tier_level_idc_present_flag	TLibCommon/SEI.h	/^  Bool    m_max_mcs_tier_level_idc_present_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_max_mcts_level_idc	TLibCommon/SEI.h	/^  Int     m_max_mcts_level_idc;$/;"	m	class:SEITempMotionConstrainedTileSets
m_max_mcts_tier_flag	TLibCommon/SEI.h	/^  Bool    m_max_mcts_tier_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_maximumDistortionForEarlyExit	TLibCommon/TComRdCost.h	/^  Distortion            m_maximumDistortionForEarlyExit; \/\/\/ During cost calculations, if distortion exceeds this value, cost calculations may early-terminate.$/;"	m	class:DistParam
m_mc_all_tiles_exact_sample_value_match_flag	TLibCommon/SEI.h	/^  Bool    m_mc_all_tiles_exact_sample_value_match_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_mcts_id	TLibCommon/SEI.h	/^      Int     m_mcts_id;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_mcts_level_idc	TLibCommon/SEI.h	/^      Int     m_mcts_level_idc;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_mcts_tier_flag	TLibCommon/SEI.h	/^      Bool    m_mcts_tier_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_mcts_tier_level_idc_present_flag	TLibCommon/SEI.h	/^      Bool    m_mcts_tier_level_idc_present_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_minSearchWindow	TLibEncoder/TEncCfg.h	/^  Int       m_minSearchWindow;$/;"	m	class:TEncCfg
m_minSpatialSegmentationIdc	TLibCommon/TComSlice.h	/^  Int        m_minSpatialSegmentationIdc;$/;"	m	class:TComVUI
m_minSpatialSegmentationIdc	TLibEncoder/TEncCfg.h	/^  Int       m_minSpatialSegmentationIdc;                      \/\/\/< Indicates the maximum size of the spatial segments in the pictures in the coded video sequence$/;"	m	class:TEncCfg
m_minValue	TLibCommon/SEI.h	/^  Int    m_minValue;$/;"	m	class:SEIToneMappingInfo
m_minValue	TLibEncoder/TEncCfg.h	/^  Int       m_minValue;$/;"	m	class:TEncCfg
m_modelId	TLibCommon/SEI.h	/^  Int    m_modelId;$/;"	m	class:SEIToneMappingInfo
m_modelId	TLibEncoder/TEncCfg.h	/^  Int       m_modelId;$/;"	m	class:TEncCfg
m_motionEstimationSearchMethod	TLibEncoder/TEncCfg.h	/^  MESearchMethod m_motionEstimationSearchMethod;$/;"	m	class:TEncCfg
m_motionEstimationSearchMethod	TLibEncoder/TEncSearch.h	/^  MESearchMethod  m_motionEstimationSearchMethod;$/;"	m	class:TEncSearch
m_motionLambda	TLibCommon/TComRdCost.h	/^  Double                  m_motionLambda;$/;"	m	class:TComRdCost
m_motionVectorsOverPicBoundariesFlag	TLibCommon/TComSlice.h	/^  Bool       m_motionVectorsOverPicBoundariesFlag;$/;"	m	class:TComVUI
m_motionVectorsOverPicBoundariesFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_motionVectorsOverPicBoundariesFlag;             \/\/\/< Indicates that no samples outside the picture boundaries are used for inter prediction$/;"	m	class:TEncCfg
m_mvPredictor	TLibCommon/TComRdCost.h	/^  TComMv                  m_mvPredictor;$/;"	m	class:TComRdCost
m_nalHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool m_nalHrdParametersPresentFlag;$/;"	m	class:TComHRD
m_nalUnitData	TLibCommon/NAL.h	/^  std::ostringstream m_nalUnitData;$/;"	m	struct:NALUnitEBSP
m_nalUnitType	TLibCommon/NAL.h	/^  NalUnitType m_nalUnitType; \/\/\/< nal_unit_type$/;"	m	struct:NALUnit
m_nestedSEIs	TLibCommon/SEI.h	/^  SEIMessages m_nestedSEIs;$/;"	m	class:SEIScalableNesting
m_nestingLayerId	TLibCommon/SEI.h	/^  UChar m_nestingLayerId[MAX_NESTING_NUM_LAYER];     \/\/value valid if m_nestingOpFlag == 0 and m_allLayersFlag == 0. This can e.g. be a static array of 64 UChar values$/;"	m	class:SEIScalableNesting
m_nestingMaxTemporalIdPlus1	TLibCommon/SEI.h	/^  UInt  m_nestingMaxTemporalIdPlus1[MAX_TLAYER];     \/\/ -"-$/;"	m	class:SEIScalableNesting
m_nestingNoOpMaxTemporalIdPlus1	TLibCommon/SEI.h	/^  UInt  m_nestingNoOpMaxTemporalIdPlus1;             \/\/value valid if m_nestingOpFlag == 0 and m_allLayersFlag == 0$/;"	m	class:SEIScalableNesting
m_nestingNumLayersMinus1	TLibCommon/SEI.h	/^  UInt  m_nestingNumLayersMinus1;                    \/\/value valid if m_nestingOpFlag == 0 and m_allLayersFlag == 0$/;"	m	class:SEIScalableNesting
m_nestingNumOpsMinus1	TLibCommon/SEI.h	/^  UInt  m_nestingNumOpsMinus1;                       \/\/ -"-$/;"	m	class:SEIScalableNesting
m_nestingOpFlag	TLibCommon/SEI.h	/^  Bool  m_nestingOpFlag;$/;"	m	class:SEIScalableNesting
m_nestingOpIdx	TLibCommon/SEI.h	/^  UInt  m_nestingOpIdx[MAX_NESTING_NUM_OPS];         \/\/ -"-$/;"	m	class:SEIScalableNesting
m_neutralChromaIndicationFlag	TLibCommon/TComSlice.h	/^  Bool       m_neutralChromaIndicationFlag;$/;"	m	class:TComVUI
m_neutralChromaIndicationFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_neutralChromaIndicationFlag;                    \/\/\/< Indicates that the value of all decoded chroma samples is equal to 1<<(BitDepthCr-1)$/;"	m	class:TEncCfg
m_nextSegmentAddress	TLibCommon/SEI.h	/^  UInt m_nextSegmentAddress;$/;"	m	class:SEICodedRegionCompletion
m_nextSlice	TLibCommon/TComSlice.h	/^  Bool                       m_nextSlice;$/;"	m	class:TComSlice
m_nextSliceSegment	TLibCommon/TComSlice.h	/^  Bool                       m_nextSliceSegment;$/;"	m	class:TComSlice
m_nextState	TLibCommon/ContextModel.cpp	/^UChar ContextModel::m_nextState[ ContextModel::m_totalStates ][2 \/*MPS = [0|1]*\/];$/;"	m	class:ContextModel	file:
m_nextState	TLibCommon/ContextModel.h	/^  static UChar m_nextState[m_totalStates][2 \/*MPS = [0|1]*\/];$/;"	m	class:ContextModel
m_noDisplay	TLibCommon/SEI.h	/^  Bool m_noDisplay;$/;"	m	class:SEINoDisplay
m_noDisplaySEITLayer	TLibEncoder/TEncCfg.h	/^  Int       m_noDisplaySEITLayer;$/;"	m	class:TEncCfg
m_noOutputPriorPicsFlag	TLibCommon/TComSlice.h	/^  Bool                       m_noOutputPriorPicsFlag;$/;"	m	class:TComSlice
m_noParameterSetUpdateFlag	TLibCommon/SEI.h	/^  Bool m_noParameterSetUpdateFlag;$/;"	m	class:SEIActiveParameterSets
m_noRaslOutputFlag	TLibCommon/TComSlice.h	/^  Bool                       m_noRaslOutputFlag;$/;"	m	class:TComSlice
m_nominalBlackLevelLumaCodeValue	TLibCommon/SEI.h	/^  Int    m_nominalBlackLevelLumaCodeValue;$/;"	m	class:SEIToneMappingInfo
m_nominalBlackLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Int       m_nominalBlackLevelLumaCodeValue;$/;"	m	class:TEncCfg
m_nominalWhiteLevelLumaCodeValue	TLibCommon/SEI.h	/^  Int    m_nominalWhiteLevelLumaCodeValue;$/;"	m	class:SEIToneMappingInfo
m_nominalWhiteLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Int       m_nominalWhiteLevelLumaCodeValue;$/;"	m	class:TEncCfg
m_nonPackedConstraintFlag	TLibCommon/TComSlice.h	/^  Bool              m_nonPackedConstraintFlag;$/;"	m	class:ProfileTierLevel
m_nonPackedConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool m_nonPackedConstraintFlag;$/;"	m	class:TEncCfg
m_notOptimizedForViewingFlag	TLibCommon/SEI.h	/^    Bool      m_notOptimizedForViewingFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_nuhLayerId	TLibCommon/NAL.h	/^  UInt        m_nuhLayerId;  \/\/\/< nuh_layer_id$/;"	m	struct:NALUnit
m_numBitsRead	TLibCommon/TComBitStream.h	/^  UInt  m_numBitsRead;$/;"	m	class:TComInputBitstream
m_numBufferedBytes	TLibEncoder/TEncBinCoderCABAC.h	/^  Int                 m_numBufferedBytes;$/;"	m	class:TEncBinCABAC
m_numBytesInNALUnit	TLibDecoder/AnnexBread.h	/^  UInt m_numBytesInNALUnit;$/;"	m	struct:AnnexBStats
m_numCTUInHeight	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_numCTUInHeight;$/;"	m	class:TComSampleAdaptiveOffset
m_numCTUInWidth	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_numCTUInWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_numCTUsPic	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_numCTUsPic;$/;"	m	class:TComSampleAdaptiveOffset
m_numContextModels	TLibDecoder/TDecSbac.h	/^  Int                  m_numContextModels;$/;"	m	class:TDecSbac
m_numContextModels	TLibEncoder/TEncSbac.h	/^  Int                  m_numContextModels;$/;"	m	class:TEncSbac
m_numCtusInFrame	TLibCommon/TComPicSym.h	/^  UInt          m_numCtusInFrame;$/;"	m	class:TComPicSym
m_numDecodingUnitsMinus1	TLibCommon/SEI.h	/^  UInt  m_numDecodingUnitsMinus1;$/;"	m	class:SEIPictureTiming
m_numExtraSliceHeaderBits	TLibCommon/TComSlice.h	/^  Int              m_numExtraSliceHeaderBits;$/;"	m	class:TComPPS
m_numFillerFFBytes	TLibCommon/SEI.h	/^  UInt m_numFillerFFBytes;$/;"	m	class:SEIFillerPayload
m_numHrdParameters	TLibCommon/TComSlice.h	/^  UInt                  m_numHrdParameters;$/;"	m	class:TComVPS
m_numLeadingZero8BitsBytes	TLibDecoder/AnnexBread.h	/^  UInt m_numLeadingZero8BitsBytes;$/;"	m	struct:AnnexBStats
m_numLongTermRefPicSPS	TLibCommon/TComSlice.h	/^  UInt             m_numLongTermRefPicSPS;$/;"	m	class:TComSPS
m_numLongTermRefPicSPS	TLibEncoder/TEncGOP.h	/^  UInt                    m_numLongTermRefPicSPS;$/;"	m	class:TEncGOP
m_numNalusInDuMinus1	TLibCommon/SEI.h	/^  std::vector<UInt> m_numNalusInDuMinus1;$/;"	m	class:SEIPictureTiming
m_numOpSets	TLibCommon/TComSlice.h	/^  UInt                  m_numOpSets;$/;"	m	class:TComVPS
m_numPackedRegions	TLibCommon/SEI.h	/^  Int                   m_numPackedRegions;$/;"	m	class:SEIRegionWisePacking
m_numPartInCtuHeight	TLibCommon/TComPicSym.h	/^  UInt          m_numPartInCtuHeight;$/;"	m	class:TComPicSym
m_numPartInCtuWidth	TLibCommon/TComPicSym.h	/^  UInt          m_numPartInCtuWidth;$/;"	m	class:TComPicSym
m_numPartitionsInCtu	TLibCommon/TComPicSym.h	/^  UInt          m_numPartitionsInCtu;$/;"	m	class:TComPicSym
m_numPic	TLibEncoder/TEncRateCtrl.h	/^  Int m_numPic;$/;"	m	class:TEncRCGOP
m_numPicsInSopMinus1	TLibCommon/SEI.h	/^  UInt m_numPicsInSopMinus1;$/;"	m	class:SEISOPDescription
m_numPivots	TLibCommon/SEI.h	/^  Int    m_numPivots;$/;"	m	class:SEIToneMappingInfo
m_numPivots	TLibEncoder/TEncCfg.h	/^  Int       m_numPivots;$/;"	m	class:TEncCfg
m_numRefIdc	TLibCommon/TComSlice.h	/^  Int  m_numRefIdc;$/;"	m	class:TComReferencePictureSet
m_numRefIdc	TLibEncoder/TEncCfg.h	/^  Int m_numRefIdc;$/;"	m	struct:GOPEntry
m_numRefIdxL0DefaultActive	TLibCommon/TComSlice.h	/^  UInt             m_numRefIdxL0DefaultActive;$/;"	m	class:TComPPS
m_numRefIdxL1DefaultActive	TLibCommon/TComSlice.h	/^  UInt             m_numRefIdxL1DefaultActive;$/;"	m	class:TComPPS
m_numRefPics	TLibEncoder/TEncCfg.h	/^  Int m_numRefPics;$/;"	m	struct:GOPEntry
m_numRefPicsActive	TLibEncoder/TEncCfg.h	/^  Int m_numRefPicsActive;$/;"	m	struct:GOPEntry
m_numReorderPics	TLibCommon/TComSlice.h	/^  Int              m_numReorderPics[MAX_TLAYER];$/;"	m	class:TComSPS
m_numReorderPics	TLibCommon/TComSlice.h	/^  UInt                  m_numReorderPics[MAX_TLAYER];$/;"	m	class:TComVPS
m_numReorderPics	TLibEncoder/TEncCfg.h	/^  Int       m_numReorderPics[MAX_TLAYER];$/;"	m	class:TEncCfg
m_numStartCodePrefixBytes	TLibDecoder/AnnexBread.h	/^  UInt m_numStartCodePrefixBytes;$/;"	m	struct:AnnexBStats
m_numTicksPocDiffOneMinus1	TLibCommon/TComSlice.h	/^  Int  m_numTicksPocDiffOneMinus1;$/;"	m	class:TimingInfo
m_numTicksPocDiffOneMinus1	TLibEncoder/TEncCfg.h	/^  Int       m_numTicksPocDiffOneMinus1;                       \/\/\/< Number of ticks minus 1 that for a POC difference of one$/;"	m	class:TEncCfg
m_numTileColumnsMinus1	TLibCommon/TComPicSym.h	/^  Int           m_numTileColumnsMinus1;$/;"	m	class:TComPicSym
m_numTileColumnsMinus1	TLibCommon/TComSlice.h	/^  Int              m_numTileColumnsMinus1;$/;"	m	class:TComPPS
m_numTileRowsMinus1	TLibCommon/TComPicSym.h	/^  Int           m_numTileRowsMinus1;$/;"	m	class:TComPicSym
m_numTileRowsMinus1	TLibCommon/TComSlice.h	/^  Int              m_numTileRowsMinus1;$/;"	m	class:TComPPS
m_numTrailingZero8BitsBytes	TLibDecoder/AnnexBread.h	/^  UInt m_numTrailingZero8BitsBytes;$/;"	m	struct:AnnexBStats
m_numUnitsInTick	TLibCommon/TComSlice.h	/^  UInt m_numUnitsInTick;$/;"	m	class:TimingInfo
m_numZeroByteBytes	TLibDecoder/AnnexBread.h	/^  UInt m_numZeroByteBytes;$/;"	m	struct:AnnexBStats
m_num_held_bits	TLibCommon/TComBitStream.h	/^  UInt m_num_held_bits; \/\/\/ number of bits not flushed to bytestream.$/;"	m	class:TComOutputBitstream
m_num_held_bits	TLibCommon/TComBitStream.h	/^  UInt m_num_held_bits;$/;"	m	class:TComInputBitstream
m_num_tile_rects_in_set	TLibCommon/SEI.h	/^      Int     m_num_tile_rects_in_set; \/\/_minus1;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_numberOfChecksumErrorsDetected	TLibDecoder/TDecGop.h	/^  UInt                  m_numberOfChecksumErrorsDetected;$/;"	m	class:TDecGop
m_numberOfLCU	TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfLCU;$/;"	m	class:TEncRCPic
m_numberOfLCU	TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfLCU;$/;"	m	class:TEncRCSeq
m_numberOfLevel	TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfLevel;$/;"	m	class:TEncRCSeq
m_numberOfLongtermPictures	TLibCommon/TComSlice.h	/^  Int  m_numberOfLongtermPictures;$/;"	m	class:TComReferencePictureSet
m_numberOfNegativePictures	TLibCommon/TComSlice.h	/^  Int  m_numberOfNegativePictures;$/;"	m	class:TComReferencePictureSet
m_numberOfPictures	TLibCommon/TComSlice.h	/^  Int  m_numberOfPictures;$/;"	m	class:TComReferencePictureSet
m_numberOfPixel	TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfPixel;$/;"	m	class:TEncRCPic
m_numberOfPixel	TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfPixel;$/;"	m	class:TEncRCSeq
m_numberOfPixel	TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfPixel;$/;"	m	struct:TRCLCU
m_numberOfPositivePictures	TLibCommon/TComSlice.h	/^  Int  m_numberOfPositivePictures;$/;"	m	class:TComReferencePictureSet
m_numberOfSlicesInPicture	TLibDecoder/TDecConformance.h	/^  UInt  m_numberOfSlicesInPicture;$/;"	m	class:TDecConformanceCheck
m_objectConfidenceInfoPresentFlag	TLibCommon/SEI.h	/^    Bool      m_objectConfidenceInfoPresentFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_objectConfidenceLength	TLibCommon/SEI.h	/^    UInt      m_objectConfidenceLength;         \/\/ Only valid if m_objectConfidenceInfoPresentFlag$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_objectLabelLanguagePresentFlag	TLibCommon/SEI.h	/^    Bool      m_objectLabelLanguagePresentFlag; \/\/ Only valid if m_objectLabelPresentFlag$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_objectLabelPresentFlag	TLibCommon/SEI.h	/^    Bool      m_objectLabelPresentFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_occludedObjectFlag	TLibCommon/SEI.h	/^    Bool      m_occludedObjectFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_offsetStepLog2	TLibCommon/TComSampleAdaptiveOffset.h	/^  UInt m_offsetStepLog2[MAX_NUM_COMPONENT]; \/\/offset step$/;"	m	class:TComSampleAdaptiveOffset
m_omniViewportCancelFlag	TLibCommon/SEI.h	/^  Bool  m_omniViewportCancelFlag;$/;"	m	class:SEIOmniViewport
m_omniViewportCntMinus1	TLibCommon/SEI.h	/^  UChar m_omniViewportCntMinus1;$/;"	m	class:SEIOmniViewport
m_omniViewportId	TLibCommon/SEI.h	/^  UInt  m_omniViewportId;$/;"	m	class:SEIOmniViewport
m_omniViewportPersistenceFlag	TLibCommon/SEI.h	/^  Bool  m_omniViewportPersistenceFlag;$/;"	m	class:SEIOmniViewport
m_omniViewportRegions	TLibCommon/SEI.h	/^  std::vector<OmniViewport> m_omniViewportRegions;  $/;"	m	class:SEIOmniViewport
m_omniViewportSEIAzimuthCentre	TLibEncoder/TEncCfg.h	/^  std::vector<Int>  m_omniViewportSEIAzimuthCentre;$/;"	m	class:TEncCfg
m_omniViewportSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_omniViewportSEICancelFlag;$/;"	m	class:TEncCfg
m_omniViewportSEICntMinus1	TLibEncoder/TEncCfg.h	/^  UInt      m_omniViewportSEICntMinus1;$/;"	m	class:TEncCfg
m_omniViewportSEIElevationCentre	TLibEncoder/TEncCfg.h	/^  std::vector<Int>  m_omniViewportSEIElevationCentre;$/;"	m	class:TEncCfg
m_omniViewportSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_omniViewportSEIEnabled;          $/;"	m	class:TEncCfg
m_omniViewportSEIHorRange	TLibEncoder/TEncCfg.h	/^  std::vector<UInt> m_omniViewportSEIHorRange;$/;"	m	class:TEncCfg
m_omniViewportSEIId	TLibEncoder/TEncCfg.h	/^  UInt      m_omniViewportSEIId;$/;"	m	class:TEncCfg
m_omniViewportSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_omniViewportSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_omniViewportSEITiltCentre	TLibEncoder/TEncCfg.h	/^  std::vector<Int>  m_omniViewportSEITiltCentre;$/;"	m	class:TEncCfg
m_omniViewportSEIVerRange	TLibEncoder/TEncCfg.h	/^  std::vector<UInt> m_omniViewportSEIVerRange; $/;"	m	class:TEncCfg
m_onePictureOnlyConstraintFlag	TLibCommon/TComSlice.h	/^  Bool              m_onePictureOnlyConstraintFlag;$/;"	m	class:ProfileTierLevel
m_onePictureOnlyConstraintFlag	TLibEncoder/TEncCfg.h	/^  Bool              m_onePictureOnlyConstraintFlag;$/;"	m	class:TEncCfg
m_outputDRange	TLibEncoder/TEncCfg.h	/^  Int       m_outputDRange;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_outputDispLuminance	TLibEncoder/TEncCfg.h	/^  Int       m_outputDispLuminance;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_outputSliceSegmentAddress	TLibCommon/SEI.h	/^    std::vector<UInt> m_outputSliceSegmentAddress;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_overscanAppropriateFlag	TLibCommon/TComSlice.h	/^  Bool       m_overscanAppropriateFlag;$/;"	m	class:TComVUI
m_overscanAppropriateFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_overscanAppropriateFlag;                        \/\/\/< Indicates whether conformant decoded pictures are suitable for display using overscan$/;"	m	class:TEncCfg
m_overscanInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_overscanInfoPresentFlag;$/;"	m	class:TComVUI
m_overscanInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_overscanInfoPresentFlag;                        \/\/\/< Signals whether overscan_appropriate_flag is present$/;"	m	class:TEncCfg
m_pConformanceCheck	TLibDecoder/TDecCu.h	/^  TDecConformanceCheck* m_pConformanceCheck;$/;"	m	class:TDecCu
m_pConformanceCheck	TLibDecoder/TDecEntropy.h	/^  TDecConformanceCheck* m_pConformanceCheck;$/;"	m	class:TDecEntropy
m_pCtuAbove	TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuAbove;                            \/\/\/< pointer of above CTU.$/;"	m	class:TComDataCU
m_pCtuAboveLeft	TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuAboveLeft;                        \/\/\/< pointer of above-left CTU.$/;"	m	class:TComDataCU
m_pCtuAboveRight	TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuAboveRight;                       \/\/\/< pointer of above-right CTU.$/;"	m	class:TComDataCU
m_pCtuLeft	TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuLeft;                             \/\/\/< pointer of left CTU$/;"	m	class:TComDataCU
m_pDecConformanceCheck	TLibDecoder/TDecSlice.h	/^  TDecConformanceCheck *m_pDecConformanceCheck;$/;"	m	class:TDecSlice
m_pDecodedSEIOutputStream	TLibDecoder/TDecTop.h	/^  std::ostream           *m_pDecodedSEIOutputStream;$/;"	m	class:TDecTop
m_pFgcParameters	TLibCommon/SEIFilmGrainSynthesizer.h	/^  SEIFilmGrainCharacteristics *m_pFgcParameters;$/;"	m	class:SEIFilmGrainSynthesizer
m_pGrainSynt	TLibCommon/SEIFilmGrainSynthesizer.h	/^  GrainSynthesisStruct        *m_pGrainSynt;$/;"	m	class:SEIFilmGrainSynthesizer
m_pLevelTier	TLibCommon/ProfileLevelTierFeatures.h	/^    const LevelTierFeatures *m_pLevelTier;$/;"	m	class:ProfileLevelTierFeatures
m_pLevelTier	TLibDecoder/TDecConformance.h	/^    const LevelTierFeatures *m_pLevelTier;$/;"	m	class:ProfileLevelTierFeatures
m_pLumaRecBuffer	TLibCommon/TComPrediction.h	/^  Pel*   m_pLumaRecBuffer;       \/\/\/< array for downsampled reconstructed luma sample$/;"	m	class:TComPrediction
m_pParentARLBuffer	TLibCommon/TComPicSym.h	/^  TCoeff*       m_pParentARLBuffer;$/;"	m	class:TComPicSym
m_pProfile	TLibCommon/ProfileLevelTierFeatures.h	/^    const ProfileFeatures   *m_pProfile;$/;"	m	class:ProfileLevelTierFeatures
m_pProfile	TLibDecoder/TDecConformance.h	/^    const ProfileFeatures   *m_pProfile;$/;"	m	class:ProfileLevelTierFeatures
m_pRPS	TLibCommon/TComSlice.h	/^  const TComReferencePictureSet* m_pRPS;             \/\/< pointer to RPS, either in the SPS or the local RPS in the same slice header$/;"	m	class:TComSlice
m_pSharedPredTransformSkip	TLibEncoder/TEncSearch.h	/^  Pel*            m_pSharedPredTransformSkip[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_pSlice	TLibCommon/TComPicSym.h	/^    TComSlice    * m_pSlice;$/;"	m	struct:TComPicSym::DPBPerCtuData
m_pTempPel	TLibEncoder/TEncSearch.h	/^  Pel*            m_pTempPel;$/;"	m	class:TEncSearch
m_packedPictureHeight	TLibCommon/SEI.h	/^  Int                   m_packedPictureHeight;$/;"	m	class:SEIRegionWisePacking
m_packedPictureWidth	TLibCommon/SEI.h	/^  Int                   m_packedPictureWidth;$/;"	m	class:SEIRegionWisePacking
m_packedRegionHeight	TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionHeight;$/;"	m	class:SEIRegionWisePacking
m_packedRegionLeft	TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionLeft;$/;"	m	class:SEIRegionWisePacking
m_packedRegionTop	TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionTop;$/;"	m	class:SEIRegionWisePacking
m_packedRegionWidth	TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionWidth;$/;"	m	class:SEIRegionWisePacking
m_panScanRectCancelFlag	TLibCommon/SEI.h	/^  Bool m_panScanRectCancelFlag;$/;"	m	class:SEIPanScanRect
m_panScanRectId	TLibCommon/SEI.h	/^  UInt m_panScanRectId;$/;"	m	class:SEIPanScanRect
m_panScanRectPersistenceFlag	TLibCommon/SEI.h	/^  Bool m_panScanRectPersistenceFlag;$/;"	m	class:SEIPanScanRect
m_panScanRectRegions	TLibCommon/SEI.h	/^  std::vector<PanScanRect> m_panScanRectRegions;$/;"	m	class:SEIPanScanRect
m_parameterSetManager	TLibDecoder/TDecTop.h	/^  ParameterSetManager     m_parameterSetManager;  \/\/ storage for parameter sets$/;"	m	class:TDecTop
m_paramsetMap	TLibCommon/TComSlice.h	/^  std::map<Int,MapData<T> > m_paramsetMap;$/;"	m	class:ParameterSetMap
m_partialObjectFlagPresentFlag	TLibCommon/SEI.h	/^    Bool      m_partialObjectFlagPresentFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_patternStride	TLibCommon/TComPattern.h	/^  Int   m_patternStride;$/;"	m	class:TComPattern
m_pbIPCMFlag	TLibCommon/TComDataCU.h	/^  Bool*         m_pbIPCMFlag;                           \/\/\/< array of intra_pcm flags$/;"	m	class:TComDataCU
m_pbMergeFlag	TLibCommon/TComDataCU.h	/^  Bool*         m_pbMergeFlag;                          \/\/\/< array of merge flags$/;"	m	class:TComDataCU
m_pcArlCoeff	TLibCommon/TComDataCU.h	/^  TCoeff*       m_pcArlCoeff[MAX_NUM_COMPONENT];        \/\/\/< ARL coefficient buffer (0->Y, 1->Cb, 2->Cr)$/;"	m	class:TComDataCU
m_pcBinCABAC	TLibDecoder/TDecGop.h	/^  TDecBinCABAC*         m_pcBinCABAC;$/;"	m	class:TDecGop
m_pcBinCABAC	TLibEncoder/TEncCu.h	/^  TEncBinCABAC*           m_pcBinCABAC;$/;"	m	class:TEncCu
m_pcBinCABAC	TLibEncoder/TEncGOP.h	/^  TEncBinCABAC*           m_pcBinCABAC;$/;"	m	class:TEncGOP
m_pcBinCABAC	TLibEncoder/TEncSlice.h	/^  TEncBinCABAC*           m_pcBinCABAC;                         \/\/\/< Bin encoder CABAC$/;"	m	class:TEncSlice
m_pcBinIf	TLibEncoder/TEncSbac.h	/^  TEncBinIf*    m_pcBinIf;$/;"	m	class:TEncSbac
m_pcBitIf	TLibEncoder/SyntaxElementWriter.h	/^  TComBitIf*    m_pcBitIf;$/;"	m	class:SyntaxElementWriter
m_pcBitIf	TLibEncoder/TEncSbac.h	/^  TComBitIf*    m_pcBitIf;$/;"	m	class:TEncSbac
m_pcBitstream	TLibDecoder/SyntaxElementParser.h	/^  TComInputBitstream*   m_pcBitstream;$/;"	m	class:SyntaxElementParser
m_pcBitstream	TLibDecoder/TDecSbac.h	/^  TComInputBitstream* m_pcBitstream;$/;"	m	class:TDecSbac
m_pcCavlcCoder	TLibEncoder/TEncGOP.h	/^  TEncCavlc*              m_pcCavlcCoder;$/;"	m	class:TEncGOP
m_pcCavlcCoder	TLibEncoder/TEncTop.h	/^  TEncCavlc*              m_pcCavlcCoder;                       \/\/\/< CAVLC encoder$/;"	m	class:TEncTop
m_pcCavlcDecoder	TLibDecoder/TDecGop.h	/^  TDecCavlc*            m_pcCavlcDecoder;$/;"	m	class:TDecGop
m_pcCfg	TLibEncoder/SEIEncoder.h	/^  TEncCfg* m_pcCfg;$/;"	m	class:SEIEncoder
m_pcCfg	TLibEncoder/TEncGOP.h	/^  TEncCfg*                m_pcCfg;$/;"	m	class:TEncGOP
m_pcCfg	TLibEncoder/TEncSlice.h	/^  TEncCfg*                m_pcCfg;                              \/\/\/< encoder configuration class$/;"	m	class:TEncSlice
m_pcCuDecoder	TLibDecoder/TDecSlice.h	/^  TDecCu*         m_pcCuDecoder;$/;"	m	class:TDecSlice
m_pcCuEncoder	TLibEncoder/TEncSlice.h	/^  TEncCu*                 m_pcCuEncoder;                        \/\/\/< CU encoder$/;"	m	class:TEncSlice
m_pcDeblockingTempPicYuv	TLibEncoder/TEncGOP.h	/^  TComPicYuv*             m_pcDeblockingTempPicYuv;$/;"	m	class:TEncGOP
m_pcEncCfg	TLibEncoder/TEncCu.h	/^  TEncCfg*                m_pcEncCfg;$/;"	m	class:TEncCu
m_pcEncCfg	TLibEncoder/TEncSearch.h	/^  TEncCfg*        m_pcEncCfg;$/;"	m	class:TEncSearch
m_pcEncGOP	TLibEncoder/SEIEncoder.h	/^  TEncGOP* m_pcEncGOP;$/;"	m	class:SEIEncoder
m_pcEncTop	TLibEncoder/SEIEncoder.h	/^  TEncTop* m_pcEncTop;$/;"	m	class:SEIEncoder
m_pcEncTop	TLibEncoder/TEncGOP.h	/^  TEncTop*                m_pcEncTop;$/;"	m	class:TEncGOP
m_pcEntropyCoder	TLibEncoder/TEncCu.h	/^  TEncEntropy*            m_pcEntropyCoder;$/;"	m	class:TEncCu
m_pcEntropyCoder	TLibEncoder/TEncGOP.h	/^  TEncEntropy*            m_pcEntropyCoder;$/;"	m	class:TEncGOP
m_pcEntropyCoder	TLibEncoder/TEncSearch.h	/^  TEncEntropy*    m_pcEntropyCoder;$/;"	m	class:TEncSearch
m_pcEntropyCoder	TLibEncoder/TEncSlice.h	/^  TEncEntropy*            m_pcEntropyCoder;                     \/\/\/< entropy encoder$/;"	m	class:TEncSlice
m_pcEntropyCoderIf	TLibEncoder/TEncEntropy.h	/^  TEncEntropyIf*      m_pcEntropyCoderIf;$/;"	m	class:TEncEntropy
m_pcEntropyDecoder	TLibDecoder/TDecCu.h	/^  TDecEntropy*        m_pcEntropyDecoder;$/;"	m	class:TDecCu
m_pcEntropyDecoder	TLibDecoder/TDecGop.h	/^  TDecEntropy*          m_pcEntropyDecoder;$/;"	m	class:TDecGop
m_pcEntropyDecoder	TLibDecoder/TDecSlice.h	/^  TDecEntropy*    m_pcEntropyDecoder;$/;"	m	class:TDecSlice
m_pcEntropyDecoderIf	TLibDecoder/TDecEntropy.h	/^  TDecEntropyIf*  m_pcEntropyDecoderIf;$/;"	m	class:TDecEntropy
m_pcEstBitsSbac	TLibCommon/TComTrQuant.h	/^  estBitsSbacStruct* m_pcEstBitsSbac;$/;"	m	class:TComTrQuant
m_pcGOPEncoder	TLibEncoder/TEncSlice.h	/^  TEncGOP*                m_pcGOPEncoder;                       \/\/\/< GOP encoder$/;"	m	class:TEncSlice
m_pcIPCMSample	TLibCommon/TComDataCU.h	/^  Pel*          m_pcIPCMSample[MAX_NUM_COMPONENT];      \/\/\/< PCM sample buffer (0->Y, 1->Cb, 2->Cr)$/;"	m	class:TComDataCU
m_pcListPic	TLibEncoder/TEncGOP.h	/^  TComList<TComPic*>*     m_pcListPic;$/;"	m	class:TEncGOP
m_pcListPic	TLibEncoder/TEncSlice.h	/^  TComList<TComPic*>*     m_pcListPic;                          \/\/\/< list of pictures$/;"	m	class:TEncSlice
m_pcLoopFilter	TLibDecoder/TDecGop.h	/^  TComLoopFilter*       m_pcLoopFilter;$/;"	m	class:TDecGop
m_pcLoopFilter	TLibEncoder/TEncGOP.h	/^  TComLoopFilter*         m_pcLoopFilter;$/;"	m	class:TEncGOP
m_pcMv	TLibCommon/TComMotionInfo.h	/^  TComMv*   m_pcMv;$/;"	m	class:TComCUMvField
m_pcMvd	TLibCommon/TComMotionInfo.h	/^  TComMv*   m_pcMvd;$/;"	m	class:TComCUMvField
m_pcPPS	TLibCommon/TComSlice.h	/^  const TComPPS*             m_pcPPS;$/;"	m	class:TComSlice
m_pcPTL	TLibCommon/TComSlice.h	/^  TComPTL               m_pcPTL;$/;"	m	class:TComVPS
m_pcPTL	TLibCommon/TComSlice.h	/^  TComPTL          m_pcPTL;$/;"	m	class:TComSPS
m_pcPic	TLibCommon/TComDataCU.h	/^  TComPic*      m_pcPic;                                \/\/\/< picture class pointer$/;"	m	class:TComDataCU
m_pcPic	TLibCommon/TComSlice.h	/^  TComPic*                   m_pcPic;$/;"	m	class:TComSlice
m_pcPic	TLibDecoder/TDecTop.h	/^  TComPic*                m_pcPic;$/;"	m	class:TDecTop
m_pcPicYuvPred	TLibCommon/TComPic.h	/^  TComPicYuv*           m_pcPicYuvPred;           \/\/  Prediction$/;"	m	class:TComPic
m_pcPicYuvResi	TLibCommon/TComPic.h	/^  TComPicYuv*           m_pcPicYuvResi;           \/\/  Residual$/;"	m	class:TComPic
m_pcPredSearch	TLibEncoder/TEncCu.h	/^  TEncSearch*             m_pcPredSearch;$/;"	m	class:TEncCu
m_pcPredSearch	TLibEncoder/TEncSlice.h	/^  TEncSearch*             m_pcPredSearch;                       \/\/\/< encoder search class$/;"	m	class:TEncSlice
m_pcPrediction	TLibDecoder/TDecCu.h	/^  TComPrediction*     m_pcPrediction;$/;"	m	class:TDecCu
m_pcPrediction	TLibDecoder/TDecEntropy.h	/^  TComPrediction* m_pcPrediction;$/;"	m	class:TDecEntropy
m_pcQTTempTComYuv	TLibEncoder/TEncSearch.h	/^  TComYuv*        m_pcQTTempTComYuv;$/;"	m	class:TEncSearch
m_pcQTTempTUCoeff	TLibEncoder/TEncSearch.h	/^  TCoeff*         m_pcQTTempTUCoeff[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_pcQTTempTransformSkipTComYuv	TLibEncoder/TEncSearch.h	/^  TComYuv         m_pcQTTempTransformSkipTComYuv;$/;"	m	class:TEncSearch
m_pcRDGoOnSbacCoder	TLibEncoder/TEncCu.h	/^  TEncSbac*               m_pcRDGoOnSbacCoder;$/;"	m	class:TEncCu
m_pcRDGoOnSbacCoder	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncSbac*              m_pcRDGoOnSbacCoder;$/;"	m	class:TEncSampleAdaptiveOffset
m_pcRDGoOnSbacCoder	TLibEncoder/TEncSearch.h	/^  TEncSbac*       m_pcRDGoOnSbacCoder;$/;"	m	class:TEncSearch
m_pcRDGoOnSbacCoder	TLibEncoder/TEncSlice.h	/^  TEncSbac*               m_pcRDGoOnSbacCoder;                  \/\/\/< go-on SBAC encoder$/;"	m	class:TEncSlice
m_pcRateCtrl	TLibEncoder/TEncCu.h	/^  TEncRateCtrl*           m_pcRateCtrl;$/;"	m	class:TEncCu
m_pcRateCtrl	TLibEncoder/TEncGOP.h	/^  TEncRateCtrl*           m_pcRateCtrl;$/;"	m	class:TEncGOP
m_pcRateCtrl	TLibEncoder/TEncSlice.h	/^  TEncRateCtrl*           m_pcRateCtrl;                         \/\/\/< Rate control manager$/;"	m	class:TEncSlice
m_pcRdCost	TLibEncoder/TEncCu.h	/^  TComRdCost*             m_pcRdCost;$/;"	m	class:TEncCu
m_pcRdCost	TLibEncoder/TEncSearch.h	/^  TComRdCost*     m_pcRdCost;$/;"	m	class:TEncSearch
m_pcRdCost	TLibEncoder/TEncSlice.h	/^  TComRdCost*             m_pcRdCost;                           \/\/\/< RD cost computation$/;"	m	class:TEncSlice
m_pcSAO	TLibDecoder/TDecGop.h	/^  TComSampleAdaptiveOffset*     m_pcSAO;$/;"	m	class:TDecGop
m_pcSAO	TLibEncoder/TEncGOP.h	/^  TEncSampleAdaptiveOffset*  m_pcSAO;$/;"	m	class:TEncGOP
m_pcSPS	TLibCommon/TComSlice.h	/^  const TComSPS*             m_pcSPS;$/;"	m	class:TComSlice
m_pcSbacCoder	TLibEncoder/TEncGOP.h	/^  TEncSbac*               m_pcSbacCoder;$/;"	m	class:TEncGOP
m_pcSbacCoder	TLibEncoder/TEncSlice.h	/^  TEncSbac*               m_pcSbacCoder;                        \/\/\/< SBAC encoder$/;"	m	class:TEncSlice
m_pcSbacDecoder	TLibDecoder/TDecGop.h	/^  TDecSbac*             m_pcSbacDecoder;$/;"	m	class:TDecGop
m_pcSlice	TLibCommon/TComDataCU.h	/^  TComSlice*    m_pcSlice;                              \/\/\/< slice header pointer$/;"	m	class:TComDataCU
m_pcSliceDecoder	TLibDecoder/TDecGop.h	/^  TDecSlice*            m_pcSliceDecoder;$/;"	m	class:TDecGop
m_pcSliceEncoder	TLibEncoder/TEncCu.h	/^  TEncSlice*              m_pcSliceEncoder;$/;"	m	class:TEncCu
m_pcSliceEncoder	TLibEncoder/TEncGOP.h	/^  TEncSlice*              m_pcSliceEncoder;$/;"	m	class:TEncGOP
m_pcTComBitIf	TLibEncoder/TEncBinCoderCABAC.h	/^  TComBitIf*          m_pcTComBitIf;$/;"	m	class:TEncBinCABAC
m_pcTComBitstream	TLibDecoder/TDecBinCoderCABAC.h	/^  TComInputBitstream* m_pcTComBitstream;$/;"	m	class:TDecBinCABAC
m_pcTDecBinIf	TLibDecoder/TDecSbac.h	/^  TDecBinIf*        m_pcTDecBinIf;$/;"	m	class:TDecSbac
m_pcTrCoeff	TLibCommon/TComDataCU.h	/^  TCoeff*       m_pcTrCoeff[MAX_NUM_COMPONENT];         \/\/\/< array of transform coefficient buffers (0->Y, 1->Cb, 2->Cr)$/;"	m	class:TComDataCU
m_pcTrQuant	TLibDecoder/TDecCu.h	/^  TComTrQuant*        m_pcTrQuant;$/;"	m	class:TDecCu
m_pcTrQuant	TLibEncoder/TEncCu.h	/^  TComTrQuant*            m_pcTrQuant;$/;"	m	class:TEncCu
m_pcTrQuant	TLibEncoder/TEncSearch.h	/^  TComTrQuant*    m_pcTrQuant;$/;"	m	class:TEncSearch
m_pcTrQuant	TLibEncoder/TEncSlice.h	/^  TComTrQuant*            m_pcTrQuant;                          \/\/\/< transform & quantization$/;"	m	class:TEncSlice
m_pcVPS	TLibCommon/TComSlice.h	/^  const TComVPS*             m_pcVPS;$/;"	m	class:TComSlice
m_pcmBitDepths	TLibCommon/TComSlice.h	/^  Int              m_pcmBitDepths[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComSPS
m_pcmLog2MaxSize	TLibCommon/TComSlice.h	/^  UInt             m_pcmLog2MaxSize;$/;"	m	class:TComSPS
m_pcmLog2MaxSize	TLibEncoder/TEncCfg.h	/^  UInt      m_pcmLog2MaxSize;$/;"	m	class:TEncCfg
m_pePartSize	TLibCommon/TComDataCU.h	/^  SChar*        m_pePartSize;                           \/\/\/< array of partition sizes$/;"	m	class:TComDataCU
m_pePartSize	TLibCommon/TComPicSym.h	/^    SChar        * m_pePartSize;$/;"	m	struct:TComPicSym::DPBPerCtuData
m_pePredMode	TLibCommon/TComDataCU.h	/^  SChar*        m_pePredMode;                           \/\/\/< array of prediction modes$/;"	m	class:TComDataCU
m_pePredMode	TLibCommon/TComPicSym.h	/^    SChar        * m_pePredMode;$/;"	m	struct:TComPicSym::DPBPerCtuData
m_perfectReconstructionFlag	TLibCommon/SEI.h	/^  Bool                           m_perfectReconstructionFlag;$/;"	m	class:SEIChromaResamplingFilterHint
m_persistentRiceAdaptationEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_persistentRiceAdaptationEnabledFlag;$/;"	m	class:TComSPSRExt
m_persistentRiceAdaptationEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_persistentRiceAdaptationEnabledFlag;$/;"	m	class:TEncCfg
m_phQP	TLibCommon/TComDataCU.h	/^  SChar*        m_phQP;                                 \/\/\/< array of QP values$/;"	m	class:TComDataCU
m_phQTTempCrossComponentPredictionAlpha	TLibEncoder/TEncSearch.h	/^  SChar*          m_phQTTempCrossComponentPredictionAlpha[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_piPicOrg	TLibCommon/TComPicYuv.h	/^  Pel*  m_piPicOrg[MAX_NUM_COMPONENT];              \/\/\/< m_apiPicBufY + m_iMarginLuma*getStride() + m_iMarginLuma$/;"	m	class:TComPicYuv
m_piROIOrigin	TLibCommon/TComPattern.h	/^  Pel*  m_piROIOrigin;$/;"	m	class:TComPattern
m_piRefIdx	TLibCommon/TComMotionInfo.h	/^  SChar*    m_piRefIdx;$/;"	m	class:TComCUMvField
m_piYuvExt	TLibCommon/TComPrediction.h	/^  Pel*      m_piYuvExt[MAX_NUM_COMPONENT][NUM_PRED_BUF];$/;"	m	class:TComPrediction
m_picActualBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_picActualBits;          \/\/ the whole picture, including header$/;"	m	class:TEncRCPic
m_picActualHeaderBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_picActualHeaderBits;    \/\/ only SH and potential APS$/;"	m	class:TEncRCPic
m_picDpbOutputDelay	TLibCommon/SEI.h	/^  UInt  m_picDpbOutputDelay;$/;"	m	class:SEIPictureTiming
m_picDpbOutputDuDelay	TLibCommon/SEI.h	/^  UInt  m_picDpbOutputDuDelay;$/;"	m	class:SEIPictureTiming
m_picHeight	TLibCommon/TComPicYuv.h	/^  Int   m_picHeight;                                \/\/\/< Height of picture in pixels$/;"	m	class:TComPicYuv
m_picHeight	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_picHeight;$/;"	m	class:TComSampleAdaptiveOffset
m_picHeight	TLibEncoder/TEncRateCtrl.h	/^  Int m_picHeight;$/;"	m	class:TEncRCSeq
m_picHeightInLumaSamples	TLibCommon/TComSlice.h	/^  UInt             m_picHeightInLumaSamples;$/;"	m	class:TComSPS
m_picInitQPMinus26	TLibCommon/TComSlice.h	/^  Int              m_picInitQPMinus26;$/;"	m	class:TComPPS
m_picLambda	TLibEncoder/TEncRateCtrl.h	/^  Double m_picLambda;$/;"	m	class:TEncRCPic
m_picLeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_picLeft;$/;"	m	class:TEncRCGOP
m_picMSE	TLibEncoder/TEncRateCtrl.h	/^  Double m_picMSE;$/;"	m	class:TEncRCPic
m_picOrderCntDelta	TLibCommon/SEI.h	/^  UInt m_picOrderCntDelta;$/;"	m	class:SEIProgressiveRefinementSegmentStart
m_picPara	TLibEncoder/TEncRateCtrl.h	/^  TRCParameter*  m_picPara;$/;"	m	class:TEncRCSeq
m_picQP	TLibEncoder/TEncRateCtrl.h	/^  Int m_picQP;                  \/\/ in integer form$/;"	m	class:TEncRCPic
m_picSAOEnabled	TLibCommon/TComSampleAdaptiveOffset.h	/^  Bool m_picSAOEnabled[MAX_NUM_COMPONENT];$/;"	m	class:TComSampleAdaptiveOffset
m_picSptDpbOutputDuDelay	TLibCommon/SEI.h	/^  Int m_picSptDpbOutputDuDelay;$/;"	m	class:SEIDecodingUnitInfo
m_picStruct	TLibCommon/SEI.h	/^  UInt  m_picStruct;$/;"	m	class:SEIPictureTiming
m_picSym	TLibCommon/TComPic.h	/^  TComPicSym            m_picSym;                 \/\/  Symbol$/;"	m	class:TComPic
m_picTargetBitInGOP	TLibEncoder/TEncRateCtrl.h	/^  Int* m_picTargetBitInGOP;$/;"	m	class:TEncRCGOP
m_picWidth	TLibCommon/TComPicYuv.h	/^  Int   m_picWidth;                                 \/\/\/< Width of picture in pixels$/;"	m	class:TComPicYuv
m_picWidth	TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_picWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_picWidth	TLibEncoder/TEncRateCtrl.h	/^  Int m_picWidth;$/;"	m	class:TEncRCSeq
m_picWidthInLumaSamples	TLibCommon/TComSlice.h	/^  UInt             m_picWidthInLumaSamples;$/;"	m	class:TComSPS
m_picYuvPred	TLibEncoder/TEncSlice.h	/^  TComPicYuv              m_picYuvPred;                         \/\/\/< prediction picture buffer$/;"	m	class:TEncSlice
m_picYuvResi	TLibEncoder/TEncSlice.h	/^  TComPicYuv              m_picYuvResi;                         \/\/\/< residual picture buffer$/;"	m	class:TEncSlice
m_pictureCtuArray	TLibCommon/TComPicSym.h	/^  TComDataCU**  m_pictureCtuArray;        \/\/\/< array of CU data.$/;"	m	class:TComPicSym
m_pictureHash	TLibCommon/SEI.h	/^  TComPictureHash m_pictureHash;$/;"	m	class:SEIDecodedPictureHash
m_pictureTimingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_pictureTimingSEIEnabled;$/;"	m	class:TEncCfg
m_pixelsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_pixelsLeft;$/;"	m	class:TEncRCPic
m_plTempCoeff	TLibCommon/TComTrQuant.h	/^  TCoeff* m_plTempCoeff;$/;"	m	class:TComTrQuant
m_poc	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_poc;$/;"	m	class:SEIFilmGrainSynthesizer
m_pocCRA	TLibDecoder/TDecTop.h	/^  Int                     m_pocCRA;            \/\/\/< POC number of the latest CRA picture$/;"	m	class:TDecTop
m_pocCRA	TLibEncoder/TEncGOP.h	/^  Int                     m_pocCRA;$/;"	m	class:TEncGOP
m_pocLSBLT	TLibCommon/TComSlice.h	/^  Int  m_pocLSBLT[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_pocProportionalToTimingFlag	TLibCommon/TComSlice.h	/^  Bool m_pocProportionalToTimingFlag;$/;"	m	class:TimingInfo
m_pocProportionalToTimingFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_pocProportionalToTimingFlag;                    \/\/\/< Indicates that the POC value is proportional to the output time w.r.t. first picture in CVS$/;"	m	class:TEncCfg
m_pocRandomAccess	TLibDecoder/TDecTop.h	/^  Int                     m_pocRandomAccess;   \/\/\/< POC number of the random access point (the first IDR or CRA picture)$/;"	m	class:TDecTop
m_postLut	TLibCommon/SEI.h	/^  std::vector<CRIlut> m_postLut[3];$/;"	m	class:SEIColourRemappingInfo
m_postLutNumValMinus1	TLibCommon/SEI.h	/^  Int                 m_postLutNumValMinus1[3];$/;"	m	class:SEIColourRemappingInfo
m_ppcBestCU	TLibEncoder/TEncCu.h	/^  TComDataCU**            m_ppcBestCU;      \/\/\/< Best CUs in each depth$/;"	m	class:TEncCu
m_ppcCU	TLibDecoder/TDecCu.h	/^  TComDataCU**        m_ppcCU;            \/\/\/< CU data array$/;"	m	class:TDecCu
m_ppcOrigYuv	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcOrigYuv;     \/\/\/< Original Yuv for each depth$/;"	m	class:TEncCu
m_ppcPredYuvBest	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcPredYuvBest; \/\/\/< Best Prediction Yuv for each depth$/;"	m	class:TEncCu
m_ppcPredYuvTemp	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcPredYuvTemp; \/\/\/< Temporary Prediction Yuv for each depth$/;"	m	class:TEncCu
m_ppcQTTempArlCoeff	TLibEncoder/TEncSearch.h	/^  TCoeff**        m_ppcQTTempArlCoeff[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_ppcQTTempCoeff	TLibEncoder/TEncSearch.h	/^  TCoeff**        m_ppcQTTempCoeff[MAX_NUM_COMPONENT \/* 0->Y, 1->Cb, 2->Cr*\/];$/;"	m	class:TEncSearch
m_ppcQTTempTUArlCoeff	TLibEncoder/TEncSearch.h	/^  TCoeff*         m_ppcQTTempTUArlCoeff[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_ppcRecoYuvBest	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcRecoYuvBest; \/\/\/< Best Reconstruction Yuv for each depth$/;"	m	class:TEncCu
m_ppcRecoYuvTemp	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcRecoYuvTemp; \/\/\/< Temporary Reconstruction Yuv for each depth$/;"	m	class:TEncCu
m_ppcResiYuvBest	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcResiYuvBest; \/\/\/< Best Residual Yuv for each depth$/;"	m	class:TEncCu
m_ppcResiYuvTemp	TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcResiYuvTemp; \/\/\/< Temporary Residual Yuv for each depth$/;"	m	class:TEncCu
m_ppcTempCU	TLibEncoder/TEncCu.h	/^  TComDataCU**            m_ppcTempCU;      \/\/\/< Temporary CUs in each depth$/;"	m	class:TEncCu
m_ppcYuvReco	TLibDecoder/TDecCu.h	/^  TComYuv**           m_ppcYuvReco;       \/\/\/< array of prediction & reconstruction buffer$/;"	m	class:TDecCu
m_ppcYuvResi	TLibDecoder/TDecCu.h	/^  TComYuv**           m_ppcYuvResi;       \/\/\/< array of residual buffer$/;"	m	class:TDecCu
m_pppcBinCoderCABAC	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncBinCABAC**         m_pppcBinCoderCABAC;$/;"	m	class:TEncSampleAdaptiveOffset
m_pppcBinCoderCABAC	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncBinCABACCounter**  m_pppcBinCoderCABAC;$/;"	m	class:TEncSampleAdaptiveOffset
m_pppcBinCoderCABAC	TLibEncoder/TEncTop.h	/^  TEncBinCABAC***         m_pppcBinCoderCABAC;            \/\/\/< temporal CABAC state storage for RD computation$/;"	m	class:TEncTop
m_pppcBinCoderCABAC	TLibEncoder/TEncTop.h	/^  TEncBinCABACCounter***  m_pppcBinCoderCABAC;            \/\/\/< temporal CABAC state storage for RD computation$/;"	m	class:TEncTop
m_pppcRDSbacCoder	TLibEncoder/TEncCu.h	/^  TEncSbac***             m_pppcRDSbacCoder;$/;"	m	class:TEncCu
m_pppcRDSbacCoder	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncSbac**             m_pppcRDSbacCoder;$/;"	m	class:TEncSampleAdaptiveOffset
m_pppcRDSbacCoder	TLibEncoder/TEncSearch.h	/^  TEncSbac***     m_pppcRDSbacCoder;$/;"	m	class:TEncSearch
m_pppcRDSbacCoder	TLibEncoder/TEncSlice.h	/^  TEncSbac***             m_pppcRDSbacCoder;                    \/\/\/< storage for SBAC-based RD optimization$/;"	m	class:TEncSlice
m_pppcRDSbacCoder	TLibEncoder/TEncTop.h	/^  TEncSbac***             m_pppcRDSbacCoder;              \/\/\/< temporal storage for RD computation$/;"	m	class:TEncTop
m_pps	TLibCommon/TComPicSym.h	/^  TComPPS       m_pps;$/;"	m	class:TComPicSym
m_ppsDeblockingFilterDisabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_ppsDeblockingFilterDisabledFlag;$/;"	m	class:TComPPS
m_ppsMap	TLibCommon/TComSlice.h	/^  ParameterSetMap<TComPPS> m_ppsMap;$/;"	m	class:ParameterSetManager
m_ppsMap	TLibEncoder/TEncTop.h	/^  ParameterSetMap<TComPPS> m_ppsMap;                      \/\/\/< PPS. This is the base value. This is copied to TComPicSym$/;"	m	class:TEncTop
m_ppsNuhTemporalIdPlus1	TLibCommon/SEI.h	/^    std::vector<UInt> m_ppsNuhTemporalIdPlus1;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_ppsRangeExtension	TLibCommon/TComSlice.h	/^  TComPPSRExt      m_ppsRangeExtension;$/;"	m	class:TComPPS
m_ppsRbspData	TLibCommon/SEI.h	/^    std::vector< std::vector<uint8_t> > m_ppsRbspData;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_ppsRbspDataLength	TLibCommon/SEI.h	/^    std::vector<UInt> m_ppsRbspDataLength;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_preDBFstatData	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAOStatData***         m_preDBFstatData;$/;"	m	class:TEncSampleAdaptiveOffset
m_preLut	TLibCommon/SEI.h	/^  std::vector<CRIlut> m_preLut[3];$/;"	m	class:SEIColourRemappingInfo
m_preLutNumValMinus1	TLibCommon/SEI.h	/^  Int                 m_preLutNumValMinus1[3];$/;"	m	class:SEIColourRemappingInfo
m_preferredTransferCharacteristics	TLibCommon/SEI.h	/^  UInt m_preferredTransferCharacteristics;$/;"	m	class:SEIAlternativeTransferCharacteristics
m_preferredTransferCharacteristics	TLibEncoder/TEncCfg.h	/^  UChar     m_preferredTransferCharacteristics;$/;"	m	class:TEncCfg
m_prefixSEINALUs	TLibDecoder/TDecTop.h	/^  std::list<InputNALUnit*> m_prefixSEINALUs; \/\/\/ Buffered up prefix SEI NAL Units.$/;"	m	class:TDecTop
m_prevPOC	TLibDecoder/TDecTop.h	/^  Int                     m_prevPOC;$/;"	m	class:TDecTop
m_prevSliceSkipped	TLibDecoder/TDecTop.h	/^  Bool                    m_prevSliceSkipped;$/;"	m	class:TDecTop
m_prevTid0POC	TLibDecoder/TDecTop.h	/^  Int                     m_prevTid0POC;$/;"	m	class:TDecTop
m_printFrameMSE	TLibEncoder/TEncCfg.h	/^  Bool      m_printFrameMSE;$/;"	m	class:TEncCfg
m_printHexPsnr	TLibEncoder/TEncCfg.h	/^  Bool      m_printHexPsnr;$/;"	m	class:TEncCfg
m_printMSEBasedSequencePSNR	TLibEncoder/TEncCfg.h	/^  Bool      m_printMSEBasedSequencePSNR;$/;"	m	class:TEncCfg
m_printMSSSIM	TLibEncoder/TEncCfg.h	/^  Bool      m_printMSSSIM;$/;"	m	class:TEncCfg
m_printSequenceMSE	TLibEncoder/TEncCfg.h	/^  Bool      m_printSequenceMSE;$/;"	m	class:TEncCfg
m_profile	TLibEncoder/TEncCfg.h	/^  Profile::Name m_profile;$/;"	m	class:TEncCfg
m_profileCompatibilityFlag	TLibCommon/TComSlice.h	/^  Bool              m_profileCompatibilityFlag[32];$/;"	m	class:ProfileTierLevel
m_profileIdc	TLibCommon/TComSlice.h	/^  Profile::Name     m_profileIdc;$/;"	m	class:ProfileTierLevel
m_profileSpace	TLibCommon/TComSlice.h	/^  Int               m_profileSpace;$/;"	m	class:ProfileTierLevel
m_progressiveRefinementId	TLibCommon/SEI.h	/^  UInt m_progressiveRefinementId;$/;"	m	class:SEIProgressiveRefinementSegmentEnd
m_progressiveRefinementId	TLibCommon/SEI.h	/^  UInt m_progressiveRefinementId;$/;"	m	class:SEIProgressiveRefinementSegmentStart
m_progressiveSourceFlag	TLibCommon/TComSlice.h	/^  Bool              m_progressiveSourceFlag;$/;"	m	class:ProfileTierLevel
m_progressiveSourceFlag	TLibEncoder/TEncCfg.h	/^  Bool m_progressiveSourceFlag;$/;"	m	class:TEncCfg
m_projPictureHeight	TLibCommon/SEI.h	/^  Int                   m_projPictureHeight;$/;"	m	class:SEIRegionWisePacking
m_projPictureWidth	TLibCommon/SEI.h	/^  Int                   m_projPictureWidth;$/;"	m	class:SEIRegionWisePacking
m_projRegionHeight	TLibCommon/SEI.h	/^  std::vector<UInt>     m_projRegionHeight;$/;"	m	class:SEIRegionWisePacking
m_projRegionLeft	TLibCommon/SEI.h	/^  std::vector<UInt>     m_projRegionLeft;$/;"	m	class:SEIRegionWisePacking
m_projRegionWidth	TLibCommon/SEI.h	/^  std::vector<UInt>     m_projRegionWidth;$/;"	m	class:SEIRegionWisePacking
m_puhCbf	TLibCommon/TComDataCU.h	/^  UChar*        m_puhCbf[MAX_NUM_COMPONENT];            \/\/\/< array of coded block flags (CBF)$/;"	m	class:TComDataCU
m_puhDepth	TLibCommon/TComDataCU.h	/^  UChar*        m_puhDepth;                             \/\/\/< array of depths$/;"	m	class:TComDataCU
m_puhHeight	TLibCommon/TComDataCU.h	/^  UChar*        m_puhHeight;                            \/\/\/< array of heights$/;"	m	class:TComDataCU
m_puhInterDir	TLibCommon/TComDataCU.h	/^  UChar*        m_puhInterDir;                          \/\/\/< array of inter directions$/;"	m	class:TComDataCU
m_puhIntraDir	TLibCommon/TComDataCU.h	/^  UChar*        m_puhIntraDir[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComDataCU
m_puhMergeIndex	TLibCommon/TComDataCU.h	/^  UChar*        m_puhMergeIndex;                        \/\/\/< array of merge candidate indices$/;"	m	class:TComDataCU
m_puhQTTempCbf	TLibEncoder/TEncSearch.h	/^  UChar*          m_puhQTTempCbf[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_puhQTTempTrIdx	TLibEncoder/TEncSearch.h	/^  UChar*          m_puhQTTempTrIdx;$/;"	m	class:TEncSearch
m_puhQTTempTransformSkipFlag	TLibEncoder/TEncSearch.h	/^  UChar*          m_puhQTTempTransformSkipFlag[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_puhTrIdx	TLibCommon/TComDataCU.h	/^  UChar*        m_puhTrIdx;                             \/\/\/< array of transform indices$/;"	m	class:TComDataCU
m_puhTransformSkip	TLibCommon/TComDataCU.h	/^  UChar*        m_puhTransformSkip[MAX_NUM_COMPONENT];  \/\/\/< array of transform skipping flags$/;"	m	class:TComDataCU
m_puhWidth	TLibCommon/TComDataCU.h	/^  UChar*        m_puhWidth;                             \/\/\/< array of widths$/;"	m	class:TComDataCU
m_puiTileIdxMap	TLibCommon/TComPicSym.h	/^  UInt*         m_puiTileIdxMap;       \/\/\/< the map of the tile index relative to CTU raster scan address$/;"	m	class:TComPicSym
m_qpBDOffset	TLibCommon/TComSlice.h	/^  Int              m_qpBDOffset[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComSPS
m_qpDelta	TLibCommon/TComTrQuant.h	/^  Int     m_qpDelta[MAX_QP+1];$/;"	m	class:TComTrQuant
m_quantCoef	TLibCommon/TComTrQuant.h	/^  Int      *m_quantCoef            [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of quantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_quincunxSamplingFlag	TLibCommon/SEI.h	/^  Bool m_quincunxSamplingFlag;$/;"	m	class:SEIFramePacking
m_rapCpbParamsPresentFlag	TLibCommon/SEI.h	/^  Bool m_rapCpbParamsPresentFlag;$/;"	m	class:SEIBufferingPeriod
m_rapIdx	TLibEncoder/SEIEncoder.h	/^  UInt m_rapIdx;$/;"	m	class:SEIEncoder
m_rdPenalty	TLibEncoder/TEncCfg.h	/^  UInt      m_rdPenalty;$/;"	m	class:TEncCfg
m_rdpcmEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_rdpcmEnabledFlag[NUMBER_OF_RDPCM_SIGNALLING_MODES];$/;"	m	class:TComSPSRExt
m_rdpcmEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_rdpcmEnabledFlag[NUMBER_OF_RDPCM_SIGNALLING_MODES];$/;"	m	class:TEncCfg
m_recalculateQPAccordingToLambda	TLibEncoder/TEncCfg.h	/^  Bool      m_recalculateQPAccordingToLambda;                 \/\/\/< recalculate QP value according to the lambda value$/;"	m	class:TEncCfg
m_receivedSettingsOnce	TLibCommon/SEI.h	/^    Bool      m_receivedSettingsOnce; \/\/ used for decoder conformance checking. Other confidence flags must be unchanged once this flag is set.$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_reconBasedCrossCPredictionEstimate	TLibEncoder/TEncCfg.h	/^  Bool      m_reconBasedCrossCPredictionEstimate;$/;"	m	class:TEncCfg
m_recoveryPocCnt	TLibCommon/SEI.h	/^  Int  m_recoveryPocCnt;$/;"	m	class:SEIRecoveryPoint
m_recoveryPointSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_recoveryPointSEIEnabled;$/;"	m	class:TEncCfg
m_refIdc	TLibCommon/TComSlice.h	/^  Int  m_refIdc[MAX_NUM_REF_PICS+1];$/;"	m	class:TComReferencePictureSet
m_refIdc	TLibEncoder/TEncCfg.h	/^  Int m_refIdc[MAX_NUM_REF_PICS+1];$/;"	m	struct:GOPEntry
m_refMatrixId	TLibCommon/TComSlice.h	/^  UInt             m_refMatrixId                   [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< RefMatrixID$/;"	m	class:TComScalingList
m_refPic	TLibEncoder/TEncCfg.h	/^  Bool m_refPic;$/;"	m	struct:GOPEntry
m_refPicListModificationFlagL0	TLibCommon/TComSlice.h	/^  Bool m_refPicListModificationFlagL0;$/;"	m	class:TComRefPicListModification
m_refPicListModificationFlagL1	TLibCommon/TComSlice.h	/^  Bool m_refPicListModificationFlagL1;$/;"	m	class:TComRefPicListModification
m_refScreenLuminanceWhite	TLibCommon/SEI.h	/^  Int    m_refScreenLuminanceWhite;$/;"	m	class:SEIToneMappingInfo
m_refScreenLuminanceWhite	TLibEncoder/TEncCfg.h	/^  Int       m_refScreenLuminanceWhite;$/;"	m	class:TEncCfg
m_referencePics	TLibEncoder/TEncCfg.h	/^  Int m_referencePics[MAX_NUM_REF_PICS];$/;"	m	struct:GOPEntry
m_referencePictureSets	TLibCommon/TComSlice.h	/^  std::vector<TComReferencePictureSet> m_referencePictureSets;$/;"	m	class:TComRPSList
m_regionId	TLibCommon/TypeDef.h	/^  UInt m_regionId;$/;"	m	class:RNSEIWindow
m_regionalNestingSEIFileRoot	TLibEncoder/TEncCfg.h	/^  std::string m_regionalNestingSEIFileRoot;  \/\/ Regional nesting SEI - initialized from external file$/;"	m	class:TEncCfg
m_regions	TLibCommon/SEI.h	/^  RNSEIWindowVec m_regions; $/;"	m	class:RegionalSEI
m_regions	TLibCommon/SEI.h	/^  RNSEIWindowVec m_regions;$/;"	m	class:SEIRegionalNesting
m_remainingCostIntra	TLibEncoder/TEncRateCtrl.h	/^  Double m_remainingCostIntra;$/;"	m	class:TEncRCPic
m_resetEncoderStateAfterIRAP	TLibEncoder/TEncCfg.h	/^  Bool      m_resetEncoderStateAfterIRAP;$/;"	m	class:TEncCfg
m_restrictedRefPicListsFlag	TLibCommon/TComSlice.h	/^  Bool       m_restrictedRefPicListsFlag;$/;"	m	class:TComVUI
m_rightEdgePosInCtus	TLibCommon/TComPicSym.h	/^  UInt      m_rightEdgePosInCtus;$/;"	m	class:TComTile
m_rnId	TLibCommon/SEI.h	/^  UInt m_rnId;$/;"	m	class:SEIRegionalNesting
m_rnSeiMessages	TLibCommon/SEI.h	/^  std::vector< SEIListOfIndices > m_rnSeiMessages;$/;"	m	class:SEIRegionalNesting
m_roiHeight	TLibCommon/TComPattern.h	/^  Int   m_roiHeight;$/;"	m	class:TComPattern
m_roiPosX	TLibCommon/TComPattern.h	/^  Int   m_roiPosX;$/;"	m	class:TComPattern
m_roiPosY	TLibCommon/TComPattern.h	/^  Int   m_roiPosY;$/;"	m	class:TComPattern
m_roiWidth	TLibCommon/TComPattern.h	/^  Int   m_roiWidth;$/;"	m	class:TComPattern
m_rpsIdx	TLibCommon/TComSlice.h	/^  Int                        m_rpsIdx;               \/\/< index of used RPS in the SPS or -1 for local RPS in the slice header$/;"	m	class:TComSlice
m_runningTotal	TLibEncoder/TEncAnalyze.h	/^  ResultData m_runningTotal;$/;"	m	class:TEncAnalyze
m_rwpBottomGuardBandHeight	TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpBottomGuardBandHeight;$/;"	m	class:SEIRegionWisePacking
m_rwpCancelFlag	TLibCommon/SEI.h	/^  Bool                  m_rwpCancelFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpGuardBandFlag	TLibCommon/SEI.h	/^  std::vector<Bool>     m_rwpGuardBandFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpGuardBandNotUsedForPredFlag	TLibCommon/SEI.h	/^  std::vector<Bool>     m_rwpGuardBandNotUsedForPredFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpGuardBandType	TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpGuardBandType;$/;"	m	class:SEIRegionWisePacking
m_rwpLeftGuardBandWidth	TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpLeftGuardBandWidth;$/;"	m	class:SEIRegionWisePacking
m_rwpPersistenceFlag	TLibCommon/SEI.h	/^  Bool                  m_rwpPersistenceFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpProjRegionTop	TLibCommon/SEI.h	/^  std::vector<UInt>     m_rwpProjRegionTop;$/;"	m	class:SEIRegionWisePacking
m_rwpRightGuardBandWidth	TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpRightGuardBandWidth;$/;"	m	class:SEIRegionWisePacking
m_rwpSEIConstituentPictureMatchingFlag	TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIConstituentPictureMatchingFlag;$/;"	m	class:TEncCfg
m_rwpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIEnabled;$/;"	m	class:TEncCfg
m_rwpSEINumPackedRegions	TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEINumPackedRegions;$/;"	m	class:TEncCfg
m_rwpSEIPackedPictureHeight	TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIPackedPictureHeight;$/;"	m	class:TEncCfg
m_rwpSEIPackedPictureWidth	TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIPackedPictureWidth;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionHeight	TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionHeight;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionLeft	TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionLeft;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionTop	TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionTop;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionWidth	TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionWidth;$/;"	m	class:TEncCfg
m_rwpSEIProjPictureHeight	TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIProjPictureHeight;$/;"	m	class:TEncCfg
m_rwpSEIProjPictureWidth	TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIProjPictureWidth;$/;"	m	class:TEncCfg
m_rwpSEIProjRegionHeight	TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionHeight;$/;"	m	class:TEncCfg
m_rwpSEIProjRegionLeft	TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionLeft;$/;"	m	class:TEncCfg
m_rwpSEIProjRegionWidth	TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionWidth;$/;"	m	class:TEncCfg
m_rwpSEIRwpBottomGuardBandHeight	TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpBottomGuardBandHeight;$/;"	m	class:TEncCfg
m_rwpSEIRwpCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIRwpCancelFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpGuardBandFlag	TLibEncoder/TEncCfg.h	/^  std::vector<Bool>     m_rwpSEIRwpGuardBandFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpGuardBandNotUsedForPredFlag	TLibEncoder/TEncCfg.h	/^  std::vector<Bool>     m_rwpSEIRwpGuardBandNotUsedForPredFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpGuardBandType	TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpGuardBandType;$/;"	m	class:TEncCfg
m_rwpSEIRwpLeftGuardBandWidth	TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpLeftGuardBandWidth;$/;"	m	class:TEncCfg
m_rwpSEIRwpPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIRwpPersistenceFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpRightGuardBandWidth	TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpRightGuardBandWidth;$/;"	m	class:TEncCfg
m_rwpSEIRwpSEIProjRegionTop	TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIRwpSEIProjRegionTop;$/;"	m	class:TEncCfg
m_rwpSEIRwpTopGuardBandHeight	TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpTopGuardBandHeight;$/;"	m	class:TEncCfg
m_rwpSEIRwpTransformType	TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpTransformType;$/;"	m	class:TEncCfg
m_rwpTopGuardBandHeight	TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpTopGuardBandHeight;$/;"	m	class:SEIRegionWisePacking
m_rwpTransformType	TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpTransformType;$/;"	m	class:SEIRegionWisePacking
m_sHelp	TLibCommon/Debug.h	/^  std::string m_sHelp;$/;"	m	class:EnvVar
m_sName	TLibCommon/Debug.h	/^  std::string m_sName;$/;"	m	class:EnvVar
m_sVal	TLibCommon/Debug.h	/^  std::string m_sVal;$/;"	m	class:EnvVar
m_saoBlkParams	TLibCommon/TComPicSym.h	/^  SAOBlkParam  *m_saoBlkParams;$/;"	m	class:TComPicSym
m_saoCtuBoundary	TLibEncoder/TEncCfg.h	/^  Bool      m_saoCtuBoundary;$/;"	m	class:TEncCfg
m_saoDisabledRate	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Double                 m_saoDisabledRate[MAX_NUM_COMPONENT][MAX_TLAYER];$/;"	m	class:TEncSampleAdaptiveOffset
m_saoEnabledFlag	TLibCommon/TComSlice.h	/^  Bool                       m_saoEnabledFlag[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComSlice
m_saoEncodingRate	TLibEncoder/TEncCfg.h	/^  Double    m_saoEncodingRate;       \/\/ When non-0 SAO early picture termination is enabled for luma and chroma$/;"	m	class:TEncCfg
m_saoEncodingRateChroma	TLibEncoder/TEncCfg.h	/^  Double    m_saoEncodingRateChroma; \/\/ The SAO early picture termination rate to use for chroma (when m_SaoEncodingRate is >0). If <=0, use results for luma.$/;"	m	class:TEncCfg
m_sarHeight	TLibCommon/TComSlice.h	/^  Int        m_sarHeight;$/;"	m	class:TComVUI
m_sarHeight	TLibEncoder/TEncCfg.h	/^  Int       m_sarHeight;                                      \/\/\/< vertical size of the sample aspect ratio$/;"	m	class:TEncCfg
m_sarWidth	TLibCommon/TComSlice.h	/^  Int        m_sarWidth;$/;"	m	class:TComVUI
m_sarWidth	TLibEncoder/TEncCfg.h	/^  Int       m_sarWidth;                                       \/\/\/< horizontal size of the sample aspect ratio$/;"	m	class:TEncCfg
m_scalableNestingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_scalableNestingSEIEnabled;$/;"	m	class:TEncCfg
m_scalingList	TLibCommon/TComSlice.h	/^  TComScalingList  m_scalingList;                       \/\/!< ScalingList class$/;"	m	class:TComPPS
m_scalingList	TLibCommon/TComSlice.h	/^  TComScalingList  m_scalingList;$/;"	m	class:TComSPS
m_scalingListCoef	TLibCommon/TComSlice.h	/^  std::vector<Int> m_scalingListCoef               [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< quantization matrix$/;"	m	class:TComScalingList
m_scalingListDC	TLibCommon/TComSlice.h	/^  Int              m_scalingListDC                 [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< the DC value of the matrix coefficient for 16x16$/;"	m	class:TComScalingList
m_scalingListEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_scalingListEnabledFlag;$/;"	m	class:TComSPS
m_scalingListEnabledFlag	TLibCommon/TComTrQuant.h	/^  Bool     m_scalingListEnabledFlag;$/;"	m	class:TComTrQuant
m_scalingListFileName	TLibEncoder/TEncCfg.h	/^  std::string m_scalingListFileName;              \/\/\/< quantization matrix file name$/;"	m	class:TEncCfg
m_scalingListPredModeFlagIsDPCM	TLibCommon/TComSlice.h	/^  Bool             m_scalingListPredModeFlagIsDPCM [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< reference list index$/;"	m	class:TComScalingList
m_scalingListPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_scalingListPresentFlag;$/;"	m	class:TComPPS
m_scalingListPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_scalingListPresentFlag;$/;"	m	class:TComSPS
m_scanType	TLibCommon/TComRom.cpp	/^  const COEFF_SCAN_TYPE m_scanType;$/;"	m	class:ScanGenerator	file:
m_sceneId	TLibCommon/SEI.h	/^  UInt m_sceneId;$/;"	m	class:SEISceneInfo
m_sceneTransitionType	TLibCommon/SEI.h	/^  UInt m_sceneTransitionType;$/;"	m	class:SEISceneInfo
m_secondSceneId	TLibCommon/SEI.h	/^  UInt m_secondSceneId;$/;"	m	class:SEISceneInfo
m_segmentedRectFramePackingSEICancel	TLibEncoder/TEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEICancel;$/;"	m	class:TEncCfg
m_segmentedRectFramePackingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEIEnabled;$/;"	m	class:TEncCfg
m_segmentedRectFramePackingSEIPersistence	TLibEncoder/TEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEIPersistence;$/;"	m	class:TEncCfg
m_segmentedRectFramePackingSEIType	TLibEncoder/TEncCfg.h	/^  Int       m_segmentedRectFramePackingSEIType;$/;"	m	class:TEncCfg
m_seiEncoder	TLibEncoder/TEncGOP.h	/^  SEIEncoder              m_seiEncoder;$/;"	m	class:TEncGOP
m_seiMessage	TLibCommon/SEI.h	/^    SEI *m_seiMessage;$/;"	m	struct:SEIRegionalNesting::SEIListOfIndices
m_seiMessage	TLibCommon/SEI.h	/^  SEI *m_seiMessage;$/;"	m	class:RegionalSEI
m_seiReader	TLibDecoder/TDecTop.h	/^  SEIReader               m_seiReader;$/;"	m	class:TDecTop
m_seiWriter	TLibEncoder/TEncGOP.h	/^  SEIWriter               m_seiWriter;$/;"	m	class:TEncGOP
m_selfContainedCvsFlag	TLibCommon/SEI.h	/^  Bool m_selfContainedCvsFlag;$/;"	m	class:SEIActiveParameterSets
m_separateColourDescriptionPresentFlag	TLibCommon/SEI.h	/^  Bool      m_separateColourDescriptionPresentFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_seqTargetBpp	TLibEncoder/TEncRateCtrl.h	/^  Double m_seqTargetBpp;$/;"	m	class:TEncRCSeq
m_sigmoidMidpoint	TLibCommon/SEI.h	/^  Int    m_sigmoidMidpoint;$/;"	m	class:SEIToneMappingInfo
m_sigmoidMidpoint	TLibEncoder/TEncCfg.h	/^  Int       m_sigmoidMidpoint;$/;"	m	class:TEncCfg
m_sigmoidWidth	TLibCommon/SEI.h	/^  Int    m_sigmoidWidth;$/;"	m	class:SEIToneMappingInfo
m_sigmoidWidth	TLibEncoder/TEncCfg.h	/^  Int       m_sigmoidWidth;$/;"	m	class:TEncCfg
m_signDataHidingEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_signDataHidingEnabledFlag;$/;"	m	class:TComPPS
m_signLineBuf1	TLibCommon/TComSampleAdaptiveOffset.h	/^  SChar* m_signLineBuf1;$/;"	m	class:TComSampleAdaptiveOffset
m_signLineBuf2	TLibCommon/TComSampleAdaptiveOffset.h	/^  SChar* m_signLineBuf2;$/;"	m	class:TComSampleAdaptiveOffset
m_siiEnabled	TLibCommon/SEI.h	/^  Bool                  m_siiEnabled;$/;"	m	class:SEIShutterIntervalInfo
m_siiFixedSIwithinCLVS	TLibCommon/SEI.h	/^  Bool                  m_siiFixedSIwithinCLVS;$/;"	m	class:SEIShutterIntervalInfo
m_siiMaxSubLayersMinus1	TLibCommon/SEI.h	/^  UInt                  m_siiMaxSubLayersMinus1;$/;"	m	class:SEIShutterIntervalInfo
m_siiNumUnitsInShutterInterval	TLibCommon/SEI.h	/^  UInt                  m_siiNumUnitsInShutterInterval;$/;"	m	class:SEIShutterIntervalInfo
m_siiSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool                    m_siiSEIEnabled;$/;"	m	class:TEncCfg
m_siiSEINumUnitsInShutterInterval	TLibEncoder/TEncCfg.h	/^  UInt                    m_siiSEINumUnitsInShutterInterval;$/;"	m	class:TEncCfg
m_siiSEISubLayerNumUnitsInSI	TLibEncoder/TEncCfg.h	/^  std::vector<UInt>       m_siiSEISubLayerNumUnitsInSI;$/;"	m	class:TEncCfg
m_siiSEITimeScale	TLibEncoder/TEncCfg.h	/^  UInt                    m_siiSEITimeScale;$/;"	m	class:TEncCfg
m_siiSubLayerNumUnitsInSI	TLibCommon/SEI.h	/^  std::vector<UInt>     m_siiSubLayerNumUnitsInSI;$/;"	m	class:SEIShutterIntervalInfo
m_siiTimeScale	TLibCommon/SEI.h	/^  UInt                  m_siiTimeScale;$/;"	m	class:SEIShutterIntervalInfo
m_sizeX	TLibCommon/ContextModel3DBuffer.h	/^  const UInt    m_sizeX;        \/\/\/< X size of 3D buffer$/;"	m	class:ContextModel3DBuffer
m_sizeXY	TLibCommon/ContextModel3DBuffer.h	/^  const UInt    m_sizeXY;       \/\/\/< X times Y size of 3D buffer$/;"	m	class:ContextModel3DBuffer
m_sizeXYZ	TLibCommon/ContextModel3DBuffer.h	/^  const UInt    m_sizeXYZ;      \/\/\/< total size of 3D buffer$/;"	m	class:ContextModel3DBuffer
m_skipFlag	TLibCommon/TComDataCU.h	/^  Bool*         m_skipFlag;                             \/\/\/< array of skip flags$/;"	m	class:TComDataCU
m_skipLinesB	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int                    m_skipLinesB[MAX_NUM_COMPONENT][NUM_SAO_NEW_TYPES];$/;"	m	class:TEncSampleAdaptiveOffset
m_skipLinesR	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int                    m_skipLinesR[MAX_NUM_COMPONENT][NUM_SAO_NEW_TYPES];$/;"	m	class:TEncSampleAdaptiveOffset
m_skipRatio	TLibEncoder/TEncRateCtrl.h	/^  Double m_skipRatio;$/;"	m	struct:TRCParameter
m_skippedPOC	TLibDecoder/TDecTop.h	/^  Int                     m_skippedPOC;$/;"	m	class:TDecTop
m_sliceArgument	TLibCommon/TComSlice.h	/^  UInt                       m_sliceArgument;$/;"	m	class:TComSlice
m_sliceArgument	TLibEncoder/TEncCfg.h	/^  Int       m_sliceArgument;$/;"	m	class:TEncCfg
m_sliceBits	TLibCommon/TComSlice.h	/^  UInt                       m_sliceBits;$/;"	m	class:TComSlice
m_sliceChromaQpOffsetIntraOrPeriodic	TLibEncoder/TEncCfg.h	/^  Int       m_sliceChromaQpOffsetIntraOrPeriodic[2\/*Cb,Cr*\/]; \/\/\/< Chroma Cb QP Offset at slice level for I slice or for periodic inter slices as defined by SliceChromaQPOffsetPeriodicity. Replaces offset in the GOP table.$/;"	m	class:TEncCfg
m_sliceChromaQpOffsetPeriodicity	TLibEncoder/TEncCfg.h	/^  UInt      m_sliceChromaQpOffsetPeriodicity;                 \/\/\/< Used in conjunction with Slice Cb\/Cr QpOffsetIntraOrPeriodic. Use 0 (default) to disable periodic nature.$/;"	m	class:TEncCfg
m_sliceCurEndCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                       m_sliceCurEndCtuTsAddr;$/;"	m	class:TComSlice
m_sliceCurStartCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                       m_sliceCurStartCtuTsAddr;$/;"	m	class:TComSlice
m_sliceHeaderExtensionPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_sliceHeaderExtensionPresentFlag;$/;"	m	class:TComPPS
m_sliceIdx	TLibCommon/TComSlice.h	/^  UInt                       m_sliceIdx;$/;"	m	class:TComSlice
m_sliceMode	TLibCommon/TComSlice.h	/^  SliceConstraint            m_sliceMode;$/;"	m	class:TComSlice
m_sliceMode	TLibEncoder/TEncCfg.h	/^  SliceConstraint m_sliceMode;$/;"	m	class:TEncCfg
m_sliceNsamples	TLibCommon/TComTrQuant.h	/^  Int     m_sliceNsamples[LEVEL_RANGE+1];$/;"	m	class:TComTrQuant
m_sliceReorderingEnabledFlag	TLibCommon/SEI.h	/^    Bool m_sliceReorderingEnabledFlag;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_sliceSegmentArgument	TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentArgument;$/;"	m	class:TComSlice
m_sliceSegmentArgument	TLibEncoder/TEncCfg.h	/^  Int       m_sliceSegmentArgument;$/;"	m	class:TEncCfg
m_sliceSegmentBits	TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentBits;$/;"	m	class:TComSlice
m_sliceSegmentCurEndCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentCurEndCtuTsAddr;$/;"	m	class:TComSlice
m_sliceSegmentCurStartCtuTsAddr	TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentCurStartCtuTsAddr;$/;"	m	class:TComSlice
m_sliceSegmentMode	TLibCommon/TComSlice.h	/^  SliceConstraint            m_sliceSegmentMode;$/;"	m	class:TComSlice
m_sliceSegmentMode	TLibEncoder/TEncCfg.h	/^  SliceConstraint m_sliceSegmentMode;$/;"	m	class:TEncCfg
m_sliceSumC	TLibCommon/TComTrQuant.h	/^  Double  m_sliceSumC[LEVEL_RANGE+1] ;$/;"	m	class:TComTrQuant
m_sliceType	TLibEncoder/TEncCfg.h	/^  SChar m_sliceType;$/;"	m	struct:GOPEntry
m_snapshotId	TLibCommon/SEI.h	/^  UInt m_snapshotId;$/;"	m	class:SEIPictureSnapshot
m_sopDescPocDelta	TLibCommon/SEI.h	/^  Int m_sopDescPocDelta[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopDescStRpsIdx	TLibCommon/SEI.h	/^  UInt m_sopDescStRpsIdx[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopDescTemporalId	TLibCommon/SEI.h	/^  UInt m_sopDescTemporalId[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopDescVclNaluType	TLibCommon/SEI.h	/^  UInt m_sopDescVclNaluType[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopSeqParameterSetId	TLibCommon/SEI.h	/^  UInt m_sopSeqParameterSetId;$/;"	m	class:SEISOPDescription
m_sourceHeight	TLibEncoder/TEncTemporalFilter.h	/^  Int m_sourceHeight;$/;"	m	class:TEncTemporalFilter
m_sourceScanType	TLibCommon/SEI.h	/^  UInt  m_sourceScanType;$/;"	m	class:SEIPictureTiming
m_sourceWidth	TLibEncoder/TEncTemporalFilter.h	/^  Int m_sourceWidth;$/;"	m	class:TEncTemporalFilter
m_spatialFlippingFlag	TLibCommon/SEI.h	/^  Bool m_spatialFlippingFlag;$/;"	m	class:SEIFramePacking
m_sphereRotationCancelFlag	TLibCommon/SEI.h	/^  Bool  m_sphereRotationCancelFlag;$/;"	m	class:SEISphereRotation
m_sphereRotationPersistenceFlag	TLibCommon/SEI.h	/^  Bool  m_sphereRotationPersistenceFlag;$/;"	m	class:SEISphereRotation
m_sphereRotationPitch	TLibCommon/SEI.h	/^  Int   m_sphereRotationPitch;$/;"	m	class:SEISphereRotation
m_sphereRotationRoll	TLibCommon/SEI.h	/^  Int   m_sphereRotationRoll;$/;"	m	class:SEISphereRotation
m_sphereRotationSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_sphereRotationSEICancelFlag;$/;"	m	class:TEncCfg
m_sphereRotationSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_sphereRotationSEIEnabled;          $/;"	m	class:TEncCfg
m_sphereRotationSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_sphereRotationSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_sphereRotationSEIPitch	TLibEncoder/TEncCfg.h	/^  Int       m_sphereRotationSEIPitch;$/;"	m	class:TEncCfg
m_sphereRotationSEIRoll	TLibEncoder/TEncCfg.h	/^  Int       m_sphereRotationSEIRoll;$/;"	m	class:TEncCfg
m_sphereRotationSEIYaw	TLibEncoder/TEncCfg.h	/^  Int       m_sphereRotationSEIYaw;$/;"	m	class:TEncCfg
m_sphereRotationYaw	TLibCommon/SEI.h	/^  Int   m_sphereRotationYaw;$/;"	m	class:SEISphereRotation
m_sps	TLibCommon/TComPicSym.h	/^  TComSPS       m_sps;$/;"	m	class:TComPicSym
m_spsMap	TLibCommon/TComSlice.h	/^  ParameterSetMap<TComSPS> m_spsMap;$/;"	m	class:ParameterSetManager
m_spsMap	TLibEncoder/TEncTop.h	/^  ParameterSetMap<TComSPS> m_spsMap;                      \/\/\/< SPS. This is the base value. This is copied to TComPicSym$/;"	m	class:TEncTop
m_spsRangeExtension	TLibCommon/TComSlice.h	/^  TComSPSRExt      m_spsRangeExtension;$/;"	m	class:TComSPS
m_spsRbspData	TLibCommon/SEI.h	/^    std::vector< std::vector<uint8_t> > m_spsRbspData;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_spsRbspDataLength	TLibCommon/SEI.h	/^    std::vector<UInt> m_spsRbspDataLength;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_sqrtLambda	TLibCommon/TComRdCost.h	/^  Double                  m_sqrtLambda;$/;"	m	class:TComRdCost
m_stLFCUParam	TLibCommon/TComLoopFilter.h	/^  LFCUParam m_stLFCUParam;                   \/\/\/< status structure$/;"	m	class:TComLoopFilter
m_startOfCodedInterval	TLibCommon/SEI.h	/^  std::vector<Int> m_startOfCodedInterval;$/;"	m	class:SEIToneMappingInfo
m_startOfCodedInterval	TLibEncoder/TEncCfg.h	/^  Int*      m_startOfCodedInterval;$/;"	m	class:TEncCfg
m_statData	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAOStatData***         m_statData; \/\/[ctu][comp][classes]$/;"	m	class:TEncSampleAdaptiveOffset
m_state	libmd5/MD5.h	/^  context_md5_t m_state;$/;"	m	class:MD5
m_stillToCodeChromaQpOffsetFlag	TLibEncoder/TEncCu.h	/^  Bool                    m_stillToCodeChromaQpOffsetFlag; \/\/indicates whether chroma QP offset flag needs to coded at this particular CU granularity.$/;"	m	class:TEncCu
m_stride	TLibCommon/TComRom.cpp	/^  const UInt m_stride;$/;"	m	class:ScanGenerator	file:
m_subCuOffsetInBuffer	TLibCommon/TComPicYuv.h	/^  Int*  m_subCuOffsetInBuffer[MAX_NUM_CHANNEL_TYPE];\/\/\/< Gives an offset in the buffer for a given sub-CU (and channel), relative to start of CTU$/;"	m	class:TComPicYuv
m_subLayerLevelPresentFlag	TLibCommon/TComSlice.h	/^  Bool m_subLayerLevelPresentFlag   [MAX_TLAYER-1];$/;"	m	class:TComPTL
m_subLayerPTL	TLibCommon/TComSlice.h	/^  ProfileTierLevel m_subLayerPTL    [MAX_TLAYER-1];      \/\/ max. value of max_sub_layers_minus1 is MAX_TLAYER-1 (= 6)$/;"	m	class:TComPTL
m_subLayerProfilePresentFlag	TLibCommon/TComSlice.h	/^  Bool m_subLayerProfilePresentFlag [MAX_TLAYER-1];$/;"	m	class:TComPTL
m_subPicCpbParamsInPicTimingSEIFlag	TLibCommon/TComSlice.h	/^  Bool m_subPicCpbParamsInPicTimingSEIFlag;$/;"	m	class:TComHRD
m_subPicCpbParamsPresentFlag	TLibCommon/TComSlice.h	/^  Bool m_subPicCpbParamsPresentFlag;$/;"	m	class:TComHRD
m_substreamSizes	TLibCommon/TComSlice.h	/^  std::vector<UInt>          m_substreamSizes;$/;"	m	class:TComSlice
m_summaryOutFilename	TLibEncoder/TEncCfg.h	/^  std::string m_summaryOutFilename;                           \/\/\/< filename to use for producing summary output file.$/;"	m	class:TEncCfg
m_summaryPicFilenameBase	TLibEncoder/TEncCfg.h	/^  std::string m_summaryPicFilenameBase;                       \/\/\/< Base filename to use for producing summary picture output files. The actual filenames used will have I.txt, P.txt and B.txt appended.$/;"	m	class:TEncCfg
m_summaryVerboseness	TLibEncoder/TEncCfg.h	/^  UInt        m_summaryVerboseness;                           \/\/\/< Specifies the level of the verboseness of the text output.$/;"	m	class:TEncCfg
m_tMctsMvpIsValid	TLibCommon/TComDataCU.h	/^  Bool          m_tMctsMvpIsValid;$/;"	m	class:TComDataCU
m_targetBitDepth	TLibCommon/SEI.h	/^  Int    m_targetBitDepth;$/;"	m	class:SEIToneMappingInfo
m_targetBitDepth	TLibEncoder/TEncCfg.h	/^  Int       m_targetBitDepth;$/;"	m	class:TEncCfg
m_targetBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBits;$/;"	m	class:TEncRCGOP
m_targetBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBits;$/;"	m	class:TEncRCPic
m_targetBits	TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBits;$/;"	m	struct:TRCLCU
m_targetBits	TLibEncoder/TEncRateCtrl.h	/^  Int64 m_targetBits;$/;"	m	class:TEncRCSeq
m_targetBitsLeft	TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBitsLeft;$/;"	m	struct:TRCLCU
m_targetFormatIdc	TLibCommon/SEI.h	/^  Int                            m_targetFormatIdc;$/;"	m	class:SEIChromaResamplingFilterHint
m_targetPivotValue	TLibCommon/SEI.h	/^  std::vector<Int> m_targetPivotValue;$/;"	m	class:SEIToneMappingInfo
m_targetPivotValue	TLibEncoder/TEncCfg.h	/^  Int*      m_targetPivotValue;$/;"	m	class:TEncCfg
m_targetRate	TLibEncoder/TEncRateCtrl.h	/^  Int m_targetRate;$/;"	m	class:TEncRCSeq
m_tcOffsetDiv2	TLibEncoder/TEncCfg.h	/^  Int m_tcOffsetDiv2;$/;"	m	struct:GOPEntry
m_tempPicYuv	TLibCommon/TComSampleAdaptiveOffset.h	/^  TComPicYuv*   m_tempPicYuv; \/\/temporary buffer$/;"	m	class:TComSampleAdaptiveOffset
m_temporalFilterStrengths	TLibEncoder/TEncTemporalFilter.h	/^  std::map<Int, Double> m_temporalFilterStrengths;$/;"	m	class:TEncTemporalFilter
m_temporalId	TLibCommon/NAL.h	/^  UInt        m_temporalId;  \/\/\/< temporal_id$/;"	m	struct:NALUnit
m_temporalId	TLibEncoder/TEncCfg.h	/^  Int m_temporalId;$/;"	m	struct:GOPEntry
m_temporalLayerNonReferenceFlag	TLibCommon/TComSlice.h	/^  Bool                       m_temporalLayerNonReferenceFlag;$/;"	m	class:TComSlice
m_temporalLevel0IndexSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_temporalLevel0IndexSEIEnabled;$/;"	m	class:TEncCfg
m_temporalSubsampleRatio	TLibEncoder/TEncCfg.h	/^  UInt      m_temporalSubsampleRatio;$/;"	m	class:TEncCfg
m_tickDivisorMinus2	TLibCommon/TComSlice.h	/^  UInt m_tickDivisorMinus2;$/;"	m	class:TComHRD
m_tier	TLibCommon/ProfileLevelTierFeatures.h	/^    Level::Tier              m_tier;$/;"	m	class:ProfileLevelTierFeatures
m_tier	TLibDecoder/TDecConformance.h	/^    Level::Tier              m_tier;$/;"	m	class:ProfileLevelTierFeatures
m_tierFlag	TLibCommon/TComSlice.h	/^  Level::Tier       m_tierFlag;$/;"	m	class:ProfileTierLevel
m_tileColumnWidth	TLibCommon/TComSlice.h	/^  std::vector<Int> m_tileColumnWidth;$/;"	m	class:TComPPS
m_tileColumnWidth	TLibEncoder/TEncCfg.h	/^  std::vector<Int> m_tileColumnWidth;$/;"	m	class:TEncCfg
m_tileHeightInCtus	TLibCommon/TComPicSym.h	/^  UInt      m_tileHeightInCtus;$/;"	m	class:TComTile
m_tileLeftTopPelPosX	TLibCommon/TComPattern.h	/^  Int   m_tileLeftTopPelPosX;$/;"	m	class:TComPattern
m_tileLeftTopPelPosY	TLibCommon/TComPattern.h	/^  Int   m_tileLeftTopPelPosY;$/;"	m	class:TComPattern
m_tileParameters	TLibCommon/TComPicSym.h	/^  std::vector<TComTile> m_tileParameters;$/;"	m	class:TComPicSym
m_tileRightBottomPelPosX	TLibCommon/TComPattern.h	/^  Int   m_tileRightBottomPelPosX;$/;"	m	class:TComPattern
m_tileRightBottomPelPosY	TLibCommon/TComPattern.h	/^  Int   m_tileRightBottomPelPosY;$/;"	m	class:TComPattern
m_tileRowHeight	TLibCommon/TComSlice.h	/^  std::vector<Int> m_tileRowHeight;$/;"	m	class:TComPPS
m_tileRowHeight	TLibEncoder/TEncCfg.h	/^  std::vector<Int> m_tileRowHeight;$/;"	m	class:TEncCfg
m_tileUniformSpacingFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_tileUniformSpacingFlag;$/;"	m	class:TEncCfg
m_tileWidthInCtus	TLibCommon/TComPicSym.h	/^  UInt      m_tileWidthInCtus;$/;"	m	class:TComTile
m_tile_set_data	TLibCommon/SEI.h	/^  std::vector<TileSetData> m_tile_set_data;$/;"	m	class:SEITempMotionConstrainedTileSets
m_tilesEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_tilesEnabledFlag;                  \/\/!< Indicates the presence of tiles$/;"	m	class:TComPPS
m_tilesFixedStructureFlag	TLibCommon/TComSlice.h	/^  Bool       m_tilesFixedStructureFlag;$/;"	m	class:TComVUI
m_tilesFixedStructureFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_tilesFixedStructureFlag;                        \/\/\/< Indicates that each active picture parameter set has the same values of the syntax elements related to tiles$/;"	m	class:TEncCfg
m_timeCodeSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_timeCodeSEIEnabled;$/;"	m	class:TEncCfg
m_timeCodeSEINumTs	TLibEncoder/TEncCfg.h	/^  Int       m_timeCodeSEINumTs;$/;"	m	class:TEncCfg
m_timeScale	TLibCommon/TComSlice.h	/^  UInt m_timeScale;$/;"	m	class:TimingInfo
m_timeSetArray	TLibEncoder/TEncCfg.h	/^  TComSEITimeSet   m_timeSetArray[MAX_TIMECODE_SEI_SETS];$/;"	m	class:TEncCfg
m_timingInfo	TLibCommon/TComSlice.h	/^  TimingInfo            m_timingInfo;$/;"	m	class:TComVPS
m_timingInfo	TLibCommon/TComSlice.h	/^  TimingInfo m_timingInfo;$/;"	m	class:TComVUI
m_timingInfoPresentFlag	TLibCommon/TComSlice.h	/^  Bool m_timingInfoPresentFlag;$/;"	m	class:TimingInfo
m_tl0Idx	TLibEncoder/SEIEncoder.h	/^  UInt m_tl0Idx;$/;"	m	class:SEIEncoder
m_tmctsCheckEnabled	TLibDecoder/TDecConformance.h	/^  Bool m_tmctsCheckEnabled;$/;"	m	class:TDecConformanceCheck
m_tmctsCheckEnabled	TLibDecoder/TDecTop.h	/^  Bool                    m_tmctsCheckEnabled;$/;"	m	class:TDecTop
m_tmctsExtractionSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_tmctsExtractionSEIEnabled;$/;"	m	class:TEncCfg
m_tmctsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_tmctsSEIEnabled;$/;"	m	class:TEncCfg
m_tmctsSEITileConstraint	TLibEncoder/TEncCfg.h	/^  Bool      m_tmctsSEITileConstraint;$/;"	m	class:TEncCfg
m_tmpYuvPred	TLibEncoder/TEncSearch.h	/^  TComYuv         m_tmpYuvPred; \/\/ To be used in xGetInterPredictionError() to avoid constant memory allocation\/deallocation$/;"	m	class:TEncSearch
m_toneMapCancelFlag	TLibCommon/SEI.h	/^  Bool   m_toneMapCancelFlag;$/;"	m	class:SEIToneMappingInfo
m_toneMapCancelFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_toneMapCancelFlag;$/;"	m	class:TEncCfg
m_toneMapId	TLibCommon/SEI.h	/^  Int    m_toneMapId;$/;"	m	class:SEIToneMappingInfo
m_toneMapId	TLibEncoder/TEncCfg.h	/^  Int       m_toneMapId;$/;"	m	class:TEncCfg
m_toneMapPersistenceFlag	TLibCommon/SEI.h	/^  Bool   m_toneMapPersistenceFlag;$/;"	m	class:SEIToneMappingInfo
m_toneMapPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_toneMapPersistenceFlag;$/;"	m	class:TEncCfg
m_toneMappingInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Bool      m_toneMappingInfoSEIEnabled;$/;"	m	class:TEncCfg
m_top_left_tile_index	TLibCommon/SEI.h	/^      std::vector<Int> m_top_left_tile_index;  \/\/[tileSetIdx][tileIdx];$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_totalCoded	TLibEncoder/TEncGOP.h	/^  UInt                    m_totalCoded;$/;"	m	class:TEncGOP
m_totalCostIntra	TLibEncoder/TEncRateCtrl.h	/^  Double m_totalCostIntra;$/;"	m	class:TEncRCPic
m_totalFrames	TLibEncoder/TEncRateCtrl.h	/^  Int m_totalFrames;$/;"	m	class:TEncRCSeq
m_totalStates	TLibCommon/ContextModel.h	/^  static const  UInt  m_totalStates = (1 << CONTEXT_STATE_BITS) * 2; \/\/*2 for MPS = [0|1]$/;"	m	class:ContextModel
m_transferCharacteristics	TLibCommon/TComSlice.h	/^  Int        m_transferCharacteristics;$/;"	m	class:TComVUI
m_transferCharacteristics	TLibEncoder/TEncCfg.h	/^  Int       m_transferCharacteristics;                        \/\/\/< Indicates the opto-electronic transfer characteristics of the source$/;"	m	class:TEncCfg
m_transformSkipContextEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_transformSkipContextEnabledFlag;$/;"	m	class:TComSPSRExt
m_transformSkipContextEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_transformSkipContextEnabledFlag;$/;"	m	class:TEncCfg
m_transformSkipRotationEnabledFlag	TLibCommon/TComSlice.h	/^  Bool             m_transformSkipRotationEnabledFlag;$/;"	m	class:TComSPSRExt
m_transformSkipRotationEnabledFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_transformSkipRotationEnabledFlag;$/;"	m	class:TEncCfg
m_trueMotionFlag	TLibCommon/SEI.h	/^    Bool      m_trueMotionFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_ucState	TLibCommon/ContextModel.h	/^  UChar         m_ucState;                                                                  \/\/\/< internal state variable$/;"	m	class:ContextModel
m_uhTotalDepth	TLibCommon/TComPicSym.h	/^  UChar         m_uhTotalDepth;       \/\/\/< max. depth$/;"	m	class:TComPicSym
m_uhTotalDepth	TLibEncoder/TEncCu.h	/^  UChar                   m_uhTotalDepth;$/;"	m	class:TEncCu
m_uiAQPartHeight	TLibEncoder/TEncPic.h	/^  UInt                  m_uiAQPartHeight;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiAQPartWidth	TLibEncoder/TEncPic.h	/^  UInt                  m_uiAQPartWidth;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiBinsCoded	TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_uiBinsCoded;$/;"	m	class:TEncBinCABAC
m_uiBitCounter	TLibCommon/TComBitCounter.h	/^  UInt  m_uiBitCounter;$/;"	m	class:TComBitCounter
m_uiBitsForPOC	TLibCommon/TComSlice.h	/^  UInt             m_uiBitsForPOC;$/;"	m	class:TComSPS
m_uiCUPelX	TLibCommon/TComDataCU.h	/^  UInt          m_uiCUPelX;                             \/\/\/< CU position in a pixel (X)$/;"	m	class:TComDataCU
m_uiCUPelY	TLibCommon/TComDataCU.h	/^  UInt          m_uiCUPelY;                             \/\/\/< CU position in a pixel (Y)$/;"	m	class:TComDataCU
m_uiCurrSliceIdx	TLibCommon/TComPic.h	/^  UInt                  m_uiCurrSliceIdx;         \/\/ Index of current slice$/;"	m	class:TComPic
m_uiDecodingRefreshType	TLibEncoder/TEncCfg.h	/^  UInt      m_uiDecodingRefreshType;            \/\/\/< the type of decoding refresh employed for the random access.$/;"	m	class:TEncCfg
m_uiDeltaQpRD	TLibEncoder/TEncCfg.h	/^  UInt      m_uiDeltaQpRD;$/;"	m	class:TEncCfg
m_uiIntraPeriod	TLibEncoder/TEncCfg.h	/^  UInt      m_uiIntraPeriod;                    \/\/ TODO: make this an Int - it can be -1!$/;"	m	class:TEncCfg
m_uiLow	TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_uiLow;$/;"	m	class:TEncBinCABAC
m_uiMaxAQDepth	TLibEncoder/TEncPic.h	/^  UInt                      m_uiMaxAQDepth;$/;"	m	class:TEncPic
m_uiMaxCUHeight	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxCUHeight;$/;"	m	class:TComSPS
m_uiMaxCUWidth	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxCUWidth;$/;"	m	class:TComSPS
m_uiMaxCuDQPDepth	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxCuDQPDepth;$/;"	m	class:TComPPS
m_uiMaxDecPicBuffering	TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxDecPicBuffering[MAX_TLAYER];$/;"	m	class:TComVPS
m_uiMaxDecPicBuffering	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxDecPicBuffering[MAX_TLAYER];$/;"	m	class:TComSPS
m_uiMaxDepth	TLibDecoder/TDecCu.h	/^  UInt                m_uiMaxDepth;       \/\/\/< max. number of depth$/;"	m	class:TDecCu
m_uiMaxLatencyIncrease	TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxLatencyIncrease[MAX_TLAYER]; \/\/ Really max latency increase plus 1 (value 0 expresses no limit)$/;"	m	class:TComVPS
m_uiMaxLatencyIncreasePlus1	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxLatencyIncreasePlus1[MAX_TLAYER];$/;"	m	class:TComSPS
m_uiMaxLayers	TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxLayers;$/;"	m	class:TComVPS
m_uiMaxTLayers	TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxTLayers;$/;"	m	class:TComVPS
m_uiMaxTLayers	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxTLayers;           \/\/ maximum number of temporal layers$/;"	m	class:TComSPS
m_uiMaxTotalCUDepth	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxTotalCUDepth; \/\/\/< Total CU depth, relative to the smallest possible transform block size.$/;"	m	class:TComSPS
m_uiMaxTrSize	TLibCommon/TComSlice.h	/^  UInt             m_uiMaxTrSize;$/;"	m	class:TComSPS
m_uiMaxTrSize	TLibCommon/TComTrQuant.h	/^  UInt     m_uiMaxTrSize;$/;"	m	class:TComTrQuant
m_uiMinCUHeight	TLibCommon/TComPicSym.h	/^  UInt          m_uiMinCUHeight;$/;"	m	class:TComPicSym
m_uiMinCUWidth	TLibCommon/TComPicSym.h	/^  UInt          m_uiMinCUWidth;$/;"	m	class:TComPicSym
m_uiNumAQPartInHeight	TLibEncoder/TEncPic.h	/^  UInt                  m_uiNumAQPartInHeight;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiNumAQPartInWidth	TLibEncoder/TEncPic.h	/^  UInt                  m_uiNumAQPartInWidth;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiNumAllPicCoded	TLibEncoder/TEncTop.h	/^  UInt                    m_uiNumAllPicCoded;             \/\/\/< number of coded pictures$/;"	m	class:TEncTop
m_uiNumPartition	TLibCommon/TComDataCU.h	/^  UInt          m_uiNumPartition;                       \/\/\/< total number of minimum partitions in a CU$/;"	m	class:TComDataCU
m_uiNumPartition	TLibCommon/TComMotionInfo.h	/^  UInt      m_uiNumPartition;$/;"	m	class:TComCUMvField
m_uiNumPartitions	TLibCommon/TComLoopFilter.h	/^  UInt      m_uiNumPartitions;$/;"	m	class:TComLoopFilter
m_uiNumPic	TLibEncoder/TEncAnalyze.h	/^  UInt      m_uiNumPic;$/;"	m	class:TEncAnalyze
m_uiPCMLog2MinSize	TLibCommon/TComSlice.h	/^  UInt             m_uiPCMLog2MinSize;$/;"	m	class:TComSPS
m_uiPCMLog2MinSize	TLibEncoder/TEncCfg.h	/^  UInt      m_uiPCMLog2MinSize;$/;"	m	class:TEncCfg
m_uiPicDist	TLibEncoder/TEncSlice.h	/^  UInt64                  m_uiPicDist;                          \/\/\/< total distortion for the picture$/;"	m	class:TEncSlice
m_uiPicTotalBits	TLibEncoder/TEncSlice.h	/^  UInt64                  m_uiPicTotalBits;                     \/\/\/< total bits for the picture$/;"	m	class:TEncSlice
m_uiQuadtreeTULog2MaxSize	TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTULog2MaxSize;$/;"	m	class:TComSPS
m_uiQuadtreeTULog2MaxSize	TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTULog2MaxSize;$/;"	m	class:TEncCfg
m_uiQuadtreeTULog2MinSize	TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTULog2MinSize;$/;"	m	class:TComSPS
m_uiQuadtreeTULog2MinSize	TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTULog2MinSize;$/;"	m	class:TEncCfg
m_uiQuadtreeTUMaxDepthInter	TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTUMaxDepthInter;$/;"	m	class:TComSPS
m_uiQuadtreeTUMaxDepthInter	TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTUMaxDepthInter;$/;"	m	class:TEncCfg
m_uiQuadtreeTUMaxDepthIntra	TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTUMaxDepthIntra;$/;"	m	class:TComSPS
m_uiQuadtreeTUMaxDepthIntra	TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTUMaxDepthIntra;$/;"	m	class:TEncCfg
m_uiRDOQOffset	TLibCommon/TComTrQuant.h	/^  UInt     m_uiRDOQOffset;$/;"	m	class:TComTrQuant
m_uiRange	TLibDecoder/TDecBinCoderCABAC.h	/^  UInt                m_uiRange;$/;"	m	class:TDecBinCABAC
m_uiRange	TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_uiRange;$/;"	m	class:TEncBinCABAC
m_uiSliceIdx	TLibDecoder/TDecTop.h	/^  UInt                    m_uiSliceIdx;$/;"	m	class:TDecTop
m_uiSliceIdx	TLibEncoder/TEncSlice.h	/^  UInt                    m_uiSliceIdx;$/;"	m	class:TEncSlice
m_uiTLayer	TLibCommon/TComPic.h	/^  UInt                  m_uiTLayer;               \/\/  Temporal layer$/;"	m	class:TComPic
m_uiTLayer	TLibCommon/TComSlice.h	/^  UInt                       m_uiTLayer;$/;"	m	class:TComSlice
m_uiTotalBins	TLibCommon/TComDataCU.h	/^  UInt          m_uiTotalBins;                          \/\/\/< sum of partition bins$/;"	m	class:TComDataCU
m_uiTotalBits	TLibCommon/TComDataCU.h	/^  UInt          m_uiTotalBits;                          \/\/\/< sum of partition bits$/;"	m	class:TComDataCU
m_uiTotalDistortion	TLibCommon/TComDataCU.h	/^  Distortion    m_uiTotalDistortion;                    \/\/\/< sum of partition distortion$/;"	m	class:TComDataCU
m_uiValue	TLibDecoder/TDecBinCoderCABAC.h	/^  UInt                m_uiValue;$/;"	m	class:TDecBinCABAC
m_uniformSpacingFlag	TLibCommon/TComSlice.h	/^  Bool             m_uniformSpacingFlag;$/;"	m	class:TComPPS
m_unitSize	TLibCommon/TComDataCU.h	/^  Int           m_unitSize;                             \/\/\/< size of a "minimum partition"$/;"	m	class:TComDataCU
m_upsampledAspectRatio	TLibCommon/SEI.h	/^  Bool m_upsampledAspectRatio;$/;"	m	class:SEIFramePacking
m_useAMP	TLibCommon/TComSlice.h	/^  Bool             m_useAMP;$/;"	m	class:TComSPS
m_useAMP	TLibEncoder/TEncCfg.h	/^  Bool      m_useAMP;$/;"	m	class:TEncCfg
m_useDQP	TLibCommon/TComSlice.h	/^  Bool             m_useDQP;$/;"	m	class:TComPPS
m_useEarlySkipDetection	TLibEncoder/TEncCfg.h	/^  Bool      m_useEarlySkipDetection;$/;"	m	class:TEncCfg
m_useFastDecisionForMerge	TLibEncoder/TEncCfg.h	/^  Bool      m_useFastDecisionForMerge;$/;"	m	class:TEncCfg
m_useLCUSeparateModel	TLibEncoder/TEncRateCtrl.h	/^  Bool m_useLCUSeparateModel;$/;"	m	class:TEncRCSeq
m_usePCM	TLibCommon/TComSlice.h	/^  Bool             m_usePCM;$/;"	m	class:TComSPS
m_usePCM	TLibEncoder/TEncCfg.h	/^  Bool      m_usePCM;$/;"	m	class:TEncCfg
m_useRDOQ	TLibCommon/TComTrQuant.h	/^  Bool     m_useRDOQ;$/;"	m	class:TComTrQuant
m_useRDOQ	TLibEncoder/TEncCfg.h	/^  Bool      m_useRDOQ;$/;"	m	class:TEncCfg
m_useRDOQTS	TLibCommon/TComTrQuant.h	/^  Bool     m_useRDOQTS;$/;"	m	class:TComTrQuant
m_useRDOQTS	TLibEncoder/TEncCfg.h	/^  Bool      m_useRDOQTS;$/;"	m	class:TEncCfg
m_useScalingListId	TLibEncoder/TEncCfg.h	/^  ScalingListMode m_useScalingListId;             \/\/\/< Using quantization matrix i.e. 0=off, 1=default, 2=file.$/;"	m	class:TEncCfg
m_useSelectiveRDOQ	TLibCommon/TComTrQuant.h	/^  Bool     m_useSelectiveRDOQ;$/;"	m	class:TComTrQuant
m_useSelectiveRDOQ	TLibEncoder/TEncCfg.h	/^  Bool      m_useSelectiveRDOQ;$/;"	m	class:TEncCfg
m_useStrongIntraSmoothing	TLibCommon/TComSlice.h	/^  Bool             m_useStrongIntraSmoothing;$/;"	m	class:TComSPS
m_useStrongIntraSmoothing	TLibEncoder/TEncCfg.h	/^  Bool      m_useStrongIntraSmoothing;                        \/\/\/< enable the use of strong intra smoothing (bi_linear interpolation) for 32x32 blocks when reference samples are flat.$/;"	m	class:TEncCfg
m_useTransformSkip	TLibCommon/TComSlice.h	/^  Bool             m_useTransformSkip;$/;"	m	class:TComPPS
m_useTransformSkip	TLibEncoder/TEncCfg.h	/^  Bool      m_useTransformSkip;$/;"	m	class:TEncCfg
m_useTransformSkipFast	TLibCommon/TComTrQuant.h	/^  Bool     m_useTransformSkipFast;$/;"	m	class:TComTrQuant
m_useTransformSkipFast	TLibEncoder/TEncCfg.h	/^  Bool      m_useTransformSkipFast;$/;"	m	class:TEncCfg
m_useWeightedBiPred	TLibCommon/TComSlice.h	/^  Bool             m_useWeightedBiPred;                 \/\/!< Use of Weighting Bi-Prediction (B_SLICE)$/;"	m	class:TComPPS
m_useWeightedBiPred	TLibEncoder/TEncCfg.h	/^  Bool      m_useWeightedBiPred;    \/\/< Use of Bi-directional Weighting Prediction (B_SLICE)$/;"	m	class:TEncCfg
m_useWeightedPred	TLibEncoder/TEncCfg.h	/^  Bool      m_useWeightedPred;       \/\/< Use of Weighting Prediction (P_SLICE)$/;"	m	class:TEncCfg
m_used	TLibCommon/TComSlice.h	/^  Bool m_used[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_usedByCurrPic	TLibEncoder/TEncCfg.h	/^  Int m_usedByCurrPic[MAX_NUM_REF_PICS];$/;"	m	struct:GOPEntry
m_usedByCurrPicLtSPSFlag	TLibCommon/TComSlice.h	/^  Bool             m_usedByCurrPicLtSPSFlag[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TComSPS
m_userData	TLibCommon/SEI.h	/^  std::vector<UChar> m_userData;$/;"	m	class:SEIUserDataRegistered
m_userData	TLibCommon/SEI.h	/^  std::vector<UChar> m_userData;$/;"	m	class:SEIUserDataUnregistered
m_uuid_iso_iec_11578	TLibCommon/SEI.h	/^  UChar m_uuid_iso_iec_11578[ISO_IEC_11578_LEN];$/;"	m	class:SEIUserDataUnregistered
m_vRVM_RP	TLibEncoder/TEncGOP.h	/^  std::vector<Int> m_vRVM_RP;$/;"	m	class:TEncGOP
m_vSliceCUDataLink	TLibCommon/TComPic.h	/^  std::vector<std::vector<TComDataCU*> > m_vSliceCUDataLink;$/;"	m	class:TComPic
m_validPix	TLibEncoder/TEncRateCtrl.h	/^  Int    m_validPix;$/;"	m	struct:TRCParameter
m_validPixelsInPic	TLibEncoder/TEncRateCtrl.h	/^  Int m_validPixelsInPic;$/;"	m	class:TEncRCPic
m_vclHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool m_vclHrdParametersPresentFlag;$/;"	m	class:TComHRD
m_vdRdPicLambda	TLibEncoder/TEncSlice.h	/^  std::vector<Double>     m_vdRdPicLambda;                      \/\/\/< array of lambda candidates$/;"	m	class:TEncSlice
m_vdRdPicQp	TLibEncoder/TEncSlice.h	/^  std::vector<Double>     m_vdRdPicQp;                          \/\/\/< array of picture QP candidates (double-type for lambda)$/;"	m	class:TEncSlice
m_verChromaFilterIdc	TLibCommon/SEI.h	/^  Int                            m_verChromaFilterIdc;$/;"	m	class:SEIChromaResamplingFilterHint
m_verFilterCoeff	TLibCommon/SEI.h	/^  std::vector<std::vector<Int> > m_verFilterCoeff;$/;"	m	class:SEIChromaResamplingFilterHint
m_verFilteringFieldProcessingFlag	TLibCommon/SEI.h	/^  Bool                           m_verFilteringFieldProcessingFlag;$/;"	m	class:SEIChromaResamplingFilterHint
m_viRdPicQp	TLibEncoder/TEncSlice.h	/^  std::vector<Int>        m_viRdPicQp;                          \/\/\/< array of picture QP candidates (Int-type)$/;"	m	class:TEncSlice
m_videoFormat	TLibCommon/TComSlice.h	/^  Int        m_videoFormat;$/;"	m	class:TComVUI
m_videoFormat	TLibEncoder/TEncCfg.h	/^  Int       m_videoFormat;                                    \/\/\/< Indicates representation of pictures$/;"	m	class:TEncCfg
m_videoFullRangeFlag	TLibCommon/TComSlice.h	/^  Bool       m_videoFullRangeFlag;$/;"	m	class:TComVUI
m_videoFullRangeFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_videoFullRangeFlag;                             \/\/\/< Indicates the black level and range of luma and chroma signals$/;"	m	class:TEncCfg
m_videoSignalTypePresentFlag	TLibCommon/TComSlice.h	/^  Bool       m_videoSignalTypePresentFlag;$/;"	m	class:TComVUI
m_videoSignalTypePresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_videoSignalTypePresentFlag;                     \/\/\/< Signals whether video_format, video_full_range_flag, and colour_description_present_flag are present$/;"	m	class:TEncCfg
m_vpsMap	TLibCommon/TComSlice.h	/^  ParameterSetMap<TComVPS> m_vpsMap;$/;"	m	class:ParameterSetManager
m_vpsRbspData	TLibCommon/SEI.h	/^    std::vector< std::vector<uint8_t> > m_vpsRbspData;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_vpsRbspDataLength	TLibCommon/SEI.h	/^    std::vector<UInt> m_vpsRbspDataLength;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_vuiParameters	TLibCommon/TComSlice.h	/^  TComVUI          m_vuiParameters;$/;"	m	class:TComSPS
m_vuiParametersPresentFlag	TLibCommon/TComSlice.h	/^  Bool             m_vuiParametersPresentFlag;$/;"	m	class:TComSPS
m_vuiParametersPresentFlag	TLibEncoder/TEncCfg.h	/^  Bool      m_vuiParametersPresentFlag;                       \/\/\/< enable generation of VUI parameters$/;"	m	class:TEncCfg
m_warningMessageSkipPicture	TLibDecoder/TDecTop.h	/^  Bool                    m_warningMessageSkipPicture;$/;"	m	class:TDecTop
m_wcgChromaQpControl	TLibEncoder/TEncCfg.h	/^  WCGChromaQPControl m_wcgChromaQpControl;                    \/\/\/< Wide-colour-gamut chroma QP control.$/;"	m	class:TEncCfg
m_weightACDCParam	TLibCommon/TComSlice.h	/^  WPACDCParam                m_weightACDCParam[MAX_NUM_COMPONENT];$/;"	m	class:TComSlice
m_weightPredTable	TLibCommon/TComSlice.h	/^  WPScalingParam             m_weightPredTable[NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_COMPONENT]; \/\/ [REF_PIC_LIST_0 or REF_PIC_LIST_1][refIdx][0:Y, 1:U, 2:V]$/;"	m	class:TComSlice
m_weightedPredictionMethod	TLibEncoder/TEncCfg.h	/^  WeightedPredictionMethod m_weightedPredictionMethod;$/;"	m	class:TEncCfg
m_width	TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_width;$/;"	m	class:SEIFilmGrainSynthesizer
m_width	TLibEncoder/TEncTemporalFilter.h	/^  UInt m_width, m_height;$/;"	m	struct:Array2D
m_winBottomOffset	TLibCommon/TypeDef.h	/^  Int  m_winBottomOffset;$/;"	m	class:Window
m_winLeftOffset	TLibCommon/TypeDef.h	/^  Int  m_winLeftOffset;$/;"	m	class:Window
m_winRightOffset	TLibCommon/TypeDef.h	/^  Int  m_winRightOffset;$/;"	m	class:Window
m_winTopOffset	TLibCommon/TypeDef.h	/^  Int  m_winTopOffset;$/;"	m	class:Window
m_winUnitX	TLibCommon/TComSlice.cpp	/^const Int TComSPS::m_winUnitX[]={1,2,2,1};$/;"	m	class:TComSPS	file:
m_winUnitX	TLibCommon/TComSlice.h	/^  static const Int m_winUnitX[NUM_CHROMA_FORMAT];$/;"	m	class:TComSPS
m_winUnitY	TLibCommon/TComSlice.cpp	/^const Int TComSPS::m_winUnitY[]={1,2,1,1};$/;"	m	class:TComSPS	file:
m_winUnitY	TLibCommon/TComSlice.h	/^  static const Int m_winUnitY[NUM_CHROMA_FORMAT];$/;"	m	class:TComSPS
m_wp	TLibEncoder/WeightPredAnalysis.h	/^  WPScalingParam  m_wp[NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_COMPONENT];$/;"	m	class:WeightPredAnalysis
m_xsdMetricType	TLibCommon/SEI.h	/^    UInt m_xsdMetricType;$/;"	m	class:SEIGreenMetadataInfo
m_xsdMetricType	TLibEncoder/TEncCfg.h	/^  UChar     m_xsdMetricType;$/;"	m	class:TEncCfg
m_xsdMetricValue	TLibCommon/SEI.h	/^    UInt m_xsdMetricValue;$/;"	m	class:SEIGreenMetadataInfo
mainLevelTierInfo	TLibCommon/ProfileLevelTierFeatures.cpp	/^static const LevelTierFeatures mainLevelTierInfo[] =$/;"	v	file:
mainLevelTierInfo	TLibDecoder/TDecConformance.cpp	/^static const LevelTierFeatures mainLevelTierInfo[] =$/;"	v	file:
mapping	TLibCommon/TypeDef.h	/^  std::vector< std::pair<Int, Int> > mapping;          \/\/\/< first=luma level, second=delta QP.$/;"	m	struct:LumaLevelToDeltaQPMapping
mappings_ep	TLibCommon/TComCodingStatistics.h	/^        std::map<std::string, SStat> mappings_ep;$/;"	m	class:TComCodingStatistics::TComCodingStatisticsData
maxBitDepth	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     maxBitDepth;$/;"	m	struct:ProfileFeatures
maxBitDepth	TLibDecoder/TDecConformance.h	/^  UInt                     maxBitDepth;$/;"	m	struct:ProfileFeatures
maxBr	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxBr[Level::NUMBER_OF_TIERS];     \/\/ in units of BrVclFactor or BrNalFactor bits\/s$/;"	m	struct:LevelTierFeatures
maxBr	TLibDecoder/TDecConformance.h	/^  UInt        maxBr[Level::NUMBER_OF_TIERS];     \/\/ in units of BrVclFactor or BrNalFactor bits\/s$/;"	m	struct:LevelTierFeatures
maxChromaFormat	TLibCommon/ProfileLevelTierFeatures.h	/^  ChromaFormat             maxChromaFormat;$/;"	m	struct:ProfileFeatures
maxChromaFormat	TLibDecoder/TDecConformance.h	/^  ChromaFormat             maxChromaFormat;$/;"	m	struct:ProfileFeatures
maxCpb	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxCpb[Level::NUMBER_OF_TIERS];    \/\/ in units of CpbVclFactor or CpbNalFactor bits$/;"	m	struct:LevelTierFeatures
maxCpb	TLibDecoder/TDecConformance.h	/^  UInt        maxCpb[Level::NUMBER_OF_TIERS];    \/\/ in units of CpbVclFactor or CpbNalFactor bits$/;"	m	struct:LevelTierFeatures
maxLumaPs	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxLumaPs;$/;"	m	struct:LevelTierFeatures
maxLumaPs	TLibDecoder/TDecConformance.h	/^  UInt        maxLumaPs;$/;"	m	struct:LevelTierFeatures
maxLumaSr	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt64      maxLumaSr;$/;"	m	struct:LevelTierFeatures
maxLumaSr	TLibDecoder/TDecConformance.h	/^  UInt64      maxLumaSr;$/;"	m	struct:LevelTierFeatures
maxLuminance	TLibCommon/TypeDef.h	/^  UInt      maxLuminance;$/;"	m	struct:TComSEIMasteringDisplay
maxMethodWeight	TLibCommon/TypeDef.h	/^  Double                             maxMethodWeight;  \/\/\/< weight of max luma value when mode = 2$/;"	m	struct:LumaLevelToDeltaQPMapping
maxSliceSegmentsPerPicture	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxSliceSegmentsPerPicture;$/;"	m	struct:LevelTierFeatures
maxSliceSegmentsPerPicture	TLibDecoder/TDecConformance.h	/^  UInt        maxSliceSegmentsPerPicture;$/;"	m	struct:LevelTierFeatures
maxTileCols	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxTileCols;$/;"	m	struct:LevelTierFeatures
maxTileCols	TLibDecoder/TDecConformance.h	/^  UInt        maxTileCols;$/;"	m	struct:LevelTierFeatures
maxTileRows	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxTileRows;$/;"	m	struct:LevelTierFeatures
maxTileRows	TLibDecoder/TDecConformance.h	/^  UInt        maxTileRows;$/;"	m	struct:LevelTierFeatures
mbProcessLastOfLevel	TLibCommon/TComTU.h	/^    Bool          mbProcessLastOfLevel; \/\/ if true, then if size n\/2 x n\/2 is invalid, the nxn block for a channel is processed only for the last block, not the first.$/;"	m	class:TComTU
mctsHeight	TLibCommon/SEI.h	/^    UInt mctsHeight;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
mctsWidth	TLibCommon/SEI.h	/^    UInt mctsWidth;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
md5_block	TLibCommon/TComPicYuvMD5.cpp	/^static Void md5_block(MD5& md5, const Pel* plane, UInt n)$/;"	f	file:
md5_plane	TLibCommon/TComPicYuvMD5.cpp	/^static Void md5_plane(MD5& md5, const Pel* plane, UInt width, UInt height, UInt stride)$/;"	f	file:
method	TLibCommon/SEI.h	/^  HashType method;$/;"	m	class:SEIDecodedPictureHash
minCrBase	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        minCrBase[Level::NUMBER_OF_TIERS];$/;"	m	struct:LevelTierFeatures
minCrBase	TLibDecoder/TDecConformance.h	/^  UInt        minCrBase[Level::NUMBER_OF_TIERS];$/;"	m	struct:LevelTierFeatures
minCrScaleFactorx10	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     minCrScaleFactorx10;         \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
minCrScaleFactorx10	TLibDecoder/TDecConformance.h	/^  UInt                     minCrScaleFactorx10;         \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
minLuminance	TLibCommon/TypeDef.h	/^  UInt      minLuminance;$/;"	m	struct:TComSEIMasteringDisplay
minTileColumnWidthInLumaSamples	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     minTileColumnWidthInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileColumnWidthInLumaSamples	TLibDecoder/TDecConformance.h	/^  UInt                     minTileColumnWidthInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileRowHeightInLumaSamples	TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     minTileRowHeightInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileRowHeightInLumaSamples	TLibDecoder/TDecConformance.h	/^  UInt                     minTileRowHeightInLumaSamples;$/;"	m	struct:ProfileFeatures
minutesFlag	TLibCommon/TypeDef.h	/^  Bool minutesFlag;$/;"	m	struct:TComSEITimeSet
minutesValue	TLibCommon/TypeDef.h	/^  Int  minutesValue;$/;"	m	struct:TComSEITimeSet
mode	TLibCommon/TypeDef.h	/^  LumaLevelToDQPMode                 mode;             \/\/\/< use deltaQP determined by block luma level$/;"	m	struct:LumaLevelToDeltaQPMapping
modeIdc	TLibCommon/TypeDef.h	/^  SAOMode modeIdc; \/\/ NEW, MERGE, OFF$/;"	m	struct:SAOOffset
motionCompensation	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::motionCompensation ( TComDataCU* pcCU, TComYuv* pcYuvPred, RefPicList eRefPicList, Int iPartIdx )$/;"	f	class:TComPrediction
motionErrorLuma	TLibEncoder/TEncTemporalFilter.cpp	/^Int TEncTemporalFilter::motionErrorLuma(const TComPicYuv &orig,$/;"	f	class:TEncTemporalFilter
motionEstimation	TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::motionEstimation(Array2D<MotionVector> &mv, const TComPicYuv &orgPic, const TComPicYuv &buffer, const TComPicYuv &origSubsampled2, const TComPicYuv &origSubsampled4) const$/;"	f	class:TEncTemporalFilter
motionEstimationLuma	TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::motionEstimationLuma(Array2D<MotionVector> &mvs, const TComPicYuv &orig, const TComPicYuv &buffer, const Int blockSize,$/;"	f	class:TEncTemporalFilter
mpParent	TLibCommon/TComTU.h	/^    TComTU       *mpParent;$/;"	m	class:TComTU
mpcCU	TLibCommon/TComTU.h	/^    TComDataCU   *mpcCU;$/;"	m	class:TComTU
mvs	TLibEncoder/TEncTemporalFilter.h	/^  Array2D<MotionVector> mvs;$/;"	m	struct:TemporalFilterSourcePicInfo
nalUnitTypeToString	TLibCommon/TComRom.cpp	/^const TChar* nalUnitTypeToString(NalUnitType type)$/;"	f
name	Utilities/program_options_lite.cpp	/^      const string name;$/;"	m	struct:df::program_options_lite::CfgStreamParser	file:
nextSection	TLibCommon/TComTU.cpp	/^Bool TComTURecurse::nextSection(const TComTU &parent)$/;"	f	class:TComTURecurse
noWeightOffsetUnidir	TLibCommon/TComWeightPrediction.cpp	/^static inline Pel noWeightOffsetUnidir( Pel P0, Int round, Int shift, Int clipBD)$/;"	f	file:
noWeightUnidir	TLibCommon/TComWeightPrediction.cpp	/^static inline Pel noWeightUnidir( Pel P0, Int round, Int shift, Int offset, Int clipBD)$/;"	f	file:
nonDiagonalScan8x8ContextOffset	TLibCommon/ContextTables.h	/^static const UInt nonDiagonalScan8x8ContextOffset        [MAX_NUM_CHANNEL_TYPE]                          = {  6,               0              };$/;"	v
notFirstGroupNeighbourhoodContextOffset	TLibCommon/ContextTables.h	/^static const UInt notFirstGroupNeighbourhoodContextOffset[MAX_NUM_CHANNEL_TYPE]                          = {  3,               0              };$/;"	v
numClockTs	TLibCommon/SEI.h	/^  UInt numClockTs;$/;"	m	class:SEITimeCode
numEmulationPreventionBytesRead	TLibCommon/TComBitStream.h	/^  UInt      numEmulationPreventionBytesRead     ()                                   { return (UInt) m_emulationPreventionByteLocation.size();    }$/;"	f	class:TComInputBitstream
numModelValues	TLibCommon/SEI.h	/^    UChar numModelValues; \/\/ this must be the same as intensityValues[*].compModelValue.size()$/;"	m	struct:SEIFilmGrainCharacteristics::CompModel
numSpatialMVPCandidates	TLibCommon/TComMotionInfo.h	/^  UInt   numSpatialMVPCandidates;$/;"	m	struct:_AMVPInfo
numSpsIdsMinus1	TLibCommon/SEI.h	/^  Int numSpsIdsMinus1;$/;"	m	class:SEIActiveParameterSets
numUnitFieldBasedFlag	TLibCommon/TypeDef.h	/^  Bool numUnitFieldBasedFlag;$/;"	m	struct:TComSEITimeSet
numberOfFrames	TLibCommon/TypeDef.h	/^  Int  numberOfFrames;$/;"	m	struct:TComSEITimeSet
o	TLibCommon/TComSlice.h	/^  Int  o;$/;"	m	struct:WPScalingParam
objLabelIdx	TLibCommon/SEI.h	/^    UInt objLabelIdx;            \/\/ only valid if bObjectLabelValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
objectCancelFlag	TLibCommon/SEI.h	/^    Bool objectCancelFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
objectConfidence	TLibCommon/SEI.h	/^    UInt objectConfidence;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
objectLabelValid	TLibCommon/SEI.h	/^    Bool objectLabelValid;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
offset	TLibCommon/TComSlice.h	/^    Int offset[2]; \/* two chroma components *\/$/;"	m	union:ChromaQpAdj::__anon7
offset	TLibCommon/TComSlice.h	/^  Int  offset;$/;"	m	struct:WPScalingParam
offset	TLibCommon/TypeDef.h	/^  Int offset[MAX_NUM_SAO_CLASSES];$/;"	m	struct:SAOOffset
offsetBlock	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::offsetBlock(const Int channelBitDepth, Int typeIdx, Int* offset$/;"	f	class:TComSampleAdaptiveOffset
offsetCTU	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::offsetCTU(Int ctuRsAddr, TComPicYuv* srcYuv, TComPicYuv* resYuv, SAOBlkParam& saoblkParam, TComPic* pPic)$/;"	f	class:TComSampleAdaptiveOffset
offsetParam	TLibCommon/TypeDef.h	/^  SAOOffset offsetParam[MAX_NUM_COMPONENT];$/;"	m	struct:SAOBlkParam
offsetSubTUCBFs	TLibEncoder/TEncSearch.cpp	/^static Void offsetSubTUCBFs(TComTU &rTu, const ComponentID compID)$/;"	f	file:
onlyIRAPPictures	TLibCommon/ProfileLevelTierFeatures.h	/^  Bool onlyIRAPPictures()                    const { return generalIntraConstraintFlag; }$/;"	f	struct:ProfileFeatures
onlyIRAPPictures	TLibDecoder/TDecConformance.h	/^  Bool onlyIRAPPictures()                    const { return generalIntraConstraintFlag; }$/;"	f	struct:ProfileFeatures
open	Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::open( const std::string &fileName, Bool bWriteMode, const Int fileBitDepth[MAX_NUM_CHANNEL_TYPE], const Int MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE], const Int internalBitDepth[MAX_NUM_CHANNEL_TYPE] )$/;"	f	class:TVideoIOYuv
operator !=	TLibCommon/TComMv.h	/^  Bool operator!= ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator !=	TLibCommon/TypeDef.h	/^  Bool operator!=(const TComPictureHash &other) const$/;"	f	struct:TComPictureHash
operator ()	Utilities/program_options_lite.h	/^      operator()(const std::string& name, OptionFunc::Func *func, const std::string& desc = "")$/;"	f	class:df::program_options_lite::OptionSpecific
operator ()	Utilities/program_options_lite.h	/^      operator()(const std::string& name, T& storage, T default_val, const std::string& desc = "")$/;"	f	class:df::program_options_lite::OptionSpecific
operator +	TLibCommon/TComMv.h	/^  const TComMv operator + ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator +=	TLibCommon/TComCodingStatistics.h	/^      SStat &operator+=(const SStat &src)$/;"	f	struct:TComCodingStatistics::SStat
operator +=	TLibCommon/TComList.h	/^  TComList& operator += ( const TComList& rcTComList)$/;"	f	class:TComList
operator +=	TLibCommon/TComMv.h	/^  const TComMv& operator += (const TComMv& rcMv)$/;"	f	class:TComMv
operator +=	TLibDecoder/AnnexBread.h	/^  AnnexBStats& operator+=(const AnnexBStats& rhs)$/;"	f	struct:AnnexBStats
operator +=	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  const SAOStatData& operator+= (const SAOStatData& src)$/;"	f	struct:SAOStatData
operator -	TLibCommon/TComMv.h	/^  const TComMv operator - ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator -=	TLibCommon/TComMv.h	/^  const TComMv& operator-= (const TComMv& rcMv)$/;"	f	class:TComMv
operator <	TLibCommon/SEI.h	/^    bool operator < (const CRIlut& a) const$/;"	f	struct:SEIColourRemappingInfo::CRIlut
operator <<	TLibCommon/SEI.cpp	/^std::ostream& operator<<(std::ostream  &os, RNSEIWindow const &region)$/;"	f
operator <<=	TLibCommon/TComMv.h	/^  const TComMv& operator<<= (const Int i)$/;"	f	class:TComMv
operator =	TLibCommon/TComSampleAdaptiveOffset.cpp	/^const SAOBlkParam& SAOBlkParam::operator= (const SAOBlkParam& src)$/;"	f	class:SAOBlkParam
operator =	TLibCommon/TComSampleAdaptiveOffset.cpp	/^const SAOOffset& SAOOffset::operator= (const SAOOffset& src)$/;"	f	class:SAOOffset
operator =	TLibEncoder/NALwrite.h	/^  OutputNALUnit& operator=(const NALUnit& src)$/;"	f	struct:OutputNALUnit
operator =	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  const SAOStatData& operator=(const SAOStatData& src)$/;"	f	struct:SAOStatData
operator ==	TLibCommon/TComMv.h	/^  Bool operator== ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator ==	TLibCommon/TypeDef.h	/^  Bool operator == (RNSEIWindow const &rhs) const$/;"	f	class:RNSEIWindow
operator ==	TLibCommon/TypeDef.h	/^  Bool operator == (const Window &rhs) const$/;"	f	class:Window
operator ==	TLibCommon/TypeDef.h	/^  Bool operator==(const TComPictureHash &other) const$/;"	f	struct:TComPictureHash
operator >>=	TLibCommon/TComMv.h	/^  const TComMv& operator>>= (const Int i)$/;"	f	class:TComMv
operator []	TLibCommon/TypeDef.h	/^  SAOOffset& operator[](Int compIdx){ return offsetParam[compIdx];}$/;"	f	struct:SAOBlkParam
opt	Utilities/program_options_lite.h	/^        OptionBase* opt;$/;"	m	struct:df::program_options_lite::Options::Names
opt_default_val	Utilities/program_options_lite.h	/^      T opt_default_val;$/;"	m	struct:df::program_options_lite::Option
opt_desc	Utilities/program_options_lite.h	/^      std::string opt_desc;$/;"	m	struct:df::program_options_lite::OptionBase
opt_list	Utilities/program_options_lite.h	/^      NamesPtrList opt_list;$/;"	m	struct:df::program_options_lite::Options
opt_long	Utilities/program_options_lite.h	/^        std::list<std::string> opt_long;$/;"	m	struct:df::program_options_lite::Options::Names
opt_long_map	Utilities/program_options_lite.h	/^      NamesMap opt_long_map;$/;"	m	struct:df::program_options_lite::Options
opt_prefix	Utilities/program_options_lite.h	/^        std::list<std::string> opt_prefix;$/;"	m	struct:df::program_options_lite::Options::Names
opt_prefix_map	Utilities/program_options_lite.h	/^      NamesMap opt_prefix_map;$/;"	m	struct:df::program_options_lite::Options
opt_short	Utilities/program_options_lite.h	/^        std::list<std::string> opt_short;$/;"	m	struct:df::program_options_lite::Options::Names
opt_short_map	Utilities/program_options_lite.h	/^      NamesMap opt_short_map;$/;"	m	struct:df::program_options_lite::Options
opt_storage	Utilities/program_options_lite.h	/^      T& opt_storage;$/;"	m	struct:df::program_options_lite::Option
opt_string	Utilities/program_options_lite.h	/^      std::string opt_string;$/;"	m	struct:df::program_options_lite::OptionBase
opts	Utilities/program_options_lite.cpp	/^      Options& opts;$/;"	m	struct:df::program_options_lite::OptionWriter	file:
origOffset	TLibEncoder/TEncTemporalFilter.h	/^  Int                   origOffset;$/;"	m	struct:TemporalFilterSourcePicInfo
outputKneePoint	TLibEncoder/TEncCfg.h	/^    Int outputKneePoint;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation::KneePointPair
outputScalingListHelp	TLibCommon/TComSlice.cpp	/^static Void outputScalingListHelp(std::ostream &os)$/;"	f	file:
outputScalingLists	TLibCommon/TComSlice.cpp	/^Void TComScalingList::outputScalingLists(std::ostream &os) const$/;"	f	class:TComScalingList
output_sei_message_header	TLibDecoder/SEIread.cpp	/^static inline Void output_sei_message_header(SEI &sei, std::ostream *pDecodedMessageOutputStream, UInt payloadSize)$/;"	f	file:
pCur	TLibCommon/TComRdCost.h	/^  const Pel*            pCur;$/;"	m	class:DistParam
pLevelTiersListInfo	TLibCommon/ProfileLevelTierFeatures.h	/^  const LevelTierFeatures *pLevelTiersListInfo;$/;"	m	struct:ProfileFeatures
pLevelTiersListInfo	TLibDecoder/TDecConformance.h	/^  const LevelTierFeatures *pLevelTiersListInfo;$/;"	m	struct:ProfileFeatures
pNaluData	TLibCommon/TComSlice.h	/^    std::vector<UChar>   *pNaluData; \/\/ Can be null$/;"	m	struct:ParameterSetMap::MapData
pNameString	TLibCommon/ProfileLevelTierFeatures.h	/^  const TChar            *pNameString;$/;"	m	struct:ProfileFeatures
pNameString	TLibDecoder/TDecConformance.h	/^  const TChar            *pNameString;$/;"	m	struct:ProfileFeatures
pOrg	TLibCommon/TComRdCost.h	/^  const Pel*            pOrg;$/;"	m	class:DistParam
parameterSet	TLibCommon/TComSlice.h	/^    Tm*                   parameterSet;$/;"	m	struct:ParameterSetMap::MapData
parent	Utilities/program_options_lite.h	/^      Options& parent;$/;"	m	class:df::program_options_lite::OptionSpecific
parent	Utilities/program_options_lite.h	/^      Options& parent;$/;"	m	struct:df::program_options_lite::OptionFunc
parse	Utilities/program_options_lite.h	/^      void parse(const std::string& arg, ErrorReporter& error_reporter)$/;"	f	struct:df::program_options_lite::OptionFunc
parse	Utilities/program_options_lite.h	/^    Option<T>::parse(const std::string& arg, ErrorReporter&)$/;"	f	class:df::program_options_lite::Option
parse	Utilities/program_options_lite.h	/^    Option<std::string>::parse(const std::string& arg, ErrorReporter&)$/;"	f	class:df::program_options_lite::Option
parseAccessUnitDelimiter	TLibDecoder/SyntaxElementParser.cpp	/^Void AUDReader::parseAccessUnitDelimiter(TComInputBitstream* bs, UInt &picType)$/;"	f	class:AUDReader
parseCUTransquantBypassFlag	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseCUTransquantBypassFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseCUTransquantBypassFlag	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseChromaQpAdjustment	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseChromaQpAdjustment( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseChromaQpAdjustment	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx, UInt depth )$/;"	f	class:TDecSbac
parseCoeffNxN	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseCoeffNxN( TComTU &\/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseCoeffNxN	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseCoeffNxN(  TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseConfigFile	Utilities/program_options_lite.cpp	/^    void parseConfigFile(Options& opts, const string& filename, ErrorReporter& error_reporter)$/;"	f	namespace:df::program_options_lite
parseCrossComponentPrediction	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseCrossComponentPrediction( class TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseCrossComponentPrediction	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseDeltaQP	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseDeltaQP( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseDeltaQP	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseExplicitRdpcmMode	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseExplicitRdpcmMode( TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseExplicitRdpcmMode	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseExplicitRdpcmMode( TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseFillerData	TLibDecoder/SyntaxElementParser.cpp	/^Void FDReader::parseFillerData(TComInputBitstream* bs, UInt &fdSize)$/;"	f	class:FDReader
parseGNU	Utilities/program_options_lite.cpp	/^    unsigned ArgvParser::parseGNU(unsigned argc, const char* argv[])$/;"	f	class:df::program_options_lite::ArgvParser
parseHrdParameters	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseHrdParameters(TComHRD *hrd, Bool commonInfPresentFlag, UInt maxNumSubLayersMinus1)$/;"	f	class:TDecCavlc
parseIPCMInfo	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseIPCMInfo( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIPCMInfo	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseIPCMInfo ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseInterDir	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseInterDir( TComDataCU* \/*pcCU*\/, UInt& \/*ruiInterDir*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TDecCavlc
parseInterDir	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseInterDir( TComDataCU* pcCU, UInt& ruiInterDir, UInt uiAbsPartIdx )$/;"	f	class:TDecSbac
parseIntraDirChroma	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseIntraDirChroma( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIntraDirChroma	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseIntraDirChroma( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseIntraDirLumaAng	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseIntraDirLumaAng  ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIntraDirLumaAng	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseIntraDirLumaAng  ( TComDataCU* pcCU, UInt absPartIdx, UInt depth )$/;"	f	class:TDecSbac
parseLastSignificantXY	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseLastSignificantXY( UInt& uiPosLastX, UInt& uiPosLastY, Int width, Int height, ComponentID component, UInt uiScanIdx )$/;"	f	class:TDecSbac
parseMVPIdx	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMVPIdx( Int& \/*riMVPIdx*\/ )$/;"	f	class:TDecCavlc
parseMVPIdx	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMVPIdx      ( Int& riMVPIdx )$/;"	f	class:TDecSbac
parseMergeFlag	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMergeFlag ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/, UInt \/*uiPUIdx*\/ )$/;"	f	class:TDecCavlc
parseMergeFlag	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMergeFlag ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPUIdx )$/;"	f	class:TDecSbac
parseMergeIndex	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMergeIndex ( TComDataCU* \/*pcCU*\/, UInt& \/*ruiMergeIndex*\/ )$/;"	f	class:TDecCavlc
parseMergeIndex	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMergeIndex ( TComDataCU* pcCU, UInt& ruiMergeIndex )$/;"	f	class:TDecSbac
parseMvd	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMvd( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiPartIdx*\/, UInt \/*uiDepth*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TDecCavlc
parseMvd	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMvd( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth, RefPicList eRefList )$/;"	f	class:TDecSbac
parsePPS	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePPS(TComPPS* pcPPS)$/;"	f	class:TDecCavlc
parsePPS	TLibDecoder/TDecSbac.h	/^  Void  parsePPS                  ( TComPPS* \/*pcPPS*\/ ) {}$/;"	f	class:TDecSbac
parsePTL	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePTL( TComPTL *rpcPTL, Bool profilePresentFlag, Int maxNumSubLayersMinus1 )$/;"	f	class:TDecCavlc
parsePartSize	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePartSize( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parsePartSize	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parsePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parsePredMode	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePredMode( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parsePredMode	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parsePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseProfileTier	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseProfileTier(ProfileTierLevel *ptl, const Bool bIsSubLayer)$/;"	f	class:TDecCavlc
parseQtCbf	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseQtCbf( TComTU &\/*rTu*\/, const ComponentID \/*compID*\/, const Bool \/*lowestLevel*\/ )$/;"	f	class:TDecCavlc
parseQtCbf	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TDecSbac
parseQtRootCbf	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseQtRootCbf( UInt \/*uiAbsPartIdx*\/, UInt& \/*uiQtRootCbf*\/ )$/;"	f	class:TDecCavlc
parseQtRootCbf	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseQtRootCbf( UInt uiAbsPartIdx, UInt& uiQtRootCbf )$/;"	f	class:TDecSbac
parseRefFrmIdx	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseRefFrmIdx( TComDataCU* \/*pcCU*\/, Int& \/*riRefFrmIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TDecCavlc
parseRefFrmIdx	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseRefFrmIdx( TComDataCU* pcCU, Int& riRefFrmIdx, RefPicList eRefList )$/;"	f	class:TDecSbac
parseRemainingBytes	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseRemainingBytes( Bool noTrailingBytesExpected )$/;"	f	class:TDecCavlc
parseRemainingBytes	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseRemainingBytes( Bool noTrailingBytesExpected )$/;"	f	class:TDecSbac
parseSAOBlkParam	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSAOBlkParam (SAOBlkParam& saoBlkParam$/;"	f	class:TDecSbac
parseSEImessage	TLibDecoder/SEIread.cpp	/^Void SEIReader::parseSEImessage(TComInputBitstream* bs, SEIMessages& seis, const NalUnitType nalUnitType, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
parseSHORT	Utilities/program_options_lite.cpp	/^    unsigned ArgvParser::parseSHORT(unsigned argc, const char* argv[])$/;"	f	class:df::program_options_lite::ArgvParser
parseSPS	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSPS(TComSPS* pcSPS)$/;"	f	class:TDecCavlc
parseSPS	TLibDecoder/TDecSbac.h	/^  Void  parseSPS                  ( TComSPS* \/*pcSPS*\/ ) {}$/;"	f	class:TDecSbac
parseSaoMaxUvlc	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoMaxUvlc ( UInt& val, UInt maxSymbol )$/;"	f	class:TDecSbac
parseSaoMerge	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoMerge (UInt&  ruiVal)$/;"	f	class:TDecSbac
parseSaoSign	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoSign(UInt& val)$/;"	f	class:TDecSbac
parseSaoTypeIdx	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoTypeIdx (UInt&  ruiVal)$/;"	f	class:TDecSbac
parseSaoUflc	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoUflc (UInt uiLength, UInt&  riVal)$/;"	f	class:TDecSbac
parseScalingList	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseScalingList(TComScalingList* scalingList)$/;"	f	class:TDecCavlc
parseScalingList	TLibDecoder/TDecSbac.h	/^  Void  parseScalingList ( TComScalingList* \/*scalingList*\/ ) {}$/;"	f	class:TDecSbac
parseShortTermRefPicSet	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseShortTermRefPicSet( TComSPS* sps, TComReferencePictureSet* rps, Int idx )$/;"	f	class:TDecCavlc
parseSkipFlag	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSkipFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseSkipFlag	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseSliceHeader	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSliceHeader (TComSlice* pcSlice, ParameterSetManager *parameterSetManager, const Int prevTid0POC)$/;"	f	class:TDecCavlc
parseSliceHeader	TLibDecoder/TDecSbac.h	/^  Void  parseSliceHeader          ( TComSlice* \/*pcSlice*\/, ParameterSetManager* \/*parameterSetManager*\/, const Int \/*prevTid0POC*\/) {}$/;"	f	class:TDecSbac
parseSplitFlag	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSplitFlag     ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseSplitFlag	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSplitFlag     ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseTerminatingBit	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseTerminatingBit( UInt& ruiBit )$/;"	f	class:TDecCavlc
parseTerminatingBit	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseTerminatingBit( UInt& ruiBit )$/;"	f	class:TDecSbac
parseTransformSkipFlags	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseTransformSkipFlags (TComTU &\/*rTu*\/, ComponentID \/*component*\/)$/;"	f	class:TDecCavlc
parseTransformSkipFlags	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseTransformSkipFlags (TComTU &rTu, ComponentID component)$/;"	f	class:TDecSbac
parseTransformSubdivFlag	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseTransformSubdivFlag( UInt& \/*ruiSubdivFlag*\/, UInt \/*uiLog2TransformBlockSize*\/ )$/;"	f	class:TDecCavlc
parseTransformSubdivFlag	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseTransformSubdivFlag( UInt& ruiSubdivFlag, UInt uiLog2TransformBlockSize )$/;"	f	class:TDecSbac
parseVPS	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseVPS(TComVPS* pcVPS)$/;"	f	class:TDecCavlc
parseVPS	TLibDecoder/TDecSbac.h	/^  Void  parseVPS                  ( TComVPS* \/*pcVPS*\/ ) {}$/;"	f	class:TDecSbac
parseVUI	TLibDecoder/TDecCAVLC.cpp	/^Void  TDecCavlc::parseVUI(TComVUI* pcVUI, TComSPS *pcSPS)$/;"	f	class:TDecCavlc
partIdxStepShift	TLibCommon/TComTU.cpp	/^static     const UInt         partIdxStepShift  [TComTU::NUMBER_OF_SPLIT_MODES] = { 0, 1, 2 };$/;"	v	file:
partSizeToString	TLibCommon/Debug.cpp	/^const TChar *partSizeToString[NUMBER_OF_PART_SIZES]={"2Nx2N(0)", "2NxN(1)", "Nx2N(2)", "NxN(3)", "2Nx(N\/2+3N\/2)(4)", "2Nx(3N\/2+N\/2)(5)", "(N\/2+3N\/2)x2N(6)", "(3N\/2+N\/2)x2N(7)"};$/;"	v
partialButterfly16	TLibCommon/TComTrQuant.cpp	/^Void partialButterfly16(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterfly32	TLibCommon/TComTrQuant.cpp	/^Void partialButterfly32(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterfly4	TLibCommon/TComTrQuant.cpp	/^Void partialButterfly4(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterfly8	TLibCommon/TComTrQuant.cpp	/^Void partialButterfly8(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterflyInverse16	TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse16(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialButterflyInverse32	TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse32(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialButterflyInverse4	TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse4(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialButterflyInverse8	TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse8(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialObjectFlag	TLibCommon/SEI.h	/^    Bool partialObjectFlag;        \/\/ only valid if bPartialObjectFlagValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
payloadType	TLibCommon/SEI.h	/^    PayloadType payloadType() const { return  DEINTERLACE_FIELD_IDENTIFICATION; }$/;"	f	class:SEIDeinterlaceFieldIdentification
payloadType	TLibCommon/SEI.h	/^    PayloadType payloadType() const { return CONTENT_LIGHT_LEVEL_INFO; }$/;"	f	class:SEIContentLightLevelInfo
payloadType	TLibCommon/SEI.h	/^    PayloadType payloadType() const { return GREEN_METADATA; }$/;"	f	class:SEIGreenMetadataInfo
payloadType	TLibCommon/SEI.h	/^    PayloadType payloadType() const { return MASTERING_DISPLAY_COLOUR_VOLUME; }$/;"	f	class:SEIMasteringDisplayColourVolume
payloadType	TLibCommon/SEI.h	/^    PayloadType payloadType() const { return MCTS_EXTRACTION_INFO_SET; }$/;"	f	class:SEIMCTSExtractionInfoSet
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return ACTIVE_PARAMETER_SETS; }$/;"	f	class:SEIActiveParameterSets
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return ALTERNATIVE_TRANSFER_CHARACTERISTICS; }$/;"	f	class:SEIAlternativeTransferCharacteristics
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return AMBIENT_VIEWING_ENVIRONMENT; }$/;"	f	class:SEIAmbientViewingEnvironment
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return ANNOTATED_REGIONS; }$/;"	f	class:SEIAnnotatedRegions
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return BUFFERING_PERIOD; }$/;"	f	class:SEIBufferingPeriod
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return CODED_REGION_COMPLETION; }$/;"	f	class:SEICodedRegionCompletion
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return COLOUR_REMAPPING_INFO; }$/;"	f	class:SEIColourRemappingInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return CONTENT_COLOUR_VOLUME; }$/;"	f	class:SEIContentColourVolume
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return CUBEMAP_PROJECTION; }$/;"	f	class:SEICubemapProjection
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DECODED_PICTURE_HASH; }$/;"	f	class:SEIDecodedPictureHash
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DECODING_UNIT_INFO; }$/;"	f	class:SEIDecodingUnitInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DEPENDENT_RAP_INDICATION; }$/;"	f	class:SEIDependentRAPIndication
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DISPLAY_ORIENTATION; }$/;"	f	class:SEIDisplayOrientation
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return EQUIRECTANGULAR_PROJECTION; }$/;"	f	class:SEIEquirectangularProjection
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FILLER_PAYLOAD; }$/;"	f	class:SEIFillerPayload
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FILM_GRAIN_CHARACTERISTICS; }$/;"	f	class:SEIFilmGrainCharacteristics
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FISHEYE_VIDEO_INFO; }$/;"	f	class:SEIFisheyeVideoInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FRAME_PACKING; }$/;"	f	class:SEIFramePacking
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return KNEE_FUNCTION_INFO; }$/;"	f	class:SEIKneeFunctionInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return NO_DISPLAY; }$/;"	f	class:SEINoDisplay
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return OMNI_VIEWPORT; }$/;"	f	class:SEIOmniViewport
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PAN_SCAN_RECT; }$/;"	f	class:SEIPanScanRect
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PICTURE_SNAPSHOT; }$/;"	f	class:SEIPictureSnapshot
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PICTURE_TIMING; }$/;"	f	class:SEIPictureTiming
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return POST_FILTER_HINT; }$/;"	f	class:SEIPostFilterHint
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PROGRESSIVE_REFINEMENT_SEGMENT_END; }$/;"	f	class:SEIProgressiveRefinementSegmentEnd
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PROGRESSIVE_REFINEMENT_SEGMENT_START; }$/;"	f	class:SEIProgressiveRefinementSegmentStart
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return RECOVERY_POINT; }$/;"	f	class:SEIRecoveryPoint
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return REGIONAL_NESTING; }$/;"	f	class:SEIRegionalNesting
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return REGION_REFRESH_INFO; }$/;"	f	class:SEIRegionRefreshInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return REGION_WISE_PACKING; }$/;"	f	class:SEIRegionWisePacking
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SCALABLE_NESTING; }$/;"	f	class:SEIScalableNesting
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SCENE_INFO; }$/;"	f	class:SEISceneInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SEGM_RECT_FRAME_PACKING; }$/;"	f	class:SEISegmentedRectFramePacking
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SHUTTER_INTERVAL_INFO; }$/;"	f	class:SEIShutterIntervalInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SOP_DESCRIPTION; }$/;"	f	class:SEISOPDescription
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SPHERE_ROTATION; }$/;"	f	class:SEISphereRotation
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TEMPORAL_LEVEL0_INDEX; }$/;"	f	class:SEITemporalLevel0Index
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TEMP_MOTION_CONSTRAINED_TILE_SETS; }$/;"	f	class:SEITempMotionConstrainedTileSets
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TIME_CODE; }$/;"	f	class:SEITimeCode
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TONE_MAPPING_INFO; }$/;"	f	class:SEIToneMappingInfo
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return USER_DATA_REGISTERED_ITU_T_T35; }$/;"	f	class:SEIUserDataRegistered
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const { return USER_DATA_UNREGISTERED; }$/;"	f	class:SEIUserDataUnregistered
payloadType	TLibCommon/SEI.h	/^  PayloadType payloadType() const {return CHROMA_RESAMPLING_FILTER_HINT;}$/;"	f	class:SEIChromaResamplingFilterHint
peekBits	TLibCommon/TComBitStream.h	/^  UInt        peekBits (UInt uiBits) { UInt tmp; pseudoRead(uiBits, tmp); return tmp; }$/;"	f	class:TComInputBitstream
peekBytes	TLibDecoder/AnnexBread.h	/^  uint32_t peekBytes(UInt n)$/;"	f	class:InputByteStream
peekPreviousByte	TLibCommon/TComBitStream.h	/^  Void        peekPreviousByte( UInt &byte )$/;"	f	class:TComInputBitstream
per	TLibCommon/TComTrQuant.h	/^  Int per;$/;"	m	struct:QpParam
persistenceFlag	TLibCommon/SEI.h	/^  Bool persistenceFlag;$/;"	m	class:SEIDisplayOrientation
piRefY	TLibEncoder/TEncSearch.h	/^    const Pel*  piRefY;$/;"	m	struct:TEncSearch::__anon2
picBuffer	TLibEncoder/TEncTemporalFilter.h	/^  TComPicYuv            picBuffer;$/;"	m	struct:TemporalFilterSourcePicInfo
picDurationInTcMinus1	TLibCommon/TComSlice.h	/^  UInt picDurationInTcMinus1;$/;"	m	struct:HrdSubLayerInfo
popBack	TLibCommon/TComList.h	/^  C popBack()$/;"	f	class:TComList
popFront	TLibCommon/TComList.h	/^  C popFront()$/;"	f	class:TComList
preLoopFilterPicAll	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::preLoopFilterPicAll( TComPic* pcPic, UInt64& ruiDist )$/;"	f	class:TEncGOP
precompressSlice	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::precompressSlice( TComPic* pcPic )$/;"	f	class:TEncSlice
predInterSearch	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::predInterSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv DEBUG_STRING_FN_DECLARE(sDebug), Bool bUseRes, Bool bUseMRG )$/;"	f	class:TEncSearch
predIntraAng	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::predIntraAng( const ComponentID compID, UInt uiDirMode, Pel* piOrg \/* Will be null for decoding *\/, UInt uiOrgStride, Pel* piPred, UInt uiStride, TComTU &rTu, const Bool bUseFilteredPredSamples, const Bool bUseLosslessDPCM )$/;"	f	class:TComPrediction
predIntraGetPredValDC	TLibCommon/TComPrediction.cpp	/^Pel TComPrediction::predIntraGetPredValDC( const Pel* pSrc, Int iSrcStride, UInt iWidth, UInt iHeight)$/;"	f	class:TComPrediction
prefix_sei_messages	TLibCommon/SEI.h	/^  static const std::vector <SEI::PayloadType> prefix_sei_messages;$/;"	m	class:SEI
prepareForEncoderSourcePicYuv	TLibCommon/TComPic.cpp	/^Void TComPic::prepareForEncoderSourcePicYuv()$/;"	f	class:TComPic
prepareForReconstruction	TLibCommon/TComPic.cpp	/^Void TComPic::prepareForReconstruction()$/;"	f	class:TComPic
prepareForReconstruction	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::prepareForReconstruction()$/;"	f	class:TComPicSym
primaries	TLibCommon/TypeDef.h	/^  UShort    primaries[3][2];$/;"	m	struct:TComSEIMasteringDisplay
printBlock	TLibCommon/Debug.h	/^Void printBlock(const ValueType    *const source,$/;"	f
printBlockToStream	TLibCommon/Debug.cpp	/^Void printBlockToStream( std::ostream &ss, const TChar *pLinePrefix, TComYuv &src, const UInt numSubBlocksAcross, const UInt numSubBlocksUp, const UInt defWidth )$/;"	f
printBlockToStream	TLibCommon/Debug.h	/^Void printBlockToStream( std::ostream &ss, const TChar *pLinePrefix, const T * blkSrc, const UInt width, const UInt height, const UInt stride, const UInt subBlockWidth=0, const UInt subBlockHeight=0, const UInt defWidth=3 )$/;"	f
printCbfArray	TLibCommon/Debug.cpp	/^Void printCbfArray( TComDataCU* pcCU  )$/;"	f
printDeltaPOC	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::printDeltaPOC() const$/;"	f	class:TComReferencePictureSet
printEnvVar	TLibCommon/Debug.cpp	/^Void EnvVar::printEnvVar()$/;"	f	class:EnvVar
printEnvVarInUse	TLibCommon/Debug.cpp	/^Void EnvVar::printEnvVarInUse()$/;"	f	class:EnvVar
printFrameMSE	TLibEncoder/TEncAnalyze.h	/^    Bool printFrameMSE;$/;"	m	struct:TEncAnalyze::OutputLogControl
printHash	TLibEncoder/TEncGOP.cpp	/^printHash(const HashType hashType, const std::string &digestStr)$/;"	f	file:
printHexPerPOCPSNRs	TLibEncoder/TEncAnalyze.h	/^    Bool printHexPerPOCPSNRs;$/;"	m	struct:TEncAnalyze::OutputLogControl
printMSEBasedSNR	TLibEncoder/TEncAnalyze.h	/^    Bool printMSEBasedSNR;$/;"	m	struct:TEncAnalyze::OutputLogControl
printMSSSIM	TLibEncoder/TEncAnalyze.h	/^    Bool printMSSSIM;$/;"	m	struct:TEncAnalyze::OutputLogControl
printMacroSettings	TLibCommon/Debug.cpp	/^Void printMacroSettings()$/;"	f
printOut	TLibEncoder/TEncAnalyze.h	/^  Void    printOut ( TChar cDelim, const ChromaFormat chFmt, const OutputLogControl &logctrl, const BitDepths &bitDepths )$/;"	f	class:TEncAnalyze
printOutSummary	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::printOutSummary(UInt uiNumAllPicCoded, Bool isField, const TEncAnalyze::OutputLogControl &outputLogCtrl, const BitDepths &bitDepths)$/;"	f	class:TEncGOP
printPair	TLibCommon/Debug.cpp	/^static inline Void printPair(const std::pair<std::string, std::string> &p)$/;"	f	file:
printSBACCoeffData	TLibCommon/Debug.cpp	/^Void printSBACCoeffData(  const UInt          lastX,$/;"	f
printSequenceMSE	TLibEncoder/TEncAnalyze.h	/^    Bool printSequenceMSE;$/;"	m	struct:TEncAnalyze::OutputLogControl
printSummary	TLibEncoder/TEncAnalyze.h	/^  Void printSummary(const ChromaFormat chFmt, const OutputLogControl &logctrl, const BitDepths &bitDepths, const std::string &sFilename)$/;"	f	class:TEncAnalyze
printSummary	TLibEncoder/TEncTop.h	/^  Void printSummary(Bool isField)$/;"	f	class:TEncTop
printVal	TLibCommon/Debug.cpp	/^static inline Void printVal(const EnvVar* env)$/;"	f	file:
printXPSNR	TLibEncoder/TEncAnalyze.h	/^    Bool printXPSNR;$/;"	m	struct:TEncAnalyze::OutputLogControl
printinfo	TLibDecoder/TDecSlice.cpp	/^void printinfo(UChar* data, int row, int col, const char* tag)$/;"	f
prng	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^uint32_t SEIFilmGrainSynthesizer::prng(uint32_t x_r)$/;"	f	class:SEIFilmGrainSynthesizer
processDefaultMatrix	TLibCommon/TComSlice.cpp	/^Void TComScalingList::processDefaultMatrix(UInt sizeId, UInt listId)$/;"	f	class:TComScalingList
processRefMatrix	TLibCommon/TComSlice.cpp	/^Void TComScalingList::processRefMatrix( UInt sizeId, UInt listId , UInt refListId )$/;"	f	class:TComScalingList
processScalingListDec	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::processScalingListDec( const Int *coeff, Int *dequantcoeff, Int invQuantScales, UInt height, UInt width, UInt ratio, Int sizuNum, UInt dc)$/;"	f	class:TComTrQuant
processScalingListEnc	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::processScalingListEnc( Int *coeff, Int *quantcoeff, Int quantScales, UInt height, UInt width, UInt ratio, Int sizuNum, UInt dc)$/;"	f	class:TComTrQuant
profile	TLibCommon/ProfileLevelTierFeatures.h	/^  Profile::Name            profile;$/;"	m	struct:ProfileFeatures
profile	TLibDecoder/TDecConformance.h	/^  Profile::Name            profile;$/;"	m	struct:ProfileFeatures
program_options_lite	Utilities/program_options_lite.cpp	/^  namespace program_options_lite$/;"	n	namespace:df	file:
program_options_lite	Utilities/program_options_lite.h	/^  namespace program_options_lite$/;"	n	namespace:df
pseudoRead	TLibCommon/TComBitStream.cpp	/^Void TComInputBitstream::pseudoRead ( UInt uiNumberOfBits, UInt& ruiBits )$/;"	f	class:TComInputBitstream
psnr	TLibEncoder/TEncAnalyze.h	/^    Double psnr[MAX_NUM_COMPONENT];$/;"	m	struct:TEncAnalyze::ResultData
pushBack	TLibCommon/TComList.h	/^  Void pushBack( const C& rcT )$/;"	f	class:TComList
pushEmulationPreventionByteLocation	TLibCommon/TComBitStream.h	/^  Void      pushEmulationPreventionByteLocation ( UInt pos )                         { m_emulationPreventionByteLocation.push_back( pos ); }$/;"	f	class:TComInputBitstream
pushFront	TLibCommon/TComList.h	/^  Void pushFront( const C& rcT )$/;"	f	class:TComList
rapIdx	TLibCommon/SEI.h	/^  UInt rapIdx;$/;"	m	class:SEITemporalLevel0Index
rdpcmNxN	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::rdpcmNxN   ( TComTU& rTu, const ComponentID compID, Pel* pcResidual, const UInt uiStride, const QpParam& cQP, TCoeff* pcCoeff, TCoeff &uiAbsSum, RDPCMMode& rdpcmMode )$/;"	f	class:TComTrQuant
read	TLibCommon/TComBitStream.cpp	/^Void TComInputBitstream::read (UInt uiNumberOfBits, UInt& ruiBits)$/;"	f	class:TComInputBitstream
read	TLibCommon/TComBitStream.h	/^  UInt read(UInt numberOfBits) { UInt tmp; read(numberOfBits, tmp); return tmp; }$/;"	f	class:TComInputBitstream
read	TLibDecoder/NALread.cpp	/^Void read(InputNALUnit& nalu)$/;"	f
read	Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::read ( TComPicYuv*  pPicYuvUser, TComPicYuv* pPicYuvTrueOrg, const InputColourSpaceConversion ipcsc, Int aiPad[2], ChromaFormat format, const Bool bClipToRec709 )$/;"	f	class:TVideoIOYuv
readAnnotatedRegionSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readAnnotatedRegionSEI(std::istream &fic, SEIAnnotatedRegions *seiAnnoRegion, Bool &failed)$/;"	f	class:SEIEncoder
readByte	TLibCommon/TComBitStream.h	/^  UInt     readByte() { UInt tmp; readByte( tmp ); return tmp; }$/;"	f	class:TComInputBitstream
readByte	TLibCommon/TComBitStream.h	/^  Void        readByte        ( UInt &ruiBits )$/;"	f	class:TComInputBitstream
readByte	TLibDecoder/AnnexBread.h	/^  uint8_t readByte()$/;"	f	class:InputByteStream
readByteAlignment	TLibCommon/TComBitStream.cpp	/^UInt TComInputBitstream::readByteAlignment()$/;"	f	class:TComInputBitstream
readBytes	TLibDecoder/AnnexBread.h	/^  uint32_t readBytes(UInt n)$/;"	f	class:InputByteStream
readChromaResamplingFilterHintSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readChromaResamplingFilterHintSEI(std::istream &fic, SEIChromaResamplingFilterHint *seiChromaResamplingFilterHint, Bool &failed )$/;"	f	class:SEIEncoder
readColourRemapSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readColourRemapSEI(std::istream &fic, SEIColourRemappingInfo *seiColourRemappingInfo, Bool &failed )$/;"	f	class:SEIEncoder
readContentColourVolumeSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readContentColourVolumeSEI(std::istream &fic, SEIContentColourVolume *seiContentColourVolume, Bool &failed )$/;"	f	class:SEIEncoder
readKneeFunctionInfoSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readKneeFunctionInfoSEI(std::istream &fic, SEIKneeFunctionInfo *seiKneeFunctionInfo, Bool &failed )$/;"	f	class:SEIEncoder
readNalUnitHeader	TLibDecoder/NALread.cpp	/^Void readNalUnitHeader(InputNALUnit& nalu)$/;"	f
readOutTrailingBits	TLibCommon/TComBitStream.cpp	/^UInt TComInputBitstream::readOutTrailingBits ()$/;"	f	class:TComInputBitstream
readPlane	Utilities/TVideoIOYuv.cpp	/^static Bool readPlane(Pel* dst,$/;"	f	file:
readRNSEIWindow	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readRNSEIWindow(std::istream &fic, RNSEIWindowVec::iterator regionIter, Bool &failed )$/;"	f	class:SEIEncoder
readTokenValue	TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValue(T            &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValue	TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValue(std::vector<T> &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueAndValidate	TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValueAndValidate(Bool         &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueAndValidate	TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValueAndValidate(T            &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueAndValidate	TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValueAndValidate(std::vector<T> &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueParsing	TLibEncoder/SEIEncoder.cpp	/^Bool readTokenValueParsing(std::istream &is, std::string & returnedValue)$/;"	f
readTokenValueParsing	TLibEncoder/SEIEncoder.cpp	/^static Bool readTokenValueParsing(std::istream &is, T & returnedValue)$/;"	f	file:
readToneMappingInfoSEI	TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readToneMappingInfoSEI(std::istream &fic, SEIToneMappingInfo *seiToneMappingInfo , Bool &failed )$/;"	f	class:SEIEncoder
recon	TLibCommon/TypeDef.h	/^  Int recon[MAX_NUM_CHANNEL_TYPE]; \/\/\/< the bit depth used for reconstructing the video$/;"	m	struct:BitDepths
reconstructBlkSAOParam	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::reconstructBlkSAOParam(SAOBlkParam& recParam, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES])$/;"	f	class:TComSampleAdaptiveOffset
reconstructBlkSAOParams	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::reconstructBlkSAOParams(TComPic* pic, SAOBlkParam* saoBlkParams)$/;"	f	class:TComSampleAdaptiveOffset
regional_nesting_sei_messages	TLibCommon/SEI.h	/^  static const std::vector <SEI::PayloadType> regional_nesting_sei_messages;$/;"	m	class:SEI
releaseAllReconstructionData	TLibCommon/TComPic.cpp	/^Void TComPic::releaseAllReconstructionData()$/;"	f	class:TComPic
releaseAllReconstructionData	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::releaseAllReconstructionData()$/;"	f	class:TComPicSym
releaseEncoderSourceImageData	TLibCommon/TComPic.cpp	/^Void TComPic::releaseEncoderSourceImageData()$/;"	f	class:TComPic
releaseReconstructionIntermediateData	TLibCommon/TComPic.cpp	/^Void TComPic::releaseReconstructionIntermediateData()$/;"	f	class:TComPic
releaseReconstructionIntermediateData	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::releaseReconstructionIntermediateData()$/;"	f	class:TComPicSym
rem	TLibCommon/TComTrQuant.h	/^  Int rem;$/;"	m	struct:QpParam
removeHighFreq	TLibCommon/TComYuv.cpp	/^Void TComYuv::removeHighFreq( const TComYuv* pcYuvSrc,$/;"	f	class:TComYuv
reset	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void SAOBlkParam::reset()$/;"	f	class:SAOBlkParam
reset	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void SAOOffset::reset()$/;"	f	class:SAOOffset
reset	TLibDecoder/AnnexBread.h	/^  Void reset()$/;"	f	class:InputByteStream
reset	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Void reset()$/;"	f	struct:SAOStatData
resetBac	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::resetBac()$/;"	f	class:TEncBinCABAC
resetBits	TLibCommon/TComBitCounter.h	/^  Void        resetBits             ()                                        { m_uiBitCounter = 0;               }$/;"	f	class:TComBitCounter
resetBits	TLibCommon/TComBitStream.h	/^  Void resetBits() { assert(0); }$/;"	f	class:TComOutputBitstream
resetBits	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::resetBits()$/;"	f	class:TEncBinCABAC
resetBits	TLibEncoder/TEncCavlc.h	/^  Void  resetBits             ()                { m_pcBitIf->resetBits(); }$/;"	f	class:TEncCavlc
resetBits	TLibEncoder/TEncEntropy.h	/^  Void    resetBits                 ()                        { m_pcEntropyCoderIf->resetBits();      }$/;"	f	class:TEncEntropy
resetBits	TLibEncoder/TEncSbac.h	/^  Void  resetBits              ()                { m_pcBinIf->resetBits(); m_pcBitIf->resetBits(); }$/;"	f	class:TEncSbac
resetEncoderDecisions	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::resetEncoderDecisions()$/;"	f	class:TEncSampleAdaptiveOffset
resetEncoderDecisions	TLibEncoder/TEncSlice.h	/^  Void    resetEncoderDecisions() { m_encCABACTableIdx = I_SLICE; }$/;"	f	class:TEncSlice
resetEntropy	TLibDecoder/TDecCAVLC.h	/^  Void  resetEntropy        ( TComSlice* \/*pcSlice*\/  )     { assert(0); };$/;"	f	class:TDecCavlc
resetEntropy	TLibDecoder/TDecEntropy.h	/^  Void    resetEntropy                ( TComSlice* p)           { m_pcEntropyDecoderIf->resetEntropy(p);                    }$/;"	f	class:TDecEntropy
resetEntropy	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::resetEntropy(TComSlice* pSlice)$/;"	f	class:TDecSbac
resetEntropy	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::resetEntropy(const TComSlice* \/*pSlice*\/)$/;"	f	class:TEncCavlc
resetEntropy	TLibEncoder/TEncEntropy.h	/^  Void    resetEntropy              (const TComSlice *pSlice) { m_pcEntropyCoderIf->resetEntropy(pSlice);  }$/;"	f	class:TEncEntropy
resetEntropy	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::resetEntropy           (const TComSlice *pSlice)$/;"	f	class:TEncSbac
resetQP	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::resetQP( TComPic* pic, Int sliceQP, Double lambda )$/;"	f	class:TEncSlice
resetToStart	TLibCommon/TComBitStream.cpp	/^Void TComInputBitstream::resetToStart()$/;"	f	class:TComInputBitstream
resetWpScaling	TLibCommon/TComSlice.cpp	/^Void  TComSlice::resetWpScaling()$/;"	f	class:TComSlice
restoreGOPid	TLibEncoder/TEncGOP.cpp	/^Int EfficientFieldIRAPMapping::restoreGOPid(const Int GOPid)$/;"	f	class:EfficientFieldIRAPMapping
rightOffset	TLibCommon/SEI.h	/^    Int rightOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
rightShift	TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType rightShift      (const ValueType value, const Int shift) { return (shift >= 0) ? ( value                                  >> shift) : ( value                                   << -shift); }$/;"	f
rightShiftEvenRounding	TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType rightShiftEvenRounding(const ValueType value, const UInt shift) { return (shift == 0) ? value : ((value + (1<<(shift-1))-1 + ((value>>shift)&1)) >> shift) ; }$/;"	f
rightShift_round	TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType rightShift_round(const ValueType value, const Int shift) { return (shift >= 0) ? ((value + (ValueType(1) << (shift - 1))) >> shift) : ( value                                   << -shift); }$/;"	f
round	TLibCommon/TComSlice.h	/^  Int  round;$/;"	m	struct:WPScalingParam
s_acMvRefineH	TLibEncoder/TEncSearch.cpp	/^static const TComMv s_acMvRefineH[9] =$/;"	v	file:
s_acMvRefineQ	TLibEncoder/TEncSearch.cpp	/^static const TComMv s_acMvRefineQ[9] =$/;"	v	file:
s_chromaFactor	TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_chromaFactor = 0.55;$/;"	m	class:TEncTemporalFilter	file:
s_chromaFactor	TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_chromaFactor;$/;"	m	class:TEncTemporalFilter
s_interpolationFilter	TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_interpolationFilter[16][8] =$/;"	m	class:TEncTemporalFilter	file:
s_interpolationFilter	TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_interpolationFilter[16][8];$/;"	m	class:TEncTemporalFilter
s_motionVectorFactor	TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_motionVectorFactor = 16;$/;"	m	class:TEncTemporalFilter	file:
s_motionVectorFactor	TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_motionVectorFactor;$/;"	m	class:TEncTemporalFilter
s_padding	TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_padding = 128;$/;"	m	class:TEncTemporalFilter	file:
s_padding	TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_padding;$/;"	m	class:TEncTemporalFilter
s_range	TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_range = 2;$/;"	m	class:TEncTemporalFilter	file:
s_range	TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_range;$/;"	m	class:TEncTemporalFilter
s_refStrengths	TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_refStrengths[3][2] =$/;"	m	class:TEncTemporalFilter	file:
s_refStrengths	TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_refStrengths[3][2];$/;"	m	class:TEncTemporalFilter
s_sigmaMultiplier	TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_sigmaMultiplier = 9.0;$/;"	m	class:TEncTemporalFilter	file:
s_sigmaMultiplier	TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_sigmaMultiplier;$/;"	m	class:TEncTemporalFilter
s_sigmaZeroPoint	TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_sigmaZeroPoint = 10.0;$/;"	m	class:TEncTemporalFilter	file:
s_sigmaZeroPoint	TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_sigmaZeroPoint;$/;"	m	class:TEncTemporalFilter
scaleMv	TLibCommon/TComMv.h	/^  const TComMv scaleMv( Int iScale ) const$/;"	f	class:TComMv
scalePlane	Utilities/TVideoIOYuv.cpp	/^static Void scalePlane(Pel* img, const UInt stride, const UInt width, const UInt height, Int shiftbits, Pel minval, Pel maxval)$/;"	f	file:
scan	TLibCommon/TypeDef.h	/^  const UInt            *scan;$/;"	m	struct:TUEntropyCodingParameters
scanArgv	Utilities/program_options_lite.cpp	/^    scanArgv(Options& opts, unsigned argc, const char* argv[], ErrorReporter& error_reporter)$/;"	f	namespace:df::program_options_lite
scanCG	TLibCommon/TypeDef.h	/^  const UInt            *scanCG;$/;"	m	struct:TUEntropyCodingParameters
scanLine	Utilities/program_options_lite.cpp	/^    void CfgStreamParser::scanLine(string& line)$/;"	f	class:df::program_options_lite::CfgStreamParser
scanStream	Utilities/program_options_lite.cpp	/^    void CfgStreamParser::scanStream(istream& in)$/;"	f	class:df::program_options_lite::CfgStreamParser
scanType	TLibCommon/TypeDef.h	/^        COEFF_SCAN_TYPE  scanType;$/;"	m	struct:TUEntropyCodingParameters
secondsFlag	TLibCommon/TypeDef.h	/^  Bool secondsFlag;$/;"	m	struct:TComSEITimeSet
secondsValue	TLibCommon/TypeDef.h	/^  Int  secondsValue;$/;"	m	struct:TComSEITimeSet
seedLUT	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const uint32_t seedLUT[256] = {$/;"	v	file:
sei_read_code	TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_code(std::ostream *pOS, UInt uiLength, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_flag	TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_flag(std::ostream *pOS, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_scode	TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_scode(std::ostream *pOS, UInt uiLength, Int& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_svlc	TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_svlc(std::ostream *pOS, Int& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_uvlc	TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_uvlc(std::ostream *pOS, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
selectLambda	TLibCommon/TComTrQuant.h	/^  Void selectLambda(const ComponentID compIdx) { m_dLambda = m_lambdas[compIdx]; }$/;"	f	class:TComTrQuant
selectMotionLambda	TLibCommon/TComRdCost.h	/^  Void    selectMotionLambda( Bool bSad, Int iAdd, Bool bIsTransquantBypass ) { m_motionLambda = (bSad ? m_dLambdaMotionSAD[(bIsTransquantBypass && m_costMode==COST_MIXED_LOSSLESS_LOSSY_CODING) ?1:0] + iAdd : m_dLambdaMotionSSE[(bIsTransquantBypass && m_costMode==COST_MIXED_LOSSLESS_LOSSY_CODING)?1:0] + iAdd); }$/;"	f	class:TComRdCost
selectReferencePictureSet	TLibEncoder/TEncTop.cpp	/^Void TEncTop::selectReferencePictureSet(TComSlice* slice, Int POCCurr, Int GOPid )$/;"	f	class:TEncTop
separateFields	TLibEncoder/TEncTop.cpp	/^Void separateFields(Pel* org, Pel* dstField, UInt stride, UInt width, UInt height, Bool isTop)$/;"	f
set	TLibCommon/TComMv.h	/^  Void  set       ( Short iHor, Short iVer)     { m_iHor = iHor;  m_iVer = iVer;            }$/;"	f	class:TComMv
set	TLibEncoder/TEncTemporalFilter.h	/^  void set(Int nx, Int ny, Int ne) { x = nx; y = ny; error = ne; }$/;"	f	struct:MotionVector
setAccessUnitDelimiter	TLibEncoder/TEncCfg.h	/^  Void      setAccessUnitDelimiter(Bool val){ m_AccessUnitDelimiter = val; }$/;"	f	class:TEncCfg
setActiveParameterSetsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void         setActiveParameterSetsSEIEnabled ( Int b )            { m_activeParameterSetsSEIEnabled = b; }$/;"	f	class:TEncCfg
setActivity	TLibEncoder/TEncPic.h	/^  Void   setActivity( Double d ) { m_dActivity = d; }$/;"	f	class:TEncQPAdaptationUnit
setAdaptiveSearchRange	TLibEncoder/TEncSearch.h	/^  Void setAdaptiveSearchRange   ( Int iDir, Int iRefIdx, Int iSearchRange) { assert(iDir < MAX_NUM_REF_LIST_ADAPT_SR && iRefIdx<Int(MAX_IDX_ADAPT_SR)); m_aaiAdaptSR[iDir][iRefIdx] = iSearchRange; }$/;"	f	class:TEncSearch
setAll	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAll( T *p, T const & val, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx  )$/;"	f	class:TComCUMvField
setAllBitRatio	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::setAllBitRatio( Double basicLambda, Double* equaCoeffA, Double* equaCoeffB )$/;"	f	class:TEncRCSeq
setAllMv	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllMv( TComMv const & mv, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAllMvField	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllMvField( TComMvField const & mvField, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAllMvd	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllMvd( TComMv const & mvd, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAllRefIdx	TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllRefIdx ( Int iRefIdx, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAmbientViewingEnvironmentSEIAmbientLightX	TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIAmbientLightX(UShort v )      { m_aveSEIAmbientLightX = v; }$/;"	f	class:TEncCfg
setAmbientViewingEnvironmentSEIAmbientLightY	TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIAmbientLightY(UShort v )      { m_aveSEIAmbientLightY = v; }$/;"	f	class:TEncCfg
setAmbientViewingEnvironmentSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIEnabled (Bool b)              { m_aveSEIEnabled = b; }$/;"	f	class:TEncCfg
setAmbientViewingEnvironmentSEIIlluminance	TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIIlluminance(UInt v )          { m_aveSEIAmbientIlluminance = v; }$/;"	f	class:TEncCfg
setAnnotatedRegionSEIFileRoot	TLibEncoder/TEncCfg.h	/^  Void  setAnnotatedRegionSEIFileRoot(const std::string &s)          { m_arSEIFileRoot = s; }$/;"	f	class:TEncCfg
setAspectRatioIdc	TLibCommon/TComSlice.h	/^  Void              setAspectRatioIdc(Int i)                               { m_aspectRatioIdc = i;                          }$/;"	f	class:TComVUI
setAspectRatioIdc	TLibEncoder/TEncCfg.h	/^  Void         setAspectRatioIdc(Int i)                              { m_aspectRatioIdc = i; }$/;"	f	class:TEncCfg
setAspectRatioInfoPresentFlag	TLibCommon/TComSlice.h	/^  Void              setAspectRatioInfoPresentFlag(Bool i)                  { m_aspectRatioInfoPresentFlag = i;              }$/;"	f	class:TComVUI
setAspectRatioInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setAspectRatioInfoPresentFlag(Bool i)                 { m_aspectRatioInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setAssociatedIRAPPOC	TLibCommon/TComSlice.h	/^  Void                        setAssociatedIRAPPOC(Int iAssociatedIRAPPOC)           { m_iAssociatedIRAP = iAssociatedIRAPPOC;                       }$/;"	f	class:TComSlice
setAssociatedIRAPType	TLibCommon/TComSlice.h	/^  Void                        setAssociatedIRAPType(NalUnitType associatedIRAPType)  { m_iAssociatedIRAPType = associatedIRAPType;                   }$/;"	f	class:TComSlice
setAvgActivity	TLibEncoder/TEncPic.h	/^  Void                   setAvgActivity( Double d )  { m_dAvgActivity = d; }$/;"	f	class:TEncPicQPAdaptationLayer
setBinCountingEnableFlag	TLibEncoder/TEncBinCoderCABAC.h	/^  Void  setBinCountingEnableFlag  ( Bool bFlag )  { m_binCountIncrement = bFlag ? 1 : 0; }$/;"	f	class:TEncBinCABAC
setBinsCoded	TLibCommon/ContextModel.h	/^  Void setBinsCoded(UInt val)   { m_binsCoded = val;  }$/;"	f	class:ContextModel
setBinsCoded	TLibEncoder/TEncBinCoderCABAC.h	/^  Void  setBinsCoded              ( UInt uiVal )  { m_uiBinsCoded = uiVal;               }$/;"	f	class:TEncBinCABAC
setBipredSearchRange	TLibEncoder/TEncCfg.h	/^  Void      setBipredSearchRange            ( Int   i )      { m_bipredSearchRange = i; }$/;"	f	class:TEncCfg
setBitDepth	TLibCommon/TComSlice.h	/^  Void                   setBitDepth(ChannelType type, Int u )                                           { m_bitDepths.recon[type] = u;                                         }$/;"	f	class:TComSPS
setBitDepth	TLibEncoder/TEncCfg.h	/^  Void      setBitDepth( const ChannelType chType, Int internalBitDepthForChannel ) { m_bitDepth[chType] = internalBitDepthForChannel; }$/;"	f	class:TEncCfg
setBitDepthConstraint	TLibCommon/TComSlice.h	/^  Void          setBitDepthConstraint(UInt bitDepth)        { m_bitDepthConstraintValue=bitDepth;   }$/;"	f	class:ProfileTierLevel
setBitDepthConstraintValue	TLibEncoder/TEncCfg.h	/^  Void         setBitDepthConstraintValue(UInt v)                    { m_bitDepthConstraintValue=v; }$/;"	f	class:TEncCfg
setBitLeft	TLibEncoder/TEncRateCtrl.h	/^  Void setBitLeft(Int bits)                               { m_bitsLeft = bits; }$/;"	f	class:TEncRCPic
setBitRateScale	TLibCommon/TComSlice.h	/^  Void    setBitRateScale( UInt value )                                              { m_bitRateScale = value;                                    }$/;"	f	class:TComHRD
setBitRateValueMinus1	TLibCommon/TComSlice.h	/^  Void    setBitRateValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value )   { m_HRD[layer].bitRateValueMinus1[cpbcnt][nalOrVcl] = value; }$/;"	f	class:TComHRD
setBits	TLibEncoder/TEncAnalyze.h	/^  Void    setBits(Double numBits)           { m_runningTotal.bits=numBits; }$/;"	f	class:TEncAnalyze
setBitsForPOC	TLibCommon/TComSlice.h	/^  Void                   setBitsForPOC( UInt u )                                                         { m_uiBitsForPOC = u;                                                  }$/;"	f	class:TComSPS
setBitstream	TLibDecoder/SyntaxElementParser.h	/^  Void  setBitstream ( TComInputBitstream* p )   { m_pcBitstream = p; }$/;"	f	class:SyntaxElementParser
setBitstream	TLibDecoder/TDecCAVLC.h	/^  Void  setBitstream        ( TComInputBitstream* p )   { m_pcBitstream = p; }$/;"	f	class:TDecCavlc
setBitstream	TLibDecoder/TDecEntropy.h	/^  Void    setBitstream                ( TComInputBitstream* p ) { m_pcEntropyDecoderIf->setBitstream(p);                    }$/;"	f	class:TDecEntropy
setBitstream	TLibDecoder/TDecSbac.h	/^  Void  setBitstream              ( TComInputBitstream* p  ) { m_pcBitstream = p; m_pcTDecBinIf->init( p ); }$/;"	f	class:TDecSbac
setBitstream	TLibEncoder/SyntaxElementWriter.h	/^  Void  setBitstream          ( TComBitIf* p )  { m_pcBitIf = p;  }$/;"	f	class:SyntaxElementWriter
setBitstream	TLibEncoder/TEncCavlc.h	/^  Void  setBitstream          ( TComBitIf* p )  { m_pcBitIf = p;  }$/;"	f	class:TEncCavlc
setBitstream	TLibEncoder/TEncEntropy.h	/^  Void    setBitstream              ( TComBitIf* p )          { m_pcEntropyCoderIf->setBitstream(p);  }$/;"	f	class:TEncEntropy
setBitstream	TLibEncoder/TEncSbac.h	/^  Void  setBitstream           ( TComBitIf* p )  { m_pcBitIf = p; m_pcBinIf->init( p ); }$/;"	f	class:TEncSbac
setBitstreamRestrictionFlag	TLibCommon/TComSlice.h	/^  Void              setBitstreamRestrictionFlag(Bool i)                    { m_bitstreamRestrictionFlag = i;                }$/;"	f	class:TComVUI
setBitstreamRestrictionFlag	TLibEncoder/TEncCfg.h	/^  Void         setBitstreamRestrictionFlag(Bool i)                   { m_bitstreamRestrictionFlag = i; }$/;"	f	class:TEncCfg
setBorderExtension	TLibCommon/TComPicYuv.h	/^  Void          setBorderExtension(Bool b) { m_bIsBorderExtended = b; }$/;"	f	class:TComPicYuv
setBottomEdgePosInCtus	TLibCommon/TComPicSym.h	/^  Void      setBottomEdgePosInCtus ( UInt i )            { m_bottomEdgePosInCtus = i; }$/;"	f	class:TComTile
setBufferingPeriodSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setBufferingPeriodSEIEnabled(Bool b)                         { m_bufferingPeriodSEIEnabled = b; }$/;"	f	class:TEncCfg
setCLLSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setCLLSEIEnabled(Bool b)                                     { m_cllSEIEnabled = b; }$/;"	f	class:TEncCfg
setCLLSEIMaxContentLightLevel	TLibEncoder/TEncCfg.h	/^  Void  setCLLSEIMaxContentLightLevel (UShort v)                     { m_cllSEIMaxContentLevel = v; }$/;"	f	class:TEncCfg
setCLLSEIMaxPicAvgLightLevel	TLibEncoder/TEncCfg.h	/^  Void  setCLLSEIMaxPicAvgLightLevel(UShort v)                       { m_cllSEIMaxPicAvgLevel = v; }$/;"	f	class:TEncCfg
setCUTransquantBypassFlagForceValue	TLibEncoder/TEncCfg.h	/^  Void         setCUTransquantBypassFlagForceValue(Bool flag)        { m_CUTransquantBypassFlagForce = flag; }$/;"	f	class:TEncCfg
setCUTransquantBypassSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCUTransquantBypassSubParts( Bool flag, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCabacBypassAlignmentEnabledFlag	TLibCommon/TComSlice.h	/^  Void setCabacBypassAlignmentEnabledFlag(const Bool value)                            { m_cabacBypassAlignmentEnabledFlag = value;     }$/;"	f	class:TComSPSRExt
setCabacBypassAlignmentEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void setCabacBypassAlignmentEnabledFlag              (const Bool value)  { m_cabacBypassAlignmentEnabledFlag = value; }$/;"	f	class:TEncCfg
setCabacInitFlag	TLibCommon/TComSlice.h	/^  Void                        setCabacInitFlag( Bool val )                           { m_cabacInitFlag = val;                                        } \/\/!< set CABAC initial flag$/;"	f	class:TComSlice
setCabacInitPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setCabacInitPresentFlag( Bool flag )                             { m_cabacInitPresentFlag = flag;                }$/;"	f	class:TComPPS
setCabacZeroWordPaddingEnabled	TLibEncoder/TEncCfg.h	/^  Void      setCabacZeroWordPaddingEnabled(Bool value)       { m_cabacZeroWordPaddingEnabled = value; }$/;"	f	class:TEncCfg
setCbf	TLibCommon/TComDataCU.h	/^  Void          setCbf                        ( UInt uiIdx, ComponentID eType, UChar uh )                  { m_puhCbf[eType][uiIdx] = uh;               }$/;"	f	class:TComDataCU
setCbfPartRange	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfPartRange ( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setCbfSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfSubParts ( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCbfSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfSubParts( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCbfSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfSubParts( const UInt uiCbf[MAX_NUM_COMPONENT], UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCbrFlag	TLibCommon/TComSlice.h	/^  Void    setCbrFlag( Int layer, Int cpbcnt, Int nalOrVcl, Bool value )              { m_HRD[layer].cbrFlag[cpbcnt][nalOrVcl] = value;            }$/;"	f	class:TComHRD
setCcvSEIAvgLuminanceValue	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIAvgLuminanceValue  (Double dValue)               { m_ccvSEIAvgLuminanceValue = dValue; }$/;"	f	class:TEncCfg
setCcvSEIAvgLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIAvgLuminanceValuePresentFlag(Bool b)             { m_ccvSEIAvgLuminanceValuePresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEICancelFlag(Bool b)                               { m_ccvSEICancelFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIEnabled(Bool b)                                  { m_ccvSEIEnabled = b; }$/;"	f	class:TEncCfg
setCcvSEIMaxLuminanceValue	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMaxLuminanceValue  (Double dValue)               { m_ccvSEIMaxLuminanceValue = dValue; }$/;"	f	class:TEncCfg
setCcvSEIMaxLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMaxLuminanceValuePresentFlag(Bool b)             { m_ccvSEIMaxLuminanceValuePresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIMinLuminanceValue	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMinLuminanceValue  (Double dValue)               { m_ccvSEIMinLuminanceValue = dValue; }$/;"	f	class:TEncCfg
setCcvSEIMinLuminanceValuePresentFlag	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMinLuminanceValuePresentFlag(Bool b)             { m_ccvSEIMinLuminanceValuePresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPersistenceFlag(Bool b)                          { m_ccvSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIPrimariesPresentFlag	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPrimariesPresentFlag(Bool b)                     { m_ccvSEIPrimariesPresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIPrimariesX	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPrimariesX(Double dValue, Int index)             { m_ccvSEIPrimariesX[index] = dValue; }$/;"	f	class:TEncCfg
setCcvSEIPrimariesY	TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPrimariesY(Double dValue, Int index)             { m_ccvSEIPrimariesY[index] = dValue; }$/;"	f	class:TEncCfg
setCfg	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::setCfg( Bool bLFCrossTileBoundary )$/;"	f	class:TComLoopFilter
setChangedFlag	TLibCommon/TComSlice.h	/^  Void setChangedFlag(Int psId, Bool bChanged=true)$/;"	f	class:ParameterSetMap
setCheckLDC	TLibCommon/TComSlice.h	/^  Void                        setCheckLDC( Bool b )                                  { m_bCheckLDC = b;                                              }$/;"	f	class:TComSlice
setCheckLTMSBPresent	TLibCommon/TComPic.h	/^  Void          setCheckLTMSBPresent     (Bool b ) {m_bCheckLTMSB=b;}$/;"	f	class:TComPic
setCheckLTMSBPresent	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setCheckLTMSBPresent(Int bufferNum, Bool b)$/;"	f	class:TComReferencePictureSet
setChromaCbQpOffset	TLibEncoder/TEncCfg.h	/^  Void      setChromaCbQpOffset             ( Int   i )      { m_chromaCbQpOffset = i; }$/;"	f	class:TEncCfg
setChromaCrQpOffset	TLibEncoder/TEncCfg.h	/^  Void      setChromaCrQpOffset             ( Int   i )      { m_chromaCrQpOffset = i; }$/;"	f	class:TEncCfg
setChromaFormatConstraint	TLibCommon/TComSlice.h	/^  Void          setChromaFormatConstraint(ChromaFormat fmt) { m_chromaFormatConstraintValue=fmt;    }$/;"	f	class:ProfileTierLevel
setChromaFormatConstraintValue	TLibEncoder/TEncCfg.h	/^  Void         setChromaFormatConstraintValue(ChromaFormat v)        { m_chromaFormatConstraintValue=v; }$/;"	f	class:TEncCfg
setChromaFormatIdc	TLibCommon/TComSlice.h	/^  Void                   setChromaFormatIdc (ChromaFormat i)                                             { m_chromaFormatIdc = i;                                               }$/;"	f	class:TComSPS
setChromaFormatIdc	TLibEncoder/TEncCfg.h	/^  Void      setChromaFormatIdc              ( ChromaFormat cf ) { m_chromaFormatIDC = cf; }$/;"	f	class:TEncCfg
setChromaLocInfoPresentFlag	TLibCommon/TComSlice.h	/^  Void              setChromaLocInfoPresentFlag(Bool i)                    { m_chromaLocInfoPresentFlag = i;                }$/;"	f	class:TComVUI
setChromaLocInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setChromaLocInfoPresentFlag(Bool i)                   { m_chromaLocInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setChromaQpAdj	TLibCommon/TComDataCU.h	/^  Void          setChromaQpAdj                ( Int idx, UChar val )                                       { m_ChromaQpAdj[idx] = val;                  } \/\/\/< When val = 0,   cu_chroma_qp_offset_flag=0; when val>0,   indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=val-1$/;"	f	class:TComDataCU
setChromaQpAdjSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setChromaQpAdjSubParts( UChar val, Int absPartIdx, Int depth )$/;"	f	class:TComDataCU
setChromaQpOffsetListEntry	TLibCommon/TComSlice.h	/^  Void                   setChromaQpOffsetListEntry( Int cuChromaQpOffsetIdxPlus1, Int cbOffset, Int crOffset )$/;"	f	class:TComPPSRExt
setChromaResamplingFilterHintEnabled	TLibEncoder/TEncCfg.h	/^  Void         setChromaResamplingFilterHintEnabled(Bool i)          { m_chromaResamplingFilterHintEnabled = i;}$/;"	f	class:TEncCfg
setChromaResamplingHorFilterIdc	TLibEncoder/TEncCfg.h	/^  Void         setChromaResamplingHorFilterIdc(Int i)                { m_chromaResamplingHorFilterIdc = i;}$/;"	f	class:TEncCfg
setChromaResamplingVerFilterIdc	TLibEncoder/TEncCfg.h	/^  Void         setChromaResamplingVerFilterIdc(Int i)                { m_chromaResamplingVerFilterIdc = i;}$/;"	f	class:TEncCfg
setChromaSampleLocTypeBottomField	TLibCommon/TComSlice.h	/^  Void              setChromaSampleLocTypeBottomField(Int i)               { m_chromaSampleLocTypeBottomField = i;          }$/;"	f	class:TComVUI
setChromaSampleLocTypeBottomField	TLibEncoder/TEncCfg.h	/^  Void         setChromaSampleLocTypeBottomField(Int i)              { m_chromaSampleLocTypeBottomField = i; }$/;"	f	class:TEncCfg
setChromaSampleLocTypeTopField	TLibCommon/TComSlice.h	/^  Void              setChromaSampleLocTypeTopField(Int i)                  { m_chromaSampleLocTypeTopField = i;             }$/;"	f	class:TComVUI
setChromaSampleLocTypeTopField	TLibEncoder/TEncCfg.h	/^  Void         setChromaSampleLocTypeTopField(Int i)                 { m_chromaSampleLocTypeTopField = i; }$/;"	f	class:TEncCfg
setClipForBiPredMeEnabled	TLibEncoder/TEncCfg.h	/^  Void      setClipForBiPredMeEnabled       ( Bool  b )      { m_bClipForBiPredMeEnabled = b; }$/;"	f	class:TEncCfg
setCmpSEICmpCancelFlag	TLibEncoder/TEncCfg.h	/^  Void     setCmpSEICmpCancelFlag(Bool b)                            { m_cmpSEICmpCancelFlag = b; }$/;"	f	class:TEncCfg
setCmpSEICmpPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void     setCmpSEICmpPersistenceFlag(Bool b)                       { m_cmpSEICmpPersistenceFlag = b; }$/;"	f	class:TEncCfg
setCmpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void     setCmpSEIEnabled(Bool b)                                  { m_cmpSEIEnabled = b; }$/;"	f	class:TEncCfg
setCodeChromaQpAdjFlag	TLibEncoder/TEncCu.h	/^  Void setCodeChromaQpAdjFlag( Bool b ) { m_stillToCodeChromaQpOffsetFlag = b; }$/;"	f	class:TEncCu
setCodedChromaQpAdj	TLibCommon/TComDataCU.h	/^  Void          setCodedChromaQpAdj           ( SChar qp )                                                 { m_codedChromaQpAdj = qp;                   }$/;"	f	class:TComDataCU
setCodedQP	TLibCommon/TComDataCU.h	/^  Void          setCodedQP                    ( SChar qp )                                                 { m_codedQP = qp;                            }$/;"	f	class:TComDataCU
setColFromL0Flag	TLibCommon/TComSlice.h	/^  Void                        setColFromL0Flag( Bool colFromL0 )                     { m_colFromL0Flag = colFromL0;                                  }$/;"	f	class:TComSlice
setColRefIdx	TLibCommon/TComSlice.h	/^  Void                        setColRefIdx( UInt refIdx)                             { m_colRefIdx = refIdx;                                         }$/;"	f	class:TComSlice
setColourDescriptionPresentFlag	TLibCommon/TComSlice.h	/^  Void              setColourDescriptionPresentFlag(Bool i)                { m_colourDescriptionPresentFlag = i;            }$/;"	f	class:TComVUI
setColourDescriptionPresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setColourDescriptionPresentFlag(Bool i)               { m_colourDescriptionPresentFlag = i; }$/;"	f	class:TEncCfg
setColourPrimaries	TLibCommon/TComSlice.h	/^  Void              setColourPrimaries(Int i)                              { m_colourPrimaries = i;                         }$/;"	f	class:TComVUI
setColourPrimaries	TLibEncoder/TEncCfg.h	/^  Void         setColourPrimaries(Int i)                             { m_colourPrimaries = i; }$/;"	f	class:TEncCfg
setColourRemapInfoSEIFileRoot	TLibEncoder/TEncCfg.h	/^  Void  setColourRemapInfoSEIFileRoot( const std::string &s )        { m_colourRemapSEIFileRoot = s; }$/;"	f	class:TEncCfg
setColumnWidth	TLibEncoder/TEncCfg.h	/^  Void  setColumnWidth ( const std::vector<Int>& columnWidth )       { m_tileColumnWidth = columnWidth; }$/;"	f	class:TEncCfg
setConformanceWindow	TLibCommon/TComSlice.h	/^  Void                   setConformanceWindow(Window& conformanceWindow )                                { m_conformanceWindow = conformanceWindow;                             }$/;"	f	class:TComSPS
setConformanceWindow	TLibEncoder/TEncCfg.h	/^  Void      setConformanceWindow (Int confLeft, Int confRight, Int confTop, Int confBottom ) { m_conformanceWindow.setWindow (confLeft, confRight, confTop, confBottom); }$/;"	f	class:TEncCfg
setConstrainedIntraPred	TLibCommon/TComSlice.h	/^  Void                   setConstrainedIntraPred( Bool b )                                { m_bConstrainedIntraPred = b;                  }$/;"	f	class:TComPPS
setCostMode	TLibCommon/TComRdCost.h	/^  Void    setCostMode(CostMode   m )    { m_costMode = m; }$/;"	f	class:TComRdCost
setCostMode	TLibEncoder/TEncCfg.h	/^  Void         setCostMode(CostMode m )                              { m_costMode = m; }$/;"	f	class:TEncCfg
setCostScale	TLibCommon/TComRdCost.h	/^  Void    setCostScale( Int iCostScale )    { m_iCostScale = iCostScale; }$/;"	f	class:TComRdCost
setCpbCntMinus1	TLibCommon/TComSlice.h	/^  Void    setCpbCntMinus1( Int layer, UInt value )                                   { m_HRD[layer].cpbCntMinus1 = value;                         }$/;"	f	class:TComHRD
setCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  Void    setCpbRemovalDelayLengthMinus1( UInt value )                               { m_cpbRemovalDelayLengthMinus1 = value;                     }$/;"	f	class:TComHRD
setCpbSaturationEnabled	TLibEncoder/TEncCfg.h	/^  Void         setCpbSaturationEnabled( Bool b )                     { m_RCCpbSaturationEnabled = b;   }$/;"	f	class:TEncCfg
setCpbSize	TLibEncoder/TEncCfg.h	/^  Void         setCpbSize             ( UInt ui )                    { m_RCCpbSize = ui;   }$/;"	f	class:TEncCfg
setCpbSizeScale	TLibCommon/TComSlice.h	/^  Void    setCpbSizeScale( UInt value )                                              { m_cpbSizeScale = value;                                    }$/;"	f	class:TComHRD
setCpbSizeValueMinus1	TLibCommon/TComSlice.h	/^  Void    setCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value )   { m_HRD[layer].cpbSizeValue[cpbcnt][nalOrVcl] = value;       }$/;"	f	class:TComHRD
setCprmsPresentFlag	TLibCommon/TComSlice.h	/^  Void              setCprmsPresentFlag( Bool val, UInt i )              { m_cprmsPresentFlag[ i ] = val;                                   }$/;"	f	class:TComVPS
setCrossComponentPredictionAlphaPartRange	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCrossComponentPredictionAlphaPartRange( SChar alphaValue, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setCrossComponentPredictionEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setCrossComponentPredictionEnabledFlag(Bool value)               { m_crossComponentPredictionEnabledFlag = value;  }$/;"	f	class:TComPPSRExt
setCrossComponentPredictionEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void      setCrossComponentPredictionEnabledFlag     (const Bool value)      { m_crossComponentPredictionEnabledFlag = value;  }$/;"	f	class:TEncCfg
setCtuRsToTsAddrMap	TLibCommon/TComPicSym.h	/^  Void               setCtuRsToTsAddrMap( Int ctuRsAddr, Int ctuTsOrder )  { *(m_ctuRsToTsAddrMap + ctuRsAddr) = ctuTsOrder; }$/;"	f	class:TComPicSym
setCtuTsToRsAddrMap	TLibCommon/TComPicSym.h	/^  Void               setCtuTsToRsAddrMap( Int ctuTsAddr, Int ctuRsAddr )   { *(m_ctuTsToRsAddrMap + ctuTsAddr) = ctuRsAddr; }$/;"	f	class:TComPicSym
setCurrSliceIdx	TLibCommon/TComPic.h	/^  Void          setCurrSliceIdx(UInt i)      { m_uiCurrSliceIdx = i;                   }$/;"	f	class:TComPic
setDeblockingFilterBetaOffsetDiv2	TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterBetaOffsetDiv2( Int i )             { m_deblockingFilterBetaOffsetDiv2 = i;                         }$/;"	f	class:TComSlice
setDeblockingFilterBetaOffsetDiv2	TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterBetaOffsetDiv2(Int val)                       { m_deblockingFilterBetaOffsetDiv2 = val;       } \/\/!< set beta offset for deblocking filter$/;"	f	class:TComPPS
setDeblockingFilterControlPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterControlPresentFlag( Bool val )                { m_deblockingFilterControlPresentFlag = val;   }$/;"	f	class:TComPPS
setDeblockingFilterDisable	TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterDisable( Bool b )                   { m_deblockingFilterDisable= b;                                 }$/;"	f	class:TComSlice
setDeblockingFilterMetric	TLibEncoder/TEncCfg.h	/^  Void      setDeblockingFilterMetric       ( Int   i )      { m_deblockingFilterMetric    = i; }$/;"	f	class:TEncCfg
setDeblockingFilterOverrideEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterOverrideEnabledFlag( Bool val )               { m_deblockingFilterOverrideEnabledFlag = val;  }$/;"	f	class:TComPPS
setDeblockingFilterOverrideFlag	TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterOverrideFlag( Bool b )              { m_deblockingFilterOverrideFlag = b;                           }$/;"	f	class:TComSlice
setDeblockingFilterTcOffsetDiv2	TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterTcOffsetDiv2( Int i )               { m_deblockingFilterTcOffsetDiv2 = i;                           }$/;"	f	class:TComSlice
setDeblockingFilterTcOffsetDiv2	TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterTcOffsetDiv2(Int val)                         { m_deblockingFilterTcOffsetDiv2 = val;         } \/\/!< set tc offset for deblocking filter$/;"	f	class:TComPPS
setDecodedPictureHashSEIEnabled	TLibDecoder/TDecGop.h	/^  Void setDecodedPictureHashSEIEnabled(Int enabled) { m_decodedPictureHashSEIEnabled = enabled; }$/;"	f	class:TDecGop
setDecodedPictureHashSEIEnabled	TLibDecoder/TDecTop.h	/^  Void setDecodedPictureHashSEIEnabled(Int enabled) { m_cGopDecoder.setDecodedPictureHashSEIEnabled(enabled); }$/;"	f	class:TDecTop
setDecodedPictureHashSEIType	TLibEncoder/TEncCfg.h	/^  Void  setDecodedPictureHashSEIType(HashType m)                     { m_decodedPictureHashSEIType = m; }$/;"	f	class:TEncCfg
setDecodedSEIMessageOutputStream	TLibDecoder/TDecTop.h	/^  Void  setDecodedSEIMessageOutputStream(std::ostream *pOpStream) { m_pDecodedSEIOutputStream = pOpStream; }$/;"	f	class:TDecTop
setDecodingRefreshType	TLibEncoder/TEncCfg.h	/^  Void      setDecodingRefreshType          ( Int   i )      { m_uiDecodingRefreshType = (UInt)i; }$/;"	f	class:TEncCfg
setDecodingUnitInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setDecodingUnitInfoSEIEnabled(Bool b)                        { m_decodingUnitInfoSEIEnabled = b;    }$/;"	f	class:TEncCfg
setDefault	Utilities/program_options_lite.h	/^      void setDefault()$/;"	f	struct:df::program_options_lite::Option
setDefault	Utilities/program_options_lite.h	/^      void setDefault()$/;"	f	struct:df::program_options_lite::OptionFunc
setDefaultDisplayWindow	TLibCommon/TComSlice.h	/^  Void              setDefaultDisplayWindow(Window& defaultDisplayWindow ) { m_defaultDisplayWindow = defaultDisplayWindow; }$/;"	f	class:TComVUI
setDefaultDisplayWindow	TLibEncoder/TEncCfg.h	/^  Void         setDefaultDisplayWindow (Int offsetLeft, Int offsetRight, Int offsetTop, Int offsetBottom ) { m_defaultDisplayWindow.setWindow (offsetLeft, offsetRight, offsetTop, offsetBottom); }$/;"	f	class:TEncCfg
setDefaultScalingList	TLibCommon/TComSlice.cpp	/^Void TComScalingList::setDefaultScalingList()$/;"	f	class:TComScalingList
setDefaults	Utilities/program_options_lite.cpp	/^    void setDefaults(Options& opts)$/;"	f	namespace:df::program_options_lite
setDeltaPOC	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setDeltaPOC(Int bufferNum, Int deltaPOC)$/;"	f	class:TComReferencePictureSet
setDeltaPocMSBCycleLT	TLibCommon/TComSlice.h	/^  Void    setDeltaPocMSBCycleLT(Int i, Int x)          { m_deltaPOCMSBCycleLT[i] = x;        }$/;"	f	class:TComReferencePictureSet
setDeltaPocMSBPresentFlag	TLibCommon/TComSlice.h	/^  Void    setDeltaPocMSBPresentFlag(Int i, Bool x)     { m_deltaPocMSBPresentFlag[i] = x;    }$/;"	f	class:TComReferencePictureSet
setDeltaQpRD	TLibEncoder/TEncCfg.h	/^  Void      setDeltaQpRD                    ( UInt  u )     {m_uiDeltaQpRD  = u; }$/;"	f	class:TEncCfg
setDeltaRIdxMinus1	TLibCommon/TComSlice.h	/^  Void    setDeltaRIdxMinus1(Int x)                    { m_deltaRIdxMinus1 = x;               }$/;"	f	class:TComReferencePictureSet
setDeltaRPS	TLibCommon/TComSlice.h	/^  Void    setDeltaRPS(Int x)                           { m_deltaRPS = x;                      }$/;"	f	class:TComReferencePictureSet
setDependentSliceSegmentFlag	TLibCommon/TComSlice.h	/^  Void                        setDependentSliceSegmentFlag(Bool val)                 { m_dependentSliceSegmentFlag = val;                            }$/;"	f	class:TComSlice
setDependentSliceSegmentsEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setDependentSliceSegmentsEnabledFlag(Bool val)                   { m_dependentSliceSegmentsEnabledFlag = val;    }$/;"	f	class:TComPPS
setDepth	TLibCommon/TComDataCU.h	/^  Void          setDepth                      ( UInt uiIdx, UChar uh )                                     { m_puhDepth[uiIdx] = uh;                    }$/;"	f	class:TComDataCU
setDepth	TLibCommon/TComSlice.h	/^  Void                        setDepth( Int iDepth )                                 { m_iDepth            = iDepth;                                 }$/;"	f	class:TComSlice
setDepthSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setDepthSubParts( UInt uiDepth, UInt uiAbsPartIdx )$/;"	f	class:TComDataCU
setDiffCuChromaQpOffsetDepth	TLibCommon/TComSlice.h	/^  Void                   setDiffCuChromaQpOffsetDepth ( UInt u )                          { m_diffCuChromaQpOffsetDepth = u;                }$/;"	f	class:TComPPSRExt
setDiffCuChromaQpOffsetDepth	TLibEncoder/TEncCfg.h	/^  Void      setDiffCuChromaQpOffsetDepth    (Int value)      { m_diffCuChromaQpOffsetDepth = value; }$/;"	f	class:TEncCfg
setDisableIntraPUsInInterSlices	TLibEncoder/TEncCfg.h	/^  Void      setDisableIntraPUsInInterSlices ( Bool  b )      { m_bDisableIntraPUsInInterSlices = b; }$/;"	f	class:TEncCfg
setDisplayOrientationSEIAngle	TLibEncoder/TEncCfg.h	/^  Void  setDisplayOrientationSEIAngle(Int b)                         { m_displayOrientationSEIAngle = b; }$/;"	f	class:TEncCfg
setDistParam	TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( DistParam& rcDP, Int bitDepth, const Pel* p1, Int iStride1, const Pel* p2, Int iStride2, Int iWidth, Int iHeight, Bool bHadamard )$/;"	f	class:TComRdCost
setDistParam	TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( UInt uiBlkWidth, UInt uiBlkHeight, DFunc eDFunc, DistParam& rcDistParam )$/;"	f	class:TComRdCost
setDistParam	TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( const TComPattern* const pcPatternKey, const Pel* piRefY, Int iRefStride, DistParam& rcDistParam )$/;"	f	class:TComRdCost
setDistParam	TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( const TComPattern* const pcPatternKey, const Pel* piRefY, Int iRefStride, Int iStep, DistParam& rcDistParam, Bool bHADME )$/;"	f	class:TComRdCost
setDistParamComp	TLibEncoder/TEncSearch.h	/^  inline  Void  setDistParamComp( ComponentID compIdx )  { m_cDistParam.compIdx = compIdx; }$/;"	f	class:TEncSearch
setDistortionWeight	TLibCommon/TComRdCost.h	/^  Void    setDistortionWeight  ( const ComponentID compID, const Double distortionWeight ) { m_distortionWeight[compID] = distortionWeight; }$/;"	f	class:TComRdCost
setDpbOutputDelayDuLengthMinus1	TLibCommon/TComSlice.h	/^  Void    setDpbOutputDelayDuLengthMinus1(UInt value )                               { m_dpbOutputDelayDuLengthMinus1 = value;                    }$/;"	f	class:TComHRD
setDpbOutputDelayLengthMinus1	TLibCommon/TComSlice.h	/^  Void    setDpbOutputDelayLengthMinus1( UInt value )                                { m_dpbOutputDelayLengthMinus1 = value;                      }$/;"	f	class:TComHRD
setDuBitRateValueMinus1	TLibCommon/TComSlice.h	/^  Void    setDuBitRateValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value ) { m_HRD[layer].duBitRateValue[cpbcnt][nalOrVcl] = value;     }$/;"	f	class:TComHRD
setDuCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  Void    setDuCpbRemovalDelayLengthMinus1( UInt value )                             { m_duCpbRemovalDelayLengthMinus1 = value;                   }$/;"	f	class:TComHRD
setDuCpbSizeScale	TLibCommon/TComSlice.h	/^  Void    setDuCpbSizeScale( UInt value )                                            { m_ducpbSizeScale = value;                                  }$/;"	f	class:TComHRD
setDuCpbSizeValueMinus1	TLibCommon/TComSlice.h	/^  Void    setDuCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value ) { m_HRD[layer].ducpbSizeValue[cpbcnt][nalOrVcl] = value;     }$/;"	f	class:TComHRD
setEfficientFieldIRAPEnabled	TLibEncoder/TEncCfg.h	/^  Void         setEfficientFieldIRAPEnabled( Bool b )                { m_bEfficientFieldIRAPEnabled = b; }$/;"	f	class:TEncCfg
setEmulationPreventionByteLocation	TLibCommon/TComBitStream.h	/^  Void      setEmulationPreventionByteLocation  ( const std::vector<UInt> &vec )     { m_emulationPreventionByteLocation = vec;            }$/;"	f	class:TComInputBitstream
setEnableTMVPFlag	TLibCommon/TComSlice.h	/^  Void                        setEnableTMVPFlag( Bool   b )                          { m_enableTMVPFlag = b;                                         }$/;"	f	class:TComSlice
setEncCABACTableIdx	TLibCommon/TComSlice.h	/^  Void                        setEncCABACTableIdx( SliceType idx )                   { m_encCABACTableIdx = idx;                                     }$/;"	f	class:TComSlice
setEncodedFlag	TLibEncoder/TEncCfg.h	/^  Void      setEncodedFlag                  ( Int  i, Bool value )  { m_GOPList[i].m_isEncoded = value; }$/;"	f	class:TEncCfg
setEntropyCoder	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::setEntropyCoder ( TEncEntropyIf* e )$/;"	f	class:TEncEntropy
setEntropyCodingSyncEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setEntropyCodingSyncEnabledFlag(Bool val)                        { m_entropyCodingSyncEnabledFlag = val;         }$/;"	f	class:TComPPS
setEntropyCodingSyncEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void  setEntropyCodingSyncEnabledFlag(Bool b)                      { m_entropyCodingSyncEnabledFlag = b; }$/;"	f	class:TEncCfg
setEntropyDecoder	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::setEntropyDecoder         ( TDecEntropyIf* p )$/;"	f	class:TDecEntropy
setEqualRef	TLibCommon/TComSlice.h	/^  Void                        setEqualRef( RefPicList e, Int iRefIdx1, Int iRefIdx2, Bool b)$/;"	f	class:TComSlice
setErpSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Void  setErpSEICancelFlag(Bool b)                                  { m_erpSEICancelFlag = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setErpSEIEnabled(Bool b)                                     { m_erpSEIEnabled = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIGuardBandFlag	TLibEncoder/TEncCfg.h	/^  Void  setErpSEIGuardBandFlag(Bool b)                               { m_erpSEIGuardBandFlag = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIGuardBandType	TLibEncoder/TEncCfg.h	/^  Void  setErpSEIGuardBandType(UInt b)                               { m_erpSEIGuardBandType = b; } $/;"	f	class:TEncCfg
setErpSEILeftGuardBandWidth	TLibEncoder/TEncCfg.h	/^  Void  setErpSEILeftGuardBandWidth(UInt b)                          { m_erpSEILeftGuardBandWidth = b; } $/;"	f	class:TEncCfg
setErpSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void  setErpSEIPersistenceFlag(Bool b)                             { m_erpSEIPersistenceFlag = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIRightGuardBandWidth	TLibEncoder/TEncCfg.h	/^  Void  setErpSEIRightGuardBandWidth(UInt b)                         { m_erpSEIRightGuardBandWidth = b; } $/;"	f	class:TEncCfg
setErrScaleCoeff	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setErrScaleCoeff(UInt list, UInt size, Int qp, const Int maxLog2TrDynamicRange[MAX_NUM_CHANNEL_TYPE], const BitDepths &bitDepths)$/;"	f	class:TComTrQuant
setExplicitRdpcmModePartRange	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setExplicitRdpcmModePartRange ( UInt rdpcmMode, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setExtendedPrecisionProcessingFlag	TLibCommon/TComSlice.h	/^  Void setExtendedPrecisionProcessingFlag(Bool value)                                  { m_extendedPrecisionProcessingFlag = value;     }$/;"	f	class:TComSPSRExt
setExtendedPrecisionProcessingFlag	TLibEncoder/TEncCfg.h	/^  Void      setExtendedPrecisionProcessingFlag         (Bool value)     { m_extendedPrecisionProcessingFlag = value; }$/;"	f	class:TEncCfg
setExtraRPSs	TLibEncoder/TEncCfg.h	/^  Void      setExtraRPSs                    ( Int   i )      { m_extraRPSs = i; }$/;"	f	class:TEncCfg
setFGCSEICompModelPresent	TLibEncoder/TEncCfg.h	/^  Void  setFGCSEICompModelPresent(Bool b, Int index)                 { m_fgcSEICompModelPresent[index] = b; }$/;"	f	class:TEncCfg
setFGCSEICompModelValue	TLibEncoder/TEncCfg.h	/^  Void    setFGCSEICompModelValue(UInt v, Int index, Int ctr, Int modelCtr) { m_fgcSEICompModelValue[index][ctr][modelCtr] = v; }$/;"	f	class:TEncCfg
setFGCSEIIntensityIntervalLowerBound	TLibEncoder/TEncCfg.h	/^  Void    setFGCSEIIntensityIntervalLowerBound(UChar v, Int index, Int ctr) { m_fgcSEIIntensityIntervalLowerBound[index][ctr] = v; }$/;"	f	class:TEncCfg
setFGCSEIIntensityIntervalUpperBound	TLibEncoder/TEncCfg.h	/^  Void    setFGCSEIIntensityIntervalUpperBound(UChar v, Int index, Int ctr) { m_fgcSEIIntensityIntervalUpperBound[index][ctr] = v; }$/;"	f	class:TEncCfg
setFGCSEINumIntensityIntervalMinus1	TLibEncoder/TEncCfg.h	/^  Void    setFGCSEINumIntensityIntervalMinus1(UChar v, Int index) { m_fgcSEINumIntensityIntervalMinus1[index] = v; }$/;"	f	class:TEncCfg
setFGCSEINumModelValuesMinus1	TLibEncoder/TEncCfg.h	/^  Void    setFGCSEINumModelValuesMinus1(UChar v, Int index) { m_fgcSEINumModelValuesMinus1[index] = v; }$/;"	f	class:TEncCfg
setFastDeltaQp	TLibEncoder/TEncCfg.h	/^  Void      setFastDeltaQp                  ( Bool  b )     {m_bFastDeltaQP = b; }$/;"	f	class:TEncCfg
setFastDeltaQp	TLibEncoder/TEncCu.h	/^  Void setFastDeltaQp       ( Bool b)                 { m_bFastDeltaQP = b;         }$/;"	f	class:TEncCu
setFastInterSearchMode	TLibEncoder/TEncCfg.h	/^  Void      setFastInterSearchMode          ( FastInterSearchMode m ) { m_fastInterSearchMode = m; }$/;"	f	class:TEncCfg
setFastMEAssumingSmootherMVEnabled	TLibEncoder/TEncCfg.h	/^  Void      setFastMEAssumingSmootherMVEnabled ( Bool b )    { m_bFastMEAssumingSmootherMVEnabled = b; }$/;"	f	class:TEncCfg
setFastMEForGenBLowDelayEnabled	TLibEncoder/TEncCfg.h	/^  Void      setFastMEForGenBLowDelayEnabled ( Bool  b )     { m_bFastMEForGenBLowDelayEnabled = b; }$/;"	f	class:TEncCfg
setFastUDIUseMPMEnabled	TLibEncoder/TEncCfg.h	/^  Void      setFastUDIUseMPMEnabled         ( Bool  b )     { m_bFastUDIUseMPMEnabled = b; }$/;"	f	class:TEncCfg
setField	TLibCommon/TComPic.h	/^   Void              setField(Bool b)                     {m_isField = b;}$/;"	f	class:TComPic
setFieldSeqFlag	TLibCommon/TComSlice.h	/^  Void              setFieldSeqFlag(Bool i)                                { m_fieldSeqFlag = i;                            }$/;"	f	class:TComVUI
setFilmGrainCharactersticsSEIBlendingModeID	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIBlendingModeID(UChar v )        { m_fgcSEIBlendingModeID = v; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEICancelFlag(Bool b)              { m_fgcSEICancelFlag = b; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIEnabled (Bool b)                { m_fgcSEIEnabled = b; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEILog2ScaleFactor	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEILog2ScaleFactor(UChar v )       { m_fgcSEILog2ScaleFactor = v; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEIModelID	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIModelID(UChar v )               { m_fgcSEIModelID = v; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIPersistenceFlag(Bool b)         { m_fgcSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEISepColourDescPresent	TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEISepColourDescPresent(Bool b)    { m_fgcSEISepColourDescPresentFlag = b; }$/;"	f	class:TEncCfg
setFinalized	TLibCommon/TComSlice.h	/^  Void                        setFinalized( Bool uiVal )                             { m_bFinalized = uiVal;                                         }$/;"	f	class:TComSlice
setFirstCtuRsAddr	TLibCommon/TComPicSym.h	/^  Void      setFirstCtuRsAddr      ( UInt i )            { m_firstCtuRsAddr = i; }$/;"	f	class:TComTile
setFirstSliceInPicture	TLibDecoder/TDecTop.h	/^  Void  setFirstSliceInPicture (bool val)  { m_bFirstSliceInPicture = val; }$/;"	f	class:TDecTop
setFirstSliceInSequence	TLibDecoder/TDecTop.h	/^  Void  setFirstSliceInSequence (bool val) { m_bFirstSliceInSequence = val; }$/;"	f	class:TDecTop
setFixedPicRateFlag	TLibCommon/TComSlice.h	/^  Void    setFixedPicRateFlag( Int layer, Bool flag )                                { m_HRD[layer].fixedPicRateFlag = flag;                      }$/;"	f	class:TComHRD
setFixedPicRateWithinCvsFlag	TLibCommon/TComSlice.h	/^  Void    setFixedPicRateWithinCvsFlag( Int layer, Bool flag )                       { m_HRD[layer].fixedPicRateWithinCvsFlag = flag;             }$/;"	f	class:TComHRD
setFlatScalingList	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setFlatScalingList(const Int maxLog2TrDynamicRange[MAX_NUM_CHANNEL_TYPE], const BitDepths &bitDepths)$/;"	f	class:TComTrQuant
setForceDecodeBitDepth	TLibCommon/TComSlice.h	/^  Void                   setForceDecodeBitDepth(UInt bitDepth)                                           { m_forceDecodeBitDepth = bitDepth;                                    }$/;"	f	class:TComSPS
setForceDecodeBitDepth	TLibDecoder/TDecTop.h	/^  Void  setForceDecodeBitDepth(UInt bitDepth) { m_forceDecodeBitDepth = bitDepth; }$/;"	f	class:TDecTop
setForceIntraQP	TLibEncoder/TEncCfg.h	/^  Void         setForceIntraQP        ( Bool b )                     { m_RCForceIntraQP = b;           }$/;"	f	class:TEncCfg
setFrameFieldInfoPresentFlag	TLibCommon/TComSlice.h	/^  Void              setFrameFieldInfoPresentFlag(Bool i)                   { m_frameFieldInfoPresentFlag = i;               }$/;"	f	class:TComVUI
setFrameFieldInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setFrameFieldInfoPresentFlag(Bool i)                  { m_frameFieldInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setFrameLambda	TLibCommon/TComRdCost.h	/^  Void    setFrameLambda ( Double dLambda ) { m_dFrameLambda = dLambda; }$/;"	f	class:TComRdCost
setFrameOnlyConstraintFlag	TLibCommon/TComSlice.h	/^  Void          setFrameOnlyConstraintFlag(Bool b)          { m_frameOnlyConstraintFlag = b;        }$/;"	f	class:ProfileTierLevel
setFrameOnlyConstraintFlag	TLibEncoder/TEncCfg.h	/^  Void         setFrameOnlyConstraintFlag(Bool b)                    { m_frameOnlyConstraintFlag = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIEnabled(Bool b)                 { m_framePackingSEIEnabled = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIId	TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIId(Int b)                       { m_framePackingSEIId = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIInterpretation	TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIInterpretation(Int b)           { m_framePackingSEIInterpretation = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIQuincunx	TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIQuincunx(Int b)                 { m_framePackingSEIQuincunx = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIType	TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIType(Int b)                     { m_framePackingSEIType = b; }$/;"	f	class:TEncCfg
setFrameRate	TLibEncoder/TEncCfg.h	/^  Void      setFrameRate                    ( Int   i )      { m_iFrameRate = i; }$/;"	f	class:TEncCfg
setFrameSkip	TLibEncoder/TEncCfg.h	/^  Void      setFrameSkip                    ( UInt  i )      { m_FrameSkip = i; }$/;"	f	class:TEncCfg
setFramesToBeEncoded	TLibEncoder/TEncCfg.h	/^  Void      setFramesToBeEncoded            ( Int   i )      { m_framesToBeEncoded = i; }$/;"	f	class:TEncCfg
setFrmRate	TLibEncoder/TEncAnalyze.h	/^  Void    setFrmRate  (Double dFrameRate) { m_dFrmRate = dFrameRate; } \/\/--CFG_KDY$/;"	f	class:TEncAnalyze
setFviSEIDisabled	TLibEncoder/TEncCfg.h	/^  Void    setFviSEIDisabled()                                        { m_fviSEIEnabled = false; }$/;"	f	class:TEncCfg
setFviSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void    setFviSEIEnabled(const TComSEIFisheyeVideoInfo& fvi)       { m_fisheyeVideoInfo=fvi; m_fviSEIEnabled=true; }$/;"	f	class:TEncCfg
setGOPSize	TLibEncoder/TEncCfg.h	/^  Void      setGOPSize                      ( Int   i )      { m_iGOPSize = i; }$/;"	f	class:TEncCfg
setGopBasedTemporalFilterEnabled	TLibEncoder/TEncCfg.h	/^  Void  setGopBasedTemporalFilterEnabled(Bool flag)                  { m_gopBasedTemporalFilterEnabled = flag; }$/;"	f	class:TEncCfg
setGopID	TLibEncoder/TEncSlice.h	/^  Void    setGopID( Int iGopID )      { m_gopID = iGopID; }$/;"	f	class:TEncSlice
setGopList	TLibEncoder/TEncCfg.h	/^  Void      setGopList                      ( const GOPEntry GOPList[MAX_GOP] ) {  for ( Int i = 0; i < MAX_GOP; i++ ) m_GOPList[i] = GOPList[i]; }$/;"	f	class:TEncCfg
setGradualDecodingRefreshInfoEnabled	TLibEncoder/TEncCfg.h	/^  Void  setGradualDecodingRefreshInfoEnabled(Bool b)                 { m_gradualDecodingRefreshInfoEnabled = b;    }$/;"	f	class:TEncCfg
setHandleCraAsBlaFlag	TLibCommon/TComSlice.h	/^  Void                        setHandleCraAsBlaFlag( Bool val )                      { m_handleCraAsBlaFlag = val;                                   }$/;"	f	class:TComSlice
setHarmonizeGopFirstFieldCoupleEnabled	TLibEncoder/TEncCfg.h	/^  Void         setHarmonizeGopFirstFieldCoupleEnabled( Bool b )      { m_bHarmonizeGopFirstFieldCoupleEnabled = b; }$/;"	f	class:TEncCfg
setHeight	TLibCommon/TComDataCU.h	/^  Void          setHeight                     ( UInt uiIdx, UChar  uh )                                    { m_puhHeight[uiIdx] = uh;                   }$/;"	f	class:TComDataCU
setHighPrecisionOffsetsEnabledFlag	TLibCommon/TComSlice.h	/^  Void setHighPrecisionOffsetsEnabledFlag(Bool value)                                  { m_highPrecisionOffsetsEnabledFlag = value;     }$/;"	f	class:TComSPSRExt
setHighPrecisionOffsetsEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void      setHighPrecisionOffsetsEnabledFlag(Bool value) { m_highPrecisionOffsetsEnabledFlag = value; }$/;"	f	class:TEncCfg
setHor	TLibCommon/TComMv.h	/^  Void  setHor    ( Short i )                   { m_iHor = i;                               }$/;"	f	class:TComMv
setHrdOpSetIdx	TLibCommon/TComSlice.h	/^  Void              setHrdOpSetIdx( UInt val, UInt i )                   { m_hrdOpSetIdx[ i ] = val;                                        }$/;"	f	class:TComVPS
setHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Void              setHrdParametersPresentFlag(Bool i)                    { m_hrdParametersPresentFlag = i;                }$/;"	f	class:TComVUI
setID	TLibCommon/TComSlice.cpp	/^Void ParameterSetMap<TComPPS>::setID(TComPPS* parameterSet, const Int psId)$/;"	f	class:ParameterSetMap
setID	TLibCommon/TComSlice.cpp	/^Void ParameterSetMap<TComSPS>::setID(TComSPS* parameterSet, const Int psId)$/;"	f	class:ParameterSetMap
setIPCMFlag	TLibCommon/TComDataCU.h	/^  Void          setIPCMFlag                   ( UInt uiIdx, Bool b )                                       { m_pbIPCMFlag[uiIdx] = b;                   }$/;"	f	class:TComDataCU
setIPCMFlagSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setIPCMFlagSubParts  (Bool bIpcmFlag, UInt uiAbsPartIdx, UInt uiDepth)$/;"	f	class:TComDataCU
setInitialCpbFullness	TLibEncoder/TEncCfg.h	/^  Void         setInitialCpbFullness  (Double f)                     { m_RCInitialCpbFullness = f;     }$/;"	f	class:TEncCfg
setInitialCpbRemovalDelayLengthMinus1	TLibCommon/TComSlice.h	/^  Void    setInitialCpbRemovalDelayLengthMinus1( UInt value )                        { m_initialCpbRemovalDelayLengthMinus1 = value;              }$/;"	f	class:TComHRD
setInitialQP	TLibEncoder/TEncCfg.h	/^  Void         setInitialQP           ( Int QP )                     { m_RCInitialQP = QP;             }$/;"	f	class:TEncCfg
setInterDir	TLibCommon/TComDataCU.h	/^  Void          setInterDir                   ( UInt uiIdx, UChar  uh )                                    { m_puhInterDir[uiIdx] = uh;                 }$/;"	f	class:TComDataCU
setInterDirSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setInterDirSubParts( UInt uiDir, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setInterRPSPrediction	TLibCommon/TComSlice.h	/^  Void    setInterRPSPrediction(Bool flag)             { m_interRPSPrediction = flag;         }$/;"	f	class:TComReferencePictureSet
setInterlacedSourceFlag	TLibCommon/TComSlice.h	/^  Void          setInterlacedSourceFlag(Bool b)             { m_interlacedSourceFlag = b;           }$/;"	f	class:ProfileTierLevel
setInterlacedSourceFlag	TLibEncoder/TEncCfg.h	/^  Void         setInterlacedSourceFlag(Bool b)                       { m_interlacedSourceFlag = b; }$/;"	f	class:TEncCfg
setIntraConstraintFlag	TLibCommon/TComSlice.h	/^  Void          setIntraConstraintFlag(Bool b)              { m_intraConstraintFlag = b;            }$/;"	f	class:ProfileTierLevel
setIntraConstraintFlag	TLibEncoder/TEncCfg.h	/^  Void         setIntraConstraintFlag(Bool b)                        { m_intraConstraintFlag=b; }$/;"	f	class:TEncCfg
setIntraDirSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setIntraDirSubParts( const ChannelType channelType, const UInt dir, const UInt absPartIdx, const UInt depth )$/;"	f	class:TComDataCU
setIntraLambdaModifier	TLibEncoder/TEncCfg.h	/^  Void      setIntraLambdaModifier          ( const std::vector<Double> &dValue )               { m_adIntraLambdaModifier = dValue;       }$/;"	f	class:TEncCfg
setIntraPeriod	TLibEncoder/TEncCfg.h	/^  Void      setIntraPeriod                  ( Int   i )      { m_uiIntraPeriod = (UInt)i; }$/;"	f	class:TEncCfg
setIntraQPOffset	TLibEncoder/TEncCfg.h	/^  Void      setIntraQPOffset                ( Int   i )         { m_intraQPOffset = i; }$/;"	f	class:TEncCfg
setIntraQpFactor	TLibEncoder/TEncCfg.h	/^  Void      setIntraQpFactor                ( Double dValue )               { m_dIntraQpFactor = dValue;              }$/;"	f	class:TEncCfg
setIntraSmoothingDisabledFlag	TLibCommon/TComSlice.h	/^  Void setIntraSmoothingDisabledFlag(Bool bValue)                                      { m_intraSmoothingDisabledFlag=bValue;           }$/;"	f	class:TComSPSRExt
setIntraSmoothingDisabledFlag	TLibEncoder/TEncCfg.h	/^  Void setIntraSmoothingDisabledFlag               (Bool bValue) { m_intraSmoothingDisabledFlag=bValue; }$/;"	f	class:TEncCfg
setIsChromaQpAdjCoded	TLibDecoder/TDecCu.h	/^  Void setIsChromaQpAdjCoded    ( Bool b )                { m_IsChromaQpAdjCoded = b;           }$/;"	f	class:TDecCu
setIsLongTerm	TLibCommon/TComPic.h	/^  Void          setIsLongTerm( Bool lt ) { m_bIsLongTerm = lt; }$/;"	f	class:TComPic
setIsUsedAsLongTerm	TLibCommon/TComSlice.h	/^  Void                        setIsUsedAsLongTerm(Int i, Int j, Bool value)          { m_bIsUsedAsLongTerm[i][j] = value;                            }$/;"	f	class:TComSlice
setKeepHierBit	TLibEncoder/TEncCfg.h	/^  Void         setKeepHierBit         ( Int i )                      { m_RCKeepHierarchicalBit = i;    }$/;"	f	class:TEncCfg
setKneeFunctionInformationSEI	TLibEncoder/TEncCfg.h	/^  Void  setKneeFunctionInformationSEI(const TEncSEIKneeFunctionInformation &seiknee) { m_kneeFunctionInformationSEI = seiknee; }$/;"	f	class:TEncCfg
setKneeSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setKneeSEIEnabled(Int b)                                     { m_kneeSEIEnabled = b; }$/;"	f	class:TEncCfg
setLCULevelRC	TLibEncoder/TEncCfg.h	/^  Void         setLCULevelRC          ( Bool b )                     { m_RCLCULevelRC = b; }$/;"	f	class:TEncCfg
setLCUPara	TLibEncoder/TEncRateCtrl.h	/^  Void           setLCUPara( Int level, Int LCUIdx, TRCParameter para ) { assert( level < m_numberOfLevel ); assert( LCUIdx  < m_numberOfLCU ); m_LCUPara[level][LCUIdx] = para; }$/;"	f	class:TEncRCSeq
setLFCrossSliceBoundaryFlag	TLibCommon/TComSlice.h	/^  Void                        setLFCrossSliceBoundaryFlag( Bool   val )              { m_LFCrossSliceBoundaryFlag = val;                             }$/;"	f	class:TComSlice
setLFCrossSliceBoundaryFlag	TLibEncoder/TEncCfg.h	/^  Void      setLFCrossSliceBoundaryFlag     ( Bool   bValue  )       { m_bLFCrossSliceBoundaryFlag = bValue; }$/;"	f	class:TEncCfg
setLFCrossTileBoundaryFlag	TLibEncoder/TEncCfg.h	/^  Void  setLFCrossTileBoundaryFlag               ( Bool   val  )     { m_loopFilterAcrossTilesEnabledFlag = val; }$/;"	f	class:TEncCfg
setLambda	TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setLambda( Double dLambda, const BitDepths &bitDepths )$/;"	f	class:TComRdCost
setLambda	TLibCommon/TComTrQuant.h	/^  Void setLambda(Double dLambda) { m_dLambda = dLambda;}$/;"	f	class:TComTrQuant
setLambdaFromQPEnable	TLibEncoder/TEncCfg.h	/^  Void      setLambdaFromQPEnable           ( Bool  b )         { m_lambdaFromQPEnable = b; }$/;"	f	class:TEncCfg
setLambdaModifier	TLibEncoder/TEncCfg.h	/^  Void      setLambdaModifier               ( UInt uiIndex, Double dValue ) { m_adLambdaModifier[ uiIndex ] = dValue; }$/;"	f	class:TEncCfg
setLambdas	TLibCommon/TComSlice.h	/^  Void                        setLambdas( const Double lambdas[MAX_NUM_COMPONENT] )  { for (Int component = 0; component < MAX_NUM_COMPONENT; component++) m_lambdas[component] = lambdas[component]; }$/;"	f	class:TComSlice
setLambdas	TLibCommon/TComTrQuant.h	/^  Void setLambdas(const Double lambdas[MAX_NUM_COMPONENT]) { for (UInt component = 0; component < MAX_NUM_COMPONENT; component++) m_lambdas[component] = lambdas[component]; }$/;"	f	class:TComTrQuant
setLastIDR	TLibCommon/TComSlice.h	/^  Void                        setLastIDR(Int iIDRPOC)                                { m_iLastIDR = iIDRPOC;                                         }$/;"	f	class:TComSlice
setLastLambda	TLibEncoder/TEncRateCtrl.h	/^  Void   setLastLambda( Double lamdba ) { m_lastLambda = lamdba; }$/;"	f	class:TEncRCSeq
setLayerIdIncludedFlag	TLibCommon/TComSlice.h	/^  Void              setLayerIdIncludedFlag(Bool v, UInt opsIdx, UInt id) { m_layerIdIncludedFlag[opsIdx][id] = v;                           }$/;"	f	class:TComVPS
setLevel	TLibEncoder/TEncCfg.h	/^  Void setLevel(Level::Tier tier, Level::Name level) { m_levelTier = tier; m_level = level; }$/;"	f	class:TEncCfg
setLevelIdc	TLibCommon/TComSlice.h	/^  Void          setLevelIdc(Level::Name x)                  { m_levelIdc = x;                       }$/;"	f	class:ProfileTierLevel
setList1IdxToList0Idx	TLibCommon/TComSlice.cpp	/^Void TComSlice::setList1IdxToList0Idx()$/;"	f	class:TComSlice
setListsModificationPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setListsModificationPresentFlag( Bool b )                        { m_listsModificationPresentFlag = b;           }$/;"	f	class:TComPPS
setLog2DiffMaxMinCodingBlockSize	TLibCommon/TComSlice.h	/^  Void                   setLog2DiffMaxMinCodingBlockSize(Int val)                                       { m_log2DiffMaxMinCodingBlockSize = val;                               }$/;"	f	class:TComSPS
setLog2DiffMaxMinCodingBlockSize	TLibEncoder/TEncCfg.h	/^  Void      setLog2DiffMaxMinCodingBlockSize( UInt  u )      { m_log2DiffMaxMinCodingBlockSize = u; }$/;"	f	class:TEncCfg
setLog2MaxMvLengthHorizontal	TLibCommon/TComSlice.h	/^  Void              setLog2MaxMvLengthHorizontal(Int i)                    { m_log2MaxMvLengthHorizontal = i;               }$/;"	f	class:TComVUI
setLog2MaxMvLengthHorizontal	TLibEncoder/TEncCfg.h	/^  Void         setLog2MaxMvLengthHorizontal(Int i)                   { m_log2MaxMvLengthHorizontal = i; }$/;"	f	class:TEncCfg
setLog2MaxMvLengthVertical	TLibCommon/TComSlice.h	/^  Void              setLog2MaxMvLengthVertical(Int i)                      { m_log2MaxMvLengthVertical = i;                 }$/;"	f	class:TComVUI
setLog2MaxMvLengthVertical	TLibEncoder/TEncCfg.h	/^  Void         setLog2MaxMvLengthVertical(Int i)                     { m_log2MaxMvLengthVertical = i; }$/;"	f	class:TEncCfg
setLog2MaxTransformSkipBlockSize	TLibCommon/TComSlice.h	/^  Void                   setLog2MaxTransformSkipBlockSize( UInt u )                       { m_log2MaxTransformSkipBlockSize  = u;           }$/;"	f	class:TComPPSRExt
setLog2MaxTransformSkipBlockSize	TLibEncoder/TEncCfg.h	/^  Void setLog2MaxTransformSkipBlockSize                ( UInt u )    { m_log2MaxTransformSkipBlockSize  = u;       }$/;"	f	class:TEncCfg
setLog2MinCodingBlockSize	TLibCommon/TComSlice.h	/^  Void                   setLog2MinCodingBlockSize(Int val)                                              { m_log2MinCodingBlockSize = val;                                      }$/;"	f	class:TComSPS
setLog2ParallelMergeLevelMinus2	TLibCommon/TComSlice.h	/^  Void                   setLog2ParallelMergeLevelMinus2(UInt mrgLevel)                   { m_log2ParallelMergeLevelMinus2 = mrgLevel;    }$/;"	f	class:TComPPS
setLog2ParallelMergeLevelMinus2	TLibEncoder/TEncCfg.h	/^  Void         setLog2ParallelMergeLevelMinus2   ( UInt u )          { m_log2ParallelMergeLevelMinus2       = u;    }$/;"	f	class:TEncCfg
setLog2SaoOffsetScale	TLibCommon/TComSlice.h	/^  Void                   setLog2SaoOffsetScale(ChannelType type, UInt uiBitShift)         { m_log2SaoOffsetScale[type] = uiBitShift;       }$/;"	f	class:TComPPSRExt
setLog2SaoOffsetScale	TLibEncoder/TEncCfg.h	/^  Void      setLog2SaoOffsetScale(ChannelType type, UInt uiBitShift)         { m_log2SaoOffsetScale[type] = uiBitShift; }$/;"	f	class:TEncCfg
setLongTermRefsPresent	TLibCommon/TComSlice.h	/^  Void                   setLongTermRefsPresent(Bool b)                                                  { m_bLongTermRefsPresent=b;                                            }$/;"	f	class:TComSPS
setLoopFilterAcrossSlicesEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setLoopFilterAcrossSlicesEnabledFlag( Bool bValue )              { m_loopFilterAcrossSlicesEnabledFlag = bValue; }$/;"	f	class:TComPPS
setLoopFilterAcrossTilesEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setLoopFilterAcrossTilesEnabledFlag(Bool b)                      { m_loopFilterAcrossTilesEnabledFlag = b;       }$/;"	f	class:TComPPS
setLoopFilterBetaOffset	TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterBetaOffset         ( Int   i )      { m_loopFilterBetaOffsetDiv2  = i; }$/;"	f	class:TEncCfg
setLoopFilterDisable	TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterDisable            ( Bool  b )      { m_bLoopFilterDisable        = b; }$/;"	f	class:TEncCfg
setLoopFilterOffsetInPPS	TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterOffsetInPPS        ( Bool  b )      { m_loopFilterOffsetInPPS     = b; }$/;"	f	class:TEncCfg
setLoopFilterTcOffset	TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterTcOffset           ( Int   i )      { m_loopFilterTcOffsetDiv2    = i; }$/;"	f	class:TEncCfg
setLowDelayHrdFlag	TLibCommon/TComSlice.h	/^  Void    setLowDelayHrdFlag( Int layer, Bool flag )                                 { m_HRD[layer].lowDelayHrdFlag = flag;                       }$/;"	f	class:TComHRD
setLowerBitRateConstraintFlag	TLibCommon/TComSlice.h	/^  Void          setLowerBitRateConstraintFlag(Bool b)       { m_lowerBitRateConstraintFlag = b;     }$/;"	f	class:ProfileTierLevel
setLowerBitRateConstraintFlag	TLibEncoder/TEncCfg.h	/^  Void         setLowerBitRateConstraintFlag(Bool b)                 { m_lowerBitRateConstraintFlag=b; }$/;"	f	class:TEncCfg
setLtRefPicPocLsbSps	TLibCommon/TComSlice.h	/^  Void                   setLtRefPicPocLsbSps(UInt index, UInt val)                                      { assert( index < MAX_NUM_LONG_TERM_REF_PICS ); m_ltRefPicPocLsbSps[index] = val;  }$/;"	f	class:TComSPS
setLumaLevelToDeltaQPControls	TLibEncoder/TEncCfg.h	/^  Void      setLumaLevelToDeltaQPControls( const LumaLevelToDeltaQPMapping &lumaLevelToDeltaQPMapping ) { m_lumaLevelToDeltaQPMapping=lumaLevelToDeltaQPMapping; }$/;"	f	class:TEncCfg
setMVPIdx	TLibCommon/TComDataCU.h	/^  Void          setMVPIdx                     ( RefPicList eRefPicList, UInt uiIdx, Int iMVPIdx)           { m_apiMVPIdx[eRefPicList][uiIdx] = iMVPIdx; }$/;"	f	class:TComDataCU
setMVPIdxSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMVPIdxSubParts( Int iMVPIdx, RefPicList eRefPicList, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMVPNum	TLibCommon/TComDataCU.h	/^  Void          setMVPNum                     ( RefPicList eRefPicList, UInt uiIdx, Int iMVPNum )          { m_apiMVPNum[eRefPicList][uiIdx] = iMVPNum; }$/;"	f	class:TComDataCU
setMVPNumSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMVPNumSubParts( Int iMVPNum, RefPicList eRefPicList, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMasteringDisplaySEI	TLibEncoder/TEncCfg.h	/^  Void  setMasteringDisplaySEI(const TComSEIMasteringDisplay &src)   { m_masteringDisplay = src; }$/;"	f	class:TEncCfg
setMatrixCoefficients	TLibCommon/TComSlice.h	/^  Void              setMatrixCoefficients(Int i)                           { m_matrixCoefficients = i;                      }$/;"	f	class:TComVUI
setMatrixCoefficients	TLibEncoder/TEncCfg.h	/^  Void         setMatrixCoefficients(Int i)                          { m_matrixCoefficients = i; }$/;"	f	class:TEncCfg
setMaxBitsPerMinCuDenom	TLibCommon/TComSlice.h	/^  Void              setMaxBitsPerMinCuDenom(Int i)                         { m_maxBitsPerMinCuDenom = i;                    }$/;"	f	class:TComVUI
setMaxBitsPerMinCuDenom	TLibEncoder/TEncCfg.h	/^  Void         setMaxBitsPerMinCuDenom(Int i)                        { m_maxBitsPerMinCuDenom = i; }$/;"	f	class:TEncCfg
setMaxBytesPerPicDenom	TLibCommon/TComSlice.h	/^  Void              setMaxBytesPerPicDenom(Int i)                          { m_maxBytesPerPicDenom = i;                     }$/;"	f	class:TComVUI
setMaxBytesPerPicDenom	TLibEncoder/TEncCfg.h	/^  Void         setMaxBytesPerPicDenom(Int i)                         { m_maxBytesPerPicDenom = i; }$/;"	f	class:TEncCfg
setMaxCUHeight	TLibCommon/TComSlice.h	/^  Void                   setMaxCUHeight( UInt u )                                                        { m_uiMaxCUHeight = u;                                                 }$/;"	f	class:TComSPS
setMaxCUHeight	TLibEncoder/TEncCfg.h	/^  Void      setMaxCUHeight                  ( UInt  u )      { m_maxCUHeight = u; }$/;"	f	class:TEncCfg
setMaxCUWidth	TLibCommon/TComSlice.h	/^  Void                   setMaxCUWidth( UInt u )                                                         { m_uiMaxCUWidth = u;                                                  }$/;"	f	class:TComSPS
setMaxCUWidth	TLibEncoder/TEncCfg.h	/^  Void      setMaxCUWidth                   ( UInt  u )      { m_maxCUWidth  = u; }$/;"	f	class:TEncCfg
setMaxCuDQPDepth	TLibCommon/TComSlice.h	/^  Void                   setMaxCuDQPDepth( UInt u )                                       { m_uiMaxCuDQPDepth = u;                        }$/;"	f	class:TComPPS
setMaxCuDQPDepth	TLibEncoder/TEncCfg.h	/^  Void      setMaxCuDQPDepth                ( Int   i )      { m_iMaxCuDQPDepth = i; }$/;"	f	class:TEncCfg
setMaxDecPicBuffering	TLibCommon/TComSlice.h	/^  Void                   setMaxDecPicBuffering( UInt ui, UInt tlayer )                                   { assert(tlayer < MAX_TLAYER); m_uiMaxDecPicBuffering[tlayer] = ui;    }$/;"	f	class:TComSPS
setMaxDecPicBuffering	TLibCommon/TComSlice.h	/^  Void              setMaxDecPicBuffering(UInt v, UInt tLayer)           { assert(tLayer < MAX_TLAYER); m_uiMaxDecPicBuffering[tLayer] = v; }$/;"	f	class:TComVPS
setMaxDecPicBuffering	TLibEncoder/TEncCfg.h	/^  Void      setMaxDecPicBuffering           ( UInt u, UInt tlayer ) { m_maxDecPicBuffering[tlayer] = u;    }$/;"	f	class:TEncCfg
setMaxDeltaQP	TLibEncoder/TEncCfg.h	/^  Void      setMaxDeltaQP                   ( Int   i )      { m_iMaxDeltaQP = i; }$/;"	f	class:TEncCfg
setMaxLatencyIncrease	TLibCommon/TComSlice.h	/^  Void              setMaxLatencyIncrease(UInt v, UInt tLayer)           { m_uiMaxLatencyIncrease[tLayer] = v;                              }$/;"	f	class:TComVPS
setMaxLatencyIncreasePlus1	TLibCommon/TComSlice.h	/^  Void                   setMaxLatencyIncreasePlus1( UInt ui , UInt tlayer)                              { m_uiMaxLatencyIncreasePlus1[tlayer] = ui;                            }$/;"	f	class:TComSPS
setMaxLayers	TLibCommon/TComSlice.h	/^  Void              setMaxLayers(UInt l)                                 { m_uiMaxLayers = l;                                               }$/;"	f	class:TComVPS
setMaxNuhReservedZeroLayerId	TLibCommon/TComSlice.h	/^  Void              setMaxNuhReservedZeroLayerId(UInt v)                 { m_maxNuhReservedZeroLayerId = v;                                 }$/;"	f	class:TComVPS
setMaxNumMergeCand	TLibCommon/TComSlice.h	/^  Void                        setMaxNumMergeCand(UInt val )                          { m_maxNumMergeCand = val;                                      }$/;"	f	class:TComSlice
setMaxNumMergeCand	TLibEncoder/TEncCfg.h	/^  Void         setMaxNumMergeCand                ( UInt u )          { m_maxNumMergeCand = u;      }$/;"	f	class:TEncCfg
setMaxNumOffsetsPerPic	TLibEncoder/TEncCfg.h	/^  Void  setMaxNumOffsetsPerPic                   (Int iVal)          { m_maxNumOffsetsPerPic = iVal; }$/;"	f	class:TEncCfg
setMaxOpSets	TLibCommon/TComSlice.h	/^  Void              setMaxOpSets(UInt v)                                 { m_numOpSets = v;                                                 }$/;"	f	class:TComVPS
setMaxRefPicNum	TLibEncoder/TEncCfg.h	/^  Void      setMaxRefPicNum                 ( Int iMaxRefPicNum )           { m_iMaxRefPicNum = iMaxRefPicNum;  }$/;"	f	class:TEncCfg
setMaxTLayers	TLibCommon/TComSlice.h	/^  Void                   setMaxTLayers( UInt uiMaxTLayers )                                              { assert( uiMaxTLayers <= MAX_TLAYER ); m_uiMaxTLayers = uiMaxTLayers; }$/;"	f	class:TComSPS
setMaxTLayers	TLibCommon/TComSlice.h	/^  Void              setMaxTLayers(UInt t)                                { m_uiMaxTLayers = t;                                              }$/;"	f	class:TComVPS
setMaxTempLayer	TLibEncoder/TEncCfg.h	/^  Void      setMaxTempLayer                 ( Int maxTempLayer )            { m_maxTempLayer = maxTempLayer;      }$/;"	f	class:TEncCfg
setMaxTotalCUDepth	TLibCommon/TComSlice.h	/^  Void                   setMaxTotalCUDepth( UInt u )                                                    { m_uiMaxTotalCUDepth = u;                                             }$/;"	f	class:TComSPS
setMaxTotalCUDepth	TLibEncoder/TEncCfg.h	/^  Void      setMaxTotalCUDepth              ( UInt  u )      { m_maxTotalCUDepth = u; }$/;"	f	class:TEncCfg
setMaxTrSize	TLibCommon/TComSlice.h	/^  Void                   setMaxTrSize( UInt u )                                                          { m_uiMaxTrSize = u;                                                   }$/;"	f	class:TComSPS
setMergeAMP	TLibCommon/TComDataCU.h	/^  Void          setMergeAMP                   ( Bool b )                                                   { m_bIsMergeAMP = b;                         }$/;"	f	class:TComDataCU
setMergeFlag	TLibCommon/TComDataCU.h	/^  Void          setMergeFlag                  ( UInt uiIdx, Bool b )                                       { m_pbMergeFlag[uiIdx] = b;                  }$/;"	f	class:TComDataCU
setMergeFlagSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMergeFlagSubParts ( Bool bMergeFlag, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMergeIndex	TLibCommon/TComDataCU.h	/^  Void          setMergeIndex                 ( UInt uiIdx, UInt uiMergeIndex )                            { m_puhMergeIndex[uiIdx] = uiMergeIndex;     }$/;"	f	class:TComDataCU
setMergeIndexSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMergeIndexSubParts ( UInt uiMergeIndex, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMinSearchWindow	TLibEncoder/TEncCfg.h	/^  Void      setMinSearchWindow              ( Int   i )      { m_minSearchWindow = i; }$/;"	f	class:TEncCfg
setMinSpatialSegmentationIdc	TLibCommon/TComSlice.h	/^  Void              setMinSpatialSegmentationIdc(Int i)                    { m_minSpatialSegmentationIdc = i;               }$/;"	f	class:TComVUI
setMinSpatialSegmentationIdc	TLibEncoder/TEncCfg.h	/^  Void         setMinSpatialSegmentationIdc(Int i)                   { m_minSpatialSegmentationIdc = i; }$/;"	f	class:TEncCfg
setMotionEstimationSearchMethod	TLibEncoder/TEncCfg.h	/^  Void      setMotionEstimationSearchMethod ( MESearchMethod e ) { m_motionEstimationSearchMethod = e; }$/;"	f	class:TEncCfg
setMotionVectorsOverPicBoundariesFlag	TLibCommon/TComSlice.h	/^  Void              setMotionVectorsOverPicBoundariesFlag(Bool i)          { m_motionVectorsOverPicBoundariesFlag = i;      }$/;"	f	class:TComVUI
setMotionVectorsOverPicBoundariesFlag	TLibEncoder/TEncCfg.h	/^  Void         setMotionVectorsOverPicBoundariesFlag(Bool i)         { m_motionVectorsOverPicBoundariesFlag = i; }$/;"	f	class:TEncCfg
setMvField	TLibCommon/TComMotionInfo.h	/^  Void setMvField( TComMv const & cMv, Int iRefIdx )$/;"	f	class:TComMvField
setMvdL1ZeroFlag	TLibCommon/TComSlice.h	/^  Void                        setMvdL1ZeroFlag( Bool b)                              { m_bLMvdL1Zero = b;                                            }$/;"	f	class:TComSlice
setNalHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Void    setNalHrdParametersPresentFlag( Bool flag )                                { m_nalHrdParametersPresentFlag = flag;                      }$/;"	f	class:TComHRD
setNalUnitType	TLibCommon/TComSlice.h	/^  Void                        setNalUnitType( NalUnitType e )                        { m_eNalUnitType      = e;                                      }$/;"	f	class:TComSlice
setNeutralChromaIndicationFlag	TLibCommon/TComSlice.h	/^  Void              setNeutralChromaIndicationFlag(Bool i)                 { m_neutralChromaIndicationFlag = i;             }$/;"	f	class:TComVUI
setNeutralChromaIndicationFlag	TLibEncoder/TEncCfg.h	/^  Void         setNeutralChromaIndicationFlag(Bool i)                { m_neutralChromaIndicationFlag = i; }$/;"	f	class:TEncCfg
setNoDisplaySEITLayer	TLibEncoder/TEncCfg.h	/^  Void  setNoDisplaySEITLayer(Int b)                                 { m_noDisplaySEITLayer = b;    }$/;"	f	class:TEncCfg
setNoOutputPriorPicsFlag	TLibCommon/TComSlice.h	/^  Void                        setNoOutputPriorPicsFlag( Bool val )                   { m_noOutputPriorPicsFlag = val;                                }$/;"	f	class:TComSlice
setNoOutputPriorPicsFlag	TLibDecoder/TDecTop.h	/^  Void  setNoOutputPriorPicsFlag (Bool val) { m_isNoOutputPriorPics = val; }$/;"	f	class:TDecTop
setNoRaslOutputFlag	TLibCommon/TComSlice.h	/^  Void                        setNoRaslOutputFlag( Bool val )                        { m_noRaslOutputFlag = val;                                     }$/;"	f	class:TComSlice
setNonPackedConstraintFlag	TLibCommon/TComSlice.h	/^  Void          setNonPackedConstraintFlag(Bool b)          { m_nonPackedConstraintFlag = b;        }$/;"	f	class:ProfileTierLevel
setNonPackedConstraintFlag	TLibEncoder/TEncCfg.h	/^  Void         setNonPackedConstraintFlag(Bool b)                    { m_nonPackedConstraintFlag = b; }$/;"	f	class:TEncCfg
setNumColumnsMinus1	TLibEncoder/TEncCfg.h	/^  Void  setNumColumnsMinus1            ( Int i )                     { m_iNumColumnsMinus1 = i; }$/;"	f	class:TEncCfg
setNumExtraSliceHeaderBits	TLibCommon/TComSlice.h	/^  Void                   setNumExtraSliceHeaderBits(Int i)                                { m_numExtraSliceHeaderBits = i;                }$/;"	f	class:TComPPS
setNumHrdParameters	TLibCommon/TComSlice.h	/^  Void              setNumHrdParameters(UInt v)                          { m_numHrdParameters = v;                                          }$/;"	f	class:TComVPS
setNumLongTermRefPicSPS	TLibCommon/TComSlice.h	/^  Void                   setNumLongTermRefPicSPS(UInt val)                                               { m_numLongTermRefPicSPS = val;                                        }$/;"	f	class:TComSPS
setNumPartition	TLibCommon/TComMotionInfo.h	/^  Void setNumPartition( Int iNumPart )$/;"	f	class:TComCUMvField
setNumRefIdc	TLibCommon/TComSlice.h	/^  Void    setNumRefIdc(Int x)                          { m_numRefIdc = x;                     }$/;"	f	class:TComReferencePictureSet
setNumRefIdx	TLibCommon/TComSlice.h	/^  Void                        setNumRefIdx( RefPicList e, Int i )                    { m_aiNumRefIdx[e]    = i;                                      }$/;"	f	class:TComSlice
setNumRefIdxL0DefaultActive	TLibCommon/TComSlice.h	/^  Void                   setNumRefIdxL0DefaultActive(UInt ui)                             { m_numRefIdxL0DefaultActive=ui;                }$/;"	f	class:TComPPS
setNumRefIdxL1DefaultActive	TLibCommon/TComSlice.h	/^  Void                   setNumRefIdxL1DefaultActive(UInt ui)                             { m_numRefIdxL1DefaultActive=ui;                }$/;"	f	class:TComPPS
setNumReorderPics	TLibCommon/TComSlice.h	/^  Void                   setNumReorderPics(Int i, UInt tlayer)                                           { m_numReorderPics[tlayer] = i;                                        }$/;"	f	class:TComSPS
setNumReorderPics	TLibCommon/TComSlice.h	/^  Void              setNumReorderPics(UInt v, UInt tLayer)               { m_numReorderPics[tLayer] = v;                                    }$/;"	f	class:TComVPS
setNumReorderPics	TLibEncoder/TEncCfg.h	/^  Void      setNumReorderPics               ( Int  i, UInt tlayer ) { m_numReorderPics[tlayer] = i;    }$/;"	f	class:TEncCfg
setNumRowsMinus1	TLibEncoder/TEncCfg.h	/^  Void  setNumRowsMinus1               ( Int i )                     { m_iNumRowsMinus1 = i; }$/;"	f	class:TEncCfg
setNumTicksPocDiffOneMinus1	TLibCommon/TComSlice.h	/^  Void setNumTicksPocDiffOneMinus1(Int x)      { m_numTicksPocDiffOneMinus1 = x;       }$/;"	f	class:TimingInfo
setNumTicksPocDiffOneMinus1	TLibEncoder/TEncCfg.h	/^  Void         setNumTicksPocDiffOneMinus1(Int x)                    { m_numTicksPocDiffOneMinus1 = x;       }$/;"	f	class:TEncCfg
setNumTileColumnsMinus1	TLibCommon/TComPicSym.h	/^  Void               setNumTileColumnsMinus1( Int i )                      { m_numTileColumnsMinus1 = i;    }$/;"	f	class:TComPicSym
setNumTileColumnsMinus1	TLibCommon/TComSlice.h	/^  Void                   setNumTileColumnsMinus1(Int i)                                   { m_numTileColumnsMinus1 = i;                   }$/;"	f	class:TComPPS
setNumTileRowsMinus1	TLibCommon/TComPicSym.h	/^  Void               setNumTileRowsMinus1( Int i )                         { m_numTileRowsMinus1 = i;       }$/;"	f	class:TComPicSym
setNumTileRowsMinus1	TLibCommon/TComSlice.h	/^  Void                   setNumTileRowsMinus1(Int i)                                      { m_numTileRowsMinus1 = i;                      }$/;"	f	class:TComPPS
setNumUnitsInTick	TLibCommon/TComSlice.h	/^  Void setNumUnitsInTick( UInt value )         { m_numUnitsInTick = value;             }$/;"	f	class:TimingInfo
setNumberOfCtusInFrame	TLibCommon/TComPicSym.h	/^  Void               setNumberOfCtusInFrame(TComPicSym *picsym, UInt numOfCtusInFrame) { picsym->m_numCtusInFrame = numOfCtusInFrame; }  \/\/\/< allows setting numOfCtusInFrame which controls memory allocations of several variables in TComPic, TComPicSym, TComLoopFilter and others. Make sure to have equal values of numOfCtusInFrame at time of creation and destruction of an object lifetime to avoid memory leaks.$/;"	f	class:MctsExtractorTComPicSym
setNumberOfLongtermPictures	TLibCommon/TComSlice.h	/^  Void    setNumberOfLongtermPictures(Int number)      { m_numberOfLongtermPictures = number; }$/;"	f	class:TComReferencePictureSet
setNumberOfNegativePictures	TLibCommon/TComSlice.h	/^  Void    setNumberOfNegativePictures(Int number)      { m_numberOfNegativePictures = number; }$/;"	f	class:TComReferencePictureSet
setNumberOfPictures	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setNumberOfPictures(Int numberOfPictures)$/;"	f	class:TComReferencePictureSet
setNumberOfPositivePictures	TLibCommon/TComSlice.h	/^  Void    setNumberOfPositivePictures(Int number)      { m_numberOfPositivePictures = number; }$/;"	f	class:TComReferencePictureSet
setNumberOfTileRects	TLibCommon/SEI.h	/^      Void setNumberOfTileRects(const Int number)$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
setNumberOfTileSets	TLibCommon/SEI.h	/^  Void setNumberOfTileSets(const Int number)       { m_tile_set_data.resize(number);     }$/;"	f	class:SEITempMotionConstrainedTileSets
setNumberOfTimeSets	TLibEncoder/TEncCfg.h	/^  Void  setNumberOfTimeSets(Int value)                               { m_timeCodeSEINumTs = value; }$/;"	f	class:TEncCfg
setOmniViewportSEIAzimuthCentre	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIAzimuthCentre(const std::vector<Int>& vi)  { m_omniViewportSEIAzimuthCentre = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEICancelFlag(Bool b)                         { m_omniViewportSEICancelFlag = b; }$/;"	f	class:TEncCfg
setOmniViewportSEICntMinus1	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEICntMinus1(UInt b)                          { m_omniViewportSEICntMinus1 = b; }$/;"	f	class:TEncCfg
setOmniViewportSEIElevationCentre	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIElevationCentre(const std::vector<Int>& vi){ m_omniViewportSEIElevationCentre = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIEnabled(Bool b)                            { m_omniViewportSEIEnabled = b; }$/;"	f	class:TEncCfg
setOmniViewportSEIHorRange	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIHorRange(const std::vector<UInt>& vi)      { m_omniViewportSEIHorRange = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEIId	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIId(UInt b)                                 { m_omniViewportSEIId = b; }$/;"	f	class:TEncCfg
setOmniViewportSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIPersistenceFlag(Bool b)                    { m_omniViewportSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setOmniViewportSEITiltCentre	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEITiltCentre(const std::vector<Int>& vi)     { m_omniViewportSEITiltCentre = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEIVerRange	TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIVerRange(const std::vector<UInt>& vi)      { m_omniViewportSEIVerRange = vi; } $/;"	f	class:TEncCfg
setOnePictureOnlyConstraintFlag	TLibCommon/TComSlice.h	/^  Void          setOnePictureOnlyConstraintFlag(Bool b)     { m_onePictureOnlyConstraintFlag = b;   }$/;"	f	class:ProfileTierLevel
setOnePictureOnlyConstraintFlag	TLibEncoder/TEncCfg.h	/^  Void         setOnePictureOnlyConstraintFlag(Bool b)               { m_onePictureOnlyConstraintFlag=b; }$/;"	f	class:TEncCfg
setOptions	Utilities/program_options_lite.cpp	/^    static void setOptions(Options::NamesPtrList& opt_list, const string& value, ErrorReporter& error_reporter)$/;"	f	namespace:df::program_options_lite
setOutputFlagPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setOutputFlagPresentFlag( Bool b )                               { m_OutputFlagPresentFlag = b;                  }$/;"	f	class:TComPPS
setOutputMark	TLibCommon/TComPic.h	/^  Void          setOutputMark (Bool b) { m_bNeededForOutput = b;     }$/;"	f	class:TComPic
setOutsideCUPart	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setOutsideCUPart( UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setOverscanAppropriateFlag	TLibCommon/TComSlice.h	/^  Void              setOverscanAppropriateFlag(Bool i)                     { m_overscanAppropriateFlag = i;                 }$/;"	f	class:TComVUI
setOverscanAppropriateFlag	TLibEncoder/TEncCfg.h	/^  Void         setOverscanAppropriateFlag(Bool i)                    { m_overscanAppropriateFlag = i; }$/;"	f	class:TEncCfg
setOverscanInfoPresentFlag	TLibCommon/TComSlice.h	/^  Void              setOverscanInfoPresentFlag(Bool i)                     { m_overscanInfoPresentFlag = i;                 }$/;"	f	class:TComVUI
setOverscanInfoPresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setOverscanInfoPresentFlag(Bool i)                    { m_overscanInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setPCMBitDepth	TLibCommon/TComSlice.h	/^  Void                   setPCMBitDepth(ChannelType type, UInt u)                                        { m_pcmBitDepths[type] = u;                                            }$/;"	f	class:TComSPS
setPCMBitDepth	TLibEncoder/TEncCfg.h	/^  Void      setPCMBitDepth( const ChannelType chType, Int pcmBitDepthForChannel ) { m_PCMBitDepth[chType] = pcmBitDepthForChannel; }$/;"	f	class:TEncCfg
setPCMFilterDisableFlag	TLibCommon/TComSlice.h	/^  Void                   setPCMFilterDisableFlag( Bool bValue )                                          { m_bPCMFilterDisableFlag = bValue;                                    }$/;"	f	class:TComSPS
setPCMFilterDisableFlag	TLibEncoder/TEncCfg.h	/^  Void      setPCMFilterDisableFlag         ( Bool  b )     {  m_bPCMFilterDisableFlag = b; }$/;"	f	class:TEncCfg
setPCMInputBitDepthFlag	TLibEncoder/TEncCfg.h	/^  Void      setPCMInputBitDepthFlag         ( Bool  b )     { m_bPCMInputBitDepthFlag = b; }$/;"	f	class:TEncCfg
setPCMLog2MaxSize	TLibCommon/TComSlice.h	/^  Void                   setPCMLog2MaxSize( UInt u )                                                     { m_pcmLog2MaxSize = u;                                                }$/;"	f	class:TComSPS
setPCMLog2MaxSize	TLibEncoder/TEncCfg.h	/^  Void      setPCMLog2MaxSize               ( UInt u )      { m_pcmLog2MaxSize = u;      }$/;"	f	class:TEncCfg
setPCMLog2MinSize	TLibCommon/TComSlice.h	/^  Void                   setPCMLog2MinSize( UInt u )                                                     { m_uiPCMLog2MinSize = u;                                              }$/;"	f	class:TComSPS
setPCMLog2MinSize	TLibEncoder/TEncCfg.h	/^  Void      setPCMLog2MinSize               ( UInt u )     { m_uiPCMLog2MinSize = u;      }$/;"	f	class:TEncCfg
setPOC	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setPOC(Int bufferNum, Int POC)$/;"	f	class:TComReferencePictureSet
setPOC	TLibCommon/TComSlice.h	/^  Void                        setPOC( Int i )                                        { m_iPOC              = i; }$/;"	f	class:TComSlice
setPPS	TLibCommon/TComSlice.h	/^  Void                        setPPS( const TComPPS* pcPPS )                         { m_pcPPS = pcPPS; m_iPPSId = (pcPPS) ? pcPPS->getPPSId() : -1; }$/;"	f	class:TComSlice
setPPSDeblockingFilterDisabledFlag	TLibCommon/TComSlice.h	/^  Void                   setPPSDeblockingFilterDisabledFlag(Bool val)                     { m_ppsDeblockingFilterDisabledFlag = val;      } \/\/!< set offset for deblocking filter disabled$/;"	f	class:TComPPS
setPPSId	TLibCommon/TComSlice.h	/^  Void                        setPPSId( Int PPSId )                                  { m_iPPSId = PPSId;                                             }$/;"	f	class:TComSlice
setPPSId	TLibCommon/TComSlice.h	/^  Void                   setPPSId(Int i)                                                  { m_PPSId = i;                                  }$/;"	f	class:TComPPS
setPad	TLibEncoder/TEncCfg.h	/^  Void      setPad                          ( Int*  iPad                   )      { for ( Int i = 0; i < 2; i++ ) m_aiPad[i] = iPad[i]; }$/;"	f	class:TEncCfg
setParamSetChanged	TLibEncoder/TEncTop.cpp	/^Void TEncTop::setParamSetChanged(Int spsId, Int ppsId)$/;"	f	class:TEncTop
setPartSizeSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setPartSizeSubParts( PartSize eMode, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setPartitionSize	TLibCommon/TComDataCU.h	/^  Void          setPartitionSize              ( UInt uiIdx, PartSize uh )                                  { m_pePartSize[uiIdx] = uh;                  }$/;"	f	class:TComDataCU
setPersistentRiceAdaptationEnabledFlag	TLibCommon/TComSlice.h	/^  Void setPersistentRiceAdaptationEnabledFlag(const Bool value)                        { m_persistentRiceAdaptationEnabledFlag = value; }$/;"	f	class:TComSPSRExt
setPersistentRiceAdaptationEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void setPersistentRiceAdaptationEnabledFlag          (const Bool value)       { m_persistentRiceAdaptationEnabledFlag = value; }$/;"	f	class:TEncCfg
setPic	TLibCommon/TComSlice.h	/^  Void                        setPic( TComPic* p )                                   { m_pcPic             = p;                                      }$/;"	f	class:TComSlice
setPicDurationInTcMinus1	TLibCommon/TComSlice.h	/^  Void    setPicDurationInTcMinus1( Int layer, UInt value )                          { m_HRD[layer].picDurationInTcMinus1 = value;                }$/;"	f	class:TComHRD
setPicEstLambda	TLibEncoder/TEncRateCtrl.h	/^  Void setPicEstLambda( Double lambda )                   { m_picLambda = lambda; }$/;"	f	class:TEncRCPic
setPicEstQP	TLibEncoder/TEncRateCtrl.h	/^  Void setPicEstQP( Int QP )                              { m_estPicQP = QP; }$/;"	f	class:TEncRCPic
setPicHeightInLumaSamples	TLibCommon/TComSlice.h	/^  Void                   setPicHeightInLumaSamples( UInt u )                                             { m_picHeightInLumaSamples = u;                                        }$/;"	f	class:TComSPS
setPicInitQPMinus26	TLibCommon/TComSlice.h	/^  Void                   setPicInitQPMinus26( Int i )                                     { m_picInitQPMinus26 = i;                       }$/;"	f	class:TComPPS
setPicMSE	TLibEncoder/TEncRateCtrl.h	/^  void  setPicMSE(Double avgMSE)                           { m_picMSE = avgMSE; }$/;"	f	class:TEncRCPic
setPicOutputFlag	TLibCommon/TComSlice.h	/^  Void                        setPicOutputFlag( Bool b   )                           { m_PicOutputFlag = b;                                          }$/;"	f	class:TComSlice
setPicPara	TLibEncoder/TEncRateCtrl.h	/^  Void           setPicPara( Int level, TRCParameter para )     { assert( level < m_numberOfLevel ); m_picPara[level] = para; }$/;"	f	class:TEncRCSeq
setPicWidthInLumaSamples	TLibCommon/TComSlice.h	/^  Void                   setPicWidthInLumaSamples( UInt u )                                              { m_picWidthInLumaSamples = u;                                         }$/;"	f	class:TComSPS
setPicYuvPred	TLibCommon/TComPic.h	/^  Void          setPicYuvPred( TComPicYuv* pcPicYuv )       { m_pcPicYuvPred = pcPicYuv; }$/;"	f	class:TComPic
setPicYuvResi	TLibCommon/TComPic.h	/^  Void          setPicYuvResi( TComPicYuv* pcPicYuv )       { m_pcPicYuvResi = pcPicYuv; }$/;"	f	class:TComPic
setPictureTimingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setPictureTimingSEIEnabled(Bool b)                           { m_pictureTimingSEIEnabled = b; }$/;"	f	class:TEncCfg
setPocLSBLT	TLibCommon/TComSlice.h	/^  Void    setPocLSBLT(Int i, Int x)                    { m_pocLSBLT[i] = x;                  }$/;"	f	class:TComReferencePictureSet
setPocProportionalToTimingFlag	TLibCommon/TComSlice.h	/^  Void setPocProportionalToTimingFlag(Bool x)  { m_pocProportionalToTimingFlag = x;    }$/;"	f	class:TimingInfo
setPocProportionalToTimingFlag	TLibEncoder/TEncCfg.h	/^  Void         setPocProportionalToTimingFlag(Bool x)                { m_pocProportionalToTimingFlag = x;    }$/;"	f	class:TEncCfg
setPredModeSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setPredModeSubParts( PredMode eMode, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setPredictionMode	TLibCommon/TComDataCU.h	/^  Void          setPredictionMode             ( UInt uiIdx, PredMode uh )                                  { m_pePredMode[uiIdx] = uh;                  }$/;"	f	class:TComDataCU
setPredictor	TLibCommon/TComRdCost.h	/^  Void    setPredictor( TComMv& rcMv )$/;"	f	class:TComRdCost
setPrintFrameMSE	TLibEncoder/TEncCfg.h	/^  Void      setPrintFrameMSE                (Bool value)     { m_printFrameMSE = value;             }$/;"	f	class:TEncCfg
setPrintHexPsnr	TLibEncoder/TEncCfg.h	/^  Void      setPrintHexPsnr                 (Bool value)     { m_printHexPsnr = value;              }$/;"	f	class:TEncCfg
setPrintMSEBasedSequencePSNR	TLibEncoder/TEncCfg.h	/^  Void      setPrintMSEBasedSequencePSNR    (Bool value)     { m_printMSEBasedSequencePSNR = value; }$/;"	f	class:TEncCfg
setPrintMSSSIM	TLibEncoder/TEncCfg.h	/^  Void      setPrintMSSSIM                  (Bool value)     { m_printMSSSIM = value;              }$/;"	f	class:TEncCfg
setPrintSequenceMSE	TLibEncoder/TEncCfg.h	/^  Void      setPrintSequenceMSE             (Bool value)     { m_printSequenceMSE = value;          }$/;"	f	class:TEncCfg
setProfile	TLibEncoder/TEncCfg.h	/^  Void setProfile(Profile::Name profile) { m_profile = profile; }$/;"	f	class:TEncCfg
setProfileCompatibilityFlag	TLibCommon/TComSlice.h	/^  Void          setProfileCompatibilityFlag(Int i, Bool x)  { m_profileCompatibilityFlag[i] = x;    }$/;"	f	class:ProfileTierLevel
setProfileIdc	TLibCommon/TComSlice.h	/^  Void          setProfileIdc(Profile::Name x)              { m_profileIdc = x;                     }$/;"	f	class:ProfileTierLevel
setProfileSpace	TLibCommon/TComSlice.h	/^  Void          setProfileSpace(Int x)                      { m_profileSpace = x;                   }$/;"	f	class:ProfileTierLevel
setProgressiveSourceFlag	TLibCommon/TComSlice.h	/^  Void          setProgressiveSourceFlag(Bool b)            { m_progressiveSourceFlag = b;          }$/;"	f	class:ProfileTierLevel
setProgressiveSourceFlag	TLibEncoder/TEncCfg.h	/^  Void         setProgressiveSourceFlag(Bool b)                      { m_progressiveSourceFlag = b; }$/;"	f	class:TEncCfg
setQP	TLibCommon/TComDataCU.h	/^  Void          setQP                         ( UInt uiIdx, SChar value )                                  { m_phQP[uiIdx] =  value;                    }$/;"	f	class:TComDataCU
setQP	TLibEncoder/TEncCfg.h	/^  Void      setQP                           ( Int   i )      { m_iQP = i; }$/;"	f	class:TEncCfg
setQPAdaptationRange	TLibEncoder/TEncCfg.h	/^  Void      setQPAdaptationRange            ( Int   i )      { m_iQPAdaptationRange = i; }$/;"	f	class:TEncCfg
setQPSubCUs	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setQPSubCUs( Int qp, UInt absPartIdx, UInt depth, Bool &foundNonZeroCbf )$/;"	f	class:TComDataCU
setQPSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setQPSubParts( Int qp, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setQpBDOffset	TLibCommon/TComSlice.h	/^  Void                   setQpBDOffset(ChannelType type, Int i)                                          { m_qpBDOffset[type] = i;                                              }$/;"	f	class:TComSPS
setQpOffset	TLibCommon/TComSlice.h	/^  Void                   setQpOffset(ComponentID compID, Int i )$/;"	f	class:TComPPS
setQuadtreeTULog2MaxSize	TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTULog2MaxSize( UInt u )                                              { m_uiQuadtreeTULog2MaxSize = u;                                       }$/;"	f	class:TComSPS
setQuadtreeTULog2MaxSize	TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTULog2MaxSize        ( UInt  u )      { m_uiQuadtreeTULog2MaxSize = u; }$/;"	f	class:TEncCfg
setQuadtreeTULog2MinSize	TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTULog2MinSize( UInt u )                                              { m_uiQuadtreeTULog2MinSize = u;                                       }$/;"	f	class:TComSPS
setQuadtreeTULog2MinSize	TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTULog2MinSize        ( UInt  u )      { m_uiQuadtreeTULog2MinSize = u; }$/;"	f	class:TEncCfg
setQuadtreeTUMaxDepthInter	TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTUMaxDepthInter( UInt u )                                            { m_uiQuadtreeTUMaxDepthInter = u;                                     }$/;"	f	class:TComSPS
setQuadtreeTUMaxDepthInter	TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTUMaxDepthInter      ( UInt  u )      { m_uiQuadtreeTUMaxDepthInter = u; }$/;"	f	class:TEncCfg
setQuadtreeTUMaxDepthIntra	TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTUMaxDepthIntra( UInt u )                                            { m_uiQuadtreeTUMaxDepthIntra = u;                                     }$/;"	f	class:TComSPS
setQuadtreeTUMaxDepthIntra	TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTUMaxDepthIntra      ( UInt  u )      { m_uiQuadtreeTUMaxDepthIntra = u; }$/;"	f	class:TEncCfg
setRCQP	TLibEncoder/TEncRateCtrl.h	/^  Void       setRCQP ( Int QP ) { m_RCQP = QP;   }$/;"	f	class:TEncRateCtrl
setRDOQOffset	TLibCommon/TComTrQuant.h	/^  Void setRDOQOffset( UInt uiRDOQOffset ) { m_uiRDOQOffset = uiRDOQOffset; }$/;"	f	class:TComTrQuant
setRDpenalty	TLibEncoder/TEncCfg.h	/^  Void      setRDpenalty                    ( UInt  u )     { m_rdPenalty  = u; }$/;"	f	class:TEncCfg
setRPS	TLibCommon/TComSlice.h	/^  Void                        setRPS( const TComReferencePictureSet *pcRPS )         { m_pRPS = pcRPS;                                               }$/;"	f	class:TComSlice
setRPSidx	TLibCommon/TComSlice.h	/^  Void                        setRPSidx( Int rpsIdx )                                { m_rpsIdx = rpsIdx;                                            }$/;"	f	class:TComSlice
setRdpcmEnabledFlag	TLibCommon/TComSlice.h	/^  Void setRdpcmEnabledFlag(const RDPCMSignallingMode signallingMode, const Bool value) { m_rdpcmEnabledFlag[signallingMode] = value;    }$/;"	f	class:TComSPSRExt
setRdpcmEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void setRdpcmEnabledFlag                             (const RDPCMSignallingMode signallingMode, const Bool value) { m_rdpcmEnabledFlag[signallingMode] = value; }$/;"	f	class:TEncCfg
setReWriteParamSetsFlag	TLibEncoder/TEncCfg.h	/^  Void      setReWriteParamSetsFlag         ( Bool  b )      { m_bReWriteParamSetsFlag = b; }$/;"	f	class:TEncCfg
setReconMark	TLibCommon/TComPic.h	/^  Void          setReconMark (Bool b) { m_bReconstructed = b;     }$/;"	f	class:TComPic
setRecoveryPointSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setRecoveryPointSEIEnabled(Bool b)                           { m_recoveryPointSEIEnabled = b; }$/;"	f	class:TEncCfg
setRefIdc	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setRefIdc(Int bufferNum, Int refIdc)$/;"	f	class:TComReferencePictureSet
setRefIdx	TLibCommon/TComMotionInfo.h	/^  Void setRefIdx( Int refIdx ) { m_iRefIdx = refIdx; }$/;"	f	class:TComMvField
setRefMatrixId	TLibCommon/TComSlice.h	/^  Void       setRefMatrixId(UInt sizeId, UInt listId, UInt u)                   { m_refMatrixId[sizeId][listId] = u;                         } \/\/!< set reference matrix ID$/;"	f	class:TComScalingList
setRefPOC	TLibCommon/TComSlice.h	/^  Void                        setRefPOC( Int i, RefPicList e, Int iRefIdx )          { m_aiRefPOCList[e][iRefIdx] = i;                               }$/;"	f	class:TComSlice
setRefPOCList	TLibCommon/TComSlice.cpp	/^Void TComSlice::setRefPOCList       ()$/;"	f	class:TComSlice
setRefPic	TLibCommon/TComSlice.h	/^  Void                        setRefPic( TComPic* p, RefPicList e, Int iRefIdx )     { m_apcRefPicList[e][iRefIdx] = p;                              }$/;"	f	class:TComSlice
setRefPicList	TLibCommon/TComSlice.cpp	/^Void TComSlice::setRefPicList( TComList<TComPic*>& rcListPic, Bool checkNumPocTotalCurr )$/;"	f	class:TComSlice
setRefPicListModificationFlagL0	TLibCommon/TComSlice.h	/^  Void    setRefPicListModificationFlagL0(Bool flag)     { m_refPicListModificationFlagL0 = flag;                                  }$/;"	f	class:TComRefPicListModification
setRefPicListModificationFlagL1	TLibCommon/TComSlice.h	/^  Void    setRefPicListModificationFlagL1(Bool flag)     { m_refPicListModificationFlagL1 = flag;                                  }$/;"	f	class:TComRefPicListModification
setRefPicSetIdxL0	TLibCommon/TComSlice.h	/^  Void    setRefPicSetIdxL0(UInt idx, UInt refPicSetIdx) { assert(idx<REF_PIC_LIST_NUM_IDX); m_RefPicSetIdxL0[idx] = refPicSetIdx; }$/;"	f	class:TComRefPicListModification
setRefPicSetIdxL1	TLibCommon/TComSlice.h	/^  Void    setRefPicSetIdxL1(UInt idx, UInt refPicSetIdx) { assert(idx<REF_PIC_LIST_NUM_IDX); m_RefPicSetIdxL1[idx] = refPicSetIdx; }$/;"	f	class:TComRefPicListModification
setReferenced	TLibCommon/TComSlice.h	/^  Void                        setReferenced(Bool b)                                  { m_bRefenced = b;                                              }$/;"	f	class:TComSlice
setRegionId	TLibCommon/TypeDef.h	/^  Void setRegionId(UInt const val)   { m_regionId = val; }$/;"	f	class:RNSEIWindow
setRegionalNestingSEIFileRoot	TLibEncoder/TEncCfg.h	/^  Void  setRegionalNestingSEIFileRoot( const std::string &s )        { m_regionalNestingSEIFileRoot = s; }$/;"	f	class:TEncCfg
setResetEncoderStateAfterIRAP	TLibEncoder/TEncCfg.h	/^  Void  setResetEncoderStateAfterIRAP(Bool b)                        { m_resetEncoderStateAfterIRAP = b; }$/;"	f	class:TEncCfg
setRestrictMESampling	TLibEncoder/TEncCfg.h	/^  Void      setRestrictMESampling           ( Bool  b )      { m_bRestrictMESampling = b; }$/;"	f	class:TEncCfg
setRestrictedRefPicListsFlag	TLibCommon/TComSlice.h	/^  Void              setRestrictedRefPicListsFlag(Bool b)                   { m_restrictedRefPicListsFlag = b;               }$/;"	f	class:TComVUI
setRightEdgePosInCtus	TLibCommon/TComPicSym.h	/^  Void      setRightEdgePosInCtus  ( UInt i )            { m_rightEdgePosInCtus = i; }$/;"	f	class:TComTile
setRowHeight	TLibEncoder/TEncCfg.h	/^  Void  setRowHeight ( const std::vector<Int>& rowHeight)            { m_tileRowHeight = rowHeight; }$/;"	f	class:TEncCfg
setRwpSEIConstituentPictureMatchingFlag	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIConstituentPictureMatchingFlag (Bool b)                                             { m_rwpSEIConstituentPictureMatchingFlag = b; }$/;"	f	class:TEncCfg
setRwpSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIEnabled(Bool b)                                                                     { m_rwpSEIEnabled = b; }$/;"	f	class:TEncCfg
setRwpSEINumPackedRegions	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEINumPackedRegions (Int value)                                                        { m_rwpSEINumPackedRegions = value; }$/;"	f	class:TEncCfg
setRwpSEIPackedPictureHeight	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIPackedPictureHeight (Int value)                                                     { m_rwpSEIPackedPictureHeight = value; }$/;"	f	class:TEncCfg
setRwpSEIPackedPictureWidth	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIPackedPictureWidth (Int value)                                                      { m_rwpSEIPackedPictureWidth = value; }$/;"	f	class:TEncCfg
setRwpSEIPackedRegionHeight	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionHeight(const std::vector<UShort>& packedRegionHeight)                    { m_rwpSEIPackedRegionHeight = packedRegionHeight; }$/;"	f	class:TEncCfg
setRwpSEIPackedRegionLeft	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionLeft(const std::vector<UShort>& packedRegionLeft)                        { m_rwpSEIPackedRegionLeft = packedRegionLeft; } $/;"	f	class:TEncCfg
setRwpSEIPackedRegionTop	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionTop(const std::vector<UShort>& packedRegionTop)                          { m_rwpSEIPackedRegionTop = packedRegionTop; }$/;"	f	class:TEncCfg
setRwpSEIPackedRegionWidth	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionWidth(const std::vector<UShort>& packedRegionWidth)                      { m_rwpSEIPackedRegionWidth  = packedRegionWidth; }$/;"	f	class:TEncCfg
setRwpSEIProjPictureHeight	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjPictureHeight (Int value)                                                       { m_rwpSEIProjPictureHeight = value; }$/;"	f	class:TEncCfg
setRwpSEIProjPictureWidth	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjPictureWidth (Int value)                                                        { m_rwpSEIProjPictureWidth = value; }$/;"	f	class:TEncCfg
setRwpSEIProjRegionHeight	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjRegionHeight(const std::vector<UInt>& projRegionHeight)                         { m_rwpSEIProjRegionHeight = projRegionHeight; } $/;"	f	class:TEncCfg
setRwpSEIProjRegionLeft	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjRegionLeft(const std::vector<UInt>& projRegionLeft)                             { m_rwpSEIProjRegionLeft = projRegionLeft; } $/;"	f	class:TEncCfg
setRwpSEIProjRegionWidth	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjRegionWidth(const std::vector<UInt>& projRegionWidth)                           { m_rwpSEIProjRegionWidth = projRegionWidth; }$/;"	f	class:TEncCfg
setRwpSEIRwpBottomGuardBandHeight	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpBottomGuardBandHeight(const std::vector<UChar>& rwpBottomGuardBandHeight)         { m_rwpSEIRwpBottomGuardBandHeight = rwpBottomGuardBandHeight; }$/;"	f	class:TEncCfg
setRwpSEIRwpCancelFlag	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpCancelFlag(Bool b)                                                               { m_rwpSEIRwpCancelFlag = b; }$/;"	f	class:TEncCfg
setRwpSEIRwpGuardBandFlag	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpGuardBandFlag(const std::vector<Bool>& rwpGuardBandFlag)                         { m_rwpSEIRwpGuardBandFlag = rwpGuardBandFlag; }$/;"	f	class:TEncCfg
setRwpSEIRwpGuardBandNotUsedForPredFlag	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpGuardBandNotUsedForPredFlag(const std::vector<Bool>& rwpGuardBandNotUsedForPredFlag){ m_rwpSEIRwpGuardBandNotUsedForPredFlag = rwpGuardBandNotUsedForPredFlag; }$/;"	f	class:TEncCfg
setRwpSEIRwpGuardBandType	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpGuardBandType(const std::vector<UChar>& rwpGuardBandType)                           { m_rwpSEIRwpGuardBandType = rwpGuardBandType; }$/;"	f	class:TEncCfg
setRwpSEIRwpLeftGuardBandWidth	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpLeftGuardBandWidth(const std::vector<UChar>& rwpLeftGuardBandWidth)               { m_rwpSEIRwpLeftGuardBandWidth = rwpLeftGuardBandWidth; } $/;"	f	class:TEncCfg
setRwpSEIRwpPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpPersistenceFlag (Bool b)                                                         { m_rwpSEIRwpPersistenceFlag = b; }$/;"	f	class:TEncCfg
setRwpSEIRwpRightGuardBandWidth	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpRightGuardBandWidth(const std::vector<UChar>& rwpRightGuardBandWidth)             { m_rwpSEIRwpRightGuardBandWidth = rwpRightGuardBandWidth; } $/;"	f	class:TEncCfg
setRwpSEIRwpSEIProjRegionTop	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpSEIProjRegionTop(const std::vector<UInt>& projRegionTop)                         { m_rwpSEIRwpSEIProjRegionTop = projRegionTop; }$/;"	f	class:TEncCfg
setRwpSEIRwpTopGuardBandHeight	TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpTopGuardBandHeight(const std::vector<UChar>& rwpTopGuardBandHeight)               { m_rwpSEIRwpTopGuardBandHeight = rwpTopGuardBandHeight; } $/;"	f	class:TEncCfg
setRwpSEIRwpTransformType	TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpTransformType(const std::vector<UChar>& rwpTransformType)                        { m_rwpSEIRwpTransformType =rwpTransformType; }$/;"	f	class:TEncCfg
setSEIAlternativeTransferCharacteristicsSEIEnable	TLibEncoder/TEncCfg.h	/^  Void  setSEIAlternativeTransferCharacteristicsSEIEnable( Bool b)   { m_alternativeTransferCharacteristicsSEIEnabled = b;    }$/;"	f	class:TEncCfg
setSEIGreenMetadataInfoSEIEnable	TLibEncoder/TEncCfg.h	/^  Void  setSEIGreenMetadataInfoSEIEnable( Bool b)                    { m_greenMetadataInfoSEIEnabled = b;    }$/;"	f	class:TEncCfg
setSEIGreenMetadataType	TLibEncoder/TEncCfg.h	/^  Void  setSEIGreenMetadataType(UChar v)                             { m_greenMetadataType = v;    }$/;"	f	class:TEncCfg
setSEIPreferredTransferCharacteristics	TLibEncoder/TEncCfg.h	/^  Void  setSEIPreferredTransferCharacteristics(UChar v)              { m_preferredTransferCharacteristics = v;    }$/;"	f	class:TEncCfg
setSEIXSDMetricType	TLibEncoder/TEncCfg.h	/^  Void  setSEIXSDMetricType(UChar v)                                 { m_xsdMetricType = v;    }$/;"	f	class:TEncCfg
setSEIs	TLibCommon/TComPic.h	/^  Void setSEIs(SEIMessages& seis) { m_SEIs = seis; }$/;"	f	class:TComPic
setSOPDescriptionSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setSOPDescriptionSEIEnabled(Bool b)                          { m_SOPDescriptionSEIEnabled = b; }$/;"	f	class:TEncCfg
setSPS	TLibCommon/TComSlice.h	/^  Void                        setSPS( const TComSPS* pcSPS )                         { m_pcSPS = pcSPS;                                              }$/;"	f	class:TComSlice
setSPSId	TLibCommon/TComSlice.h	/^  Void                   setSPSId(Int i)                                                                 { m_SPSId = i;                                                         }$/;"	f	class:TComSPS
setSPSId	TLibCommon/TComSlice.h	/^  Void                   setSPSId(Int i)                                                  { m_SPSId = i;                                  }$/;"	f	class:TComPPS
setSPSTemporalMVPEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setSPSTemporalMVPEnabledFlag(Bool b)                                            { m_SPSTemporalMVPEnabledFlag=b;                                       }$/;"	f	class:TComSPS
setSaoCtuBoundary	TLibEncoder/TEncCfg.h	/^  Void  setSaoCtuBoundary              (Bool val)                    { m_saoCtuBoundary = val; }$/;"	f	class:TEncCfg
setSaoEnabledFlag	TLibCommon/TComSlice.h	/^  Void                        setSaoEnabledFlag(ChannelType chType, Bool s)          {m_saoEnabledFlag[chType] =s;                                   }$/;"	f	class:TComSlice
setSaoEncodingRate	TLibEncoder/TEncCfg.h	/^  Void   setSaoEncodingRate(Double v)                                { m_saoEncodingRate = v; }$/;"	f	class:TEncCfg
setSaoEncodingRateChroma	TLibEncoder/TEncCfg.h	/^  Void   setSaoEncodingRateChroma(Double v)                          { m_saoEncodingRateChroma = v; }$/;"	f	class:TEncCfg
setSarHeight	TLibCommon/TComSlice.h	/^  Void              setSarHeight(Int i)                                    { m_sarHeight = i;                               }$/;"	f	class:TComVUI
setSarHeight	TLibEncoder/TEncCfg.h	/^  Void         setSarHeight(Int i)                                   { m_sarHeight = i; }$/;"	f	class:TEncCfg
setSarWidth	TLibCommon/TComSlice.h	/^  Void              setSarWidth(Int i)                                     { m_sarWidth = i;                                }$/;"	f	class:TComVUI
setSarWidth	TLibEncoder/TEncCfg.h	/^  Void         setSarWidth(Int i)                                    { m_sarWidth = i; }$/;"	f	class:TEncCfg
setScalableNestingSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setScalableNestingSEIEnabled(Bool b)                         { m_scalableNestingSEIEnabled = b; }$/;"	f	class:TEncCfg
setScalingList	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setScalingList(TComScalingList *scalingList, const Int maxLog2TrDynamicRange[MAX_NUM_CHANNEL_TYPE], const BitDepths &bitDepths)$/;"	f	class:TComTrQuant
setScalingListDC	TLibCommon/TComSlice.h	/^  Void       setScalingListDC(UInt sizeId, UInt listId, UInt u)                 { m_scalingListDC[sizeId][listId] = u;                       } \/\/!< set DC value$/;"	f	class:TComScalingList
setScalingListDec	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setScalingListDec(const TComScalingList &scalingList)$/;"	f	class:TComTrQuant
setScalingListFileName	TLibEncoder/TEncCfg.h	/^  Void         setScalingListFileName       ( const std::string &s ) { m_scalingListFileName = s;      }$/;"	f	class:TEncCfg
setScalingListFlag	TLibCommon/TComSlice.h	/^  Void                   setScalingListFlag( Bool b )                                                    { m_scalingListEnabledFlag  = b;                                       }$/;"	f	class:TComSPS
setScalingListPredModeFlag	TLibCommon/TComSlice.h	/^  Void       setScalingListPredModeFlag(UInt sizeId, UInt listId, Bool bIsDPCM) { m_scalingListPredModeFlagIsDPCM[sizeId][listId] = bIsDPCM; }$/;"	f	class:TComScalingList
setScalingListPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setScalingListPresentFlag( Bool b )                                             { m_scalingListPresentFlag  = b;                                       }$/;"	f	class:TComSPS
setScalingListPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setScalingListPresentFlag( Bool b )                              { m_scalingListPresentFlag  = b;                }$/;"	f	class:TComPPS
setSearchRange	TLibEncoder/TEncCfg.h	/^  Void      setSearchRange                  ( Int   i )      { m_iSearchRange = i; }$/;"	f	class:TEncCfg
setSearchRange	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::setSearchRange( TComSlice* pcSlice )$/;"	f	class:TEncSlice
setSegmentedRectFramePackingArrangementSEICancel	TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEICancel(Int b)      { m_segmentedRectFramePackingSEICancel = b; }$/;"	f	class:TEncCfg
setSegmentedRectFramePackingArrangementSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEIEnabled(Bool b)    { m_segmentedRectFramePackingSEIEnabled = b; }$/;"	f	class:TEncCfg
setSegmentedRectFramePackingArrangementSEIPersistence	TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEIPersistence(Int b) { m_segmentedRectFramePackingSEIPersistence = b; }$/;"	f	class:TEncCfg
setSegmentedRectFramePackingArrangementSEIType	TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEIType(Int b)        { m_segmentedRectFramePackingSEIType = b; }$/;"	f	class:TEncCfg
setSignDataHidingEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setSignDataHidingEnabledFlag( Bool b )                           { m_signDataHidingEnabledFlag = b;              }$/;"	f	class:TComPPS
setSignDataHidingEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void         setSignDataHidingEnabledFlag( Bool b )                { m_SignDataHidingEnabledFlag = b;    }$/;"	f	class:TEncCfg
setSiiSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void     setSiiSEIEnabled(Bool b)                                  { m_siiSEIEnabled = b; }$/;"	f	class:TEncCfg
setSiiSEINumUnitsInShutterInterval	TLibEncoder/TEncCfg.h	/^  Void     setSiiSEINumUnitsInShutterInterval(UInt value)            { m_siiSEINumUnitsInShutterInterval = value; }$/;"	f	class:TEncCfg
setSiiSEISubLayerNumUnitsInSI	TLibEncoder/TEncCfg.h	/^  Void     setSiiSEISubLayerNumUnitsInSI(const std::vector<UInt>& b) { m_siiSEISubLayerNumUnitsInSI = b; }$/;"	f	class:TEncCfg
setSiiSEITimeScale	TLibEncoder/TEncCfg.h	/^  Void     setSiiSEITimeScale(UInt value)                            { m_siiSEITimeScale = value; }$/;"	f	class:TEncCfg
setSizeSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setSizeSubParts( UInt uiWidth, UInt uiHeight, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setSkipFlag	TLibCommon/TComDataCU.h	/^  Void          setSkipFlag                   ( UInt idx, Bool skip )                                      { m_skipFlag[idx] = skip;                    }$/;"	f	class:TComDataCU
setSkipFlagSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setSkipFlagSubParts( Bool skip, UInt absPartIdx, UInt depth )$/;"	f	class:TComDataCU
setSliceArgument	TLibCommon/TComSlice.h	/^  Void                        setSliceArgument( UInt uiArgument )                    { m_sliceArgument = uiArgument;                                 }$/;"	f	class:TComSlice
setSliceArgument	TLibEncoder/TEncCfg.h	/^  Void  setSliceArgument               ( Int  i )                    { m_sliceArgument = i;          }$/;"	f	class:TEncCfg
setSliceBits	TLibCommon/TComSlice.h	/^  Void                        setSliceBits( UInt uiVal )                             { m_sliceBits = uiVal;                                          }$/;"	f	class:TComSlice
setSliceChromaOffsetQpIntraOrPeriodic	TLibEncoder/TEncCfg.h	/^  Void      setSliceChromaOffsetQpIntraOrPeriodic( UInt periodicity, Int sliceChromaQpOffsetIntraOrPeriodic[2]) { m_sliceChromaQpOffsetPeriodicity = periodicity; memcpy(m_sliceChromaQpOffsetIntraOrPeriodic, sliceChromaQpOffsetIntraOrPeriodic, sizeof(m_sliceChromaQpOffsetIntraOrPeriodic)); }$/;"	f	class:TEncCfg
setSliceChromaQpDelta	TLibCommon/TComSlice.h	/^  Void                        setSliceChromaQpDelta( ComponentID compID, Int i )     { m_iSliceChromaQpDelta[compID] = isLuma(compID) ? 0 : i;       }$/;"	f	class:TComSlice
setSliceChromaQpFlag	TLibCommon/TComSlice.h	/^  Void                   setSliceChromaQpFlag( Bool b )                                   { m_bSliceChromaQpFlag = b;                     }$/;"	f	class:TComPPS
setSliceCurEndCtuTsAddr	TLibCommon/TComSlice.h	/^  Void                        setSliceCurEndCtuTsAddr( UInt ctuTsAddr )              { m_sliceCurEndCtuTsAddr = ctuTsAddr;                           } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceCurStartCtuTsAddr	TLibCommon/TComSlice.h	/^  Void                        setSliceCurStartCtuTsAddr( UInt ctuTsAddr )            { m_sliceCurStartCtuTsAddr = ctuTsAddr;                         } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceEncoder	TLibEncoder/TEncCu.h	/^  Void       setSliceEncoder( TEncSlice* pSliceEncoder ) { m_pcSliceEncoder = pSliceEncoder; }$/;"	f	class:TEncCu
setSliceHeaderExtensionPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setSliceHeaderExtensionPresentFlag(Bool val)                     { m_sliceHeaderExtensionPresentFlag = val;      }$/;"	f	class:TComPPS
setSliceIdx	TLibCommon/TComSlice.h	/^  Void                        setSliceIdx( UInt i)                                   { m_sliceIdx = i;                                               }$/;"	f	class:TComSlice
setSliceIdx	TLibEncoder/TEncSlice.h	/^  Void    setSliceIdx(UInt i)   { m_uiSliceIdx = i;                       }$/;"	f	class:TEncSlice
setSliceMode	TLibCommon/TComSlice.h	/^  Void                        setSliceMode( SliceConstraint mode )                   { m_sliceMode = mode;                                           }$/;"	f	class:TComSlice
setSliceMode	TLibEncoder/TEncCfg.h	/^  Void  setSliceMode                   ( SliceConstraint  i )        { m_sliceMode = i;              }$/;"	f	class:TEncCfg
setSliceQp	TLibCommon/TComSlice.h	/^  Void                        setSliceQp( Int i )                                    { m_iSliceQp          = i;                                      }$/;"	f	class:TComSlice
setSliceQpBase	TLibCommon/TComSlice.h	/^  Void                        setSliceQpBase( Int i )                                { m_iSliceQpBase      = i;                                      }$/;"	f	class:TComSlice
setSliceQpDelta	TLibCommon/TComSlice.h	/^  Void                        setSliceQpDelta( Int i )                               { m_iSliceQpDelta     = i;                                      }$/;"	f	class:TComSlice
setSliceSegmentArgument	TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentArgument( UInt uiArgument )             { m_sliceSegmentArgument = uiArgument;                          }$/;"	f	class:TComSlice
setSliceSegmentArgument	TLibEncoder/TEncCfg.h	/^  Void  setSliceSegmentArgument        ( Int  i )                    { m_sliceSegmentArgument = i;   }$/;"	f	class:TEncCfg
setSliceSegmentBits	TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentBits( UInt uiVal )                      { m_sliceSegmentBits = uiVal;                                   }$/;"	f	class:TComSlice
setSliceSegmentCurEndCtuTsAddr	TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentCurEndCtuTsAddr( UInt ctuTsAddr )       { m_sliceSegmentCurEndCtuTsAddr = ctuTsAddr;                    } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceSegmentCurStartCtuTsAddr	TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentCurStartCtuTsAddr( UInt ctuTsAddr )     { m_sliceSegmentCurStartCtuTsAddr = ctuTsAddr;                  } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceSegmentMode	TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentMode( SliceConstraint mode )            { m_sliceSegmentMode = mode;                                    }$/;"	f	class:TComSlice
setSliceSegmentMode	TLibEncoder/TEncCfg.h	/^  Void  setSliceSegmentMode            ( SliceConstraint  i )        { m_sliceSegmentMode = i;       }$/;"	f	class:TEncCfg
setSliceType	TLibCommon/TComSlice.h	/^  Void                        setSliceType( SliceType e )                            { m_eSliceType        = e;                                      }$/;"	f	class:TComSlice
setSourceHeight	TLibEncoder/TEncCfg.h	/^  Void      setSourceHeight                 ( Int   i )      { m_iSourceHeight = i; }$/;"	f	class:TEncCfg
setSourceWidth	TLibEncoder/TEncCfg.h	/^  Void      setSourceWidth                  ( Int   i )      { m_iSourceWidth = i; }$/;"	f	class:TEncCfg
setSphereRotationSEICancelFlag	TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEICancelFlag(Bool b)                       { m_sphereRotationSEICancelFlag = b; }                                                         $/;"	f	class:TEncCfg
setSphereRotationSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIEnabled(Bool b)                          { m_sphereRotationSEIEnabled = b; }                                                         $/;"	f	class:TEncCfg
setSphereRotationSEIPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIPersistenceFlag(Bool b)                  { m_sphereRotationSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setSphereRotationSEIPitch	TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIPitch(Int b)                             { m_sphereRotationSEIPitch = b; }$/;"	f	class:TEncCfg
setSphereRotationSEIRoll	TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIRoll(Int b)                              { m_sphereRotationSEIRoll = b; }$/;"	f	class:TEncCfg
setSphereRotationSEIYaw	TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIYaw(Int b)                               { m_sphereRotationSEIYaw = b; }$/;"	f	class:TEncCfg
setStateAndMps	TLibCommon/ContextModel.h	/^  Void  setStateAndMps( UChar ucState, UChar ucMPS) { m_ucState = (ucState << 1) + ucMPS; } \/\/\/< set state and MPS$/;"	f	class:ContextModel
setStreamBitDepth	TLibCommon/TComSlice.h	/^  Void                   setStreamBitDepth(ChannelType type, Int u )                                     { m_bitDepths.stream[type] = u;                                        }$/;"	f	class:TComSPS
setSubLayerLevelPresentFlag	TLibCommon/TComSlice.h	/^  Void                    setSubLayerLevelPresentFlag(Int i, Bool x)   { m_subLayerLevelPresentFlag[i] = x;      }$/;"	f	class:TComPTL
setSubLayerProfilePresentFlag	TLibCommon/TComSlice.h	/^  Void                    setSubLayerProfilePresentFlag(Int i, Bool x) { m_subLayerProfilePresentFlag[i] = x;    }$/;"	f	class:TComPTL
setSubPart	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setSubPart( T uiParameter, T* puhBaseCtu, UInt uiCUAddr, UInt uiCUDepth, UInt uiPUIdx )$/;"	f	class:TComDataCU
setSubPicCpbParamsInPicTimingSEIFlag	TLibCommon/TComSlice.h	/^  Void    setSubPicCpbParamsInPicTimingSEIFlag( Bool flag)                           { m_subPicCpbParamsInPicTimingSEIFlag = flag;                }$/;"	f	class:TComHRD
setSubPicCpbParamsPresentFlag	TLibCommon/TComSlice.h	/^  Void    setSubPicCpbParamsPresentFlag( Bool flag )                                 { m_subPicCpbParamsPresentFlag = flag;                       }$/;"	f	class:TComHRD
setSummaryOutFilename	TLibEncoder/TEncCfg.h	/^  Void      setSummaryOutFilename(const std::string &s)              { m_summaryOutFilename = s; }$/;"	f	class:TEncCfg
setSummaryPicFilenameBase	TLibEncoder/TEncCfg.h	/^  Void      setSummaryPicFilenameBase(const std::string &s)          { m_summaryPicFilenameBase = s; }$/;"	f	class:TEncCfg
setSummaryVerboseness	TLibEncoder/TEncCfg.h	/^  Void      setSummaryVerboseness(UInt v)                            { m_summaryVerboseness = v; }$/;"	f	class:TEncCfg
setTLayer	TLibCommon/TComPic.h	/^  Void          setTLayer( UInt uiTLayer ) { m_uiTLayer = uiTLayer; }$/;"	f	class:TComPic
setTLayer	TLibCommon/TComSlice.h	/^  Void                        setTLayer( UInt uiTLayer )                             { m_uiTLayer = uiTLayer;                                        }$/;"	f	class:TComSlice
setTLayerInfo	TLibCommon/TComSlice.cpp	/^Void TComSlice::setTLayerInfo( UInt uiTLayer )$/;"	f	class:TComSlice
setTMCTSExtractionSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setTMCTSExtractionSEIEnabled(Bool b)                         { m_tmctsExtractionSEIEnabled = b; }$/;"	f	class:TEncCfg
setTMCTSSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setTMCTSSEIEnabled(Bool b)                                   { m_tmctsSEIEnabled = b; }$/;"	f	class:TEncCfg
setTMCTSSEITileConstraint	TLibEncoder/TEncCfg.h	/^  Void  setTMCTSSEITileConstraint(Bool b)                            { m_tmctsSEITileConstraint = b; }$/;"	f	class:TEncCfg
setTMISEICameraIsoSpeedIdc	TLibEncoder/TEncCfg.h	/^  Void  setTMISEICameraIsoSpeedIdc(Int b)                            { m_cameraIsoSpeedIdc = b;  }$/;"	f	class:TEncCfg
setTMISEICameraIsoSpeedValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEICameraIsoSpeedValue(Int b)                          { m_cameraIsoSpeedValue = b;  }$/;"	f	class:TEncCfg
setTMISEICodedDataBitDepth	TLibEncoder/TEncCfg.h	/^  Void  setTMISEICodedDataBitDepth(Int b)                            { m_codedDataBitDepth = b;  }$/;"	f	class:TEncCfg
setTMISEICodedPivotValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEICodedPivotValue( Int*  p )                          { m_codedPivotValue = p;  }$/;"	f	class:TEncCfg
setTMISEIExposureCompensationValueDenomIdc	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureCompensationValueDenomIdc(Int b)            { m_exposureCompensationValueDenomIdc =b;  }$/;"	f	class:TEncCfg
setTMISEIExposureCompensationValueNumerator	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureCompensationValueNumerator(Int b)           { m_exposureCompensationValueNumerator = b;  }$/;"	f	class:TEncCfg
setTMISEIExposureCompensationValueSignFlag	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureCompensationValueSignFlag(Bool b)           { m_exposureCompensationValueSignFlag = b;  }$/;"	f	class:TEncCfg
setTMISEIExposureIndexIdc	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureIndexIdc(Int b)                             { m_exposureIndexIdc = b;  }$/;"	f	class:TEncCfg
setTMISEIExposureIndexValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureIndexValue(Int b)                           { m_exposureIndexValue = b;  }$/;"	f	class:TEncCfg
setTMISEIExtendedRangeWhiteLevel	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExtendedRangeWhiteLevel(Int b)                      { m_extendedRangeWhiteLevel = b;  }$/;"	f	class:TEncCfg
setTMISEIExtendedWhiteLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExtendedWhiteLevelLumaCodeValue(Int b)              { m_extendedWhiteLevelLumaCodeValue =b;  }$/;"	f	class:TEncCfg
setTMISEIMaxValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIMaxValue(Int b)                                     { m_maxValue = b;  }$/;"	f	class:TEncCfg
setTMISEIMinValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIMinValue(Int b)                                     { m_minValue = b;  }$/;"	f	class:TEncCfg
setTMISEIModelID	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIModelID(Int b)                                      { m_modelId = b;  }$/;"	f	class:TEncCfg
setTMISEINominalBlackLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEINominalBlackLevelLumaCodeValue(Int b)               { m_nominalBlackLevelLumaCodeValue = b;  }$/;"	f	class:TEncCfg
setTMISEINominalWhiteLevelLumaCodeValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEINominalWhiteLevelLumaCodeValue(Int b)               { m_nominalWhiteLevelLumaCodeValue = b;  }$/;"	f	class:TEncCfg
setTMISEINumPivots	TLibEncoder/TEncCfg.h	/^  Void  setTMISEINumPivots(Int b)                                    { m_numPivots = b;  }$/;"	f	class:TEncCfg
setTMISEIRefScreenLuminanceWhite	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIRefScreenLuminanceWhite(Int b)                      { m_refScreenLuminanceWhite = b;  }$/;"	f	class:TEncCfg
setTMISEISigmoidMidpoint	TLibEncoder/TEncCfg.h	/^  Void  setTMISEISigmoidMidpoint(Int b)                              { m_sigmoidMidpoint = b;  }$/;"	f	class:TEncCfg
setTMISEISigmoidWidth	TLibEncoder/TEncCfg.h	/^  Void  setTMISEISigmoidWidth(Int b)                                 { m_sigmoidWidth = b;  }$/;"	f	class:TEncCfg
setTMISEIStartOfCodedInterva	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIStartOfCodedInterva( Int*  p )                      { m_startOfCodedInterval = p;  }$/;"	f	class:TEncCfg
setTMISEITargetBitDepth	TLibEncoder/TEncCfg.h	/^  Void  setTMISEITargetBitDepth(Int b)                               { m_targetBitDepth = b;  }$/;"	f	class:TEncCfg
setTMISEITargetPivotValue	TLibEncoder/TEncCfg.h	/^  Void  setTMISEITargetPivotValue( Int*  p )                         { m_targetPivotValue = p;  }$/;"	f	class:TEncCfg
setTMISEIToneMapCancelFlag	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIToneMapCancelFlag(Bool b)                           { m_toneMapCancelFlag=b;  }$/;"	f	class:TEncCfg
setTMISEIToneMapId	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIToneMapId(Int b)                                    { m_toneMapId = b;  }$/;"	f	class:TEncCfg
setTMISEIToneMapPersistenceFlag	TLibEncoder/TEncCfg.h	/^  Void  setTMISEIToneMapPersistenceFlag(Bool b)                      { m_toneMapPersistenceFlag = b;  }$/;"	f	class:TEncCfg
setTMVPModeId	TLibEncoder/TEncCfg.h	/^  Void         setTMVPModeId ( Int  u )                              { m_TMVPModeId = u;    }$/;"	f	class:TEncCfg
setTMctsCheckEnabled	TLibDecoder/TDecTop.h	/^  Void setTMctsCheckEnabled(Bool enabled) { m_tmctsCheckEnabled = enabled; }$/;"	f	class:TDecTop
setTMctsMvpIsValid	TLibCommon/TComDataCU.h	/^  Void          setTMctsMvpIsValid(Bool b)    { m_tMctsMvpIsValid = b; }$/;"	f	class:TComDataCU
setTargetBitrate	TLibEncoder/TEncCfg.h	/^  Void         setTargetBitrate       ( Int bitrate )                { m_RCTargetBitrate  = bitrate;   }$/;"	f	class:TEncCfg
setTargetBits	TLibEncoder/TEncRateCtrl.h	/^  Void setTargetBits( Int bits )                          { m_targetBits = bits; m_bitsLeft = bits;}$/;"	f	class:TEncRCPic
setTemporalIdNestingFlag	TLibCommon/TComSlice.h	/^  Void                   setTemporalIdNestingFlag( Bool bValue )                                         { m_bTemporalIdNestingFlag = bValue;                                   }$/;"	f	class:TComSPS
setTemporalLayerNonReferenceFlag	TLibCommon/TComSlice.h	/^  Void                        setTemporalLayerNonReferenceFlag(Bool x)               { m_temporalLayerNonReferenceFlag = x;                          }$/;"	f	class:TComSlice
setTemporalLevel0IndexSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setTemporalLevel0IndexSEIEnabled(Bool b)                     { m_temporalLevel0IndexSEIEnabled = b; }$/;"	f	class:TEncCfg
setTemporalNestingFlag	TLibCommon/TComSlice.h	/^  Void              setTemporalNestingFlag(Bool t)                       { m_bTemporalIdNestingFlag = t;                                    }$/;"	f	class:TComVPS
setTemporalSubsampleRatio	TLibEncoder/TEncCfg.h	/^  Void      setTemporalSubsampleRatio       ( UInt  i )      { m_temporalSubsampleRatio = i; }$/;"	f	class:TEncCfg
setTestSAODisableAtPictureLevel	TLibEncoder/TEncCfg.h	/^  Void  setTestSAODisableAtPictureLevel (Bool bVal)                  { m_bTestSAODisableAtPictureLevel = bVal; }$/;"	f	class:TEncCfg
setTestWeightBiPred	TLibCommon/TComSlice.h	/^  Void                        setTestWeightBiPred( Bool bValue )                     { m_bTestWeightBiPred = bValue;                                 }$/;"	f	class:TComSlice
setTestWeightPred	TLibCommon/TComSlice.h	/^  Void                        setTestWeightPred( Bool bValue )                       { m_bTestWeightPred = bValue;                                   }$/;"	f	class:TComSlice
setTickDivisorMinus2	TLibCommon/TComSlice.h	/^  Void    setTickDivisorMinus2( UInt value )                                         { m_tickDivisorMinus2 = value;                               }$/;"	f	class:TComHRD
setTierFlag	TLibCommon/TComSlice.h	/^  Void          setTierFlag(Level::Tier x)                  { m_tierFlag = x;                       }$/;"	f	class:ProfileTierLevel
setTileBorders	TLibCommon/TComPattern.cpp	/^Void TComPattern::setTileBorders(Int tileLeftTopPelPosX, Int tileLeftTopPelPosY, Int tileRightBottomPelPosX, Int tileRightBottomPelPosY)$/;"	f	class:TComPattern
setTileColumnWidth	TLibCommon/TComSlice.h	/^  Void                   setTileColumnWidth(const std::vector<Int>& columnWidth )         { m_tileColumnWidth = columnWidth;              }$/;"	f	class:TComPPS
setTileHeightInCtus	TLibCommon/TComPicSym.h	/^  Void      setTileHeightInCtus    ( UInt i )            { m_tileHeightInCtus = i; }$/;"	f	class:TComTile
setTileRowHeight	TLibCommon/TComSlice.h	/^  Void                   setTileRowHeight(const std::vector<Int>& rowHeight)              { m_tileRowHeight = rowHeight;                  }$/;"	f	class:TComPPS
setTileUniformSpacingFlag	TLibCommon/TComSlice.h	/^  Void                   setTileUniformSpacingFlag(Bool b)                                { m_uniformSpacingFlag = b;                     }$/;"	f	class:TComPPS
setTileUniformSpacingFlag	TLibEncoder/TEncCfg.h	/^  Void  setTileUniformSpacingFlag      ( Bool b )                    { m_tileUniformSpacingFlag = b; }$/;"	f	class:TEncCfg
setTileWidthInCtus	TLibCommon/TComPicSym.h	/^  Void      setTileWidthInCtus     ( UInt i )            { m_tileWidthInCtus = i; }$/;"	f	class:TComTile
setTilesEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setTilesEnabledFlag(Bool val)                                    { m_tilesEnabledFlag = val;                     }$/;"	f	class:TComPPS
setTilesFixedStructureFlag	TLibCommon/TComSlice.h	/^  Void              setTilesFixedStructureFlag(Bool i)                     { m_tilesFixedStructureFlag = i;                 }$/;"	f	class:TComVUI
setTilesFixedStructureFlag	TLibEncoder/TEncCfg.h	/^  Void         setTilesFixedStructureFlag(Bool i)                    { m_tilesFixedStructureFlag = i; }$/;"	f	class:TEncCfg
setTimeCodeSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setTimeCodeSEIEnabled(Bool b)                                { m_timeCodeSEIEnabled = b; }$/;"	f	class:TEncCfg
setTimeScale	TLibCommon/TComSlice.h	/^  Void setTimeScale( UInt value )              { m_timeScale = value;                  }$/;"	f	class:TimingInfo
setTimeSet	TLibEncoder/TEncCfg.h	/^  Void  setTimeSet(TComSEITimeSet element, Int index)                { m_timeSetArray[index] = element; }$/;"	f	class:TEncCfg
setTimingInfoPresentFlag	TLibCommon/TComSlice.h	/^  Void setTimingInfoPresentFlag( Bool flag )   { m_timingInfoPresentFlag = flag;       }$/;"	f	class:TimingInfo
setToneMappingInfoSEIEnabled	TLibEncoder/TEncCfg.h	/^  Void  setToneMappingInfoSEIEnabled(Bool b)                         { m_toneMappingInfoSEIEnabled = b;  }$/;"	f	class:TEncCfg
setTopField	TLibCommon/TComPic.h	/^   Void              setTopField(Bool b)                  {m_isTop = b;}$/;"	f	class:TComPic
setTotalIntraCost	TLibEncoder/TEncRateCtrl.h	/^  Void setTotalIntraCost(Double cost)                     { m_totalCostIntra = cost; }$/;"	f	class:TEncRCPic
setTrIdxSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTrIdxSubParts( UInt uiTrIdx, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setTransferCharacteristics	TLibCommon/TComSlice.h	/^  Void              setTransferCharacteristics(Int i)                      { m_transferCharacteristics = i;                 }$/;"	f	class:TComVUI
setTransferCharacteristics	TLibEncoder/TEncCfg.h	/^  Void         setTransferCharacteristics(Int i)                     { m_transferCharacteristics = i; }$/;"	f	class:TEncCfg
setTransformSkipContextEnabledFlag	TLibCommon/TComSlice.h	/^  Void setTransformSkipContextEnabledFlag(const Bool value)                            { m_transformSkipContextEnabledFlag = value;     }$/;"	f	class:TComSPSRExt
setTransformSkipContextEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void setTransformSkipContextEnabledFlag              (const Bool value)  { m_transformSkipContextEnabledFlag = value; }$/;"	f	class:TEncCfg
setTransformSkipPartRange	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTransformSkipPartRange ( UInt useTransformSkip, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setTransformSkipRotationEnabledFlag	TLibCommon/TComSlice.h	/^  Void setTransformSkipRotationEnabledFlag(const Bool value)                           { m_transformSkipRotationEnabledFlag = value;    }$/;"	f	class:TComSPSRExt
setTransformSkipRotationEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void setTransformSkipRotationEnabledFlag             (const Bool value)  { m_transformSkipRotationEnabledFlag = value; }$/;"	f	class:TEncCfg
setTransformSkipSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTransformSkipSubParts( UInt useTransformSkip, ComponentID compID, UInt uiAbsPartIdx, UInt uiDepth)$/;"	f	class:TComDataCU
setTransformSkipSubParts	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTransformSkipSubParts( const UInt useTransformSkip[MAX_NUM_COMPONENT], UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setTransquantBypassEnabledFlag	TLibCommon/TComSlice.h	/^  Void                   setTransquantBypassEnabledFlag( Bool b )                         { m_TransquantBypassEnabledFlag = b;            }$/;"	f	class:TComPPS
setTransquantBypassEnabledFlag	TLibEncoder/TEncCfg.h	/^  Void         setTransquantBypassEnabledFlag(Bool flag)             { m_TransquantBypassEnabledFlag = flag; }$/;"	f	class:TEncCfg
setUpLambda	TLibEncoder/TEncSlice.cpp	/^TEncSlice::setUpLambda(TComSlice* slice, const Double dLambda, Int iQP)$/;"	f	class:TEncSlice
setUseAMP	TLibCommon/TComSlice.h	/^  Void                   setUseAMP( Bool b )                                                             { m_useAMP = b;                                                        }$/;"	f	class:TComSPS
setUseAMP	TLibEncoder/TEncCfg.h	/^  Void setUseAMP( Bool b ) { m_useAMP = b; }$/;"	f	class:TEncCfg
setUseASR	TLibEncoder/TEncCfg.h	/^  Void      setUseASR                       ( Bool  b )     { m_bUseASR     = b; }$/;"	f	class:TEncCfg
setUseAdaptQpSelect	TLibEncoder/TEncCfg.h	/^  Void      setUseAdaptQpSelect             ( Bool   i ) { m_bUseAdaptQpSelect    = i; }$/;"	f	class:TEncCfg
setUseAdaptiveQP	TLibEncoder/TEncCfg.h	/^  Void      setUseAdaptiveQP                ( Bool  b )      { m_bUseAdaptiveQP = b; }$/;"	f	class:TEncCfg
setUseBLambdaForNonKeyLowDelayPictures	TLibEncoder/TEncCfg.h	/^  Void      setUseBLambdaForNonKeyLowDelayPictures ( Bool b ) { m_bUseBLambdaForNonKeyLowDelayPictures = b; }$/;"	f	class:TEncCfg
setUseCbfFastMode	TLibEncoder/TEncCfg.h	/^  Void      setUseCbfFastMode               ( Bool  b )     { m_bUseCbfFastMode = b; }$/;"	f	class:TEncCfg
setUseChromaQpAdj	TLibCommon/TComSlice.h	/^  Void                        setUseChromaQpAdj( Bool b )                            { m_ChromaQpAdjEnabled = b;                                     }$/;"	f	class:TComSlice
setUseConstrainedIntraPred	TLibEncoder/TEncCfg.h	/^  Void      setUseConstrainedIntraPred      ( Bool  b )     { m_bUseConstrainedIntraPred = b; }$/;"	f	class:TEncCfg
setUseDQP	TLibCommon/TComSlice.h	/^  Void                   setUseDQP( Bool b )                                              { m_useDQP   = b;                               }$/;"	f	class:TComPPS
setUseEarlyCU	TLibEncoder/TEncCfg.h	/^  Void      setUseEarlyCU                   ( Bool  b )     { m_bUseEarlyCU = b; }$/;"	f	class:TEncCfg
setUseEarlySkipDetection	TLibEncoder/TEncCfg.h	/^  Void      setUseEarlySkipDetection        ( Bool  b )     { m_useEarlySkipDetection = b; }$/;"	f	class:TEncCfg
setUseFastDecisionForMerge	TLibEncoder/TEncCfg.h	/^  Void      setUseFastDecisionForMerge      ( Bool  b )     { m_useFastDecisionForMerge = b; }$/;"	f	class:TEncCfg
setUseHADME	TLibEncoder/TEncCfg.h	/^  Void      setUseHADME                     ( Bool  b )     { m_bUseHADME   = b; }$/;"	f	class:TEncCfg
setUseLCUSeparateModel	TLibEncoder/TEncCfg.h	/^  Void         setUseLCUSeparateModel ( Bool b )                     { m_RCUseLCUSeparateModel = b;    }$/;"	f	class:TEncCfg
setUsePCM	TLibCommon/TComSlice.h	/^  Void                   setUsePCM( Bool b )                                                             { m_usePCM = b;                                                        }$/;"	f	class:TComSPS
setUsePCM	TLibEncoder/TEncCfg.h	/^  Void      setUsePCM                       ( Bool  b )     {  m_usePCM = b;               }$/;"	f	class:TEncCfg
setUseRDOQ	TLibEncoder/TEncCfg.h	/^  Void      setUseRDOQ                      ( Bool  b )     { m_useRDOQ    = b; }$/;"	f	class:TEncCfg
setUseRDOQTS	TLibEncoder/TEncCfg.h	/^  Void      setUseRDOQTS                    ( Bool  b )     { m_useRDOQTS  = b; }$/;"	f	class:TEncCfg
setUseRateCtrl	TLibEncoder/TEncCfg.h	/^  Void         setUseRateCtrl         ( Bool b )                     { m_RCEnableRateControl = b;      }$/;"	f	class:TEncCfg
setUseRecalculateQPAccordingToLambda	TLibEncoder/TEncCfg.h	/^  Void         setUseRecalculateQPAccordingToLambda (Bool b)         { m_recalculateQPAccordingToLambda = b;    }$/;"	f	class:TEncCfg
setUseReconBasedCrossCPredictionEstimate	TLibEncoder/TEncCfg.h	/^  Void      setUseReconBasedCrossCPredictionEstimate (const Bool value)      { m_reconBasedCrossCPredictionEstimate = value; }$/;"	f	class:TEncCfg
setUseSAO	TLibCommon/TComSlice.h	/^  Void                   setUseSAO(Bool bVal)                                                            { m_bUseSAO = bVal;                                                    }$/;"	f	class:TComSPS
setUseSAO	TLibEncoder/TEncCfg.h	/^  Void      setUseSAO                  (Bool bVal)                   { m_bUseSAO = bVal; }$/;"	f	class:TEncCfg
setUseScalingList	TLibCommon/TComTrQuant.h	/^  Void setUseScalingList   ( Bool bUseScalingList){ m_scalingListEnabledFlag = bUseScalingList; };$/;"	f	class:TComTrQuant
setUseScalingListId	TLibEncoder/TEncCfg.h	/^  Void         setUseScalingListId    ( ScalingListMode u )          { m_useScalingListId       = u;   }$/;"	f	class:TEncCfg
setUseSelectiveRDOQ	TLibEncoder/TEncCfg.h	/^  Void      setUseSelectiveRDOQ             ( Bool b )      { m_useSelectiveRDOQ = b; }$/;"	f	class:TEncCfg
setUseStrongIntraSmoothing	TLibCommon/TComSlice.h	/^  Void                   setUseStrongIntraSmoothing(Bool bVal)                                           { m_useStrongIntraSmoothing = bVal;                                    }$/;"	f	class:TComSPS
setUseStrongIntraSmoothing	TLibEncoder/TEncCfg.h	/^  Void         setUseStrongIntraSmoothing ( Bool b )                 { m_useStrongIntraSmoothing = b;    }$/;"	f	class:TEncCfg
setUseTransformSkip	TLibCommon/TComSlice.h	/^  Void                   setUseTransformSkip( Bool b )                                    { m_useTransformSkip  = b;                      }$/;"	f	class:TComPPS
setUseTransformSkip	TLibEncoder/TEncCfg.h	/^  Void setUseTransformSkip                             ( Bool b ) { m_useTransformSkip  = b;       }$/;"	f	class:TEncCfg
setUseTransformSkipFast	TLibEncoder/TEncCfg.h	/^  Void setUseTransformSkipFast                         ( Bool b ) { m_useTransformSkipFast  = b;   }$/;"	f	class:TEncCfg
setUseWP	TLibCommon/TComSlice.h	/^  Void                   setUseWP( Bool b )                                               { m_bUseWeightPred = b;                         }$/;"	f	class:TComPPS
setUseWP	TLibEncoder/TEncCfg.h	/^  Void         setUseWP               ( Bool b )                     { m_useWeightedPred   = b;    }$/;"	f	class:TEncCfg
setUsed	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setUsed(Int bufferNum, Bool used)$/;"	f	class:TComReferencePictureSet
setUsedByCurr	TLibCommon/TComPic.h	/^  Void          setUsedByCurr( Bool bUsed ) { m_bUsedByCurr = bUsed; }$/;"	f	class:TComPic
setUsedByCurrPicLtSPSFlag	TLibCommon/TComSlice.h	/^  Void                   setUsedByCurrPicLtSPSFlag(Int i, Bool x)                                        { assert( i < MAX_NUM_LONG_TERM_REF_PICS ); m_usedByCurrPicLtSPSFlag[i] = x;       }$/;"	f	class:TComSPS
setVPS	TLibCommon/TComSlice.h	/^  Void                        setVPS( TComVPS* pcVPS )                               { m_pcVPS = pcVPS;                                              }$/;"	f	class:TComSlice
setVPS	TLibEncoder/TEncCfg.h	/^  Void         setVPS(TComVPS *p)                                    { m_cVPS = *p; }$/;"	f	class:TEncCfg
setVPSId	TLibCommon/TComSlice.h	/^  Void                   setVPSId(Int i)                                                                 { m_VPSId = i;                                                         }$/;"	f	class:TComSPS
setVPSId	TLibCommon/TComSlice.h	/^  Void              setVPSId(Int i)                                      { m_VPSId = i;                                                     }$/;"	f	class:TComVPS
setVclHrdParametersPresentFlag	TLibCommon/TComSlice.h	/^  Void    setVclHrdParametersPresentFlag( Bool flag )                                { m_vclHrdParametersPresentFlag = flag;                      }$/;"	f	class:TComHRD
setVer	TLibCommon/TComMv.h	/^  Void  setVer    ( Short i )                   { m_iVer = i;                               }$/;"	f	class:TComMv
setVideoFormat	TLibCommon/TComSlice.h	/^  Void              setVideoFormat(Int i)                                  { m_videoFormat = i;                             }$/;"	f	class:TComVUI
setVideoFormat	TLibEncoder/TEncCfg.h	/^  Void         setVideoFormat(Int i)                                 { m_videoFormat = i; }$/;"	f	class:TEncCfg
setVideoFullRangeFlag	TLibCommon/TComSlice.h	/^  Void              setVideoFullRangeFlag(Bool i)                          { m_videoFullRangeFlag = i;                      }$/;"	f	class:TComVUI
setVideoFullRangeFlag	TLibEncoder/TEncCfg.h	/^  Void         setVideoFullRangeFlag(Bool i)                         { m_videoFullRangeFlag = i; }$/;"	f	class:TEncCfg
setVideoSignalTypePresentFlag	TLibCommon/TComSlice.h	/^  Void              setVideoSignalTypePresentFlag(Bool i)                  { m_videoSignalTypePresentFlag = i;              }$/;"	f	class:TComVUI
setVideoSignalTypePresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setVideoSignalTypePresentFlag(Bool i)                 { m_videoSignalTypePresentFlag = i; }$/;"	f	class:TEncCfg
setVuiParametersPresentFlag	TLibCommon/TComSlice.h	/^  Void                   setVuiParametersPresentFlag(Bool b)                                             { m_vuiParametersPresentFlag = b;                                      }$/;"	f	class:TComSPS
setVuiParametersPresentFlag	TLibEncoder/TEncCfg.h	/^  Void         setVuiParametersPresentFlag(Bool i)                   { m_vuiParametersPresentFlag = i; }$/;"	f	class:TEncCfg
setWCGChromaQpControl	TLibEncoder/TEncCfg.h	/^  Void      setWCGChromaQpControl           ( const WCGChromaQPControl &ctrl )     { m_wcgChromaQpControl = ctrl; }$/;"	f	class:TEncCfg
setWPBiPred	TLibCommon/TComSlice.h	/^  Void                   setWPBiPred( Bool b )                                            { m_useWeightedBiPred = b;                      }$/;"	f	class:TComPPS
setWPBiPred	TLibEncoder/TEncCfg.h	/^  Void         setWPBiPred            ( Bool b )                     { m_useWeightedBiPred = b;    }$/;"	f	class:TEncCfg
setWeightedPredictionMethod	TLibEncoder/TEncCfg.h	/^  Void         setWeightedPredictionMethod( WeightedPredictionMethod m ) { m_weightedPredictionMethod = m; }$/;"	f	class:TEncCfg
setWidth	TLibCommon/TComDataCU.h	/^  Void          setWidth                      ( UInt uiIdx, UChar  uh )                                    { m_puhWidth[uiIdx] = uh;                    }$/;"	f	class:TComDataCU
setWindow	TLibCommon/TypeDef.h	/^  Void setWindow(Int offsetLeft, Int offsetLRight, Int offsetLTop, Int offsetLBottom)$/;"	f	class:Window
setWindowBottomOffset	TLibCommon/TypeDef.h	/^  Void setWindowBottomOffset(Int val) { m_winBottomOffset = val; m_enabledFlag = true; }$/;"	f	class:Window
setWindowLeftOffset	TLibCommon/TypeDef.h	/^  Void setWindowLeftOffset(Int val)   { m_winLeftOffset = val; m_enabledFlag = true;   }$/;"	f	class:Window
setWindowRightOffset	TLibCommon/TypeDef.h	/^  Void setWindowRightOffset(Int val)  { m_winRightOffset = val; m_enabledFlag = true;  }$/;"	f	class:Window
setWindowTopOffset	TLibCommon/TypeDef.h	/^  Void setWindowTopOffset(Int val)    { m_winTopOffset = val; m_enabledFlag = true;    }$/;"	f	class:Window
setWpAcDcParam	TLibCommon/TComSlice.h	/^  Void                        setWpAcDcParam( WPACDCParam wp[MAX_NUM_COMPONENT] )$/;"	f	class:TComSlice
setWpScaling	TLibCommon/TComSlice.h	/^  Void                        setWpScaling( WPScalingParam  wp[NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_COMPONENT] )$/;"	f	class:TComSlice
setWpScalingDistParam	TLibEncoder/TEncSearch.cpp	/^Void  TEncSearch::setWpScalingDistParam( TComDataCU* pcCU, Int iRefIdx, RefPicList eRefPicListCur )$/;"	f	class:TEncSearch
setXPSNREnableFlag	TLibEncoder/TEncCfg.h	/^  Void      setXPSNREnableFlag              ( Bool  i )      { m_bXPSNREnableFlag = i; }$/;"	f	class:TEncCfg
setXPSNRWeight	TLibEncoder/TEncCfg.h	/^  Void      setXPSNRWeight                  ( Double dValue, ComponentID id) { m_dXPSNRWeight[id] = dValue;}$/;"	f	class:TEncCfg
setZero	TLibCommon/TComMv.h	/^  Void  setZero   ()                            { m_iHor = m_iVer = 0;  }$/;"	f	class:TComMv
setdQPFlag	TLibDecoder/TDecCu.h	/^  Void setdQPFlag               ( Bool b )                { m_bDecodeDQP = b;           }$/;"	f	class:TDecCu
setdQPFlag	TLibEncoder/TEncCu.h	/^  Void setdQPFlag           ( Bool b )                { m_bEncodeDQP = b;           }$/;"	f	class:TEncCu
setdQPs	TLibEncoder/TEncCfg.h	/^  Void      setdQPs                         ( Int*  p )     { m_aidQP       = p; }$/;"	f	class:TEncCfg
settingHelpWidth	TLibCommon/Debug.cpp	/^static const UInt settingHelpWidth  = 84;$/;"	v	file:
settingNameWidth	TLibCommon/Debug.cpp	/^static const UInt settingNameWidth  = 66;$/;"	v	file:
settingValueWidth	TLibCommon/Debug.cpp	/^static const UInt settingValueWidth = 3;$/;"	v	file:
settingsDifferFromDefaults	TLibCommon/TComSlice.h	/^  Bool settingsDifferFromDefaults() const$/;"	f	class:TComSPSRExt
settingsDifferFromDefaults	TLibCommon/TComSlice.h	/^  Bool settingsDifferFromDefaults(const bool bTransformSkipEnabledFlag) const$/;"	f	class:TComPPSRExt
sgn	TLibCommon/TComSampleAdaptiveOffset.h	/^template <typename T> Int sgn(T val)$/;"	f
shift	TLibCommon/TComSlice.h	/^  Int  shift;$/;"	m	struct:WPScalingParam
signBitHidingHDQ	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::signBitHidingHDQ( TCoeff* pQCoef, TCoeff* pCoef, TCoeff* deltaU, const TUEntropyCodingParameters &codingParameters, const Int maxLog2TrDynamicRange )$/;"	f	class:TComTrQuant
significanceMapContextSetSize	TLibCommon/ContextTables.h	/^static const UInt significanceMapContextSetSize          [MAX_NUM_CHANNEL_TYPE][CONTEXT_NUMBER_OF_TYPES] = { {9, 12,  6,  1}, {9,  3,  3,  1} };$/;"	v
significanceMapContextSetStart	TLibCommon/ContextTables.h	/^static const UInt significanceMapContextSetStart         [MAX_NUM_CHANNEL_TYPE][CONTEXT_NUMBER_OF_TYPES] = { {0,  9, 21, 27}, {0,  9, 12, 15} };$/;"	v
significanceMapContextStartTable	TLibCommon/TComChromaFormat.h	/^static const UInt significanceMapContextStartTable[MAX_NUM_CHANNEL_TYPE] = {FIRST_SIG_FLAG_CTX_LUMA, FIRST_SIG_FLAG_CTX_CHROMA};$/;"	v
significantBits	TLibCommon/TComTrQuant.h	/^  Int significantBits[NUM_SIG_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon5
significantCoeffGroupBits	TLibCommon/TComTrQuant.h	/^  Int significantCoeffGroupBits[NUM_SIG_CG_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon5
simd8x8HAD1D32b	TLibCommon/TComRdCost.cpp	/^Void simd8x8HAD1D32b( __m128i * pInput , __m128i * pOutput )$/;"	f
simd8x8Transpose32b	TLibCommon/TComRdCost.cpp	/^inline Void simd8x8Transpose32b( __m128i * pBuffer )$/;"	f
simdAbs32b	TLibCommon/TComRdCost.cpp	/^inline __m128i simdAbs32b( __m128i m )$/;"	f
simdClip3	TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdClip3( __m128i mmMin , __m128i mmMax , __m128i mmPix )$/;"	f
simdHADs8x8	TLibCommon/TComRdCost.cpp	/^UInt simdHADs8x8( const Pel * piOrg, const Pel * piCur, Int iStrideOrg, Int iStrideCur )$/;"	f
simdInterpolateChroma4	TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateChroma4( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma2P4	TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma2P4( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma2P8	TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma2P8( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma4	TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma4( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma8	TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma8( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdSADLine4n16b	TLibCommon/TComRdCost.cpp	/^inline Int simdSADLine4n16b( const Pel * piOrg , const Pel * piCur , Int nWidth )$/;"	f
simdSADLine8n16b	TLibCommon/TComRdCost.cpp	/^inline Int simdSADLine8n16b( const Pel * piOrg , const Pel * piCur , Int nWidth )$/;"	f
simulateGrainBlk8x8	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::simulateGrainBlk8x8(int32_t *grainStripe, uint32_t grainStripeOffsetBlk8,$/;"	f	class:SEIFilmGrainSynthesizer
skipFrames	Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::skipFrames(Int numFrames, UInt width, UInt height, ChromaFormat format)$/;"	f	class:TVideoIOYuv
sm_aucLPSTable	TLibCommon/TComCABACTables.cpp	/^const UChar TComCABACTables::sm_aucLPSTable[1 << CONTEXT_STATE_BITS][4] =$/;"	m	class:TComCABACTables	file:
sm_aucLPSTable	TLibCommon/TComCABACTables.h	/^  const static UChar  sm_aucLPSTable[1 << CONTEXT_STATE_BITS][4];$/;"	m	class:TComCABACTables
sm_aucRenormTable	TLibCommon/TComCABACTables.cpp	/^const UChar TComCABACTables::sm_aucRenormTable[32] =$/;"	m	class:TComCABACTables	file:
sm_aucRenormTable	TLibCommon/TComCABACTables.h	/^  const static UChar  sm_aucRenormTable[32];$/;"	m	class:TComCABACTables
sm_betaTable	TLibCommon/TComLoopFilter.cpp	/^const UChar TComLoopFilter::sm_betaTable[MAX_QP + 1] =$/;"	m	class:TComLoopFilter	file:
sm_betaTable	TLibCommon/TComLoopFilter.h	/^  static const UChar sm_betaTable[52];$/;"	m	class:TComLoopFilter
sm_tcTable	TLibCommon/TComLoopFilter.cpp	/^const UChar TComLoopFilter::sm_tcTable[MAX_QP + 1 + DEFAULT_INTRA_TC_OFFSET] =$/;"	m	class:TComLoopFilter	file:
sm_tcTable	TLibCommon/TComLoopFilter.h	/^  static const UChar sm_tcTable[54];$/;"	m	class:TComLoopFilter
sortDeltaPOC	TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::sortDeltaPOC()$/;"	f	class:TComReferencePictureSet
sortPicList	TLibCommon/TComSlice.cpp	/^Void  TComSlice::sortPicList        (TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
spaces	Utilities/program_options_lite.cpp	/^    static const char spaces[41] = "                                        ";$/;"	m	namespace:df::program_options_lite	file:
splitOnSettings	TLibCommon/Debug.cpp	/^std::string splitOnSettings(const std::string &input)$/;"	f
start	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::start()$/;"	f	class:TDecBinCABAC
start	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::start()$/;"	f	class:TEncBinCABAC
statistics	TLibCommon/TComCodingStatistics.h	/^        SStat statistics[STATS__NUM_STATS+1][CODING_STATS_NUM_SUBCLASSES];$/;"	m	class:TComCodingStatistics::TComCodingStatisticsData
statistics_ep	TLibCommon/TComCodingStatistics.h	/^        SStat statistics_ep[STATS__NUM_STATS+1][CODING_STATS_NUM_SUBCLASSES ];$/;"	m	class:TComCodingStatistics::TComCodingStatisticsData
store	TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::store( TEncSbac* pDest) const$/;"	f	class:TEncSbac
storePPS	TLibCommon/TComSlice.h	/^  Void           storePPS(TComPPS *pps, const std::vector<UChar> &naluData) { m_ppsMap.storePS( pps->getPPSId(), pps, &naluData); };$/;"	f	class:ParameterSetManager
storePS	TLibCommon/TComSlice.h	/^  Void storePS(Int psId, T *ps, const std::vector<UChar> *pNaluData)$/;"	f	class:ParameterSetMap
storePair	Utilities/program_options_lite.cpp	/^      bool storePair(const string& name, const string& value)$/;"	f	struct:df::program_options_lite::OptionWriter
storePair	Utilities/program_options_lite.cpp	/^    bool OptionWriter::storePair(bool allow_long, bool allow_short, const string& name, const string& value)$/;"	f	class:df::program_options_lite::OptionWriter
storeSPS	TLibCommon/TComSlice.h	/^  Void           storeSPS(TComSPS *sps, const std::vector<UChar> &naluData) { m_spsMap.storePS( sps->getSPSId(), sps, &naluData); };$/;"	f	class:ParameterSetManager
storeSliceQpNext	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::storeSliceQpNext(TComSlice* pcSlice)$/;"	f	class:TComTrQuant
storeVPS	TLibCommon/TComSlice.h	/^  Void           storeVPS(TComVPS *vps, const std::vector<UChar> &naluData) { m_vpsMap.storePS( vps->getVPSId(), vps, &naluData); };$/;"	f	class:ParameterSetManager
stream	TLibCommon/TypeDef.h	/^  Int stream[MAX_NUM_CHANNEL_TYPE];\/\/\/< the bit depth used indicated in the SPS$/;"	m	struct:BitDepths
stringToInputColourSpaceConvert	TLibCommon/TComChromaFormat.cpp	/^InputColourSpaceConversion stringToInputColourSpaceConvert(const std::string &value, const Bool bIsForward)$/;"	f
subClass	TLibCommon/TComCodingStatistics.h	/^  UInt subClass;$/;"	m	class:TComCodingStatisticsClassType
subsampleLuma	TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::subsampleLuma(const TComPicYuv &input, TComPicYuv &output, const Int factor) const$/;"	f	class:TEncTemporalFilter
subtract	TLibCommon/TComYuv.cpp	/^Void TComYuv::subtract( const TComYuv* pcYuvSrc0, const TComYuv* pcYuvSrc1, const UInt uiTrUnitIdx, const UInt uiPartSize )$/;"	f	class:TComYuv
suffix_sei_messages	TLibCommon/SEI.h	/^  static const std::vector <SEI::PayloadType> suffix_sei_messages;$/;"	m	class:SEI
sum	TLibCommon/TComCodingStatistics.h	/^      Int64 sum;$/;"	m	struct:TComCodingStatistics::SStat
swapIRAPForward	TLibEncoder/TEncGOP.cpp	/^    Bool swapIRAPForward;$/;"	m	class:EfficientFieldIRAPMapping	file:
swapSliceObject	TLibCommon/TComPicSym.h	/^  TComSlice *        swapSliceObject(TComSlice* p, UInt i)                 { p->setSPS(&m_sps); p->setPPS(&m_pps); TComSlice *pTmp=m_apSlices[i];m_apSlices[i] = p; pTmp->setSPS(0); pTmp->setPPS(0); return pTmp; }$/;"	f	class:TComPicSym
targetValue	TLibCommon/SEI.h	/^    Int targetValue;$/;"	m	struct:SEIColourRemappingInfo::CRIlut
testAndWriteOut	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::testAndWriteOut()$/;"	f	class:TEncBinCABAC
testWeightBiPred	TLibCommon/TComSlice.h	/^  Bool                        testWeightBiPred( ) const                              { return m_bTestWeightBiPred;                                   }$/;"	f	class:TComSlice
testWeightPred	TLibCommon/TComSlice.h	/^  Bool                        testWeightPred( ) const                                { return m_bTestWeightPred;                                     }$/;"	f	class:TComSlice
tileSetData	TLibCommon/SEI.h	/^        TileSetData &tileSetData (const Int index)       { return m_tile_set_data[index]; }$/;"	f	class:SEITempMotionConstrainedTileSets
tileSetData	TLibCommon/SEI.h	/^  const TileSetData &tileSetData (const Int index) const { return m_tile_set_data[index]; }$/;"	f	class:SEITempMotionConstrainedTileSets
tiltCentre	TLibCommon/SEI.h	/^    Int  tiltCentre;$/;"	m	struct:SEIOmniViewport::OmniViewport
timeOffsetLength	TLibCommon/TypeDef.h	/^  Int  timeOffsetLength;$/;"	m	struct:TComSEITimeSet
timeOffsetValue	TLibCommon/TypeDef.h	/^  Int  timeOffsetValue;$/;"	m	struct:TComSEITimeSet
timeSetArray	TLibCommon/SEI.h	/^  TComSEITimeSet timeSetArray[MAX_TIMECODE_SEI_SETS];$/;"	m	class:SEITimeCode
tl0Idx	TLibCommon/SEI.h	/^  UInt tl0Idx;$/;"	m	class:SEITemporalLevel0Index
toChannelType	TLibCommon/TComChromaFormat.h	/^static inline ChannelType toChannelType             (const ComponentID id)                         { return (id==COMPONENT_Y)? CHANNEL_TYPE_LUMA : CHANNEL_TYPE_CHROMA; }$/;"	f
topLeftTileIndex	TLibCommon/SEI.h	/^            Int &topLeftTileIndex    (const Int tileRectIndex)       { return m_top_left_tile_index    [tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
topLeftTileIndex	TLibCommon/SEI.h	/^      const Int &topLeftTileIndex    (const Int tileRectIndex) const { return m_top_left_tile_index    [tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
topOffset	TLibCommon/SEI.h	/^    Int topOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
transformNxN	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::transformNxN(       TComTU        & rTu,$/;"	f	class:TComTrQuant
transformSkipQuantOneSample	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::transformSkipQuantOneSample(TComTU &rTu, const ComponentID compID, const TCoeff resiDiff, TCoeff* pcCoeff, const UInt uiPos, const QpParam &cQP, const Bool bUseHalfRoundingPoint)$/;"	f	class:TComTrQuant
type	TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsType type;$/;"	m	class:TComCodingStatisticsClassType
typeAuxInfo	TLibCommon/TypeDef.h	/^  Int typeAuxInfo; \/\/ BO: starting band index$/;"	m	struct:SAOOffset
typeIdc	TLibCommon/TypeDef.h	/^  Int typeIdc;     \/\/ union of SAOModeMergeTypes and SAOModeNewTypes, depending on modeIdc.$/;"	m	struct:SAOOffset
u	TLibCommon/TComSlice.h	/^  } u;$/;"	m	struct:ChromaQpAdj	typeref:union:ChromaQpAdj::__anon7
ucPointNr	TLibEncoder/TEncSearch.h	/^    UChar       ucPointNr;$/;"	m	struct:TEncSearch::__anon2
uiBestDistance	TLibEncoder/TEncSearch.h	/^    UInt        uiBestDistance;$/;"	m	struct:TEncSearch::__anon2
uiBestRound	TLibEncoder/TEncSearch.h	/^    UInt        uiBestRound;$/;"	m	struct:TEncSearch::__anon2
uiBestSad	TLibEncoder/TEncSearch.h	/^    Distortion  uiBestSad;$/;"	m	struct:TEncSearch::__anon2
uiLog2WeightDenom	TLibCommon/TComSlice.h	/^  UInt uiLog2WeightDenom;$/;"	m	struct:WPScalingParam
uninit	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::uninit()$/;"	f	class:TDecBinCABAC
uninit	TLibDecoder/TDecSbac.h	/^  Void  uninit                    (              )    { m_pcTDecBinIf = 0; }$/;"	f	class:TDecSbac
uninit	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::uninit()$/;"	f	class:TEncBinCABAC
uninit	TLibEncoder/TEncSbac.h	/^  Void  uninit                 ()                { m_pcBinIf = 0; }$/;"	f	class:TEncSbac
update	TLibCommon/ContextModel.h	/^  Void update( Int binVal )$/;"	f	class:ContextModel
update	libmd5/MD5.h	/^  void update(unsigned char *buf, unsigned len)$/;"	f	class:MD5
updateAfterCTU	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::updateAfterCTU(Int LCUIdx, Int bits, Int QP, Double lambda, Double skipRatio, Bool updateLCUParameter)$/;"	f	class:TEncRCPic
updateAfterPic	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::updateAfterPic ( Int bits )$/;"	f	class:TEncRCSeq
updateAfterPicture	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::updateAfterPicture( Int bitsCost )$/;"	f	class:TEncRCGOP
updateAfterPicture	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::updateAfterPicture( Int actualHeaderBits, Int actualTotalBits, Double averageQP, Double averageLambda, SliceType eSliceType)$/;"	f	class:TEncRCPic
updateAlphaBetaIntra	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::updateAlphaBetaIntra(Double *alpha, Double *beta)$/;"	f	class:TEncRCPic
updateCpbState	TLibEncoder/TEncRateCtrl.cpp	/^Int  TEncRateCtrl::updateCpbState(Int actualBits)$/;"	f	class:TEncRateCtrl
updateCtuDataISlice	TLibEncoder/TEncCu.cpp	/^Int  TEncCu::updateCtuDataISlice(TComDataCU* pCtu, Int width, Int height)$/;"	f	class:TEncCu
updateLPS	TLibCommon/ContextModel.h	/^  Void updateLPS ()$/;"	f	class:ContextModel
updateLambda	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::updateLambda(TComSlice* pSlice, Double dQP)$/;"	f	class:TEncSlice
updateMPS	TLibCommon/ContextModel.h	/^  Void updateMPS ()$/;"	f	class:ContextModel
useDST	TLibCommon/TComTU.cpp	/^Bool TComTU::useDST(const ComponentID compID)$/;"	f	class:TComTU
v	TLibEncoder/TEncTemporalFilter.h	/^  std::vector< T > v;$/;"	m	struct:Array2D
val	Utilities/program_options_lite.h	/^      std::string val;$/;"	m	struct:df::program_options_lite::ParseFailure
validProfiles	TLibCommon/ProfileLevelTierFeatures.cpp	/^static const ProfileFeatures validProfiles[] =$/;"	v	file:
validProfiles	TLibDecoder/TDecConformance.cpp	/^static const ProfileFeatures validProfiles[] =$/;"	v	file:
values	TLibCommon/SEI.h	/^    TComSEIMasteringDisplay values;$/;"	m	class:SEIMasteringDisplayColourVolume
values	TLibCommon/SEI.h	/^  TComSEIFisheyeVideoInfo values;$/;"	m	class:SEIFisheyeVideoInfo
values	TLibCommon/TComCodingStatistics.h	/^      UInt values[512+1];$/;"	m	struct:TComCodingStatistics::StatLogValue
values	TLibCommon/TComCodingStatistics.h	/^    StatLogValue values;$/;"	m	class:TComCodingStatistics
verFlip	TLibCommon/SEI.h	/^  Bool verFlip;$/;"	m	class:SEIDisplayOrientation
verRange	TLibCommon/SEI.h	/^    UInt verRange;$/;"	m	struct:SEIOmniViewport::OmniViewport
w	TLibCommon/TComSlice.h	/^  Int  w;$/;"	m	struct:WPScalingParam
warn	Utilities/program_options_lite.cpp	/^    ostream& ErrorReporter::warn(const string& where)$/;"	f	class:df::program_options_lite::ErrorReporter
weightBidir	TLibCommon/TComWeightPrediction.cpp	/^static inline Pel weightBidir( Int w0, Pel P0, Int w1, Pel P1, Int round, Int shift, Int offset, Int clipBD)$/;"	f	file:
weightUnidir	TLibCommon/TComWeightPrediction.cpp	/^static inline Pel weightUnidir( Int w0, Pel P0, Int round, Int shift, Int offset, Int clipBD)$/;"	f	file:
what	Utilities/program_options_lite.h	/^      const char* what() const throw() { return "Option Parse Failure"; }$/;"	f	struct:df::program_options_lite::ParseFailure
where	Utilities/program_options_lite.cpp	/^      const string where() { return "command line"; }$/;"	f	struct:df::program_options_lite::ArgvParser
where	Utilities/program_options_lite.cpp	/^      const string where()$/;"	f	struct:df::program_options_lite::CfgStreamParser
whitePoint	TLibCommon/TypeDef.h	/^  UShort    whitePoint[2];$/;"	m	struct:TComSEIMasteringDisplay
width	TLibCommon/TComRectangle.h	/^  UInt width;$/;"	m	struct:TComRectangle
widthInGroups	TLibCommon/TypeDef.h	/^        UInt             widthInGroups;$/;"	m	struct:TUEntropyCodingParameters
wpCur	TLibCommon/TComRdCost.h	/^  const WPScalingParam *wpCur;           \/\/ weighted prediction scaling parameters for current ref$/;"	m	class:DistParam
write	TLibCommon/TComBitCounter.h	/^  Void        write                 ( UInt \/*uiBits*\/, UInt uiNumberOfBits )  { m_uiBitCounter += uiNumberOfBits; }$/;"	f	class:TComBitCounter
write	TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::write   ( UInt uiBits, UInt uiNumberOfBits )$/;"	f	class:TComOutputBitstream
write	TLibEncoder/NALwrite.cpp	/^Void write(ostream& out, OutputNALUnit& nalu)$/;"	f
write	Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::write( TComPicYuv* pPicYuvUser, const InputColourSpaceConversion ipCSC, Int confLeft, Int confRight, Int confTop, Int confBottom, ChromaFormat format, const Bool bClipToRec709 )$/;"	f	class:TVideoIOYuv
write	Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::write( TComPicYuv* pPicYuvUserTop, TComPicYuv* pPicYuvUserBottom, const InputColourSpaceConversion ipCSC, Int confLeft, Int confRight, Int confTop, Int confBottom, ChromaFormat format, const Bool isTff, const Bool bClipToRec709 )$/;"	f	class:TVideoIOYuv
writeAlignOne	TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::writeAlignOne()$/;"	f	class:TComOutputBitstream
writeAlignOne	TLibCommon/TComBitStream.h	/^  virtual Void        writeAlignOne         () {};$/;"	f	class:TComBitIf
writeAlignZero	TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::writeAlignZero()$/;"	f	class:TComOutputBitstream
writeAlignZero	TLibCommon/TComBitStream.h	/^  virtual Void        writeAlignZero        () {};$/;"	f	class:TComBitIf
writeAnnexB	TLibEncoder/AnnexBwrite.h	/^static std::vector<UInt> writeAnnexB(std::ostream& out, const AccessUnit& au)$/;"	f
writeByteAlignment	TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::writeByteAlignment()$/;"	f	class:TComOutputBitstream
writeField	Utilities/TVideoIOYuv.cpp	/^static Bool writeField(ostream& fd, Pel* top, Pel* bottom, Bool is16bit,$/;"	f	file:
writeNalUnitHeader	TLibEncoder/NALwrite.cpp	/^Void writeNalUnitHeader(ostream& out, OutputNALUnit& nalu)       \/\/ nal_unit_header()$/;"	f
writeOut	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::writeOut()$/;"	f	class:TEncBinCABAC
writePlane	Utilities/TVideoIOYuv.cpp	/^static Bool writePlane(ostream& fd, Pel* src, Bool is16bit,$/;"	f	file:
writeSEImessages	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::writeSEImessages(TComBitIf& bs, const SEIMessages &seiList, const TComSPS *sps, Bool isNested)$/;"	f	class:SEIWriter
writeValueToStream	TLibCommon/Debug.h	/^template <>                   inline Void writeValueToStream<SChar>(const SChar     &value, std::ostream &stream, const UInt outputWidth) { stream << std::setw(outputWidth) <<  Int(value); }$/;"	f
writeValueToStream	TLibCommon/Debug.h	/^template <>                   inline Void writeValueToStream<UChar>(const UChar     &value, std::ostream &stream, const UInt outputWidth) { stream << std::setw(outputWidth) << UInt(value); }$/;"	f
writeValueToStream	TLibCommon/Debug.h	/^template <typename ValueType> inline Void writeValueToStream       (const ValueType &value, std::ostream &stream, const UInt outputWidth) { stream << std::setw(outputWidth) <<      value;  }$/;"	f
x	TLibEncoder/TEncTemporalFilter.h	/^  Int x, y;$/;"	m	struct:MotionVector
x0	TLibCommon/TComRectangle.h	/^  UInt x0;$/;"	m	struct:TComRectangle
xActivateParameterSets	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xActivateParameterSets(Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
xAddMVPCandUnscaled	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::xAddMVPCandUnscaled( AMVPInfo &info, const RefPicList eRefPicList, const Int iRefIdx, const UInt uiPartUnitIdx, const MVP_DIR eDir ) const$/;"	f	class:TComDataCU
xAddMVPCandWithScaling	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::xAddMVPCandWithScaling( AMVPInfo &info, const RefPicList eRefPicList, const Int iRefIdx, const UInt uiPartUnitIdx, const MVP_DIR eDir ) const$/;"	f	class:TComDataCU
xAddSymbolBitsInter	TLibEncoder/TEncSearch.cpp	/^Void  TEncSearch::xAddSymbolBitsInter( TComDataCU* pcCU, UInt& ruiBits )$/;"	f	class:TEncSearch
xAnalysePrefixSEImessages	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xAnalysePrefixSEImessages()$/;"	f	class:TDecTop
xAttachSliceDataToNalUnit	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xAttachSliceDataToNalUnit (OutputNALUnit& rNalu, TComOutputBitstream* codedSliceData)$/;"	f	class:TEncGOP
xCalEquaCoeff	TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::xCalEquaCoeff( TEncRCSeq* encRCSeq, Double* lambdaRatio, Double* equaCoeffA, Double* equaCoeffB, Int GOPSize )$/;"	f	class:TEncRCGOP
xCalcACDCParamSlice	TLibEncoder/WeightPredAnalysis.cpp	/^Void WeightPredAnalysis::xCalcACDCParamSlice(TComSlice *const slice)$/;"	f	class:WeightPredAnalysis
xCalcBsIdx	TLibCommon/TComLoopFilter.h	/^  UInt xCalcBsIdx                 ( TComDataCU* pcCU, UInt absZIdxInCtu, DeblockEdgeDir edgeDir, Int iEdgeIdx, Int iBaseUnitIdx, const struct TComRectangle *rect=NULL )$/;"	f	class:TComLoopFilter
xCalcCrossComponentPredictionAlpha	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xCalcCrossComponentPredictionAlpha(       TComTU &rTu,$/;"	f	class:TEncSearch
xCalcDP	TLibCommon/TComLoopFilter.cpp	/^__inline Int TComLoopFilter::xCalcDP( Pel* piSrc, Int iOffset)$/;"	f	class:TComLoopFilter
xCalcDQ	TLibCommon/TComLoopFilter.cpp	/^__inline Int TComLoopFilter::xCalcDQ( Pel* piSrc, Int iOffset)$/;"	f	class:TComLoopFilter
xCalcHADs2x2	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xCalcHADs2x2( const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f	class:TComRdCost
xCalcHADs2x2w	TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion xCalcHADs2x2w( const WPScalingParam &wpCur, const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f
xCalcHADs4x4	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xCalcHADs4x4( const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f	class:TComRdCost
xCalcHADs4x4w	TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion xCalcHADs4x4w( const WPScalingParam &wpCur, const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f
xCalcHADs8x8	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xCalcHADs8x8( const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep$/;"	f	class:TComRdCost
xCalcHADs8x8_ISlice	TLibEncoder/TEncCu.cpp	/^Int xCalcHADs8x8_ISlice(Pel *piOrg, Int iStrideOrg)$/;"	f
xCalcHADs8x8w	TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion xCalcHADs8x8w( const WPScalingParam &wpCur, const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f
xCalcHistDistortion	TLibEncoder/WeightPredAnalysis.cpp	/^Distortion xCalcHistDistortion (const std::vector<Int> &histogram0,$/;"	f	file:
xCalcHistogram	TLibEncoder/WeightPredAnalysis.cpp	/^Void xCalcHistogram(const Pel  *pPel,$/;"	f	file:
xCalcSADvalueWP	TLibEncoder/WeightPredAnalysis.cpp	/^Int64 xCalcSADvalueWP(const Int   bitDepth,$/;"	f	file:
xCalcSADvalueWPOptionalClip	TLibEncoder/WeightPredAnalysis.cpp	/^Int64 xCalcSADvalueWPOptionalClip(const Int   bitDepth,$/;"	f	file:
xCalculateAddPSNR	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCalculateAddPSNR( TComPic* pcPic, TComPicYuv* pcPicD, const AccessUnit& accessUnit, Double dEncTime, const InputColourSpaceConversion ip_conversion, const InputColourSpaceConversion snr_conversion, const TEncAnalyze::OutputLogControl &outputLogCtrl, Double* PSNR_Y )$/;"	f	class:TEncGOP
xCalculateAddPSNRs	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCalculateAddPSNRs( const Bool isField, const Bool isFieldTopFieldFirst, const Int iGOPid, TComPic* pcPic, const AccessUnit&accessUnit, TComList<TComPic*> &rcListPic, const Double dEncTime, const InputColourSpaceConversion ip_conversion, const InputColourSpaceConversion snr_conversion, const TEncAnalyze::OutputLogControl &outputLogCtrl, Double* PSNR_Y )$/;"	f	class:TEncGOP
xCalculateInterlacedAddPSNR	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCalculateInterlacedAddPSNR( TComPic* pcPicOrgFirstField, TComPic* pcPicOrgSecondField,$/;"	f	class:TEncGOP
xCalculateMSSSIM	TLibEncoder/TEncGOP.cpp	/^Double TEncGOP::xCalculateMSSSIM (const Pel *pOrg, const Int orgStride, const Pel* pRec, const Int recStride, const Int width, const Int height, const UInt bitDepth)$/;"	f	class:TEncGOP
xCalculateNextCtuRSAddr	TLibCommon/TComPicSym.cpp	/^UInt TComPicSym::xCalculateNextCtuRSAddr( UInt currCtuRsAddr )$/;"	f	class:TComPicSym
xCalculateRVM	TLibEncoder/TEncGOP.cpp	/^Double TEncGOP::xCalculateRVM()$/;"	f	class:TEncGOP
xCheckBestMVP	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xCheckBestMVP ( TComDataCU* pcCU, RefPicList eRefPicList, TComMv cMv, TComMv& rcMvPred, Int& riMVPIdx, UInt& ruiBits, Distortion& ruiCost )$/;"	f	class:TEncSearch
xCheckBestMode	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckBestMode( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU, UInt uiDepth DEBUG_STRING_FN_DECLARE(sParent) DEBUG_STRING_FN_DECLARE(sTest) DEBUG_STRING_PASS_INTO(Bool bAddSizeInfo) )$/;"	f	class:TEncCu
xCheckDQP	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckDQP( TComDataCU* pcCU )$/;"	f	class:TEncCu
xCheckGSParameters	TLibEncoder/TEncTop.cpp	/^Void  TEncCfg::xCheckGSParameters()$/;"	f	class:TEncCfg
xCheckIdenticalMotion	TLibCommon/TComPrediction.cpp	/^Bool TComPrediction::xCheckIdenticalMotion ( TComDataCU* pcCU, UInt PartAddr )$/;"	f	class:TComPrediction
xCheckIntraPCM	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckIntraPCM( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU )$/;"	f	class:TEncCu
xCheckRDCostInter	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckRDCostInter( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU, PartSize ePartSize DEBUG_STRING_FN_DECLARE(sDebug), Bool bUseMRG)$/;"	f	class:TEncCu
xCheckRDCostIntra	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckRDCostIntra( TComDataCU *&rpcBestCU,$/;"	f	class:TEncCu
xCheckRDCostMerge2Nx2N	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckRDCostMerge2Nx2N( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU DEBUG_STRING_FN_DECLARE(sDebug), Bool *earlyDetectionSkipMode )$/;"	f	class:TEncCu
xCheckWPEnable	TLibEncoder/WeightPredAnalysis.cpp	/^Void  WeightPredAnalysis::xCheckWPEnable(TComSlice *const slice)$/;"	f	class:WeightPredAnalysis
xClearSEIs	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xClearSEIs(SEIMessages& seiMessages, Bool deleteMessages)$/;"	f	class:TEncGOP
xCodePredWeightTable	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::xCodePredWeightTable( TComSlice* pcSlice )$/;"	f	class:TEncCavlc
xCodeScalingList	TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::xCodeScalingList(const TComScalingList* scalingList, UInt sizeId, UInt listId)$/;"	f	class:TEncCavlc
xCompressCU	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCompressCU( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU, const UInt uiDepth DEBUG_STRING_FN_DECLARE(sDebug_), PartSize eParentPartSize )$/;"	f	class:TEncCu
xComputeQP	TLibEncoder/TEncCu.cpp	/^Int TEncCu::xComputeQP( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TEncCu
xConvertToUInt	TLibEncoder/SyntaxElementWriter.h	/^  UInt  xConvertToUInt        ( Int iValue ) {  return ( iValue <= 0) ? -iValue<<1 : (iValue<<1)-1; }$/;"	f	class:SyntaxElementWriter
xCopyAMVPInfo	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCopyAMVPInfo (AMVPInfo* pSrc, AMVPInfo* pDst)$/;"	f	class:TEncCu
xCopyAMVPInfo	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xCopyAMVPInfo (AMVPInfo* pSrc, AMVPInfo* pDst)$/;"	f	class:TEncSearch
xCopyContextsFrom	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xCopyContextsFrom( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
xCopyContextsFrom	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xCopyContextsFrom( const TEncSbac* pSrc )$/;"	f	class:TEncSbac
xCopyFrom	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xCopyFrom( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
xCopyFrom	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xCopyFrom( const TEncSbac* pSrc )$/;"	f	class:TEncSbac
xCopyToPic	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xCopyToPic( TComDataCU* pcCU, TComPic* pcPic, UInt uiZorderIdx, UInt uiDepth )$/;"	f	class:TDecCu
xCopyYuv2Pic	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCopyYuv2Pic(TComPic* rpcPic, UInt uiCUAddr, UInt uiAbsPartIdx, UInt uiDepth, UInt uiSrcDepth )$/;"	f	class:TEncCu
xCopyYuv2Tmp	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCopyYuv2Tmp( UInt uiPartUnitIdx, UInt uiNextDepth )$/;"	f	class:TEncCu
xCreateIRAPLeadingSEIMessages	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreateIRAPLeadingSEIMessages(SEIMessages& seiMessages, const TComVPS *vps, const TComSPS *sps, const TComPPS *pps)$/;"	f	class:TEncGOP
xCreateLostPicture	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xCreateLostPicture(Int iLostPoc)$/;"	f	class:TDecTop
xCreatePerPictureSEIMessages	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreatePerPictureSEIMessages (Int picInGOP, SEIMessages& seiMessages, SEIMessages& nestedSeiMessages, TComSlice *slice)$/;"	f	class:TEncGOP
xCreatePictureTimingSEI	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreatePictureTimingSEI  (Int IRAPGOPid, SEIMessages& seiMessages, SEIMessages& nestedSeiMessages, SEIMessages& duInfoSeiMessages, TComSlice *slice, Bool isField, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xCreateScalableNestingSEI	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreateScalableNestingSEI (SEIMessages& seiMessages, SEIMessages& nestedSeiMessages)$/;"	f	class:TEncGOP
xCtuCollectARLStats	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCtuCollectARLStats(TComDataCU* pCtu )$/;"	f	class:TEncCu
xDCPredFiltering	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xDCPredFiltering( const Pel* pSrc, Int iSrcStride, Pel* pDst, Int iDstStride, Int iWidth, Int iHeight, ChannelType channelType )$/;"	f	class:TComPrediction
xDeQuant	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xDeQuant(       TComTU        &rTu,$/;"	f	class:TComTrQuant
xDeblockCU	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xDeblockCU( TComDataCU* pcCU, UInt uiAbsZorderIdx, UInt uiDepth, DeblockEdgeDir edgeDir )$/;"	f	class:TComLoopFilter
xDecodeCU	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecodeCU( TComDataCU*const pcCU, const UInt uiAbsPartIdx, const UInt uiDepth, Bool &isLastCtuOfSliceSegment)$/;"	f	class:TDecCu
xDecodeInterTexture	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecodeInterTexture ( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xDecodePCMTexture	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecodePCMTexture( TComDataCU* pcCU, const UInt uiPartIdx, const Pel *piPCM, Pel* piReco, const UInt uiStride, const UInt uiWidth, const UInt uiHeight, const ComponentID compID)$/;"	f	class:TDecCu
xDecodePPS	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xDecodePPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecodeSPS	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xDecodeSPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecodeScalingList	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::xDecodeScalingList(TComScalingList *scalingList, UInt sizeId, UInt listId)$/;"	f	class:TDecCavlc
xDecodeSlice	TLibDecoder/TDecTop.cpp	/^Bool TDecTop::xDecodeSlice(InputNALUnit &nalu, Int &iSkipFrame, Int iPOCLastDisplay, Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
xDecodeSliceEnd	TLibDecoder/TDecCu.cpp	/^Bool TDecCu::xDecodeSliceEnd( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecCu
xDecodeTransform	TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::xDecodeTransform        ( Bool& bCodeDQP, Bool& isChromaQpAdjCoded, TComTU &rTu, const Int quadtreeTULog2MinSizeInCU )$/;"	f	class:TDecEntropy
xDecodeVPS	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xDecodeVPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecompressCU	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecompressCU( TComDataCU* pCtu, UInt uiAbsPartIdx,  UInt uiDepth )$/;"	f	class:TDecCu
xDeriveCenterIdx	TLibCommon/TComDataCU.cpp	/^Void TComDataCU::xDeriveCenterIdx( UInt uiPartIdx, UInt& ruiPartIdxCenter ) const$/;"	f	class:TComDataCU
xDetermineStartAndBoundingCtuTsAddr	TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::xDetermineStartAndBoundingCtuTsAddr  ( UInt& startCtuTsAddr, UInt& boundingCtuTsAddr, TComPic* pcPic )$/;"	f	class:TEncSlice
xEdgeFilterChroma	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xEdgeFilterChroma( TComDataCU* const pcCU, const UInt uiAbsZorderIdx, const UInt uiDepth, const DeblockEdgeDir edgeDir, const Int iEdge )$/;"	f	class:TComLoopFilter
xEdgeFilterLuma	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xEdgeFilterLuma( TComDataCU* const pcCU, const UInt uiAbsZorderIdx, const UInt uiDepth, const DeblockEdgeDir edgeDir, const Int iEdge  )$/;"	f	class:TComLoopFilter
xEncCoeffQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xEncCoeffQT(TComTU &rTu,$/;"	f	class:TEncSearch
xEncIntraHeader	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xEncIntraHeader( TComDataCU*  pcCU,$/;"	f	class:TEncSearch
xEncPCM	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEncPCM (TComDataCU* pcCU, UInt uiAbsPartIdx, Pel* pOrg, Pel* pPCM, Pel* pPred, Pel* pResi, Pel* pReco, UInt uiStride, UInt uiWidth, UInt uiHeight, const ComponentID compID )$/;"	f	class:TEncSearch
xEncSubdivCbfQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xEncSubdivCbfQT(TComTU      &rTu,$/;"	f	class:TEncSearch
xEncodeCU	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xEncodeCU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TEncCu
xEncodeInterResidualQT	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEncodeInterResidualQT( const ComponentID compID, TComTU &rTu )$/;"	f	class:TEncSearch
xEncodeTransform	TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::xEncodeTransform( Bool& bCodeDQP, Bool& codeChromaQpAdj, TComTU &rTu )$/;"	f	class:TEncEntropy
xEstGOPTargetBits	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCGOP::xEstGOPTargetBits( TEncRCSeq* encRCSeq, Int GOPSize )$/;"	f	class:TEncRCGOP
xEstPicHeaderBits	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::xEstPicHeaderBits( list<TEncRCPic*>& listPreviousPictures, Int frameLevel )$/;"	f	class:TEncRCPic
xEstPicLowerBound	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::xEstPicLowerBound(TEncRCSeq* encRCSeq, TEncRCGOP* encRCGOP)$/;"	f	class:TEncRCPic
xEstPicTargetBits	TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::xEstPicTargetBits( TEncRCSeq* encRCSeq, TEncRCGOP* encRCGOP )$/;"	f	class:TEncRCPic
xEstimateInterResidualQT	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEstimateInterResidualQT( TComYuv    *pcResi,$/;"	f	class:TEncSearch
xEstimateMvPredAMVP	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEstimateMvPredAMVP( TComDataCU* pcCU, TComYuv* pcOrgYuv, UInt uiPartIdx, RefPicList eRefPicList, Int iRefIdx, TComMv& rcMvPred, Bool bFilled, Distortion* puiDistBiP )$/;"	f	class:TEncSearch
xEstimateWPParamSlice	TLibEncoder/WeightPredAnalysis.cpp	/^Void WeightPredAnalysis::xEstimateWPParamSlice(TComSlice *const slice, const WeightedPredictionMethod method)$/;"	f	class:WeightPredAnalysis
xExtDIFUpSamplingH	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xExtDIFUpSamplingH( TComPattern* pattern )$/;"	f	class:TEncSearch
xExtDIFUpSamplingQ	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xExtDIFUpSamplingQ( TComPattern* pattern, TComMv halfPelRef )$/;"	f	class:TEncSearch
xFillPCMBuffer	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xFillPCMBuffer(TComDataCU* pCU, UInt depth)$/;"	f	class:TDecCu
xFillPCMBuffer	TLibEncoder/TEncCu.cpp	/^Void TEncCu::xFillPCMBuffer     ( TComDataCU* pCU, TComYuv* pOrgYuv )$/;"	f	class:TEncCu
xFindDistortionFrame	TLibEncoder/TEncGOP.cpp	/^UInt64 TEncGOP::xFindDistortionFrame (TComPicYuv* pcPic0, TComPicYuv* pcPic1, const BitDepths &bitDepths)$/;"	f	class:TEncGOP
xFinishDecodeCU	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xFinishDecodeCU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool &isLastCtuOfSliceSegment)$/;"	f	class:TDecCu
xFree	TLibCommon/CommonDef.h	273;"	d
xFree	TLibCommon/CommonDef.h	276;"	d
xGetBlkBits	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xGetBlkBits( PartSize eCUMode, Bool bPSlice, Int iPartIdx, UInt uiLastMode, UInt uiBlkBit[3])$/;"	f	class:TEncSearch
xGetBoundaryStrengthSingle	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xGetBoundaryStrengthSingle ( TComDataCU* pCtu, DeblockEdgeDir edgeDir, UInt uiAbsPartIdx4x4BlockWithinCtu )$/;"	f	class:TComLoopFilter
xGetBuffer	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xGetBuffer( TComList<TComPic*>&      rcListPic,$/;"	f	class:TEncGOP
xGetCodedLevel	TLibCommon/TComTrQuant.cpp	/^__inline UInt TComTrQuant::xGetCodedLevel ( Double&          rd64CodedCost,          \/\/< reference to coded cost$/;"	f	class:TComTrQuant
xGetColMVP	TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::xGetColMVP( const RefPicList eRefPicList, const Int ctuRsAddr, const Int partUnitIdx, TComMv& rcMv, const Int refIdx ) const$/;"	f	class:TComDataCU
xGetDistScaleFactor	TLibCommon/TComDataCU.cpp	/^Int TComDataCU::xGetDistScaleFactor(Int iCurrPOC, Int iCurrRefPOC, Int iColPOC, Int iColRefPOC)$/;"	f	class:TComDataCU
xGetExpGolombNumberOfBits	TLibCommon/TComRdCost.cpp	/^UInt TComRdCost::xGetExpGolombNumberOfBits( Int iVal )$/;"	f	class:TComRdCost
xGetHADs	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetHADs( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetHADsw	TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion TComRdCostWeightPrediction::xGetHADsw( DistParam* pcDtParam )$/;"	f	class:TComRdCostWeightPrediction
xGetICRate	TLibCommon/TComTrQuant.cpp	/^__inline Int TComTrQuant::xGetICRate         ( const UInt    uiAbsLevel,$/;"	f	class:TComTrQuant
xGetICost	TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetICost        ( Double                          dRate         ) const$/;"	f	class:TComTrQuant
xGetIEPRate	TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetIEPRate      (                                               ) const$/;"	f	class:TComTrQuant
xGetInterPredictionError	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xGetInterPredictionError( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPartIdx, Distortion& ruiErr, Bool \/*bHadamard*\/ )$/;"	f	class:TEncSearch
xGetIntraBitsQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xGetIntraBitsQT(TComTU &rTu,$/;"	f	class:TEncSearch
xGetIntraBitsQTChroma	TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xGetIntraBitsQTChroma(TComTU &rTu,$/;"	f	class:TEncSearch
xGetLongTermRefPic	TLibCommon/TComSlice.cpp	/^TComPic* TComSlice::xGetLongTermRefPic(TComList<TComPic*>& rcListPic, Int poc, Bool pocHasMsb)$/;"	f	class:TComSlice
xGetMvpIdxBits	TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xGetMvpIdxBits(Int iIdx, Int iNum)$/;"	f	class:TEncSearch
xGetNewPicBuffer	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xGetNewPicBuffer ( const TComSPS &sps, const TComPPS &pps, TComPic*& rpcPic, const UInt temporalLayer )$/;"	f	class:TDecTop
xGetNewPicBuffer	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xGetNewPicBuffer ( TComPic*& rpcPic, Int ppsId )$/;"	f	class:TEncTop
xGetQPValueAccordingToLambda	TLibEncoder/TEncSlice.cpp	/^Double TEncSlice::xGetQPValueAccordingToLambda ( Double lambda )$/;"	f	class:TEncSlice
xGetRateLast	TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetRateLast   ( const UInt                      uiPosX,$/;"	f	class:TComTrQuant
xGetRateSigCoef	TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetRateSigCoef  ( UShort                          uiSignificance,$/;"	f	class:TComTrQuant
xGetRateSigCoeffGroup	TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetRateSigCoeffGroup  ( UShort                    uiSignificanceCoeffGroup,$/;"	f	class:TComTrQuant
xGetRefPic	TLibCommon/TComSlice.cpp	/^TComPic* TComSlice::xGetRefPic (TComList<TComPic*>& rcListPic, Int poc)$/;"	f	class:TComSlice
xGetSAD	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD12	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD12( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD16	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD16( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD16N	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD16N( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD24	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD24( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD32	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD32( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD4	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD4( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD48	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD48( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD64	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD64( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD8	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD8( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSADw	TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion TComRdCostWeightPrediction::xGetSADw( DistParam* pcDtParam )$/;"	f	class:TComRdCostWeightPrediction
xGetSSE	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE16	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE16( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE16N	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE16N( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE32	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE32( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE4	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE4( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE64	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE64( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE8	TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE8( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSEw	TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion TComRdCostWeightPrediction::xGetSSEw( DistParam* pcDtParam )$/;"	f	class:TComRdCostWeightPrediction
xGetTemplateCost	TLibEncoder/TEncSearch.cpp	/^Distortion TEncSearch::xGetTemplateCost( TComDataCU* pcCU,$/;"	f	class:TEncSearch
xIT	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xIT( const Int channelBitDepth, Bool useDST, TCoeff* plCoef, Pel* pResidual, UInt uiStride, Int iWidth, Int iHeight, const Int maxLog2TrDynamicRange )$/;"	f	class:TComTrQuant
xITr	TLibCommon/TComTrQuant.cpp	/^Void xITr(Int bitDepth, TCoeff *coeff, Pel *block, UInt uiStride, UInt uiTrSize, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xITrMxN	TLibCommon/TComTrQuant.cpp	/^Void xITrMxN(Int bitDepth, TCoeff *coeff, TCoeff *block, Int iWidth, Int iHeight, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xITransformSkip	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xITransformSkip( TCoeff* plCoef, Pel* pResidual, UInt uiStride, TComTU &rTu, const ComponentID component )$/;"	f	class:TComTrQuant
xInitCtuTsRsAddrMaps	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::xInitCtuTsRsAddrMaps()$/;"	f	class:TComPicSym
xInitGOP	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xInitGOP( Int iPOCLast, Int iNumPicRcvd, Bool isField )$/;"	f	class:TEncGOP
xInitHrdParameters	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitHrdParameters(TComSPS &sps)$/;"	f	class:TEncTop
xInitPPS	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitPPS(TComPPS &pps, const TComSPS &sps)$/;"	f	class:TEncTop
xInitPPSforTiles	TLibEncoder/TEncTop.cpp	/^Void  TEncTop::xInitPPSforTiles(TComPPS &pps)$/;"	f	class:TEncTop
xInitRPS	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitRPS(TComSPS &sps, Bool isFieldCoding)$/;"	f	class:TEncTop
xInitSPS	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitSPS(TComSPS &sps)$/;"	f	class:TEncTop
xInitScalingLists	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitScalingLists(TComSPS &sps, TComPPS &pps)$/;"	f	class:TEncTop
xInitTileBorders	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xInitTileBorders(const TComDataCU* const pcCU, TComPattern* pcPatternKey)$/;"	f	class:TEncSearch
xInitTiles	TLibCommon/TComPicSym.cpp	/^Void TComPicSym::xInitTiles()$/;"	f	class:TComPicSym
xInitVPS	TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitVPS(TComVPS &vps, const TComSPS &sps)$/;"	f	class:TEncTop
xIntraCodingTUBlock	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xIntraCodingTUBlock(       TComYuv*    pcOrgYuv,$/;"	f	class:TEncSearch
xIntraRecBlk	TLibDecoder/TDecCu.cpp	/^TDecCu::xIntraRecBlk(       TComYuv*    pcRecoYuv,$/;"	f	class:TDecCu
xIntraRecQT	TLibDecoder/TDecCu.cpp	/^TDecCu::xIntraRecQT(TComYuv*    pcRecoYuv,$/;"	f	class:TDecCu
xLoadIntraResultQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xLoadIntraResultQT(const ComponentID compID, TComTU &rTu)$/;"	f	class:TEncSearch
xMalloc	TLibCommon/CommonDef.h	272;"	d
xMalloc	TLibCommon/CommonDef.h	275;"	d
xMergeEstimation	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xMergeEstimation( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPUIdx, UInt& uiInterDir, TComMvField* pacMvField, UInt& uiMergeIndex, Distortion& ruiCost, TComMvField* cMvFieldNeighbours, UChar* uhInterDirNeighbours, Int& numValidMergeCand )$/;"	f	class:TEncSearch
xModeBitsIntra	TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xModeBitsIntra( TComDataCU* pcCU, UInt uiMode, UInt uiPartOffset, UInt uiDepth, const ChannelType chType )$/;"	f	class:TEncSearch
xMoreRbspData	TLibDecoder/TDecCAVLC.cpp	/^Bool TDecCavlc::xMoreRbspData()$/;"	f	class:TDecCavlc
xMotionEstimation	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xMotionEstimation( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPartIdx, RefPicList eRefPicList, TComMv* pcMvPred, Int iRefIdxPred, TComMv& rcMv, UInt& ruiBits, Distortion& ruiCost, Bool bBi  )$/;"	f	class:TEncSearch
xNeedRDOQ	TLibCommon/TComTrQuant.cpp	/^Bool TComTrQuant::xNeedRDOQ( TComTU &rTu, TCoeff * pSrc, const ComponentID compID, const QpParam &cQP )$/;"	f	class:TComTrQuant
xPCMCURestoration	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::xPCMCURestoration ( TComDataCU* pcCU, UInt uiAbsZorderIdx, UInt uiDepth )$/;"	f	class:TComSampleAdaptiveOffset
xPCMRestoration	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::xPCMRestoration(TComPic* pcPic)$/;"	f	class:TComSampleAdaptiveOffset
xPCMSampleRestoration	TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::xPCMSampleRestoration (TComDataCU* pcCU, UInt uiAbsZorderIdx, UInt uiDepth, const ComponentID compID)$/;"	f	class:TComSampleAdaptiveOffset
xParsePredWeightTable	TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::xParsePredWeightTable( TComSlice* pcSlice, const TComSPS *sps )$/;"	f	class:TDecCavlc
xParsePrefixSEImessages	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xParsePrefixSEImessages()$/;"	f	class:TDecTop
xParsePrefixSEIsForUnknownVCLNal	TLibDecoder/TDecTop.cpp	/^Void TDecTop::xParsePrefixSEIsForUnknownVCLNal()$/;"	f	class:TDecTop
xParseSEIActiveParameterSets	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIActiveParameterSets(SEIActiveParameterSets& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIAlternativeTransferCharacteristics	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIAlternativeTransferCharacteristics(SEIAlternativeTransferCharacteristics& sei, UInt payloadSize, ostream* pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIAmbientViewingEnvironment	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIAmbientViewingEnvironment( SEIAmbientViewingEnvironment& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIAnnotatedRegions	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIAnnotatedRegions(SEIAnnotatedRegions& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIBufferingPeriod	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIBufferingPeriod(SEIBufferingPeriod& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIChromaResamplingFilterHint	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIChromaResamplingFilterHint(SEIChromaResamplingFilterHint& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEICodedRegionCompletion	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEICodedRegionCompletion( SEICodedRegionCompletion& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIColourRemappingInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIColourRemappingInfo(SEIColourRemappingInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIContentColourVolume	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIContentColourVolume(SEIContentColourVolume& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIContentLightLevelInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIContentLightLevelInfo( SEIContentLightLevelInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEICubemapProjection	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEICubemapProjection(SEICubemapProjection& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDecodedPictureHash	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDecodedPictureHash(SEIDecodedPictureHash& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDecodingUnitInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDecodingUnitInfo(SEIDecodingUnitInfo& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDeinterlaceFieldIdentification	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDeinterlaceFieldIdentification( SEIDeinterlaceFieldIdentification& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIDependentRAPIndication	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDependentRAPIndication( SEIDependentRAPIndication& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIDisplayOrientation	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDisplayOrientation(SEIDisplayOrientation& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIEquirectangularProjection	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIEquirectangularProjection(SEIEquirectangularProjection& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFillerPayload	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFillerPayload(SEIFillerPayload& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFilmGrainCharacteristics	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFilmGrainCharacteristics(SEIFilmGrainCharacteristics& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFisheyeVideoInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFisheyeVideoInfo(SEIFisheyeVideoInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFramePacking	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFramePacking(SEIFramePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIGreenMetadataInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIGreenMetadataInfo(SEIGreenMetadataInfo& sei, UInt payloadSize, ostream* pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIKneeFunctionInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIKneeFunctionInfo(SEIKneeFunctionInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIMCTSExtractionInfoSet	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIMCTSExtractionInfoSet(SEIMCTSExtractionInfoSet& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIMasteringDisplayColourVolume	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIMasteringDisplayColourVolume(SEIMasteringDisplayColourVolume& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEINoDisplay	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEINoDisplay(SEINoDisplay& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIOmniViewport	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIOmniViewport(SEIOmniViewport& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPanScanRect	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPanScanRect(SEIPanScanRect& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPictureSnapshot	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPictureSnapshot(SEIPictureSnapshot& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPictureTiming	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPictureTiming(SEIPictureTiming& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPostFilterHint	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPostFilterHint(SEIPostFilterHint& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIProgressiveRefinementSegmentEnd	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIProgressiveRefinementSegmentEnd(SEIProgressiveRefinementSegmentEnd& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIProgressiveRefinementSegmentStart	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIProgressiveRefinementSegmentStart(SEIProgressiveRefinementSegmentStart& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRecoveryPoint	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRecoveryPoint(SEIRecoveryPoint& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionRefreshInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRegionRefreshInfo(SEIRegionRefreshInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionWisePacking	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRegionWisePacking(SEIRegionWisePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionalNesting	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRegionalNesting( SEIRegionalNesting& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEISOPDescription	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISOPDescription(SEISOPDescription &sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIScalableNesting	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIScalableNesting(SEIScalableNesting& sei, const NalUnitType nalUnitType, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISceneInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISceneInfo(SEISceneInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISegmentedRectFramePacking	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISegmentedRectFramePacking(SEISegmentedRectFramePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIShutterInterval	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIShutterInterval(SEIShutterIntervalInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISphereRotation	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISphereRotation(SEISphereRotation& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITempMotionConstraintsTileSets	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEITempMotionConstraintsTileSets(SEITempMotionConstrainedTileSets& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITemporalLevel0Index	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEITemporalLevel0Index(SEITemporalLevel0Index& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITimeCode	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEITimeCode(SEITimeCode& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIToneMappingInfo	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIToneMappingInfo(SEIToneMappingInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIUserDataRegistered	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIUserDataRegistered(SEIUserDataRegistered& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIUserDataUnregistered	TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIUserDataUnregistered(SEIUserDataUnregistered &sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseScalingList	TLibCommon/TComSlice.cpp	/^Bool TComScalingList::xParseScalingList(const std::string &fileName)$/;"	f	class:TComScalingList
xPatternRefinement	TLibEncoder/TEncSearch.cpp	/^Distortion TEncSearch::xPatternRefinement( TComPattern* pcPatternKey,$/;"	f	class:TEncSearch
xPatternSearch	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xPatternSearch( const TComPattern* const pcPatternKey,$/;"	f	class:TEncSearch
xPatternSearchFast	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xPatternSearchFast( const TComDataCU* const  pcCU,$/;"	f	class:TEncSearch
xPatternSearchFracDIF	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xPatternSearchFracDIF($/;"	f	class:TEncSearch
xPelFilterChroma	TLibCommon/TComLoopFilter.cpp	/^__inline Void TComLoopFilter::xPelFilterChroma( Pel* piSrc, Int iOffset, Int tc, Bool bPartPNoFilter, Bool bPartQNoFilter, const Int bitDepthChroma)$/;"	f	class:TComLoopFilter
xPelFilterLuma	TLibCommon/TComLoopFilter.cpp	/^__inline Void TComLoopFilter::xPelFilterLuma( Pel* piSrc, Int iOffset, Int tc, Bool sw, Bool bPartPNoFilter, Bool bPartQNoFilter, Int iThrCut, Bool bFilterSecondP, Bool bFilterSecondQ, const Int bitDepthLuma)$/;"	f	class:TComLoopFilter
xPreanalyze	TLibEncoder/TEncPreanalyzer.cpp	/^Void TEncPreanalyzer::xPreanalyze( TEncPic* pcEPic )$/;"	f	class:TEncPreanalyzer
xPredInterBi	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredInterBi ( TComDataCU* pcCU, UInt uiPartAddr, Int iWidth, Int iHeight, TComYuv* pcYuvPred )$/;"	f	class:TComPrediction
xPredInterBlk	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredInterBlk(const ComponentID compID, TComDataCU *cu, TComPicYuv *refPic, UInt partAddr, TComMv *mv, Int width, Int height, TComYuv *dstPic, Bool bi, const Int bitDepth )$/;"	f	class:TComPrediction
xPredInterUni	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredInterUni ( TComDataCU* pcCU, UInt uiPartAddr, Int iWidth, Int iHeight, RefPicList eRefPicList, TComYuv* pcYuvPred, Bool bi )$/;"	f	class:TComPrediction
xPredIntraAng	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredIntraAng(       Int bitDepth,$/;"	f	class:TComPrediction
xPredIntraPlanar	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredIntraPlanar( const Pel* pSrc, Int srcStride, Pel* rpDst, Int dstStride, UInt width, UInt height )$/;"	f	class:TComPrediction
xQuant	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xQuant(       TComTU       &rTu,$/;"	f	class:TComTrQuant
xRateDistOptQuant	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xRateDistOptQuant                 (       TComTU       &rTu,$/;"	f	class:TComTrQuant
xReadCode	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadCode (UInt uiLength, UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadCodeChk	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadCodeChk ( UInt   length, UInt& val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReadCoefRemainExGolomb	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadCoefRemainExGolomb ( UInt &rSymbol, UInt &rParam, const Bool useLimitedPrefixLength, const Int maxLog2TrDynamicRange, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadEpExGolomb	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadEpExGolomb( UInt& ruiSymbol, UInt uiCount, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadFlag	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadFlag (UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadFlagChk	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadFlagChk ( UInt&  val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReadPCMCode	TLibDecoder/TDecBinCoderCABAC.cpp	/^Void  TDecBinCABAC::xReadPCMCode(UInt uiLength, UInt& ruiCode)$/;"	f	class:TDecBinCABAC
xReadRbspTrailingBits	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadRbspTrailingBits()$/;"	f	class:SyntaxElementParser
xReadSCode	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSCode (UInt uiLength, Int& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadSCodeChk	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSCodeChk ( UInt   length, Int& val, const TChar *pSymbolName, const Int minValIncl, const Int maxValIncl )$/;"	f	class:SyntaxElementParser
xReadSEIPayloadData	TLibDecoder/SEIread.cpp	/^Void SEIReader::xReadSEIPayloadData(Int const payloadType, Int const payloadSize, SEI *&sei, const NalUnitType nalUnitType, const TComSPS *sps, $/;"	f	class:SEIReader
xReadSEImessage	TLibDecoder/SEIread.cpp	/^Void SEIReader::xReadSEImessage(SEIMessages& seis, const NalUnitType nalUnitType, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream, const vector<SEI::PayloadType>& allowedSeiTypes, std::string const &typeName)$/;"	f	class:SEIReader
xReadSvlc	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSvlc( Int& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadSvlcChk	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSvlcChk ( Int&   val, const TChar *pSymbolName, const Int  minValIncl, const Int  maxValIncl )$/;"	f	class:SyntaxElementParser
xReadUnaryMaxSymbol	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadUnaryMaxSymbol( UInt& ruiSymbol, ContextModel* pcSCModel, Int iOffset, UInt uiMaxSymbol, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadUnarySymbol	TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadUnarySymbol( UInt& ruiSymbol, ContextModel* pcSCModel, Int iOffset, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadUvlc	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadUvlc( UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadUvlcChk	TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadUvlcChk ( UInt&  val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReconInter	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xReconInter( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xReconIntraQT	TLibDecoder/TDecCu.cpp	/^TDecCu::xReconIntraQT( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xReconPCM	TLibDecoder/TDecCu.cpp	/^Void TDecCu::xReconPCM( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xRecurIntraChromaCodingQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xRecurIntraChromaCodingQT(TComYuv*    pcOrgYuv,$/;"	f	class:TEncSearch
xRecurIntraCodingLumaQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xRecurIntraCodingLumaQT(TComYuv*    pcOrgYuv,$/;"	f	class:TEncSearch
xRestrictBipredMergeCand	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xRestrictBipredMergeCand( TComDataCU* pcCU, UInt puIdx, TComMvField* mvFieldNeighbours, UChar* interDirNeighbours, Int numValidMergeCand )$/;"	f	class:TEncSearch
xRoundIbdi	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Double xRoundIbdi(Int bitDepth, Double x)$/;"	f
xRoundIbdi2	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Double xRoundIbdi2(Int bitDepth, Double x)$/;"	f
xScaleHistogram	TLibEncoder/WeightPredAnalysis.cpp	/^void xScaleHistogram(const std::vector<Int> &histogramInput,$/;"	f	file:
xSearchHistogram	TLibEncoder/WeightPredAnalysis.cpp	/^Distortion xSearchHistogram(const std::vector<Int> &histogramSource,$/;"	f	file:
xSelectWP	TLibEncoder/WeightPredAnalysis.cpp	/^Bool WeightPredAnalysis::xSelectWP(TComSlice *const slice, const Int log2Denom)$/;"	f	class:WeightPredAnalysis
xSelectWPHistExtClip	TLibEncoder/WeightPredAnalysis.cpp	/^Bool WeightPredAnalysis::xSelectWPHistExtClip(TComSlice *const slice, const Int log2Denom, const Bool bDoEnhancement, const Bool bClipInitialSADWP, const Bool bUseHistogram)$/;"	f	class:WeightPredAnalysis
xSetEdgefilterMultiple	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetEdgefilterMultiple( TComDataCU*    pcCU,$/;"	f	class:TComLoopFilter
xSetEdgefilterPU	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetEdgefilterPU( TComDataCU* pcCU, UInt uiAbsZorderIdx )$/;"	f	class:TComLoopFilter
xSetEdgefilterTU	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetEdgefilterTU(  TComTU &rTu )$/;"	f	class:TComLoopFilter
xSetInterResidualQTData	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xSetInterResidualQTData( TComYuv* pcResi, Bool bSpatial, TComTU &rTu ) \/\/ TODO: turn this into two functions for bSpatial=true and false.$/;"	f	class:TEncSearch
xSetIntraResultChromaQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xSetIntraResultChromaQT(TComYuv*    pcRecoYuv, TComTU &rTu)$/;"	f	class:TEncSearch
xSetIntraResultLumaQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xSetIntraResultLumaQT(TComYuv* pcRecoYuv, TComTU &rTu)$/;"	f	class:TEncSearch
xSetLoopfilterParam	TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetLoopfilterParam( TComDataCU* pcCU, UInt uiAbsZorderIdx )$/;"	f	class:TComLoopFilter
xSetScalingListDec	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xSetScalingListDec(const TComScalingList &scalingList, UInt listId, UInt sizeId, Int qp)$/;"	f	class:TComTrQuant
xSetScalingListEnc	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xSetScalingListEnc(TComScalingList *scalingList, UInt listId, UInt sizeId, Int qp)$/;"	f	class:TComTrQuant
xSetSearchRange	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xSetSearchRange ( const TComDataCU* const pcCU, const TComMv& cMvPred, const Int iSrchRng,$/;"	f	class:TEncSearch
xSolveEqua	TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCGOP::xSolveEqua(TEncRCSeq* encRCSeq, Double targetBpp, Double* equaCoeffA, Double* equaCoeffB, Int GOPSize)$/;"	f	class:TEncRCGOP
xStoreCrossComponentPredictionResult	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xStoreCrossComponentPredictionResult(       Pel    *pResiDst,$/;"	f	class:TEncSearch
xStoreIntraResultQT	TLibEncoder/TEncSearch.cpp	/^TEncSearch::xStoreIntraResultQT(const ComponentID compID, TComTU &rTu )$/;"	f	class:TEncSearch
xT	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xT( const Int channelBitDepth, Bool useDST, Pel* piBlkResi, UInt uiStride, TCoeff* psCoeff, Int iWidth, Int iHeight, const Int maxLog2TrDynamicRange )$/;"	f	class:TComTrQuant
xTZ2PointSearch	TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZ2PointSearch( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB )$/;"	f	class:TEncSearch
xTZ8PointDiamondSearch	TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZ8PointDiamondSearch( const TComPattern*const  pcPatternKey,$/;"	f	class:TEncSearch
xTZ8PointSquareSearch	TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZ8PointSquareSearch( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB, const Int iStartX, const Int iStartY, const Int iDist )$/;"	f	class:TEncSearch
xTZSearch	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xTZSearch( const TComDataCU* const pcCU,$/;"	f	class:TEncSearch
xTZSearchHelp	TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZSearchHelp( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const Int iSearchX, const Int iSearchY, const UChar ucPointNr, const UInt uiDistance )$/;"	f	class:TEncSearch
xTZSearchSelective	TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xTZSearchSelective( const TComDataCU* const   pcCU,$/;"	f	class:TEncSearch
xTr	TLibCommon/TComTrQuant.cpp	/^Void xTr(Int bitDepth, Pel *block, TCoeff *coeff, UInt uiStride, UInt uiTrSize, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xTrMxN	TLibCommon/TComTrQuant.cpp	/^Void xTrMxN(Int bitDepth, TCoeff *block, TCoeff *coeff, Int iWidth, Int iHeight, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xTraceAccessUnitDelimiter	TLibDecoder/SyntaxElementParser.cpp	/^Void  xTraceAccessUnitDelimiter ()$/;"	f
xTraceAccessUnitDelimiterEnc	TLibEncoder/TEncCavlc.cpp	/^Void  xTraceAccessUnitDelimiterEnc()$/;"	f
xTraceFillerData	TLibDecoder/SyntaxElementParser.cpp	/^Void xTraceFillerData ()$/;"	f
xTraceNalUnitHeader	TLibDecoder/NALread.cpp	/^void xTraceNalUnitHeader(InputNALUnit& nalu)$/;"	f
xTracePPSHeaderDec	TLibDecoder/TDecCAVLC.cpp	/^Void  xTracePPSHeaderDec()$/;"	f
xTracePPSHeaderEnc	TLibEncoder/TEncCavlc.cpp	/^Void  xTracePPSHeaderEnc()$/;"	f
xTraceSEIHeader	TLibDecoder/SEIread.cpp	/^Void  xTraceSEIHeader()$/;"	f
xTraceSEIHeader	TLibEncoder/SEIwrite.cpp	/^Void  xTraceSEIHeader()$/;"	f
xTraceSEIMessageType	TLibDecoder/SEIread.cpp	/^Void  xTraceSEIMessageType(SEI::PayloadType payloadType)$/;"	f
xTraceSEIMessageType	TLibEncoder/SEIwrite.cpp	/^Void  xTraceSEIMessageType(SEI::PayloadType payloadType)$/;"	f
xTraceSPSHeaderDec	TLibDecoder/TDecCAVLC.cpp	/^Void  xTraceSPSHeaderDec()$/;"	f
xTraceSPSHeaderEnc	TLibEncoder/TEncCavlc.cpp	/^Void  xTraceSPSHeaderEnc()$/;"	f
xTraceSliceHeaderDec	TLibDecoder/TDecCAVLC.cpp	/^Void  xTraceSliceHeaderDec()$/;"	f
xTraceSliceHeaderEnc	TLibEncoder/TEncCavlc.cpp	/^Void  xTraceSliceHeaderEnc()$/;"	f
xTraceVPSHeaderDec	TLibDecoder/TDecCAVLC.cpp	/^Void  xTraceVPSHeaderDec ()$/;"	f
xTraceVPSHeaderEnc	TLibEncoder/TEncCavlc.cpp	/^Void  xTraceVPSHeaderEnc()$/;"	f
xTransformSkip	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xTransformSkip( Pel* piBlkResi, UInt uiStride, TCoeff* psCoeff, TComTU &rTu, const ComponentID component )$/;"	f	class:TComTrQuant
xTuCollectARLStats	TLibEncoder/TEncCu.cpp	/^Int TEncCu::xTuCollectARLStats(TCoeff* rpcCoeff, TCoeff* rpcArlCoeff, Int NumCoeffInCU, Double* cSum, UInt* numSamples )$/;"	f	class:TEncCu
xUpdateCandList	TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xUpdateCandList( UInt uiMode, Double uiCost, UInt uiFastCandNum, UInt * CandModeList, Double * CandCostList )$/;"	f	class:TEncSearch
xUpdateDuData	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xUpdateDuData(AccessUnit &testAU, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xUpdateDuInfoSEI	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xUpdateDuInfoSEI(SEIMessages &duInfoSeiMessages, SEIPictureTiming *pictureTimingSEI)$/;"	f	class:TEncGOP
xUpdatePreviousTid0POC	TLibDecoder/TDecTop.h	/^  Void      xUpdatePreviousTid0POC( TComSlice *pSlice ) { if ((pSlice->getTLayer()==0) && (pSlice->isReferenceNalu() && (pSlice->getNalUnitType()!=NAL_UNIT_CODED_SLICE_RASL_R)&& (pSlice->getNalUnitType()!=NAL_UNIT_CODED_SLICE_RADL_R))) { m_prevTid0POC=pSlice->getPOC(); } }$/;"	f	class:TDecTop
xUpdateTimingSEI	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xUpdateTimingSEI(SEIPictureTiming *pictureTimingSEI, std::deque<DUData> &duData, const TComSPS *sps)$/;"	f	class:TEncGOP
xUpdatingWPParameters	TLibEncoder/WeightPredAnalysis.cpp	/^Bool WeightPredAnalysis::xUpdatingWPParameters(TComSlice *const slice, const Int log2Denom)$/;"	f	class:WeightPredAnalysis
xUseStrongFiltering	TLibCommon/TComLoopFilter.cpp	/^__inline Bool TComLoopFilter::xUseStrongFiltering( Int offset, Int d, Int beta, Int tc, Pel* piSrc)$/;"	f	class:TComLoopFilter
xWeightedAverage	TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xWeightedAverage( TComYuv* pcYuvSrc0, TComYuv* pcYuvSrc1, Int iRefIdx0, Int iRefIdx1, UInt uiPartIdx, Int iWidth, Int iHeight, TComYuv* pcYuvDst, const BitDepths &clipBitDepths )$/;"	f	class:TComPrediction
xWeightedPredictionBi	TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::xWeightedPredictionBi(       TComDataCU *const pcCU,$/;"	f	class:TComWeightPrediction
xWeightedPredictionUni	TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::xWeightedPredictionUni(       TComDataCU *const pcCU,$/;"	f	class:TComWeightPrediction
xWriteAccessUnitDelimiter	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteAccessUnitDelimiter (AccessUnit &accessUnit, TComSlice *slice)$/;"	f	class:TEncGOP
xWriteByteAlign	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteByteAlign()$/;"	f	class:SEIWriter
xWriteCode	TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteCode     ( UInt uiCode, UInt uiLength )$/;"	f	class:SyntaxElementWriter
xWriteCodeTr	TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteCodeTr (UInt value, UInt  length, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteCoefRemainExGolomb	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteCoefRemainExGolomb ( UInt symbol, UInt &rParam, const Bool useLimitedPrefixLength, const Int maxLog2TrDynamicRange )$/;"	f	class:TEncSbac
xWriteDuSEIMessages	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteDuSEIMessages (SEIMessages& duInfoSeiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xWriteEpExGolomb	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteEpExGolomb( UInt uiSymbol, UInt uiCount )$/;"	f	class:TEncSbac
xWriteFlag	TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteFlag( UInt uiCode )$/;"	f	class:SyntaxElementWriter
xWriteFlagTr	TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteFlagTr(UInt value, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteLeadingSEIMessages	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteLeadingSEIMessages (SEIMessages& seiMessages, SEIMessages& duInfoSeiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xWriteLeadingSEIOrdered	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteLeadingSEIOrdered (SEIMessages& seiMessages, SEIMessages& duInfoSeiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps, Bool testWrite)$/;"	f	class:TEncGOP
xWritePCMCode	TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::xWritePCMCode(UInt uiCode, UInt uiLength)$/;"	f	class:TEncBinCABAC
xWritePPS	TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWritePPS (AccessUnit &accessUnit, const TComPPS *pps)$/;"	f	class:TEncGOP
xWriteParameterSets	TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWriteParameterSets (AccessUnit &accessUnit, TComSlice *slice, const Bool bSeqFirst)$/;"	f	class:TEncGOP
xWriteRbspTrailingBits	TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteRbspTrailingBits()$/;"	f	class:SyntaxElementWriter
xWriteSCode	TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteSCode    ( Int iCode, UInt uiLength )$/;"	f	class:SyntaxElementWriter
xWriteSCodeTr	TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteSCodeTr (Int value, UInt  length, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteSEI	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteSEI (NalUnitType naluType, SEIMessages& seiMessages, AccessUnit &accessUnit, AccessUnit::iterator &auPos, Int temporalId, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteSEIActiveParameterSets	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIActiveParameterSets(const SEIActiveParameterSets& sei)$/;"	f	class:SEIWriter
xWriteSEIAlternativeTransferCharacteristics	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIAlternativeTransferCharacteristics(const SEIAlternativeTransferCharacteristics& sei)$/;"	f	class:SEIWriter
xWriteSEIAmbientViewingEnvironment	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIAmbientViewingEnvironment(const SEIAmbientViewingEnvironment& sei)$/;"	f	class:SEIWriter
xWriteSEIAnnotatedRegions	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIAnnotatedRegions(const SEIAnnotatedRegions &sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIBufferingPeriod	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIBufferingPeriod(const SEIBufferingPeriod& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIChromaResamplingFilterHint	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIChromaResamplingFilterHint(const SEIChromaResamplingFilterHint &sei)$/;"	f	class:SEIWriter
xWriteSEICodedRegionCompletion	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEICodedRegionCompletion(const SEICodedRegionCompletion& sei)$/;"	f	class:SEIWriter
xWriteSEIColourRemappingInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIColourRemappingInfo(const SEIColourRemappingInfo& sei)$/;"	f	class:SEIWriter
xWriteSEIContentColourVolume	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIContentColourVolume(const SEIContentColourVolume &sei)$/;"	f	class:SEIWriter
xWriteSEIContentLightLevelInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIContentLightLevelInfo(const SEIContentLightLevelInfo& sei)$/;"	f	class:SEIWriter
xWriteSEICubemapProjection	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEICubemapProjection(const SEICubemapProjection &sei)$/;"	f	class:SEIWriter
xWriteSEIDecodedPictureHash	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDecodedPictureHash(const SEIDecodedPictureHash& sei)$/;"	f	class:SEIWriter
xWriteSEIDecodingUnitInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDecodingUnitInfo(const SEIDecodingUnitInfo& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIDeinterlaceFieldIdentification	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDeinterlaceFieldIdentification(const SEIDeinterlaceFieldIdentification& sei)$/;"	f	class:SEIWriter
xWriteSEIDependentRAPIndication	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDependentRAPIndication(const SEIDependentRAPIndication& \/*sei*\/)$/;"	f	class:SEIWriter
xWriteSEIDisplayOrientation	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDisplayOrientation(const SEIDisplayOrientation &sei)$/;"	f	class:SEIWriter
xWriteSEIEquirectangularProjection	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIEquirectangularProjection(const SEIEquirectangularProjection &sei)$/;"	f	class:SEIWriter
xWriteSEIFillerPayload	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFillerPayload(const SEIFillerPayload &sei)$/;"	f	class:SEIWriter
xWriteSEIFilmGrainCharacteristics	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFilmGrainCharacteristics(const SEIFilmGrainCharacteristics &sei)$/;"	f	class:SEIWriter
xWriteSEIFisheyeVideoInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFisheyeVideoInfo(const SEIFisheyeVideoInfo &sei)$/;"	f	class:SEIWriter
xWriteSEIFramePacking	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFramePacking(const SEIFramePacking& sei)$/;"	f	class:SEIWriter
xWriteSEIGreenMetadataInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIGreenMetadataInfo(const SEIGreenMetadataInfo& sei)$/;"	f	class:SEIWriter
xWriteSEIKneeFunctionInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIKneeFunctionInfo(const SEIKneeFunctionInfo &sei)$/;"	f	class:SEIWriter
xWriteSEIMCTSExtractionInfoSet	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIMCTSExtractionInfoSet(const SEIMCTSExtractionInfoSet& sei)$/;"	f	class:SEIWriter
xWriteSEIMasteringDisplayColourVolume	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIMasteringDisplayColourVolume(const SEIMasteringDisplayColourVolume& sei)$/;"	f	class:SEIWriter
xWriteSEINoDisplay	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEINoDisplay(const SEINoDisplay& \/*sei*\/)$/;"	f	class:SEIWriter
xWriteSEIOmniViewport	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIOmniViewport(const SEIOmniViewport &sei)$/;"	f	class:SEIWriter
xWriteSEIPanScanRect	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPanScanRect(const SEIPanScanRect &sei)$/;"	f	class:SEIWriter
xWriteSEIPictureSnapshot	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPictureSnapshot(const SEIPictureSnapshot &sei)$/;"	f	class:SEIWriter
xWriteSEIPictureTiming	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPictureTiming(const SEIPictureTiming& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIPostFilterHint	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPostFilterHint(const SEIPostFilterHint& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIProgressiveRefinementSegmentEnd	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIProgressiveRefinementSegmentEnd(const SEIProgressiveRefinementSegmentEnd &sei)$/;"	f	class:SEIWriter
xWriteSEIProgressiveRefinementSegmentStart	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIProgressiveRefinementSegmentStart(const SEIProgressiveRefinementSegmentStart &sei)$/;"	f	class:SEIWriter
xWriteSEIRecoveryPoint	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRecoveryPoint(const SEIRecoveryPoint& sei)$/;"	f	class:SEIWriter
xWriteSEIRegionRefreshInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRegionRefreshInfo(const SEIRegionRefreshInfo &sei)$/;"	f	class:SEIWriter
xWriteSEIRegionWisePacking	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRegionWisePacking(const SEIRegionWisePacking &sei)$/;"	f	class:SEIWriter
xWriteSEIRegionalNesting	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRegionalNesting(TComBitIf& bs, const SEIRegionalNesting& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEISOPDescription	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISOPDescription(const SEISOPDescription& sei)$/;"	f	class:SEIWriter
xWriteSEIScalableNesting	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIScalableNesting(TComBitIf& bs, const SEIScalableNesting& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEISceneInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISceneInfo(const SEISceneInfo &sei)$/;"	f	class:SEIWriter
xWriteSEISegmentedRectFramePacking	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISegmentedRectFramePacking(const SEISegmentedRectFramePacking& sei)$/;"	f	class:SEIWriter
xWriteSEISeparately	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteSEISeparately (NalUnitType naluType, SEIMessages& seiMessages, AccessUnit &accessUnit, AccessUnit::iterator &auPos, Int temporalId, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteSEIShutterInterval	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIShutterInterval(const SEIShutterIntervalInfo &sei)$/;"	f	class:SEIWriter
xWriteSEISphereRotation	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISphereRotation(const SEISphereRotation &sei)$/;"	f	class:SEIWriter
xWriteSEITempMotionConstrainedTileSets	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEITempMotionConstrainedTileSets(const SEITempMotionConstrainedTileSets& sei)$/;"	f	class:SEIWriter
xWriteSEITemporalLevel0Index	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEITemporalLevel0Index(const SEITemporalLevel0Index &sei)$/;"	f	class:SEIWriter
xWriteSEITimeCode	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEITimeCode(const SEITimeCode& sei)$/;"	f	class:SEIWriter
xWriteSEIToneMappingInfo	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIToneMappingInfo(const SEIToneMappingInfo& sei)$/;"	f	class:SEIWriter
xWriteSEIUserDataRegistered	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIUserDataRegistered(const SEIUserDataRegistered &sei)$/;"	f	class:SEIWriter
xWriteSEIUserDataUnregistered	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIUserDataUnregistered(const SEIUserDataUnregistered &sei)$/;"	f	class:SEIWriter
xWriteSEImessage	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEImessage(TComBitIf& bs, const SEI *sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIpayloadData	TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIpayloadData(TComBitIf& bs, const SEI& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSPS	TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWriteSPS (AccessUnit &accessUnit, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteSvlc	TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteSvlc     ( Int iCode )$/;"	f	class:SyntaxElementWriter
xWriteSvlcTr	TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteSvlcTr (Int value, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteTrailingSEIMessages	TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteTrailingSEIMessages (SEIMessages& seiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteUnaryMaxSymbol	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteUnaryMaxSymbol( UInt uiSymbol, ContextModel* pcSCModel, Int iOffset, UInt uiMaxSymbol )$/;"	f	class:TEncSbac
xWriteUnarySymbol	TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteUnarySymbol( UInt uiSymbol, ContextModel* pcSCModel, Int iOffset )$/;"	f	class:TEncSbac
xWriteUvlc	TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteUvlc     ( UInt uiCode )$/;"	f	class:SyntaxElementWriter
xWriteUvlcTr	TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteUvlcTr (UInt value, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteVPS	TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWriteVPS (AccessUnit &accessUnit, const TComVPS *vps)$/;"	f	class:TEncGOP
xpsnr	TLibEncoder/TEncAnalyze.h	/^    Double xpsnr;$/;"	m	struct:TEncAnalyze::ResultData
xsetFlatScalingList	TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xsetFlatScalingList(UInt list, UInt size, Int qp)$/;"	f	class:TComTrQuant
y	TLibEncoder/TEncTemporalFilter.h	/^  Int x, y;$/;"	m	struct:MotionVector
y0	TLibCommon/TComRectangle.h	/^  UInt y0;$/;"	m	struct:TComRectangle
~AUDReader	TLibDecoder/SyntaxElementParser.h	/^  virtual ~AUDReader() {};$/;"	f	class:AUDReader
~AUDWriter	TLibEncoder/TEncCavlc.h	/^  virtual ~AUDWriter() {};$/;"	f	class:AUDWriter
~AccessUnit	TLibCommon/AccessUnit.h	/^  ~AccessUnit()$/;"	f	class:AccessUnit
~ContextModel	TLibCommon/ContextModel.h	/^  ~ContextModel ()                        {}$/;"	f	class:ContextModel
~ContextModel3DBuffer	TLibCommon/ContextModel3DBuffer.h	/^  ~ContextModel3DBuffer () {}$/;"	f	class:ContextModel3DBuffer
~ErrorReporter	Utilities/program_options_lite.h	/^      virtual ~ErrorReporter() {}$/;"	f	struct:df::program_options_lite::ErrorReporter
~FDReader	TLibDecoder/SyntaxElementParser.h	/^  virtual ~FDReader() {};$/;"	f	class:FDReader
~InputNALUnit	TLibDecoder/NALread.h	/^    virtual ~InputNALUnit() { }$/;"	f	class:InputNALUnit
~NALUnit	TLibCommon/NAL.h	/^  virtual ~NALUnit() { }$/;"	f	struct:NALUnit
~Names	Utilities/program_options_lite.h	/^        ~Names()$/;"	f	struct:df::program_options_lite::Options::Names
~OptionBase	Utilities/program_options_lite.h	/^      virtual ~OptionBase() {}$/;"	f	struct:df::program_options_lite::OptionBase
~OptionWriter	Utilities/program_options_lite.cpp	/^      virtual ~OptionWriter() {}$/;"	f	struct:df::program_options_lite::OptionWriter
~Options	Utilities/program_options_lite.cpp	/^    Options::~Options()$/;"	f	class:df::program_options_lite::Options
~ParameterSetManager	TLibCommon/TComSlice.cpp	/^ParameterSetManager::~ParameterSetManager()$/;"	f	class:ParameterSetManager
~ParameterSetMap	TLibCommon/TComSlice.h	/^  ~ParameterSetMap()$/;"	f	class:ParameterSetMap
~ParseFailure	Utilities/program_options_lite.h	/^      ~ParseFailure() throw() {};$/;"	f	struct:df::program_options_lite::ParseFailure
~RegionalSEI	TLibCommon/SEI.h	/^  ~RegionalSEI()$/;"	f	class:RegionalSEI
~SAOBlkParam	TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOBlkParam::~SAOBlkParam()$/;"	f	class:SAOBlkParam
~SAOOffset	TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOOffset::~SAOOffset()$/;"	f	class:SAOOffset
~SAOStatData	TLibEncoder/TEncSampleAdaptiveOffset.h	/^  ~SAOStatData(){}$/;"	f	struct:SAOStatData
~SEI	TLibCommon/SEI.h	/^  virtual ~SEI() {}$/;"	f	class:SEI
~SEIActiveParameterSets	TLibCommon/SEI.h	/^  virtual ~SEIActiveParameterSets() {}$/;"	f	class:SEIActiveParameterSets
~SEIAlternativeTransferCharacteristics	TLibCommon/SEI.h	/^  virtual ~SEIAlternativeTransferCharacteristics() {}$/;"	f	class:SEIAlternativeTransferCharacteristics
~SEIAmbientViewingEnvironment	TLibCommon/SEI.h	/^  virtual ~SEIAmbientViewingEnvironment() { }$/;"	f	class:SEIAmbientViewingEnvironment
~SEIAnnotatedRegions	TLibCommon/SEI.h	/^  virtual ~SEIAnnotatedRegions() {}$/;"	f	class:SEIAnnotatedRegions
~SEIBufferingPeriod	TLibCommon/SEI.h	/^  virtual ~SEIBufferingPeriod() {}$/;"	f	class:SEIBufferingPeriod
~SEIChromaResamplingFilterHint	TLibCommon/SEI.h	/^  virtual ~SEIChromaResamplingFilterHint() {}$/;"	f	class:SEIChromaResamplingFilterHint
~SEICodedRegionCompletion	TLibCommon/SEI.h	/^  virtual ~SEICodedRegionCompletion() { }$/;"	f	class:SEICodedRegionCompletion
~SEIColourRemappingInfo	TLibCommon/SEI.h	/^  ~SEIColourRemappingInfo() {}$/;"	f	class:SEIColourRemappingInfo
~SEIContentColourVolume	TLibCommon/SEI.h	/^  virtual ~SEIContentColourVolume() {}$/;"	f	class:SEIContentColourVolume
~SEIContentLightLevelInfo	TLibCommon/SEI.h	/^    virtual ~SEIContentLightLevelInfo() { }$/;"	f	class:SEIContentLightLevelInfo
~SEICubemapProjection	TLibCommon/SEI.h	/^  virtual ~SEICubemapProjection() {}$/;"	f	class:SEICubemapProjection
~SEIDecodedPictureHash	TLibCommon/SEI.h	/^  virtual ~SEIDecodedPictureHash() {}$/;"	f	class:SEIDecodedPictureHash
~SEIDecodingUnitInfo	TLibCommon/SEI.h	/^  virtual ~SEIDecodingUnitInfo() {}$/;"	f	class:SEIDecodingUnitInfo
~SEIDeinterlaceFieldIdentification	TLibCommon/SEI.h	/^    virtual ~SEIDeinterlaceFieldIdentification() {}$/;"	f	class:SEIDeinterlaceFieldIdentification
~SEIDependentRAPIndication	TLibCommon/SEI.h	/^  virtual ~SEIDependentRAPIndication() { }$/;"	f	class:SEIDependentRAPIndication
~SEIDisplayOrientation	TLibCommon/SEI.h	/^  virtual ~SEIDisplayOrientation() {}$/;"	f	class:SEIDisplayOrientation
~SEIEncoder	TLibEncoder/SEIEncoder.h	/^  virtual ~SEIEncoder(){};$/;"	f	class:SEIEncoder
~SEIEquirectangularProjection	TLibCommon/SEI.h	/^  virtual ~SEIEquirectangularProjection() {}$/;"	f	class:SEIEquirectangularProjection
~SEIFillerPayload	TLibCommon/SEI.h	/^  virtual ~SEIFillerPayload() {}$/;"	f	class:SEIFillerPayload
~SEIFilmGrainCharacteristics	TLibCommon/SEI.h	/^  virtual ~SEIFilmGrainCharacteristics() {}$/;"	f	class:SEIFilmGrainCharacteristics
~SEIFilmGrainSynthesizer	TLibCommon/SEIFilmGrainSynthesizer.cpp	/^SEIFilmGrainSynthesizer::~SEIFilmGrainSynthesizer()$/;"	f	class:SEIFilmGrainSynthesizer
~SEIFisheyeVideoInfo	TLibCommon/SEI.h	/^  virtual ~SEIFisheyeVideoInfo() {}$/;"	f	class:SEIFisheyeVideoInfo
~SEIFramePacking	TLibCommon/SEI.h	/^  virtual ~SEIFramePacking() {}$/;"	f	class:SEIFramePacking
~SEIGreenMetadataInfo	TLibCommon/SEI.h	/^    virtual ~SEIGreenMetadataInfo() {}$/;"	f	class:SEIGreenMetadataInfo
~SEIKneeFunctionInfo	TLibCommon/SEI.h	/^  virtual ~SEIKneeFunctionInfo() {}$/;"	f	class:SEIKneeFunctionInfo
~SEIMCTSExtractionInfoSet	TLibCommon/SEI.h	/^    virtual ~SEIMCTSExtractionInfoSet() { }$/;"	f	class:SEIMCTSExtractionInfoSet
~SEIMasteringDisplayColourVolume	TLibCommon/SEI.h	/^    virtual ~SEIMasteringDisplayColourVolume(){}$/;"	f	class:SEIMasteringDisplayColourVolume
~SEINoDisplay	TLibCommon/SEI.h	/^  virtual ~SEINoDisplay() {}$/;"	f	class:SEINoDisplay
~SEIOmniViewport	TLibCommon/SEI.h	/^  virtual ~SEIOmniViewport() {}$/;"	f	class:SEIOmniViewport
~SEIPanScanRect	TLibCommon/SEI.h	/^  virtual ~SEIPanScanRect() {}$/;"	f	class:SEIPanScanRect
~SEIPictureSnapshot	TLibCommon/SEI.h	/^  virtual ~SEIPictureSnapshot() {}$/;"	f	class:SEIPictureSnapshot
~SEIPictureTiming	TLibCommon/SEI.h	/^  virtual ~SEIPictureTiming()$/;"	f	class:SEIPictureTiming
~SEIPostFilterHint	TLibCommon/SEI.h	/^  virtual ~SEIPostFilterHint() {}$/;"	f	class:SEIPostFilterHint
~SEIProgressiveRefinementSegmentEnd	TLibCommon/SEI.h	/^  virtual ~SEIProgressiveRefinementSegmentEnd() {}$/;"	f	class:SEIProgressiveRefinementSegmentEnd
~SEIProgressiveRefinementSegmentStart	TLibCommon/SEI.h	/^  virtual ~SEIProgressiveRefinementSegmentStart() {}$/;"	f	class:SEIProgressiveRefinementSegmentStart
~SEIReader	TLibDecoder/SEIread.h	/^  virtual ~SEIReader() {};$/;"	f	class:SEIReader
~SEIRecoveryPoint	TLibCommon/SEI.h	/^  virtual ~SEIRecoveryPoint() {}$/;"	f	class:SEIRecoveryPoint
~SEIRegionRefreshInfo	TLibCommon/SEI.h	/^  virtual ~SEIRegionRefreshInfo() {}$/;"	f	class:SEIRegionRefreshInfo
~SEIRegionWisePacking	TLibCommon/SEI.h	/^  virtual ~SEIRegionWisePacking() {}$/;"	f	class:SEIRegionWisePacking
~SEIRegionalNesting	TLibCommon/SEI.cpp	/^SEIRegionalNesting::~SEIRegionalNesting()$/;"	f	class:SEIRegionalNesting
~SEISOPDescription	TLibCommon/SEI.h	/^  virtual ~SEISOPDescription() {}$/;"	f	class:SEISOPDescription
~SEIScalableNesting	TLibCommon/SEI.h	/^  virtual ~SEIScalableNesting()$/;"	f	class:SEIScalableNesting
~SEISceneInfo	TLibCommon/SEI.h	/^  virtual ~SEISceneInfo() {}$/;"	f	class:SEISceneInfo
~SEISegmentedRectFramePacking	TLibCommon/SEI.h	/^  virtual ~SEISegmentedRectFramePacking() {}$/;"	f	class:SEISegmentedRectFramePacking
~SEIShutterIntervalInfo	TLibCommon/SEI.h	/^  virtual ~SEIShutterIntervalInfo() {}$/;"	f	class:SEIShutterIntervalInfo
~SEISphereRotation	TLibCommon/SEI.h	/^  virtual ~SEISphereRotation() {}$/;"	f	class:SEISphereRotation
~SEITempMotionConstrainedTileSets	TLibCommon/SEI.h	/^  virtual ~SEITempMotionConstrainedTileSets() { }$/;"	f	class:SEITempMotionConstrainedTileSets
~SEITemporalLevel0Index	TLibCommon/SEI.h	/^  virtual ~SEITemporalLevel0Index() {}$/;"	f	class:SEITemporalLevel0Index
~SEITimeCode	TLibCommon/SEI.h	/^  virtual ~SEITimeCode(){}$/;"	f	class:SEITimeCode
~SEIToneMappingInfo	TLibCommon/SEI.h	/^  virtual ~SEIToneMappingInfo() {}$/;"	f	class:SEIToneMappingInfo
~SEIUserDataRegistered	TLibCommon/SEI.h	/^  virtual ~SEIUserDataRegistered() {}$/;"	f	class:SEIUserDataRegistered
~SEIUserDataUnregistered	TLibCommon/SEI.h	/^  virtual ~SEIUserDataUnregistered() { }$/;"	f	class:SEIUserDataUnregistered
~SEIWriter	TLibEncoder/SEIwrite.h	/^  virtual ~SEIWriter() {};$/;"	f	class:SEIWriter
~SyntaxElementParser	TLibDecoder/SyntaxElementParser.h	/^  virtual ~SyntaxElementParser() {};$/;"	f	class:SyntaxElementParser
~SyntaxElementWriter	TLibEncoder/SyntaxElementWriter.h	/^  virtual ~SyntaxElementWriter() {};$/;"	f	class:SyntaxElementWriter
~TComBitCounter	TLibCommon/TComBitCounter.h	/^  virtual ~TComBitCounter()   {}$/;"	f	class:TComBitCounter
~TComBitIf	TLibCommon/TComBitStream.h	/^  virtual ~TComBitIf() {}$/;"	f	class:TComBitIf
~TComCUMvField	TLibCommon/TComMotionInfo.h	/^  ~TComCUMvField() {}$/;"	f	class:TComCUMvField
~TComCodingStatistics	TLibCommon/TComCodingStatistics.h	/^    ~TComCodingStatistics()$/;"	f	class:TComCodingStatistics
~TComDataCU	TLibCommon/TComDataCU.cpp	/^TComDataCU::~TComDataCU()$/;"	f	class:TComDataCU
~TComHRD	TLibCommon/TComSlice.h	/^  virtual ~TComHRD() {}$/;"	f	class:TComHRD
~TComInputBitstream	TLibCommon/TComBitStream.h	/^  virtual ~TComInputBitstream() { }$/;"	f	class:TComInputBitstream
~TComInterpolationFilter	TLibCommon/TComInterpolationFilter.h	/^  ~TComInterpolationFilter() {}$/;"	f	class:TComInterpolationFilter
~TComLoopFilter	TLibCommon/TComLoopFilter.cpp	/^TComLoopFilter::~TComLoopFilter()$/;"	f	class:TComLoopFilter
~TComOutputBitstream	TLibCommon/TComBitStream.cpp	/^TComOutputBitstream::~TComOutputBitstream()$/;"	f	class:TComOutputBitstream
~TComPPS	TLibCommon/TComSlice.cpp	/^TComPPS::~TComPPS()$/;"	f	class:TComPPS
~TComPic	TLibCommon/TComPic.cpp	/^TComPic::~TComPic()$/;"	f	class:TComPic
~TComPicSym	TLibCommon/TComPicSym.cpp	/^TComPicSym::~TComPicSym()$/;"	f	class:TComPicSym
~TComPicYuv	TLibCommon/TComPicYuv.cpp	/^TComPicYuv::~TComPicYuv()$/;"	f	class:TComPicYuv
~TComPrediction	TLibCommon/TComPrediction.cpp	/^TComPrediction::~TComPrediction()$/;"	f	class:TComPrediction
~TComRPSList	TLibCommon/TComSlice.h	/^  virtual                        ~TComRPSList()                                           { }$/;"	f	class:TComRPSList
~TComRdCost	TLibCommon/TComRdCost.cpp	/^TComRdCost::~TComRdCost()$/;"	f	class:TComRdCost
~TComRefPicListModification	TLibCommon/TComSlice.cpp	/^TComRefPicListModification::~TComRefPicListModification()$/;"	f	class:TComRefPicListModification
~TComReferencePictureSet	TLibCommon/TComSlice.cpp	/^TComReferencePictureSet::~TComReferencePictureSet()$/;"	f	class:TComReferencePictureSet
~TComSPS	TLibCommon/TComSlice.cpp	/^TComSPS::~TComSPS()$/;"	f	class:TComSPS
~TComSampleAdaptiveOffset	TLibCommon/TComSampleAdaptiveOffset.cpp	/^TComSampleAdaptiveOffset::~TComSampleAdaptiveOffset()$/;"	f	class:TComSampleAdaptiveOffset
~TComScalingList	TLibCommon/TComSlice.h	/^  virtual    ~TComScalingList()                                                 { }$/;"	f	class:TComScalingList
~TComSlice	TLibCommon/TComSlice.cpp	/^TComSlice::~TComSlice()$/;"	f	class:TComSlice
~TComTile	TLibCommon/TComPicSym.cpp	/^TComTile::~TComTile()$/;"	f	class:TComTile
~TComTrQuant	TLibCommon/TComTrQuant.cpp	/^TComTrQuant::~TComTrQuant()$/;"	f	class:TComTrQuant
~TComVPS	TLibCommon/TComSlice.cpp	/^TComVPS::~TComVPS()$/;"	f	class:TComVPS
~TComVUI	TLibCommon/TComSlice.h	/^  virtual           ~TComVUI() {}$/;"	f	class:TComVUI
~TComYuv	TLibCommon/TComYuv.cpp	/^TComYuv::~TComYuv()$/;"	f	class:TComYuv
~TDecBinCABAC	TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::~TDecBinCABAC()$/;"	f	class:TDecBinCABAC
~TDecBinIf	TLibDecoder/TDecBinCoder.h	/^  virtual ~TDecBinIf() {}$/;"	f	class:TDecBinIf
~TDecCavlc	TLibDecoder/TDecCAVLC.cpp	/^TDecCavlc::~TDecCavlc()$/;"	f	class:TDecCavlc
~TDecCu	TLibDecoder/TDecCu.cpp	/^TDecCu::~TDecCu()$/;"	f	class:TDecCu
~TDecEntropyIf	TLibDecoder/TDecEntropy.h	/^  virtual ~TDecEntropyIf() {}$/;"	f	class:TDecEntropyIf
~TDecGop	TLibDecoder/TDecGop.cpp	/^TDecGop::~TDecGop()$/;"	f	class:TDecGop
~TDecSbac	TLibDecoder/TDecSbac.cpp	/^TDecSbac::~TDecSbac()$/;"	f	class:TDecSbac
~TDecSlice	TLibDecoder/TDecSlice.cpp	/^TDecSlice::~TDecSlice()$/;"	f	class:TDecSlice
~TDecTop	TLibDecoder/TDecTop.cpp	/^TDecTop::~TDecTop()$/;"	f	class:TDecTop
~TEncAnalyze	TLibEncoder/TEncAnalyze.h	/^  virtual ~TEncAnalyze()  {}$/;"	f	class:TEncAnalyze
~TEncBinCABAC	TLibEncoder/TEncBinCoderCABAC.cpp	/^TEncBinCABAC::~TEncBinCABAC()$/;"	f	class:TEncBinCABAC
~TEncBinCABACCounter	TLibEncoder/TEncBinCoderCABACCounter.cpp	/^TEncBinCABACCounter::~TEncBinCABACCounter()$/;"	f	class:TEncBinCABACCounter
~TEncBinIf	TLibEncoder/TEncBinCoder.h	/^  virtual ~TEncBinIf() {}$/;"	f	class:TEncBinIf
~TEncCavlc	TLibEncoder/TEncCavlc.cpp	/^TEncCavlc::~TEncCavlc()$/;"	f	class:TEncCavlc
~TEncCfg	TLibEncoder/TEncCfg.h	/^  virtual ~TEncCfg()$/;"	f	class:TEncCfg
~TEncEntropyIf	TLibEncoder/TEncEntropy.h	/^  virtual ~TEncEntropyIf() {}$/;"	f	class:TEncEntropyIf
~TEncGOP	TLibEncoder/TEncGOP.cpp	/^TEncGOP::~TEncGOP()$/;"	f	class:TEncGOP
~TEncPic	TLibEncoder/TEncPic.cpp	/^TEncPic::~TEncPic()$/;"	f	class:TEncPic
~TEncPicQPAdaptationLayer	TLibEncoder/TEncPic.cpp	/^TEncPicQPAdaptationLayer::~TEncPicQPAdaptationLayer()$/;"	f	class:TEncPicQPAdaptationLayer
~TEncPreanalyzer	TLibEncoder/TEncPreanalyzer.cpp	/^TEncPreanalyzer::~TEncPreanalyzer()$/;"	f	class:TEncPreanalyzer
~TEncQPAdaptationUnit	TLibEncoder/TEncPic.cpp	/^TEncQPAdaptationUnit::~TEncQPAdaptationUnit()$/;"	f	class:TEncQPAdaptationUnit
~TEncRCGOP	TLibEncoder/TEncRateCtrl.cpp	/^TEncRCGOP::~TEncRCGOP()$/;"	f	class:TEncRCGOP
~TEncRCPic	TLibEncoder/TEncRateCtrl.cpp	/^TEncRCPic::~TEncRCPic()$/;"	f	class:TEncRCPic
~TEncRCSeq	TLibEncoder/TEncRateCtrl.cpp	/^TEncRCSeq::~TEncRCSeq()$/;"	f	class:TEncRCSeq
~TEncRateCtrl	TLibEncoder/TEncRateCtrl.cpp	/^TEncRateCtrl::~TEncRateCtrl()$/;"	f	class:TEncRateCtrl
~TEncSampleAdaptiveOffset	TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^TEncSampleAdaptiveOffset::~TEncSampleAdaptiveOffset()$/;"	f	class:TEncSampleAdaptiveOffset
~TEncSbac	TLibEncoder/TEncSbac.cpp	/^TEncSbac::~TEncSbac()$/;"	f	class:TEncSbac
~TEncSearch	TLibEncoder/TEncSearch.cpp	/^TEncSearch::~TEncSearch()$/;"	f	class:TEncSearch
~TEncSlice	TLibEncoder/TEncSlice.cpp	/^TEncSlice::~TEncSlice()$/;"	f	class:TEncSlice
~TEncTemporalFilter	TLibEncoder/TEncTemporalFilter.h	/^  ~TEncTemporalFilter() {}$/;"	f	class:TEncTemporalFilter
~TEncTop	TLibEncoder/TEncTop.cpp	/^TEncTop::~TEncTop()$/;"	f	class:TEncTop
~TVideoIOYuv	Utilities/TVideoIOYuv.h	/^  virtual ~TVideoIOYuv()  {}$/;"	f	class:TVideoIOYuv

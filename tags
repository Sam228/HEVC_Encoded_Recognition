!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACCESS_UNIT_DELIMITER	source/App/Parcat/parcat.cpp	/^  ACCESS_UNIT_DELIMITER,   \/\/ 35$/;"	e	enum:NalUnitType	file:
ACTIVE_PARAMETER_SETS	source/Lib/TLibCommon/SEI.h	/^    ACTIVE_PARAMETER_SETS                = 129,$/;"	e	enum:SEI::PayloadType
ADAPTIVE_QP_SELECTION	source/Lib/TLibCommon/TypeDef.h	108;"	d
ADAPT_SR_SCALE	source/Lib/TLibCommon/CommonDef.h	/^static const Int ADAPT_SR_SCALE =                                   1; \/\/\/< division factor for adaptive search range$/;"	v
ALPHA	source/Lib/TLibEncoder/TEncRateCtrl.h	78;"	d
ALTERNATIVE_TRANSFER_CHARACTERISTICS	source/Lib/TLibCommon/SEI.h	/^    ALTERNATIVE_TRANSFER_CHARACTERISTICS = 147,$/;"	e	enum:SEI::PayloadType
AMBIENT_VIEWING_ENVIRONMENT	source/Lib/TLibCommon/SEI.h	/^    AMBIENT_VIEWING_ENVIRONMENT          = 148, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
AMP_ENC_SPEEDUP	source/Lib/TLibCommon/TypeDef.h	110;"	d
AMP_MRG	source/Lib/TLibCommon/TypeDef.h	112;"	d
AMVPInfo	source/Lib/TLibCommon/TComMotionInfo.h	/^} AMVPInfo;$/;"	t	typeref:struct:_AMVPInfo
AMVP_DECIMATION_FACTOR	source/Lib/TLibCommon/CommonDef.h	/^static const Int AMVP_DECIMATION_FACTOR =                           4;$/;"	v
AMVP_MAX_NUM_CANDS	source/Lib/TLibCommon/CommonDef.h	/^static const Int AMVP_MAX_NUM_CANDS =                               2; \/\/\/< AMVP: advanced motion vector prediction - max number of final candidates$/;"	v
ANNOTATED_REGIONS	source/Lib/TLibCommon/SEI.h	/^    ANNOTATED_REGIONS                    = 202,$/;"	e	enum:SEI::PayloadType
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	450;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	456;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	459;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	463;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	465;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	471;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	474;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	477;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	482;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	485;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	488;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	493;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	499;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	502;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	505;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	508;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	511;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	514;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	517;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	520;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	525;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	528;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	534;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	537;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	540;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	543;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	435;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	441;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	444;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	448;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	450;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	452;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	456;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	459;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	462;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	470;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	473;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	481;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	484;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	487;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	490;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	493;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	496;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	499;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	502;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	505;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	510;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	513;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	516;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	519;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	522;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	525;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	528;"	d	file:
ARL_C_PRECISION	source/Lib/TLibCommon/CommonDef.h	/^static const Int ARL_C_PRECISION =                                  7; \/\/\/< G382: 7-bit arithmetic precision$/;"	v
AUDReader	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  AUDReader() {};$/;"	f	class:AUDReader
AUDReader	source/Lib/TLibDecoder/SyntaxElementParser.h	/^class AUDReader: public SyntaxElementParser$/;"	c
AUDWriter	source/Lib/TLibEncoder/TEncCavlc.h	/^  AUDWriter() {};$/;"	f	class:AUDWriter
AUDWriter	source/Lib/TLibEncoder/TEncCavlc.h	/^class AUDWriter : public SyntaxElementWriter$/;"	c
AccessUnit	source/Lib/TLibCommon/AccessUnit.h	/^class AccessUnit : public std::list<NALUnitEBSP*> \/\/ NOTE: Should not inherit from STL.$/;"	c
ActiveAreaInfo	source/Lib/TLibCommon/TypeDef.h	/^  struct ActiveAreaInfo$/;"	s	struct:TComSEIFisheyeVideoInfo
AnnexBStats	source/Lib/TLibDecoder/AnnexBread.h	/^struct AnnexBStats$/;"	s
AnnotatedRegionHeader	source/Lib/TLibCommon/SEI.h	/^    AnnotatedRegionHeader() : m_cancelFlag(true), m_receivedSettingsOnce(false) { }$/;"	f	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
AnnotatedRegionHeader	source/Lib/TLibCommon/SEI.h	/^  struct AnnotatedRegionHeader$/;"	s	class:SEIAnnotatedRegions
AnnotatedRegionLabel	source/Lib/TLibCommon/SEI.h	/^    AnnotatedRegionLabel() : labelValid(false) { }$/;"	f	struct:SEIAnnotatedRegions::AnnotatedRegionLabel
AnnotatedRegionLabel	source/Lib/TLibCommon/SEI.h	/^  struct AnnotatedRegionLabel$/;"	s	class:SEIAnnotatedRegions
AnnotatedRegionLabelIndex	source/Lib/TLibCommon/SEI.h	/^  typedef UInt AnnotatedRegionLabelIndex;$/;"	t	class:SEIAnnotatedRegions
AnnotatedRegionObject	source/Lib/TLibCommon/SEI.h	/^    AnnotatedRegionObject() :$/;"	f	struct:SEIAnnotatedRegions::AnnotatedRegionObject
AnnotatedRegionObject	source/Lib/TLibCommon/SEI.h	/^  struct AnnotatedRegionObject$/;"	s	class:SEIAnnotatedRegions
AnnotatedRegionObjectIndex	source/Lib/TLibCommon/SEI.h	/^  typedef UInt AnnotatedRegionObjectIndex;$/;"	t	class:SEIAnnotatedRegions
ArgvParser	source/Lib/Utilities/program_options_lite.cpp	/^      ArgvParser(Options& rOpts, ErrorReporter& rError_reporter)$/;"	f	struct:df::program_options_lite::ArgvParser
ArgvParser	source/Lib/Utilities/program_options_lite.cpp	/^    struct ArgvParser : public OptionWriter$/;"	s	namespace:df::program_options_lite	file:
Array2D	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Array2D() : m_width(0), m_height(0), v() { }$/;"	f	struct:Array2D
Array2D	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Array2D(UInt width, UInt height, const T& value=T()) : m_width(0), m_height(0), v() { allocate(width, height, value); }$/;"	f	struct:Array2D
Array2D	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^struct Array2D$/;"	s
BETA1	source/Lib/TLibEncoder/TEncRateCtrl.h	79;"	d
BETA2	source/Lib/TLibEncoder/TEncRateCtrl.h	80;"	d
BIBTOOL	doc/Makefile	/^BIBTOOL:=$(shell which bibtool || echo \\\\\\# skipping bibtool )$/;"	m
BIBTOOL_DB	doc/Makefile	/^BIBTOOL_DB=~\/mpeg\/doc\/bib\/jctvc.bib$/;"	m
BIT0	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	104;"	d
BIT_DEPTH_8	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	70;"	d
BIT_DEPTH_8	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	91;"	d
BLA_N_LP	source/App/Parcat/parcat.cpp	/^  BLA_N_LP,    \/\/ 18$/;"	e	enum:NalUnitType	file:
BLA_W_LP	source/App/Parcat/parcat.cpp	/^  BLA_W_LP,    \/\/ 16$/;"	e	enum:NalUnitType	file:
BLA_W_RADL	source/App/Parcat/parcat.cpp	/^  BLA_W_RADL,  \/\/ 17$/;"	e	enum:NalUnitType	file:
BLENDING_MODE_VALUE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	56;"	d
BLK_16	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	73;"	d
BLK_16	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	94;"	d
BLK_8	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	72;"	d
BLK_8	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	93;"	d
BSLICE_CHROMA_ABS_CONTEXT	source/Lib/TLibCommon/ContextTables.h	410;"	d
BSLICE_CHROMA_CBF_CONTEXT	source/Lib/TLibCommon/ContextTables.h	301;"	d
BSLICE_CHROMA_LAST_POSITION_CONTEXT	source/Lib/TLibCommon/ContextTables.h	335;"	d
BSLICE_CHROMA_ONE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	406;"	d
BSLICE_CHROMA_SIGNIFICANCE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	377;"	d
BSLICE_LUMA_ABS_CONTEXT	source/Lib/TLibCommon/ContextTables.h	401;"	d
BSLICE_LUMA_CBF_CONTEXT	source/Lib/TLibCommon/ContextTables.h	297;"	d
BSLICE_LUMA_LAST_POSITION_CONTEXT	source/Lib/TLibCommon/ContextTables.h	331;"	d
BSLICE_LUMA_ONE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	397;"	d
BSLICE_LUMA_SIGNIFICANCE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	372;"	d
BUFFERING_PERIOD	source/Lib/TLibCommon/SEI.h	/^    BUFFERING_PERIOD                     = 0,$/;"	e	enum:SEI::PayloadType
BUILD_CMD	Makefile	/^    BUILD_CMD := $(PYTHON_LAUNCHER) $(BUILD_SCRIPT)$/;"	m
BUILD_CMD	Makefile	/^  BUILD_CMD := $(BUILD_SCRIPT)$/;"	m
BUILD_OPTIONS	Makefile	/^BUILD_OPTIONS := $(CONFIG_OPTIONS) -b$/;"	m
BUILD_SCRIPT	Makefile	/^BUILD_SCRIPT := $(CURDIR)\/cmake\/CMakeBuild\/bin\/cmake.py$/;"	m
B_SLICE	source/Lib/TLibCommon/TypeDef.h	/^  B_SLICE               = 0,$/;"	e	enum:SliceType
BaseError	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^class BaseError(Exception):$/;"	c
BaseError	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^from pyhhi.build.common.error import BaseError$/;"	i
BitDepths	source/Lib/TLibCommon/TypeDef.h	/^struct BitDepths$/;"	s
Bool	source/Lib/TLibCommon/TypeDef.h	/^typedef       bool                Bool;$/;"	t
BuildScriptInstaller	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^from pyhhi.build.common.bldtools import BuildScriptInstaller$/;"	i
BuildScriptInstaller	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^class BuildScriptInstaller(object):$/;"	c
C1FLAG_NUMBER	source/Lib/TLibCommon/CommonDef.h	/^static const Int C1FLAG_NUMBER =                                    8; \/\/ maximum number of largerThan1 flag coded in one chunk:  16 in HM5$/;"	v
C2FLAG_NUMBER	source/Lib/TLibCommon/CommonDef.h	/^static const Int C2FLAG_NUMBER =                                    1; \/\/ maximum number of largerThan2 flag coded in one chunk:  16 in HM5$/;"	v
CABAC_INIT_PRESENT_FLAG	source/Lib/TLibCommon/CommonDef.h	/^static const Int CABAC_INIT_PRESENT_FLAG =                          1;$/;"	v
CBFContextStartTable	source/Lib/TLibCommon/TComChromaFormat.h	/^static const UInt CBFContextStartTable            [MAX_NUM_CHANNEL_TYPE] = {FIRST_CBF_CTX_LUMA,      FIRST_CBF_CTX_CHROMA     };$/;"	v
CHANNEL_TYPE_CHROMA	source/Lib/TLibCommon/TypeDef.h	/^  CHANNEL_TYPE_CHROMA  = 1,$/;"	e	enum:ChannelType
CHANNEL_TYPE_LUMA	source/Lib/TLibCommon/TypeDef.h	/^  CHANNEL_TYPE_LUMA    = 0,$/;"	e	enum:ChannelType
CHROMA_400	source/Lib/TLibCommon/TypeDef.h	/^  CHROMA_400        = 0,$/;"	e	enum:ChromaFormat
CHROMA_420	source/Lib/TLibCommon/TypeDef.h	/^  CHROMA_420        = 1,$/;"	e	enum:ChromaFormat
CHROMA_422	source/Lib/TLibCommon/TypeDef.h	/^  CHROMA_422        = 2,$/;"	e	enum:ChromaFormat
CHROMA_444	source/Lib/TLibCommon/TypeDef.h	/^  CHROMA_444        = 3,$/;"	e	enum:ChromaFormat
CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS	source/Lib/TLibCommon/CommonDef.h	/^static const Int CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS = 8;$/;"	v
CHROMA_RESAMPLING_FILTER_HINT	source/Lib/TLibCommon/SEI.h	/^    CHROMA_RESAMPLING_FILTER_HINT        = 140,$/;"	e	enum:SEI::PayloadType
CI_CHROMA_INTRA	source/Lib/TLibCommon/TypeDef.h	/^  CI_CHROMA_INTRA,      \/\/\/< chroma intra index$/;"	e	enum:CI_IDX
CI_CURR_BEST	source/Lib/TLibCommon/TypeDef.h	/^  CI_CURR_BEST = 0,     \/\/\/< best mode index$/;"	e	enum:CI_IDX
CI_IDX	source/Lib/TLibCommon/TypeDef.h	/^enum CI_IDX$/;"	g
CI_NEXT_BEST	source/Lib/TLibCommon/TypeDef.h	/^  CI_NEXT_BEST,         \/\/\/< next best index$/;"	e	enum:CI_IDX
CI_NUM	source/Lib/TLibCommon/TypeDef.h	/^  CI_NUM,               \/\/\/< total number$/;"	e	enum:CI_IDX
CI_QT_TRAFO_ROOT	source/Lib/TLibCommon/TypeDef.h	/^  CI_QT_TRAFO_ROOT,$/;"	e	enum:CI_IDX
CI_QT_TRAFO_TEST	source/Lib/TLibCommon/TypeDef.h	/^  CI_QT_TRAFO_TEST,$/;"	e	enum:CI_IDX
CI_TEMP_BEST	source/Lib/TLibCommon/TypeDef.h	/^  CI_TEMP_BEST,         \/\/\/< temporal index$/;"	e	enum:CI_IDX
CLIP3	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	100;"	d
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/App/Parcat/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/App/SEIRemovalApp/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/App/TAppDecoder/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/App/TAppDecoderAnalyser/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/App/TAppEncoder/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/App/TAppMCTSExtractor/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/Lib/TLibCommon/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/Lib/TLibCommonAnalyser/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/Lib/TLibDecoder/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/Lib/TLibDecoderAnalyser/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/Lib/TLibEncoder/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BINARY_DIR	build/source/Lib/Utilities/Makefile	/^CMAKE_BINARY_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM\/build$/;"	m
CMAKE_BUILD_VERSION_STR	cmake/CMakeBuild/bin/pyhhi/build/common/cmbldver.py	/^CMAKE_BUILD_VERSION_STR = "3.14.4.4"$/;"	v
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/App/Parcat/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/App/SEIRemovalApp/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/App/TAppDecoder/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/App/TAppDecoderAnalyser/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/App/TAppEncoder/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/App/TAppMCTSExtractor/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/Lib/TLibCommon/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/Lib/TLibCommonAnalyser/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/Lib/TLibDecoder/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/Lib/TLibDecoderAnalyser/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/Lib/TLibEncoder/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_COMMAND	build/source/Lib/Utilities/Makefile	/^CMAKE_COMMAND = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/App/Parcat/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/App/SEIRemovalApp/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/App/TAppDecoder/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/App/TAppDecoderAnalyser/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/App/TAppEncoder/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/App/TAppMCTSExtractor/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/Lib/TLibCommon/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/Lib/TLibCommonAnalyser/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/Lib/TLibDecoder/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/Lib/TLibDecoderAnalyser/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/Lib/TLibEncoder/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMAKE_SOURCE_DIR	build/source/Lib/Utilities/Makefile	/^CMAKE_SOURCE_DIR = \/home\/mdl\/amk7371\/video_analytics\/HM$/;"	m
CMakeBuildTreeInfo	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^class CMakeBuildTreeInfo(object):$/;"	c
CMakeBuildUpdateApp	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^class CMakeBuildUpdateApp(object):$/;"	c
CMakeBuildUpdateAppParams	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^class CMakeBuildUpdateAppParams(object):$/;"	c
CMakeCompilerInfo	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^class CMakeCompilerInfo(object):$/;"	c
CMakeDocUtilApp	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^class CMakeDocUtilApp(object):$/;"	c
CMakeFinder	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^class CMakeFinder(object):$/;"	c
CMakeFinder	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^from pyhhi.build.cmkfnd import CMakeFinder$/;"	i
CMakeLauncher	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^class CMakeLauncher(object):$/;"	c
CMakeLauncherApp	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^class CMakeLauncherApp(object):$/;"	c
CMakeLauncherParams	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^class CMakeLauncherParams(object):$/;"	c
CMakeManualRstUtil	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^class CMakeManualRstUtil(object):$/;"	c
CMakeRstUtilParams	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^class CMakeRstUtilParams(object):$/;"	c
CNU	source/Lib/TLibCommon/ContextTables.h	163;"	d
CODED_REGION_COMPLETION	source/Lib/TLibCommon/SEI.h	/^    CODED_REGION_COMPLETION              = 146, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
CODING_STATS_NUM_SUBCLASSES	source/Lib/TLibCommon/TComCodingStatistics.h	/^static const UInt CODING_STATS_NUM_SUBCLASSES=CODING_STATS_NUM_WIDTHS*(1+MAX_NUM_COMPONENT+MAX_NUM_CHANNEL_TYPE);$/;"	v
CODING_STATS_NUM_WIDTHS	source/Lib/TLibCommon/TComCodingStatistics.h	/^static const UInt CODING_STATS_NUM_WIDTHS=7;$/;"	v
COEFF_SCAN_GROUP_TYPE	source/Lib/TLibCommon/TypeDef.h	/^enum COEFF_SCAN_GROUP_TYPE$/;"	g
COEFF_SCAN_TYPE	source/Lib/TLibCommon/TypeDef.h	/^enum COEFF_SCAN_TYPE$/;"	g
COEF_REMAIN_BIN_REDUCTION	source/Lib/TLibCommon/CommonDef.h	/^static const Int COEF_REMAIN_BIN_REDUCTION =                        3; \/\/\/< indicates the level at which the VLC transitions from Golomb-Rice to TU+EG(k)$/;"	v
COLOUR_OFFSET_CB	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	77;"	d
COLOUR_OFFSET_CB	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	98;"	d
COLOUR_OFFSET_CR	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	76;"	d
COLOUR_OFFSET_CR	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	97;"	d
COLOUR_OFFSET_LUMA	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	75;"	d
COLOUR_OFFSET_LUMA	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	96;"	d
COLOUR_REMAPPING_INFO	source/Lib/TLibCommon/SEI.h	/^    COLOUR_REMAPPING_INFO                = 142,$/;"	e	enum:SEI::PayloadType
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	151;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	164;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	229;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	243;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	271;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	280;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	294;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	151;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	171;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	269;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	296;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	299;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	285;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	290;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	102;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	244;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	274;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	102;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	177;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	239;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	272;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	72;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	87;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	286;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	28;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	225;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	289;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	30;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	32;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	60;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	81;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	219;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	36;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	36;"	d	file:
COMPONENT_Cb	source/Lib/TLibCommon/TypeDef.h	/^  COMPONENT_Cb      = 1,$/;"	e	enum:ComponentID
COMPONENT_Cr	source/Lib/TLibCommon/TypeDef.h	/^  COMPONENT_Cr      = 2,$/;"	e	enum:ComponentID
COMPONENT_Y	source/Lib/TLibCommon/TypeDef.h	/^  COMPONENT_Y       = 0,$/;"	e	enum:ComponentID
CONTENT_COLOUR_VOLUME	source/Lib/TLibCommon/SEI.h	/^    CONTENT_COLOUR_VOLUME                = 149, $/;"	e	enum:SEI::PayloadType
CONTENT_LIGHT_LEVEL_INFO	source/Lib/TLibCommon/SEI.h	/^    CONTENT_LIGHT_LEVEL_INFO             = 144, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
CONTEXT_NUMBER_OF_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  CONTEXT_NUMBER_OF_TYPES = 4$/;"	e	enum:SignificanceMapContextType
CONTEXT_STATE_BITS	source/Lib/TLibCommon/CommonDef.h	/^static const Int CONTEXT_STATE_BITS =                              6 ;$/;"	v
CONTEXT_TYPE_4x4	source/Lib/TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_4x4    = 0,$/;"	e	enum:SignificanceMapContextType
CONTEXT_TYPE_8x8	source/Lib/TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_8x8    = 1,$/;"	e	enum:SignificanceMapContextType
CONTEXT_TYPE_NxN	source/Lib/TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_NxN    = 2,$/;"	e	enum:SignificanceMapContextType
CONTEXT_TYPE_SINGLE	source/Lib/TLibCommon/TypeDef.h	/^  CONTEXT_TYPE_SINGLE = 3,$/;"	e	enum:SignificanceMapContextType
COST_LOSSLESS_CODING	source/Lib/TLibCommon/TypeDef.h	/^  COST_LOSSLESS_CODING             = 2,$/;"	e	enum:CostMode
COST_MIXED_LOSSLESS_LOSSY_CODING	source/Lib/TLibCommon/TypeDef.h	/^  COST_MIXED_LOSSLESS_LOSSY_CODING = 3$/;"	e	enum:CostMode
COST_SEQUENCE_LEVEL_LOSSLESS	source/Lib/TLibCommon/TypeDef.h	/^  COST_SEQUENCE_LEVEL_LOSSLESS     = 1,$/;"	e	enum:CostMode
COST_STANDARD_LOSSY	source/Lib/TLibCommon/TypeDef.h	/^  COST_STANDARD_LOSSY              = 0,$/;"	e	enum:CostMode
COUNTER_END	source/Lib/TLibCommon/TComRom.h	139;"	d
COUNTER_START	source/Lib/TLibCommon/TComRom.h	138;"	d
CPPFLAGS	source/App/utils/BitrateTargeting/makefile	/^CPPFLAGS = -D NDEBUG -Wall -Wextra$/;"	m
CRA	source/App/Parcat/parcat.cpp	/^  CRA,         \/\/ 21$/;"	e	enum:NalUnitType	file:
CRIlut	source/Lib/TLibCommon/SEI.h	/^  struct CRIlut$/;"	s	class:SEIColourRemappingInfo
CUBEMAP_PROJECTION	source/Lib/TLibCommon/SEI.h	/^    CUBEMAP_PROJECTION                   = 151,$/;"	e	enum:SEI::PayloadType
CUIsFromSameSlice	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          CUIsFromSameSlice             ( const TComDataCU *pCU \/* Can be NULL *\/ ) const            { return ( pCU!=NULL && pCU->getSlice()->getSliceCurStartCtuTsAddr() == getSlice()->getSliceCurStartCtuTsAddr() ); }$/;"	f	class:TComDataCU
CUIsFromSameSliceAndTile	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::CUIsFromSameSliceAndTile    ( const TComDataCU *pCU \/* Can be NULL *\/) const$/;"	f	class:TComDataCU
CUIsFromSameSliceTileAndWavefrontRow	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::CUIsFromSameSliceTileAndWavefrontRow( const TComDataCU *pCU \/* Can be NULL *\/) const$/;"	f	class:TComDataCU
CUIsFromSameTile	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::CUIsFromSameTile            ( const TComDataCU *pCU \/* Can be NULL *\/) const$/;"	f	class:TComDataCU
CU_DQP_EG_k	source/Lib/TLibCommon/CommonDef.h	/^static const Int CU_DQP_EG_k =                                      0; \/\/\/< expgolomb order$/;"	v
CU_DQP_TU_CMAX	source/Lib/TLibCommon/CommonDef.h	/^static const Int CU_DQP_TU_CMAX =                                   5; \/\/\/< max number bins for truncated unary$/;"	v
CXX_STD	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	611;"	d	file:
CXX_STD	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	613;"	d	file:
CXX_STD	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	616;"	d	file:
CXX_STD	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	619;"	d	file:
CXX_STD	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	621;"	d	file:
C_DIALECT	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	626;"	d	file:
C_DIALECT	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	628;"	d	file:
C_DIALECT	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	631;"	d	file:
C_DIALECT	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	633;"	d	file:
C_DIALECT	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	635;"	d	file:
CbOffset	source/Lib/TLibCommon/TComSlice.h	/^      Int CbOffset;$/;"	m	struct:ChromaQpAdj::__anon12::__anon13
CfgStreamParser	source/Lib/Utilities/program_options_lite.cpp	/^      CfgStreamParser(const string& rName, Options& rOpts, ErrorReporter& rError_reporter)$/;"	f	struct:df::program_options_lite::CfgStreamParser
CfgStreamParser	source/Lib/Utilities/program_options_lite.cpp	/^    struct CfgStreamParser : public OptionWriter$/;"	s	namespace:df::program_options_lite	file:
ChannelType	source/Lib/TLibCommon/TypeDef.h	/^enum ChannelType$/;"	g
Check3	source/Lib/TLibCommon/CommonDef.h	/^template <typename T> inline Void Check3( T minVal, T maxVal, T a)$/;"	f
ChromaFormat	source/Lib/TLibCommon/TypeDef.h	/^enum ChromaFormat$/;"	g
ChromaQpAdj	source/Lib/TLibCommon/TComSlice.h	/^struct ChromaQpAdj$/;"	s
Clip3	source/Lib/TLibCommon/CommonDef.h	/^template <typename T> inline T Clip3 (const T minVal, const T maxVal, const T a) { return std::min<T> (std::max<T> (minVal, a) , maxVal); }  \/\/\/< general min\/max clip$/;"	f
ClipBD	source/Lib/TLibCommon/CommonDef.h	/^template <typename T> inline T ClipBD(const T x, const Int bitDepth)             { return Clip3(T(0), T((1 << bitDepth)-1), x);           }$/;"	f
ColourSpaceConvert	source/Lib/Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::ColourSpaceConvert(const TComPicYuv &src, TComPicYuv &dest, const InputColourSpaceConversion conversion, Bool bIsForwards)$/;"	f	class:TVideoIOYuv
CompModel	source/Lib/TLibCommon/SEI.h	/^  struct CompModel$/;"	s	class:SEIFilmGrainCharacteristics
CompModelIntensityValues	source/Lib/TLibCommon/SEI.h	/^  struct CompModelIntensityValues$/;"	s	class:SEIFilmGrainCharacteristics
ComponentID	source/Lib/TLibCommon/TypeDef.h	/^enum ComponentID$/;"	g
ContextModel	source/Lib/TLibCommon/ContextModel.h	/^  ContextModel  ()                        { m_ucState = 0; m_binsCoded = 0; }$/;"	f	class:ContextModel
ContextModel	source/Lib/TLibCommon/ContextModel.h	/^class ContextModel$/;"	c
ContextModel3DBuffer	source/Lib/TLibCommon/ContextModel3DBuffer.cpp	/^ContextModel3DBuffer::ContextModel3DBuffer( UInt uiSizeZ, UInt uiSizeY, UInt uiSizeX, ContextModel *basePtr, Int &count )$/;"	f	class:ContextModel3DBuffer
ContextModel3DBuffer	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^class ContextModel3DBuffer$/;"	c
CostMode	source/Lib/TLibCommon/TypeDef.h	/^enum CostMode$/;"	g
CrOffset	source/Lib/TLibCommon/TComSlice.h	/^      Int CrOffset;$/;"	m	struct:ChromaQpAdj::__anon12::__anon13
DATA_ALIGN	source/Lib/TLibCommon/CommonDef.h	270;"	d
DATA_BASE_SIZE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	80;"	d
DC_IDX	source/Lib/TLibCommon/CommonDef.h	/^static const Int DC_IDX =                                           1; \/\/\/< index for intra DC mode$/;"	v
DEBLOCK_SMALLEST_BLOCK	source/Lib/TLibCommon/TComLoopFilter.h	47;"	d
DEBUG_CABAC_BINS	source/Lib/TLibCommon/TypeDef.h	58;"	d
DEBUG_ENCODER_SEARCH_BINS	source/Lib/TLibCommon/TypeDef.h	57;"	d
DEBUG_INTRA_SEARCH_COSTS	source/Lib/TLibCommon/TypeDef.h	59;"	d
DEBUG_STRING	source/Lib/TLibCommon/TypeDef.h	56;"	d
DEBUG_STRING_APPEND	source/Lib/TLibCommon/TypeDef.h	170;"	d
DEBUG_STRING_APPEND	source/Lib/TLibCommon/TypeDef.h	182;"	d
DEBUG_STRING_CHANNEL_CONDITION	source/Lib/TLibCommon/TypeDef.h	172;"	d
DEBUG_STRING_CHANNEL_CONDITION	source/Lib/TLibCommon/TypeDef.h	184;"	d
DEBUG_STRING_FN_DECLARE	source/Lib/TLibCommon/TypeDef.h	166;"	d
DEBUG_STRING_FN_DECLARE	source/Lib/TLibCommon/TypeDef.h	178;"	d
DEBUG_STRING_FN_DECLAREP	source/Lib/TLibCommon/TypeDef.h	167;"	d
DEBUG_STRING_FN_DECLAREP	source/Lib/TLibCommon/TypeDef.h	179;"	d
DEBUG_STRING_NEW	source/Lib/TLibCommon/TypeDef.h	168;"	d
DEBUG_STRING_NEW	source/Lib/TLibCommon/TypeDef.h	180;"	d
DEBUG_STRING_OUTPUT	source/Lib/TLibCommon/TypeDef.h	169;"	d
DEBUG_STRING_OUTPUT	source/Lib/TLibCommon/TypeDef.h	181;"	d
DEBUG_STRING_PASS_INTO	source/Lib/TLibCommon/TypeDef.h	164;"	d
DEBUG_STRING_PASS_INTO	source/Lib/TLibCommon/TypeDef.h	176;"	d
DEBUG_STRING_PASS_INTO_OPTIONAL	source/Lib/TLibCommon/TypeDef.h	165;"	d
DEBUG_STRING_PASS_INTO_OPTIONAL	source/Lib/TLibCommon/TypeDef.h	177;"	d
DEBUG_STRING_SWAP	source/Lib/TLibCommon/TypeDef.h	171;"	d
DEBUG_STRING_SWAP	source/Lib/TLibCommon/TypeDef.h	183;"	d
DEBUG_TRANSFORM_AND_QUANTISE	source/Lib/TLibCommon/TypeDef.h	60;"	d
DEC	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	547;"	d	file:
DEC	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	532;"	d	file:
DECODED_PICTURE_HASH	source/Lib/TLibCommon/SEI.h	/^    DECODED_PICTURE_HASH                 = 132,$/;"	e	enum:SEI::PayloadType
DECODER_CHECK_SUBSTREAM_AND_SLICE_TRAILING_BYTES	source/Lib/TLibCommon/TypeDef.h	89;"	d
DECODER_PARTIAL_CONFORMANCE_CHECK	source/Lib/TLibDecoder/TDecConformance.h	43;"	d
DECODING_UNIT_INFO	source/Lib/TLibCommon/SEI.h	/^    DECODING_UNIT_INFO                   = 130,$/;"	e	enum:SEI::PayloadType
DEC_NUH_TRACE	source/Lib/TLibCommon/TypeDef.h	75;"	d
DEFAULT_HORZ_CUT_OFF_FREQUENCY	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	60;"	d
DEFAULT_INTRA_TC_OFFSET	source/Lib/TLibCommon/TComLoopFilter.cpp	53;"	d	file:
DEFINE_DCT16x16_MATRIX	source/Lib/TLibCommon/TComRom.cpp	396;"	d	file:
DEFINE_DCT16x16_MATRIX	source/Lib/TLibCommon/TComRom.cpp	526;"	d	file:
DEFINE_DCT32x32_MATRIX	source/Lib/TLibCommon/TComRom.cpp	416;"	d	file:
DEFINE_DCT32x32_MATRIX	source/Lib/TLibCommon/TComRom.cpp	527;"	d	file:
DEFINE_DCT4x4_MATRIX	source/Lib/TLibCommon/TComRom.cpp	376;"	d	file:
DEFINE_DCT4x4_MATRIX	source/Lib/TLibCommon/TComRom.cpp	524;"	d	file:
DEFINE_DCT8x8_MATRIX	source/Lib/TLibCommon/TComRom.cpp	384;"	d	file:
DEFINE_DCT8x8_MATRIX	source/Lib/TLibCommon/TComRom.cpp	525;"	d	file:
DEFINE_DST4x4_MATRIX	source/Lib/TLibCommon/TComRom.cpp	368;"	d	file:
DEFINE_DST4x4_MATRIX	source/Lib/TLibCommon/TComRom.cpp	523;"	d	file:
DEINTERLACE_FIELD_IDENTIFICATION	source/Lib/TLibCommon/SEI.h	/^    DEINTERLACE_FIELD_IDENTIFICATION     = 143, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
DEPENDENT_RAP_INDICATION	source/Lib/TLibCommon/SEI.h	/^    DEPENDENT_RAP_INDICATION             = 145, \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
DF_DEFAULT	source/Lib/TLibCommon/TypeDef.h	/^  DF_DEFAULT         = 0,$/;"	e	enum:DFunc
DF_HADS	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS            = 22,     \/\/\/< general size Hadamard with step$/;"	e	enum:DFunc
DF_HADS16	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS16          = 25,     \/\/\/<  16xM HAD with step$/;"	e	enum:DFunc
DF_HADS16N	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS16N         = 28,     \/\/\/< 16NxM HAD with step$/;"	e	enum:DFunc
DF_HADS32	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS32          = 26,     \/\/\/<  32xM HAD with step$/;"	e	enum:DFunc
DF_HADS4	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS4           = 23,     \/\/\/<   4xM HAD with step$/;"	e	enum:DFunc
DF_HADS64	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS64          = 27,     \/\/\/<  64xM HAD with step$/;"	e	enum:DFunc
DF_HADS8	source/Lib/TLibCommon/TypeDef.h	/^  DF_HADS8           = 24,     \/\/\/<   8xM HAD with step$/;"	e	enum:DFunc
DF_SAD	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD             = 8,      \/\/\/< general size SAD$/;"	e	enum:DFunc
DF_SAD12	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD12           = 43,$/;"	e	enum:DFunc
DF_SAD16	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD16           = 11,     \/\/\/<  16xM SAD$/;"	e	enum:DFunc
DF_SAD16N	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD16N          = 14,     \/\/\/< 16NxM SAD$/;"	e	enum:DFunc
DF_SAD24	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD24           = 44,$/;"	e	enum:DFunc
DF_SAD32	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD32           = 12,     \/\/\/<  32xM SAD$/;"	e	enum:DFunc
DF_SAD4	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD4            = 9,      \/\/\/<   4xM SAD$/;"	e	enum:DFunc
DF_SAD48	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD48           = 45,$/;"	e	enum:DFunc
DF_SAD64	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD64           = 13,     \/\/\/<  64xM SAD$/;"	e	enum:DFunc
DF_SAD8	source/Lib/TLibCommon/TypeDef.h	/^  DF_SAD8            = 10,     \/\/\/<   8xM SAD$/;"	e	enum:DFunc
DF_SADS	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS            = 15,     \/\/\/< general size SAD with step$/;"	e	enum:DFunc
DF_SADS12	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS12          = 46,$/;"	e	enum:DFunc
DF_SADS16	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS16          = 18,     \/\/\/<  16xM SAD with step$/;"	e	enum:DFunc
DF_SADS16N	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS16N         = 21,     \/\/\/< 16NxM SAD with step$/;"	e	enum:DFunc
DF_SADS24	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS24          = 47,$/;"	e	enum:DFunc
DF_SADS32	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS32          = 19,     \/\/\/<  32xM SAD with step$/;"	e	enum:DFunc
DF_SADS4	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS4           = 16,     \/\/\/<   4xM SAD with step$/;"	e	enum:DFunc
DF_SADS48	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS48          = 48,$/;"	e	enum:DFunc
DF_SADS64	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS64          = 20,     \/\/\/<  64xM SAD with step$/;"	e	enum:DFunc
DF_SADS8	source/Lib/TLibCommon/TypeDef.h	/^  DF_SADS8           = 17,     \/\/\/<   8xM SAD with step$/;"	e	enum:DFunc
DF_SSE	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE             = 1,      \/\/\/< general size SSE$/;"	e	enum:DFunc
DF_SSE16	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE16           = 4,      \/\/\/<  16xM SSE$/;"	e	enum:DFunc
DF_SSE16N	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE16N          = 7,      \/\/\/< 16NxM SSE$/;"	e	enum:DFunc
DF_SSE32	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE32           = 5,      \/\/\/<  32xM SSE$/;"	e	enum:DFunc
DF_SSE4	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE4            = 2,      \/\/\/<   4xM SSE$/;"	e	enum:DFunc
DF_SSE64	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE64           = 6,      \/\/\/<  64xM SSE$/;"	e	enum:DFunc
DF_SSE8	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE8            = 3,      \/\/\/<   8xM SSE$/;"	e	enum:DFunc
DF_SSE_FRAME	source/Lib/TLibCommon/TypeDef.h	/^  DF_SSE_FRAME       = 50,     \/\/\/< Frame-based SSE$/;"	e	enum:DFunc
DF_TOTAL_FUNCTIONS	source/Lib/TLibCommon/TypeDef.h	/^  DF_TOTAL_FUNCTIONS = 64$/;"	e	enum:DFunc
DFunc	source/Lib/TLibCommon/TypeDef.h	/^enum DFunc$/;"	g
DISABLED	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    DISABLED=0,$/;"	e	enum:ProfileFeatures::TRISTATE
DISABLED	source/Lib/TLibDecoder/TDecConformance.h	/^  DISABLED=0,$/;"	e	enum:TRISTATE
DISPLAY_ORIENTATION	source/Lib/TLibCommon/SEI.h	/^    DISPLAY_ORIENTATION                  = 47,$/;"	e	enum:SEI::PayloadType
DISTORTION_PRECISION_ADJUSTMENT	source/Lib/TLibCommon/TypeDef.h	158;"	d
DISTORTION_PRECISION_ADJUSTMENT	source/Lib/TLibCommon/TypeDef.h	160;"	d
DM_CHROMA_IDX	source/Lib/TLibCommon/CommonDef.h	/^static const Int DM_CHROMA_IDX =                                   36; \/\/\/< chroma mode index for derived from luma intra mode$/;"	v
DOCNUM	doc/Makefile	/^DOCNUM:=software-manual$/;"	m
DONT_SPLIT	source/Lib/TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
DPBPerCtuData	source/Lib/TLibCommon/TComPicSym.h	/^  struct DPBPerCtuData$/;"	s	class:TComPicSym
DPB_ENCODER_USAGE_CHECK	source/Lib/TLibCommon/TypeDef.h	93;"	d
DTRACE_CABAC_F	source/Lib/TLibCommon/TComRom.h	141;"	d
DTRACE_CABAC_F	source/Lib/TLibCommon/TComRom.h	151;"	d
DTRACE_CABAC_N	source/Lib/TLibCommon/TComRom.h	147;"	d
DTRACE_CABAC_N	source/Lib/TLibCommon/TComRom.h	157;"	d
DTRACE_CABAC_R	source/Lib/TLibCommon/TComRom.h	146;"	d
DTRACE_CABAC_R	source/Lib/TLibCommon/TComRom.h	156;"	d
DTRACE_CABAC_T	source/Lib/TLibCommon/TComRom.h	144;"	d
DTRACE_CABAC_T	source/Lib/TLibCommon/TComRom.h	154;"	d
DTRACE_CABAC_V	source/Lib/TLibCommon/TComRom.h	142;"	d
DTRACE_CABAC_V	source/Lib/TLibCommon/TComRom.h	152;"	d
DTRACE_CABAC_VL	source/Lib/TLibCommon/TComRom.h	143;"	d
DTRACE_CABAC_VL	source/Lib/TLibCommon/TComRom.h	153;"	d
DTRACE_CABAC_X	source/Lib/TLibCommon/TComRom.h	145;"	d
DTRACE_CABAC_X	source/Lib/TLibCommon/TComRom.h	155;"	d
DUData	source/Lib/TLibEncoder/TEncGOP.h	/^    DUData()$/;"	f	class:TEncGOP::DUData
DUData	source/Lib/TLibEncoder/TEncGOP.h	/^  class DUData$/;"	c	class:TEncGOP
DeblockEdgeDir	source/Lib/TLibCommon/TypeDef.h	/^enum DeblockEdgeDir$/;"	g
DebugInterPredResiReco	source/Lib/TLibCommon/Debug.cpp	/^Void DebugInterPredResiReco(std::string &sDebug, TComYuv &pred, TComYuv &resi, TComYuv &reco, Int predmode_mask)$/;"	f
DebugOptionList	source/Lib/TLibCommon/Debug.h	/^namespace DebugOptionList$/;"	n
DebugStringGetPredModeMask	source/Lib/TLibCommon/Debug.cpp	/^Int DebugStringGetPredModeMask(PredMode mode)$/;"	f
DistFunc	source/Lib/TLibCommon/TComRdCost.h	/^  FpDistFunc            DistFunc;$/;"	m	class:DistParam
DistParam	source/Lib/TLibCommon/TComRdCost.h	/^  DistParam()$/;"	f	class:DistParam
DistParam	source/Lib/TLibCommon/TComRdCost.h	/^class DistParam$/;"	c
Distortion	source/Lib/TLibCommon/TypeDef.h	/^typedef       UInt            Distortion;        \/\/\/< distortion measurement$/;"	t
Distortion	source/Lib/TLibCommon/TypeDef.h	/^typedef       UInt64          Distortion;        \/\/\/< distortion measurement$/;"	t
Double	source/Lib/TLibCommon/TypeDef.h	/^typedef       double              Double;$/;"	t
DyLibInstallNameInfo	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^class DyLibInstallNameInfo(object):$/;"	c
DyLibInstallNameInfoInspector	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^class DyLibInstallNameInfoInspector(object):$/;"	c
EDGE_HOR	source/Lib/TLibCommon/TypeDef.h	/^  EDGE_HOR     = 1,$/;"	e	enum:DeblockEdgeDir
EDGE_VER	source/Lib/TLibCommon/TypeDef.h	/^  EDGE_VER     = 0,$/;"	e	enum:DeblockEdgeDir
ENABLED	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    ENABLED=2$/;"	e	enum:ProfileFeatures::TRISTATE
ENABLED	source/Lib/TLibDecoder/TDecConformance.h	/^  ENABLED=2$/;"	e	enum:TRISTATE
ENC_DEC_TRACE	source/Lib/TLibCommon/TypeDef.h	73;"	d
ENVIRONMENT_VARIABLE_DEBUG_AND_TEST	source/Lib/TLibCommon/TypeDef.h	62;"	d
EOB	source/App/Parcat/parcat.cpp	/^  EOB,                     \/\/ 37$/;"	e	enum:NalUnitType	file:
EOS	source/App/Parcat/parcat.cpp	/^  EOS,                     \/\/ 36$/;"	e	enum:NalUnitType	file:
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/App/Parcat/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/App/SEIRemovalApp/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/App/TAppDecoder/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/App/TAppDecoderAnalyser/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/App/TAppEncoder/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/App/TAppMCTSExtractor/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/Lib/TLibCommon/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/Lib/TLibCommonAnalyser/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/Lib/TLibDecoder/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/Lib/TLibDecoderAnalyser/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/Lib/TLibEncoder/Makefile	/^EQUALS = =$/;"	m
EQUALS	build/source/Lib/Utilities/Makefile	/^EQUALS = =$/;"	m
EQUIRECTANGULAR_PROJECTION	source/Lib/TLibCommon/SEI.h	/^    EQUIRECTANGULAR_PROJECTION           = 150,$/;"	e	enum:SEI::PayloadType
EXTENSION_360_VIDEO	source/Lib/TLibCommon/TypeDef.h	103;"	d
EfficientFieldIRAPMapping	source/Lib/TLibEncoder/TEncGOP.cpp	/^    EfficientFieldIRAPMapping() :$/;"	f	class:EfficientFieldIRAPMapping
EfficientFieldIRAPMapping	source/Lib/TLibEncoder/TEncGOP.cpp	/^class EfficientFieldIRAPMapping$/;"	c	file:
EnvVar	source/Lib/TLibCommon/Debug.cpp	/^EnvVar::EnvVar(const std::string &sName, const std::string &sDefault, const std::string &sHelp) :$/;"	f	class:EnvVar
EnvVar	source/Lib/TLibCommon/Debug.h	/^class EnvVar$/;"	c
ErrorReporter	source/Lib/Utilities/program_options_lite.h	/^      ErrorReporter() : is_errored(0) {}$/;"	f	struct:df::program_options_lite::ErrorReporter
ErrorReporter	source/Lib/Utilities/program_options_lite.h	/^    struct ErrorReporter$/;"	s	namespace:df::program_options_lite
F1	source/Lib/libmd5/libmd5.cpp	161;"	d	file:
F2	source/Lib/libmd5/libmd5.cpp	162;"	d	file:
F3	source/Lib/libmd5/libmd5.cpp	163;"	d	file:
F4	source/Lib/libmd5/libmd5.cpp	164;"	d	file:
FASTINTERSEARCH_DISABLED	source/Lib/TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_DISABLED = 0,$/;"	e	enum:FastInterSearchMode
FASTINTERSEARCH_MODE1	source/Lib/TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_MODE1    = 1, \/\/ TODO: assign better names to these.$/;"	e	enum:FastInterSearchMode
FASTINTERSEARCH_MODE2	source/Lib/TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_MODE2    = 2,$/;"	e	enum:FastInterSearchMode
FASTINTERSEARCH_MODE3	source/Lib/TLibCommon/TypeDef.h	/^  FASTINTERSEARCH_MODE3    = 3$/;"	e	enum:FastInterSearchMode
FAST_BIT_EST	source/Lib/TLibCommon/TypeDef.h	115;"	d
FAST_UDI_MAX_RDMODE_NUM	source/Lib/TLibCommon/CommonDef.h	/^static const Int FAST_UDI_MAX_RDMODE_NUM =                         35; \/\/\/< maximum number of RD comparison in fast-UDI estimation loop$/;"	v
FATAL_ERROR_0	source/Lib/TLibCommon/CommonDef.h	279;"	d
FDReader	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  FDReader() {};$/;"	f	class:FDReader
FDReader	source/Lib/TLibDecoder/SyntaxElementParser.h	/^class FDReader: public SyntaxElementParser$/;"	c
FGS_ERROR_T	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^}FGS_ERROR_T;$/;"	t	typeref:enum:__anon11
FGS_FAIL	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_FAIL = 0xFF$/;"	e	enum:__anon11
FGS_FILE_IO_ERROR	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	109;"	d
FGS_INVALID_BIT_DEPTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_BIT_DEPTH = FGS_FILE_IO_ERROR + 0x04,$/;"	e	enum:__anon11
FGS_INVALID_BLEND_MODE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_BLEND_MODE = FGS_PARAM_ERROR + 0x04,$/;"	e	enum:__anon11
FGS_INVALID_CHROMA_FORMAT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_CHROMA_FORMAT = FGS_FILE_IO_ERROR + 0x03,$/;"	e	enum:__anon11
FGS_INVALID_COMP_MODEL_PRESENT_FLAG	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_COMP_MODEL_PRESENT_FLAG = FGS_PARAM_ERROR + 0x06,$/;"	e	enum:__anon11
FGS_INVALID_CUT_OFF_FREQUENCIES	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_CUT_OFF_FREQUENCIES = FGS_PARAM_ERROR + 0x0A,$/;"	e	enum:__anon11
FGS_INVALID_FGC_CANCEL_FLAG	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_FGC_CANCEL_FLAG = FGS_PARAM_ERROR + 0x01,$/;"	e	enum:__anon11
FGS_INVALID_FGC_REPETETION_PERIOD	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_FGC_REPETETION_PERIOD = FGS_PARAM_ERROR + 0x0C,$/;"	e	enum:__anon11
FGS_INVALID_GRAIN_MODEL_ID	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_GRAIN_MODEL_ID = FGS_PARAM_ERROR + 0x02,$/;"	e	enum:__anon11
FGS_INVALID_HEIGHT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_HEIGHT = FGS_FILE_IO_ERROR + 0x02,$/;"	e	enum:__anon11
FGS_INVALID_INTENSITY_BOUNDARY_VALUES	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_INTENSITY_BOUNDARY_VALUES = FGS_PARAM_ERROR + 0x08,$/;"	e	enum:__anon11
FGS_INVALID_LOG2_SCALE_FACTOR	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_LOG2_SCALE_FACTOR = FGS_PARAM_ERROR + 0x05,$/;"	e	enum:__anon11
FGS_INVALID_NUM_CUT_OFF_FREQ_PAIRS	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_NUM_CUT_OFF_FREQ_PAIRS = FGS_PARAM_ERROR + 0x0B,$/;"	e	enum:__anon11
FGS_INVALID_NUM_MODEL_VALUES	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_NUM_MODEL_VALUES = FGS_PARAM_ERROR + 0x07,$/;"	e	enum:__anon11
FGS_INVALID_SEP_COL_DES_FLAG	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_SEP_COL_DES_FLAG = FGS_PARAM_ERROR + 0x03,$/;"	e	enum:__anon11
FGS_INVALID_STANDARD_DEVIATION	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_STANDARD_DEVIATION = FGS_PARAM_ERROR + 0x09,$/;"	e	enum:__anon11
FGS_INVALID_WIDTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_INVALID_WIDTH = FGS_FILE_IO_ERROR + 0x01,$/;"	e	enum:__anon11
FGS_PARAM_ERROR	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	110;"	d
FGS_RDD5_ENABLE	source/Lib/TLibCommon/TypeDef.h	94;"	d
FGS_SUCCESS	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  FGS_SUCCESS = 0,$/;"	e	enum:__anon11
FILLER_DATA	source/App/Parcat/parcat.cpp	/^  FILLER_DATA,             \/\/ 38$/;"	e	enum:NalUnitType	file:
FILLER_PAYLOAD	source/Lib/TLibCommon/SEI.h	/^    FILLER_PAYLOAD                       = 3,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
FILM_GRAIN_CHARACTERISTICS	source/Lib/TLibCommon/SEI.h	/^    FILM_GRAIN_CHARACTERISTICS           = 19,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
FILM_GRAIN_MODEL_ID_VALUE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	55;"	d
FIRST_CBF_CTX_CHROMA	source/Lib/TLibCommon/ContextTables.h	147;"	d
FIRST_CBF_CTX_LUMA	source/Lib/TLibCommon/ContextTables.h	145;"	d
FIRST_CTX_SET_CHROMA	source/Lib/TLibCommon/ContextTables.h	135;"	d
FIRST_CTX_SET_LUMA	source/Lib/TLibCommon/ContextTables.h	122;"	d
FIRST_SIG_FLAG_CTX_CHROMA	source/Lib/TLibCommon/ContextTables.h	98;"	d
FIRST_SIG_FLAG_CTX_LUMA	source/Lib/TLibCommon/ContextTables.h	97;"	d
FISHEYE_VIDEO_INFO	source/Lib/TLibCommon/SEI.h	/^    FISHEYE_VIDEO_INFO                   = 152,$/;"	e	enum:SEI::PayloadType
FIXED_NUMBER_OF_BYTES	source/Lib/TLibCommon/TypeDef.h	/^  FIXED_NUMBER_OF_BYTES  = 2,          \/\/\/< Limit maximum number of bytes in a slice \/ slice segment$/;"	e	enum:SliceConstraint
FIXED_NUMBER_OF_CTU	source/Lib/TLibCommon/TypeDef.h	/^  FIXED_NUMBER_OF_CTU    = 1,          \/\/\/< Limit maximum number of largest coding tree units in a slice \/ slice segments$/;"	e	enum:SliceConstraint
FIXED_NUMBER_OF_TILES	source/Lib/TLibCommon/TypeDef.h	/^  FIXED_NUMBER_OF_TILES  = 3,          \/\/\/< slices \/ slice segments span an integer number of tiles$/;"	e	enum:SliceConstraint
FRAME_PACKING	source/Lib/TLibCommon/SEI.h	/^    FRAME_PACKING                        = 45,$/;"	e	enum:SEI::PayloadType
FULL_NBIT	source/Lib/TLibCommon/TypeDef.h	150;"	d
FULL_NBIT	source/Lib/TLibCommon/TypeDef.h	153;"	d
FastInterSearchMode	source/Lib/TLibCommon/TypeDef.h	/^enum FastInterSearchMode$/;"	g
FatBinaryTool	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^class FatBinaryTool(object):$/;"	c
Float	source/Lib/TLibCommon/TypeDef.h	/^typedef       float               Float;$/;"	t
FpDistFunc	source/Lib/TLibCommon/TComRdCost.h	/^typedef Distortion (*FpDistFunc) (DistParam*); \/\/ TODO: can this pointer be replaced with a reference? - there are no NULL checks on pointer.$/;"	t
Func	source/Lib/Utilities/program_options_lite.h	/^      typedef void (Func)(Options&, const std::string&, ErrorReporter&);$/;"	t	struct:df::program_options_lite::OptionFunc
GCC_VERSION	source/Lib/TLibCommon/TComRdCost.cpp	428;"	d	file:
GOPEntry	source/Lib/TLibEncoder/TEncCfg.h	/^  GOPEntry()$/;"	f	struct:GOPEntry
GOPEntry	source/Lib/TLibEncoder/TEncCfg.h	/^struct GOPEntry$/;"	s
GRAIN_SCALE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	65;"	d
GREEN_METADATA	source/Lib/TLibCommon/SEI.h	/^    GREEN_METADATA                       = 56,$/;"	e	enum:SEI::PayloadType
GetAbsPartIdxCU	source/Lib/TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxCU()                                     const { return mAbsPartIdxCU; }$/;"	f	class:TComTU
GetAbsPartIdxNumParts	source/Lib/TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxNumParts()                               const { return mAbsPartIdxStep; }$/;"	f	class:TComTU
GetAbsPartIdxNumParts	source/Lib/TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxNumParts(const ComponentID compID)       const { return ProcessingAllQuadrants(compID) ? mAbsPartIdxStep : (mAbsPartIdxStep * NUMBER_OF_SECTIONS[mSplitMode]); }$/;"	f	class:TComTU
GetAbsPartIdxTU	source/Lib/TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxTU()                                     const { return GetAbsPartIdxCU() + GetRelPartIdxTU(); }$/;"	f	class:TComTU
GetAbsPartIdxTU	source/Lib/TLibCommon/TComTU.h	/^    UInt GetAbsPartIdxTU(const ComponentID compID)             const { return GetAbsPartIdxCU() + GetRelPartIdxTU(compID); }$/;"	f	class:TComTU
GetChromaFormat	source/Lib/TLibCommon/TComTU.h	/^    ChromaFormat GetChromaFormat()                             const { return mChromaFormat; }$/;"	f	class:TComTU
GetCurrentX	source/Lib/TLibCommon/TComRom.cpp	/^  UInt GetCurrentX() const { return m_column; }$/;"	f	class:ScanGenerator
GetCurrentY	source/Lib/TLibCommon/TComRom.cpp	/^  UInt GetCurrentY() const { return m_line; }$/;"	f	class:ScanGenerator
GetEquivalentLog2TrSize	source/Lib/TLibCommon/TComTU.cpp	/^UInt TComTU::GetEquivalentLog2TrSize(const ComponentID compID)     const$/;"	f	class:TComTU
GetIRAPGOPid	source/Lib/TLibEncoder/TEncGOP.cpp	/^    Int GetIRAPGOPid() const { return IRAPGOPid; }$/;"	f	class:EfficientFieldIRAPMapping
GetLog2LumaTrSize	source/Lib/TLibCommon/TComTU.h	/^    UInt GetLog2LumaTrSize()                                   const { return mLog2TrLumaSize; }$/;"	f	class:TComTU
GetNextIndex	source/Lib/TLibCommon/TComRom.cpp	/^  UInt GetNextIndex(UInt blockOffsetX, UInt blockOffsetY)$/;"	f	class:ScanGenerator
GetNumBufferedBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt GetNumBufferedBytes() const { return m_NumFutureBytes; }$/;"	f	class:InputByteStream
GetRelPartIdxTU	source/Lib/TLibCommon/TComTU.h	/^    UInt GetRelPartIdxTU()                                     const { return mAbsPartIdxTURelCU; }$/;"	f	class:TComTU
GetRelPartIdxTU	source/Lib/TLibCommon/TComTU.h	/^    UInt GetRelPartIdxTU(const ComponentID compID)             const { return ProcessingAllQuadrants(compID) ? mAbsPartIdxTURelCU : (mAbsPartIdxTURelCU & (~0x3)); }$/;"	f	class:TComTU
GetSectionNumber	source/Lib/TLibCommon/TComTU.h	/^    UInt GetSectionNumber()                                    const { return mSection; }$/;"	f	class:TComTU
GetSingletonInstance	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static TComCodingStatistics& GetSingletonInstance()$/;"	f	class:TComCodingStatistics
GetSplitMode	source/Lib/TLibCommon/TComTU.h	/^    TU_SPLIT_MODE GetSplitMode()                               const { return mSplitMode; }$/;"	f	class:TComTU
GetStatisticEP	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static SStat &GetStatisticEP(const TChar *pKey) {return GetStatisticEP(std::string(pKey)); }$/;"	f	class:TComCodingStatistics
GetStatisticEP	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static SStat &GetStatisticEP(const TComCodingStatisticsClassType &stat) { return GetSingletonInstance().data.statistics_ep[stat.type][stat.subClass]; }$/;"	f	class:TComCodingStatistics
GetStatisticEP	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static SStat &GetStatisticEP(const std::string &str) { return GetSingletonInstance().data.mappings_ep[str]; }$/;"	f	class:TComCodingStatistics
GetStatistics	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static const TComCodingStatisticsData &GetStatistics()         { return GetSingletonInstance().data; }$/;"	f	class:TComCodingStatistics
GetSubClassString	source/Lib/TLibCommon/TComCodingStatistics.h	/^  static const TChar *GetSubClassString(const UInt subClass)$/;"	f	class:TComCodingStatisticsClassType
GetSubClassWidth	source/Lib/TLibCommon/TComCodingStatistics.h	/^  static UInt GetSubClassWidth(const UInt subClass)$/;"	f	class:TComCodingStatisticsClassType
GetTransformDepthRel	source/Lib/TLibCommon/TComTU.h	/^    UInt GetTransformDepthRel()                                const { return mTrDepthRelCU[COMPONENT_Y]; }$/;"	f	class:TComTU
GetTransformDepthRelAdj	source/Lib/TLibCommon/TComTU.h	/^    UInt GetTransformDepthRelAdj(const ChannelType chType)     const$/;"	f	class:TComTU
GetTransformDepthRelAdj	source/Lib/TLibCommon/TComTU.h	/^    UInt GetTransformDepthRelAdj(const ComponentID compID)     const { return mTrDepthRelCU[compID]; }$/;"	f	class:TComTU
GetTransformDepthTotal	source/Lib/TLibCommon/TComTU.h	/^    UInt GetTransformDepthTotal()                              const { return mCuDepth+GetTransformDepthRel(); }$/;"	f	class:TComTU
GetTransformDepthTotalAdj	source/Lib/TLibCommon/TComTU.h	/^    UInt GetTransformDepthTotalAdj(const ComponentID compID)   const { return mCuDepth+GetTransformDepthRelAdj(compID); }$/;"	f	class:TComTU
GitHelper	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class GitHelper(VcsUtil):$/;"	c
GrainSynthesisStruct	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^}GrainSynthesisStruct;$/;"	t	typeref:struct:GrainSynthesisStruct_t
GrainSynthesisStruct_t	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^typedef struct GrainSynthesisStruct_t$/;"	s
HASHTYPE_CHECKSUM	source/Lib/TLibCommon/TypeDef.h	/^  HASHTYPE_CHECKSUM        = 2,$/;"	e	enum:HashType
HASHTYPE_CRC	source/Lib/TLibCommon/TypeDef.h	/^  HASHTYPE_CRC             = 1,$/;"	e	enum:HashType
HASHTYPE_MD5	source/Lib/TLibCommon/TypeDef.h	/^  HASHTYPE_MD5             = 0,$/;"	e	enum:HashType
HASHTYPE_NONE	source/Lib/TLibCommon/TypeDef.h	/^  HASHTYPE_NONE            = 3,$/;"	e	enum:HashType
HBRFACTOREQN	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^typedef enum HBRFACTOREQN$/;"	g
HBRFACTOREQN	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^} HBRFACTOREQN;$/;"	t	typeref:enum:HBRFACTOREQN
HBRFACTOREQN	source/Lib/TLibDecoder/TDecConformance.h	/^typedef enum HBRFACTOREQN$/;"	g
HBRFACTOREQN	source/Lib/TLibDecoder/TDecConformance.h	/^} HBRFACTOREQN;$/;"	t	typeref:enum:HBRFACTOREQN
HBR_1	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  HBR_1 = 0,$/;"	e	enum:HBRFACTOREQN
HBR_1	source/Lib/TLibDecoder/TDecConformance.h	/^  HBR_1 = 0,$/;"	e	enum:HBRFACTOREQN
HBR_12_OR_24	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  HBR_12_OR_24 = 2$/;"	e	enum:HBRFACTOREQN
HBR_12_OR_24	source/Lib/TLibDecoder/TDecConformance.h	/^  HBR_12_OR_24 = 2$/;"	e	enum:HBRFACTOREQN
HBR_1_OR_2	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  HBR_1_OR_2 = 1,$/;"	e	enum:HBRFACTOREQN
HBR_1_OR_2	source/Lib/TLibDecoder/TDecConformance.h	/^  HBR_1_OR_2 = 1,$/;"	e	enum:HBRFACTOREQN
HEX	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	558;"	d	file:
HEX	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	543;"	d	file:
HHI_RQT_INTRA_SPEEDUP	source/Lib/TLibCommon/TypeDef.h	117;"	d
HHI_RQT_INTRA_SPEEDUP_MOD	source/Lib/TLibCommon/TypeDef.h	118;"	d
HIGH	source/Lib/TLibCommon/TypeDef.h	/^    HIGH = 1,$/;"	e	enum:Level::Tier
HIGHTHROUGHPUTREXT	source/Lib/TLibCommon/TypeDef.h	/^    HIGHTHROUGHPUTREXT = 5$/;"	e	enum:Profile::Name
HOR_IDX	source/Lib/TLibCommon/CommonDef.h	/^static const Int HOR_IDX =                                         10; \/\/\/< index for intra HORIZONTAL mode$/;"	v
HashType	source/Lib/TLibCommon/TypeDef.h	/^enum HashType$/;"	g
HrdSubLayerInfo	source/Lib/TLibCommon/TComSlice.h	/^struct HrdSubLayerInfo$/;"	s
IDR_N_LP	source/App/Parcat/parcat.cpp	/^  IDR_N_LP,    \/\/ 20$/;"	e	enum:NalUnitType	file:
IDR_W_RADL	source/App/Parcat/parcat.cpp	/^  IDR_W_RADL,  \/\/ 19$/;"	e	enum:NalUnitType	file:
ID_VOID_MAIN	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IF_FILTER_PREC	source/Lib/TLibCommon/TComInterpolationFilter.h	50;"	d
IF_INTERNAL_OFFS	source/Lib/TLibCommon/TComInterpolationFilter.h	51;"	d
IF_INTERNAL_PREC	source/Lib/TLibCommon/TComInterpolationFilter.h	49;"	d
INIT_ABS_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_ABS_FLAG[NUMBER_OF_SLICE_TYPES][NUM_ABS_FLAG_CTX] =$/;"	v
INIT_CHROMA_PRED_MODE	source/Lib/TLibCommon/ContextTables.h	/^INIT_CHROMA_PRED_MODE[NUMBER_OF_SLICE_TYPES][NUM_CHROMA_PRED_CTX] =$/;"	v
INIT_CHROMA_QP_ADJ_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_CHROMA_QP_ADJ_FLAG[NUMBER_OF_SLICE_TYPES][NUM_CHROMA_QP_ADJ_FLAG_CTX] =$/;"	v
INIT_CHROMA_QP_ADJ_IDC	source/Lib/TLibCommon/ContextTables.h	/^INIT_CHROMA_QP_ADJ_IDC[NUMBER_OF_SLICE_TYPES][NUM_CHROMA_QP_ADJ_IDC_CTX] =$/;"	v
INIT_CROSS_COMPONENT_PREDICTION	source/Lib/TLibCommon/ContextTables.h	/^INIT_CROSS_COMPONENT_PREDICTION[NUMBER_OF_SLICE_TYPES][NUM_CROSS_COMPONENT_PREDICTION_CTX] =$/;"	v
INIT_CU_TRANSQUANT_BYPASS_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_CU_TRANSQUANT_BYPASS_FLAG[NUMBER_OF_SLICE_TYPES][NUM_CU_TRANSQUANT_BYPASS_FLAG_CTX] =$/;"	v
INIT_DQP	source/Lib/TLibCommon/ContextTables.h	/^INIT_DQP[NUMBER_OF_SLICE_TYPES][NUM_DELTA_QP_CTX] =$/;"	v
INIT_EXPLICIT_RDPCM_DIR	source/Lib/TLibCommon/ContextTables.h	/^INIT_EXPLICIT_RDPCM_DIR[NUMBER_OF_SLICE_TYPES][2*NUM_EXPLICIT_RDPCM_DIR_CTX] =$/;"	v
INIT_EXPLICIT_RDPCM_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_EXPLICIT_RDPCM_FLAG[NUMBER_OF_SLICE_TYPES][2*NUM_EXPLICIT_RDPCM_FLAG_CTX] =$/;"	v
INIT_INTER_DIR	source/Lib/TLibCommon/ContextTables.h	/^INIT_INTER_DIR[NUMBER_OF_SLICE_TYPES][NUM_INTER_DIR_CTX] =$/;"	v
INIT_INTRA_PRED_MODE	source/Lib/TLibCommon/ContextTables.h	/^INIT_INTRA_PRED_MODE[NUMBER_OF_SLICE_TYPES][NUM_INTRA_PREDICT_CTX] =$/;"	v
INIT_LAST	source/Lib/TLibCommon/ContextTables.h	/^INIT_LAST[NUMBER_OF_SLICE_TYPES][NUM_CTX_LAST_FLAG_SETS * NUM_CTX_LAST_FLAG_XY] =$/;"	v
INIT_MERGE_FLAG_EXT	source/Lib/TLibCommon/ContextTables.h	/^INIT_MERGE_FLAG_EXT[NUMBER_OF_SLICE_TYPES][NUM_MERGE_FLAG_EXT_CTX] =$/;"	v
INIT_MERGE_IDX_EXT	source/Lib/TLibCommon/ContextTables.h	/^INIT_MERGE_IDX_EXT[NUMBER_OF_SLICE_TYPES][NUM_MERGE_IDX_EXT_CTX] =$/;"	v
INIT_MVD	source/Lib/TLibCommon/ContextTables.h	/^INIT_MVD[NUMBER_OF_SLICE_TYPES][NUM_MV_RES_CTX] =$/;"	v
INIT_MVP_IDX	source/Lib/TLibCommon/ContextTables.h	/^INIT_MVP_IDX[NUMBER_OF_SLICE_TYPES][NUM_MVP_IDX_CTX] =$/;"	v
INIT_ONE_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_ONE_FLAG[NUMBER_OF_SLICE_TYPES][NUM_ONE_FLAG_CTX] =$/;"	v
INIT_PART_SIZE	source/Lib/TLibCommon/ContextTables.h	/^INIT_PART_SIZE[NUMBER_OF_SLICE_TYPES][NUM_PART_SIZE_CTX] =$/;"	v
INIT_PRED_MODE	source/Lib/TLibCommon/ContextTables.h	/^INIT_PRED_MODE[NUMBER_OF_SLICE_TYPES][NUM_PRED_MODE_CTX] =$/;"	v
INIT_QT_CBF	source/Lib/TLibCommon/ContextTables.h	/^INIT_QT_CBF[NUMBER_OF_SLICE_TYPES][NUM_QT_CBF_CTX_SETS * NUM_QT_CBF_CTX_PER_SET] =$/;"	v
INIT_QT_ROOT_CBF	source/Lib/TLibCommon/ContextTables.h	/^INIT_QT_ROOT_CBF[NUMBER_OF_SLICE_TYPES][NUM_QT_ROOT_CBF_CTX] =$/;"	v
INIT_REF_PIC	source/Lib/TLibCommon/ContextTables.h	/^INIT_REF_PIC[NUMBER_OF_SLICE_TYPES][NUM_REF_NO_CTX] =$/;"	v
INIT_SAO_MERGE_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_SAO_MERGE_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SAO_MERGE_FLAG_CTX] =$/;"	v
INIT_SAO_TYPE_IDX	source/Lib/TLibCommon/ContextTables.h	/^INIT_SAO_TYPE_IDX[NUMBER_OF_SLICE_TYPES][NUM_SAO_TYPE_IDX_CTX] =$/;"	v
INIT_SIG_CG_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_SIG_CG_FLAG[NUMBER_OF_SLICE_TYPES][2 * NUM_SIG_CG_FLAG_CTX] =$/;"	v
INIT_SIG_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_SIG_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SIG_FLAG_CTX] =$/;"	v
INIT_SKIP_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_SKIP_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SKIP_FLAG_CTX] =$/;"	v
INIT_SPLIT_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_SPLIT_FLAG[NUMBER_OF_SLICE_TYPES][NUM_SPLIT_FLAG_CTX] =$/;"	v
INIT_TRANSFORMSKIP_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_TRANSFORMSKIP_FLAG[NUMBER_OF_SLICE_TYPES][2*NUM_TRANSFORMSKIP_FLAG_CTX] =$/;"	v
INIT_TRANS_SUBDIV_FLAG	source/Lib/TLibCommon/ContextTables.h	/^INIT_TRANS_SUBDIV_FLAG[NUMBER_OF_SLICE_TYPES][NUM_TRANS_SUBDIV_FLAG_CTX] =$/;"	v
INTENSITY_INTERVAL_MATCH_FAIL	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	74;"	d
INTENSITY_INTERVAL_MATCH_FAIL	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	95;"	d
INVALID	source/App/Parcat/parcat.cpp	/^  INVALID,$/;"	e	enum:NalUnitType	file:
IPCMSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::IPCMSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv )$/;"	f	class:TEncSearch
IPCOLOURSPACE_RGBtoGBR	source/Lib/TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_RGBtoGBR                = 3,$/;"	e	enum:InputColourSpaceConversion
IPCOLOURSPACE_UNCHANGED	source/Lib/TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_UNCHANGED               = 0,$/;"	e	enum:InputColourSpaceConversion
IPCOLOURSPACE_YCbCrtoYCrCb	source/Lib/TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_YCbCrtoYCrCb            = 1, \/\/ Mainly used for debug!$/;"	e	enum:InputColourSpaceConversion
IPCOLOURSPACE_YCbCrtoYYY	source/Lib/TLibCommon/TypeDef.h	/^  IPCOLOURSPACE_YCbCrtoYYY              = 2, \/\/ Mainly used for debug!$/;"	e	enum:InputColourSpaceConversion
IQUANT_SHIFT	source/Lib/TLibCommon/CommonDef.h	/^static const Int IQUANT_SHIFT =                                     6;$/;"	v
IRAPGOPid	source/Lib/TLibEncoder/TEncGOP.cpp	/^    Int  IRAPGOPid;$/;"	m	class:EfficientFieldIRAPMapping	file:
IRAPtoReorder	source/Lib/TLibEncoder/TEncGOP.cpp	/^    Bool IRAPtoReorder;$/;"	m	class:EfficientFieldIRAPMapping	file:
ISLICE_CHROMA_ABS_CONTEXT	source/Lib/TLibCommon/ContextTables.h	412;"	d
ISLICE_CHROMA_CBF_CONTEXT	source/Lib/TLibCommon/ContextTables.h	303;"	d
ISLICE_CHROMA_LAST_POSITION_CONTEXT	source/Lib/TLibCommon/ContextTables.h	337;"	d
ISLICE_CHROMA_ONE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	408;"	d
ISLICE_CHROMA_SIGNIFICANCE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	379;"	d
ISLICE_LUMA_ABS_CONTEXT	source/Lib/TLibCommon/ContextTables.h	403;"	d
ISLICE_LUMA_CBF_CONTEXT	source/Lib/TLibCommon/ContextTables.h	299;"	d
ISLICE_LUMA_LAST_POSITION_CONTEXT	source/Lib/TLibCommon/ContextTables.h	333;"	d
ISLICE_LUMA_ONE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	399;"	d
ISLICE_LUMA_SIGNIFICANCE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	374;"	d
ISO_IEC_11578_LEN	source/Lib/TLibCommon/SEI.h	/^static const UInt ISO_IEC_11578_LEN=16;$/;"	v
I_SLICE	source/Lib/TLibCommon/TypeDef.h	/^  I_SLICE               = 2,$/;"	e	enum:SliceType
IncrementStatisticEP	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void IncrementStatisticEP(const TChar *pKey, const Int numBits, const Int value)$/;"	f	class:TComCodingStatistics
IncrementStatisticEP	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void IncrementStatisticEP(const TComCodingStatisticsClassType &stat, const Int numBits, const Int value)$/;"	f	class:TComCodingStatistics
IncrementStatisticEP	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void IncrementStatisticEP(const std::string &str, const Int numBits, const Int value)$/;"	f	class:TComCodingStatistics
InitialAdjustmentParameterParseException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^class InitialAdjustmentParameterParseException: public RuntimeError$/;"	c
InputByteStream	source/Lib/TLibDecoder/AnnexBread.h	/^  InputByteStream(std::istream& istream)$/;"	f	class:InputByteStream
InputByteStream	source/Lib/TLibDecoder/AnnexBread.h	/^class InputByteStream$/;"	c
InputColourSpaceConversion	source/Lib/TLibCommon/TypeDef.h	/^enum InputColourSpaceConversion \/\/ defined in terms of conversion prior to input of encoder.$/;"	g
InputNALUnit	source/Lib/TLibDecoder/NALread.h	/^    InputNALUnit() : m_Bitstream() {};$/;"	f	class:InputNALUnit
InputNALUnit	source/Lib/TLibDecoder/NALread.h	/^    InputNALUnit(const InputNALUnit &src) : NALUnit(src), m_Bitstream(src.m_Bitstream) {};$/;"	f	class:InputNALUnit
InputNALUnit	source/Lib/TLibDecoder/NALread.h	/^class InputNALUnit : public NALUnit$/;"	c
Int	source/App/TAppDecoder/TAppDecTop.cpp	/^applyColourRemappingInfoMatrix(const Int (&colourRemapCoeffs)[3], const Int postOffsetShift, const Int p0, const Int p1, const Int p2, const Int offset)$/;"	v	file:
Int	source/App/TAppDecoder/TAppDecTop.cpp	/^setColourRemappingInfoMatrixOffset(Int (&matrixOffset)[3], Int offset0, Int offset1, Int offset2)$/;"	v	file:
Int	source/App/TAppDecoder/TAppDecTop.cpp	/^setColourRemappingInfoMatrixOffsets(      Int  (&matrixInputOffset)[3],$/;"	v	file:
Int	source/Lib/TLibCommon/TypeDef.h	/^typedef       int                 Int;$/;"	t
Int64	source/Lib/TLibCommon/TypeDef.h	/^typedef       __int64             Int64;$/;"	t
Int64	source/Lib/TLibCommon/TypeDef.h	/^typedef       long long           Int64;$/;"	t
IntTZSearchStruct	source/Lib/TLibEncoder/TEncSearch.h	/^  } IntTZSearchStruct;$/;"	t	class:TEncSearch	typeref:struct:TEncSearch::__anon7
Intermediate_Int	source/Lib/TLibCommon/TypeDef.h	/^typedef       Int             Intermediate_Int;  \/\/\/< used as intermediate value in calculations$/;"	t
Intermediate_Int	source/Lib/TLibCommon/TypeDef.h	/^typedef       Int64           Intermediate_Int;  \/\/\/< used as intermediate value in calculations$/;"	t
Intermediate_UInt	source/Lib/TLibCommon/TypeDef.h	/^typedef       UInt            Intermediate_UInt; \/\/\/< used as intermediate value in calculations$/;"	t
Intermediate_UInt	source/Lib/TLibCommon/TypeDef.h	/^typedef       UInt64          Intermediate_UInt; \/\/\/< used as intermediate value in calculations$/;"	t
InvalidCommandLineArgumentError	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^from pyhhi.build.common.error import InvalidCommandLineArgumentError$/;"	i
InvalidCommandLineArgumentError	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^from pyhhi.build.common.error import InvalidCommandLineArgumentError, InvalidInputParameterError$/;"	i
InvalidCommandLineArgumentError	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^class InvalidCommandLineArgumentError(BaseError):$/;"	c
InvalidInputParameterError	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^from pyhhi.build.common.error import InvalidInputParameterError$/;"	i
InvalidInputParameterError	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^from pyhhi.build.common.error import InvalidCommandLineArgumentError, InvalidInputParameterError$/;"	i
InvalidInputParameterError	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^from pyhhi.build.common.error import InvalidInputParameterError$/;"	i
InvalidInputParameterError	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^class InvalidInputParameterError(BaseError):$/;"	c
IsLastSection	source/Lib/TLibCommon/TComTU.h	/^    Bool IsLastSection() const { return mSection+1>=((1<<mSplitMode)); }$/;"	f	class:TComTU
JVET_K0390_RATE_CTRL	source/Lib/TLibCommon/TypeDef.h	85;"	d
JVET_M0600_RATE_CTRL	source/Lib/TLibCommon/TypeDef.h	87;"	d
KNEE_FUNCTION_INFO	source/Lib/TLibCommon/SEI.h	/^    KNEE_FUNCTION_INFO                   = 141,$/;"	e	enum:SEI::PayloadType
KneePointPair	source/Lib/TLibEncoder/TEncCfg.h	/^  struct KneePointPair$/;"	s	struct:TEncCfg::TEncSEIKneeFunctionInformation
LAMBDA_PREC	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Int LAMBDA_PREC = 1000000;$/;"	v
LAST_SIGNIFICANT_GROUPS	source/Lib/TLibCommon/CommonDef.h	/^static const Int LAST_SIGNIFICANT_GROUPS =                        10 ;$/;"	v
LATEX	doc/Makefile	/^LATEX:=$(shell which xelatex || which pdflatex || which latex)$/;"	m
LATEXFLAGS	doc/Makefile	/^$(DOCNUM)-diff_%.pdf: LATEXFLAGS=--interaction=batchmode$/;"	m
LATEXFLAGS	doc/Makefile	/^LATEXFLAGS:="-shell-escape"$/;"	m
LEVEL1	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL1   = 30,$/;"	e	enum:Level::Name
LEVEL2	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL2   = 60,$/;"	e	enum:Level::Name
LEVEL2_1	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL2_1 = 63,$/;"	e	enum:Level::Name
LEVEL3	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL3   = 90,$/;"	e	enum:Level::Name
LEVEL3_1	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL3_1 = 93,$/;"	e	enum:Level::Name
LEVEL4	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL4   = 120,$/;"	e	enum:Level::Name
LEVEL4_1	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL4_1 = 123,$/;"	e	enum:Level::Name
LEVEL5	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL5   = 150,$/;"	e	enum:Level::Name
LEVEL5_1	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL5_1 = 153,$/;"	e	enum:Level::Name
LEVEL5_2	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL5_2 = 156,$/;"	e	enum:Level::Name
LEVEL6	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL6   = 180,$/;"	e	enum:Level::Name
LEVEL6_1	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL6_1 = 183,$/;"	e	enum:Level::Name
LEVEL6_2	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL6_2 = 186,$/;"	e	enum:Level::Name
LEVEL8_5	source/Lib/TLibCommon/TypeDef.h	/^    LEVEL8_5 = 255,$/;"	e	enum:Level::Name
LEVEL_RANGE	source/Lib/TLibCommon/CommonDef.h	/^static const Int LEVEL_RANGE =                                     30; \/\/\/< G382: max coefficient level in statistics collection$/;"	v
LFCUParam	source/Lib/TLibCommon/TypeDef.h	/^} LFCUParam;$/;"	t	typeref:struct:_LFCUParam
LINUXBUILD	Makefile	/^    LINUXBUILD := TRUE$/;"	m
LOG2_MAX_NUM_COLUMNS_MINUS1	source/Lib/TLibCommon/CommonDef.h	/^static const Int LOG2_MAX_NUM_COLUMNS_MINUS1 =                      7;$/;"	v
LOG2_MAX_NUM_ROWS_MINUS1	source/Lib/TLibCommon/CommonDef.h	/^static const Int LOG2_MAX_NUM_ROWS_MINUS1 =                         7;$/;"	v
LOG2_SCALING_LIST_NEUTRAL_VALUE	source/Lib/TLibCommon/CommonDef.h	/^static const Int LOG2_SCALING_LIST_NEUTRAL_VALUE =                 4 ; \/\/\/< log2 of the value that, when used in a scaling list, has no effect on quantisation$/;"	v
LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP	source/Lib/TLibCommon/CommonDef.h	/^static const Int LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP =      0; \/\/\/< QP to use for lossless coding.$/;"	v
LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP_PRIME	source/Lib/TLibCommon/CommonDef.h	/^static const Int LOSSLESS_AND_MIXED_LOSSLESS_RD_COST_TEST_QP_PRIME =4; \/\/\/< QP' to use for mixed_lossy_lossless coding.$/;"	v
LSB16	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	103;"	d
LUMALVL_TO_DQP_AVG_METHOD	source/Lib/TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_AVG_METHOD = 1, \/\/ use average of CTU to determine luma level$/;"	e	enum:LumaLevelToDQPMode
LUMALVL_TO_DQP_DISABLED	source/Lib/TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_DISABLED   = 0,$/;"	e	enum:LumaLevelToDQPMode
LUMALVL_TO_DQP_MAX_METHOD	source/Lib/TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_MAX_METHOD = 2,  \/\/ use maximum value of CTU to determine luma level$/;"	e	enum:LumaLevelToDQPMode
LUMALVL_TO_DQP_NUM_MODES	source/Lib/TLibCommon/TypeDef.h	/^  LUMALVL_TO_DQP_NUM_MODES  = 3$/;"	e	enum:LumaLevelToDQPMode
LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS	source/Lib/TLibCommon/CommonDef.h	/^static const Int LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS =   4;$/;"	v
LUMA_LEVEL_TO_DQP_LUT_MAXSIZE	source/Lib/TLibCommon/CommonDef.h	/^static const UInt LUMA_LEVEL_TO_DQP_LUT_MAXSIZE =                1024; \/\/\/< max LUT size for QP offset based on luma$/;"	v
Level	source/App/TAppEncoder/TAppEncCfg.cpp	/^namespace Level$/;"	n	file:
Level	source/Lib/TLibCommon/TypeDef.h	/^namespace Level$/;"	n
LevelTierFeatures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^struct LevelTierFeatures$/;"	s
LevelTierFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^struct LevelTierFeatures$/;"	s
LumaLevelToDQPMode	source/Lib/TLibCommon/TypeDef.h	/^enum LumaLevelToDQPMode$/;"	g
LumaLevelToDeltaQPMapping	source/Lib/TLibCommon/TypeDef.h	/^struct LumaLevelToDeltaQPMapping$/;"	s
MACRO_TO_STRING	source/App/TAppEncoder/TAppEncCfg.cpp	63;"	d	file:
MACRO_TO_STRING_HELPER	source/App/TAppEncoder/TAppEncCfg.cpp	62;"	d	file:
MAIN	source/Lib/TLibCommon/TypeDef.h	/^    MAIN = 0,$/;"	e	enum:Level::Tier
MAIN	source/Lib/TLibCommon/TypeDef.h	/^    MAIN = 1,$/;"	e	enum:Profile::Name
MAIN10	source/Lib/TLibCommon/TypeDef.h	/^    MAIN10 = 2,$/;"	e	enum:Profile::Name
MAINREXT	source/Lib/TLibCommon/TypeDef.h	/^    MAINREXT = 4,$/;"	e	enum:Profile::Name
MAINSTILLPICTURE	source/Lib/TLibCommon/TypeDef.h	/^    MAINSTILLPICTURE = 3,$/;"	e	enum:Profile::Name
MASTERING_DISPLAY_COLOUR_VOLUME	source/Lib/TLibCommon/SEI.h	/^    MASTERING_DISPLAY_COLOUR_VOLUME      = 137,$/;"	e	enum:SEI::PayloadType
MATRIX_COEFFICIENTS	source/Lib/TLibCommon/TypeDef.h	/^enum MATRIX_COEFFICIENTS \/\/ Table E.5 (Matrix coefficients)$/;"	g
MATRIX_COEFFICIENTS_BT2020_CONSTANT_LUMINANCE	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT2020_CONSTANT_LUMINANCE     = 10,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT2020_NON_CONSTANT_LUMINANCE	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT2020_NON_CONSTANT_LUMINANCE = 9,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT601_525	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT601_525                     = 6,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT601_625	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT601_625                     = 5,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_BT709	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_BT709                         = 1,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_RESERVED_BY_ITUISOIEC	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_RESERVED_BY_ITUISOIEC         = 3,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_RGB	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_RGB                           = 0,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_SMPTE240	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_SMPTE240                      = 7,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_UNSPECIFIED	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_UNSPECIFIED                   = 2,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_USFCCT47	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_USFCCT47                      = 4,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_COEFFICIENTS_YCGCO	source/Lib/TLibCommon/TypeDef.h	/^  MATRIX_COEFFICIENTS_YCGCO                         = 8,$/;"	e	enum:MATRIX_COEFFICIENTS
MATRIX_MULT	source/Lib/TLibCommon/TypeDef.h	124;"	d
MAXIMUM_INTRA_FILTERED_HEIGHT	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAXIMUM_INTRA_FILTERED_HEIGHT =                   16;$/;"	v
MAXIMUM_INTRA_FILTERED_WIDTH	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAXIMUM_INTRA_FILTERED_WIDTH =                    16;$/;"	v
MAX_ALLOWED_COMP_MODEL_PAIRS	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	61;"	d
MAX_ALLOWED_MODEL_VALUES	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	52;"	d
MAX_BIT_DEPTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	69;"	d
MAX_BIT_DEPTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	90;"	d
MAX_CHROMA_FORMAT_IDC	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	67;"	d
MAX_CHROMA_FORMAT_IDC	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	88;"	d
MAX_CNFUINT64	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^static const UInt64 MAX_CNFUINT64 = std::numeric_limits<UInt64>::max();$/;"	v	file:
MAX_CNFUINT64	source/Lib/TLibDecoder/TDecConformance.cpp	/^static const UInt64 MAX_CNFUINT64 = std::numeric_limits<UInt64>::max();$/;"	v	file:
MAX_CPB_CNT	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_CPB_CNT =                                     32; \/\/\/< Upper bound of (cpb_cnt_minus1 + 1)$/;"	v
MAX_CUT_OFF_FREQUENCY	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	59;"	d
MAX_CU_DEPTH	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_CU_DEPTH =                                     6; \/\/\/< log2(CTUSize)$/;"	v
MAX_CU_SIZE	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_CU_SIZE =                                     64; \/\/\/< = 1<<(MAX_CU_DEPTH)$/;"	v
MAX_DOUBLE	source/Lib/TLibCommon/CommonDef.h	/^static const Double MAX_DOUBLE =                             1.7e+308; \/\/\/< max. value of Double-type value$/;"	v
MAX_ENCODER_DEBLOCKING_QUALITY_LAYERS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_ENCODER_DEBLOCKING_QUALITY_LAYERS =           8 ;$/;"	v
MAX_GOP	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_GOP =                                         64; \/\/\/< max. value of hierarchical GOP size$/;"	v
MAX_HEIGHT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	85;"	d
MAX_IDX_ADAPT_SR	source/Lib/TLibEncoder/TEncSearch.h	/^static const UInt MAX_IDX_ADAPT_SR=33;$/;"	v
MAX_INT	source/Lib/TLibCommon/CommonDef.h	/^static const Int    MAX_INT =                              2147483647; \/\/\/< max. value of signed 32-bit integer$/;"	v
MAX_INTRA_FILTER_DEPTHS	source/Lib/TLibCommon/TComPrediction.h	/^static const UInt MAX_INTRA_FILTER_DEPTHS=5;$/;"	v
MAX_LOG2SCALE_VALUE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	54;"	d
MAX_MATRIX_COEF_NUM	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_MATRIX_COEF_NUM =                            64 ; \/\/\/< max coefficient number for quantization matrix$/;"	v
MAX_MATRIX_SIZE_NUM	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_MATRIX_SIZE_NUM =                             8 ; \/\/\/< max size number for quantization matrix$/;"	v
MAX_NESTING_NUM_LAYER	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NESTING_NUM_LAYER =                           64;$/;"	v
MAX_NESTING_NUM_OPS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NESTING_NUM_OPS =                           1024;$/;"	v
MAX_NUM_CHANNEL_TYPE	source/Lib/TLibCommon/TypeDef.h	/^  MAX_NUM_CHANNEL_TYPE = 2$/;"	e	enum:ChannelType
MAX_NUM_COMPONENT	source/Lib/TLibCommon/TypeDef.h	/^  MAX_NUM_COMPONENT = 3$/;"	e	enum:ComponentID
MAX_NUM_CTX_MOD	source/Lib/TLibCommon/ContextTables.h	49;"	d
MAX_NUM_INTENSITIES	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_INTENSITIES =                            256; \/\/ Maximum nuber of intensity intervals supported in FGC SEI$/;"	v
MAX_NUM_LAYER_IDS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_LAYER_IDS =                               64;$/;"	v
MAX_NUM_LONG_TERM_REF_PICS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_LONG_TERM_REF_PICS =                      33;$/;"	v
MAX_NUM_MODEL_VALUES	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_MODEL_VALUES =                             6; \/\/ Maximum nuber of model values supported in FGC SEI $/;"	v
MAX_NUM_PART_IDXS_IN_CTU_WIDTH	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_PART_IDXS_IN_CTU_WIDTH = MAX_CU_SIZE\/MIN_PU_SIZE; \/\/\/< maximum number of partition indices across the width of a CTU (or height of a CTU)$/;"	v
MAX_NUM_PICS_IN_SOP	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_PICS_IN_SOP =                           1024;$/;"	v
MAX_NUM_PPS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_PPS =                                     64;$/;"	v
MAX_NUM_REF	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_REF =                                     16; \/\/\/< max. number of entries in picture reference list$/;"	v
MAX_NUM_REF_LIST_ADAPT_SR	source/Lib/TLibEncoder/TEncSearch.h	/^static const UInt MAX_NUM_REF_LIST_ADAPT_SR=2;$/;"	v
MAX_NUM_REF_PICS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_REF_PICS =                                16; \/\/\/< max. number of pictures used for reference$/;"	v
MAX_NUM_SAO_CLASSES	source/Lib/TLibCommon/TypeDef.h	753;"	d
MAX_NUM_SPS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_SPS =                                     16;$/;"	v
MAX_NUM_VPS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_NUM_VPS =                                     16;$/;"	v
MAX_QP	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_QP =                                          51;$/;"	v
MAX_QP_OFFSET_LIST_SIZE	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_QP_OFFSET_LIST_SIZE =                          6; \/\/\/< Maximum size of QP offset list is 6 entries$/;"	v
MAX_SAO_TRUNCATED_BITDEPTH	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	52;"	d
MAX_STANDARD_DEVIATION	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	57;"	d
MAX_TIMECODE_SEI_SETS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_TIMECODE_SEI_SETS =                            3; \/\/\/< Maximum number of time sets$/;"	v
MAX_TLAYER	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_TLAYER =                                       7; \/\/\/< Explicit temporal layer QP offset - max number of temporal layer$/;"	v
MAX_TU_SIZE	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_TU_SIZE =                                     32;$/;"	v
MAX_UINT	source/Lib/TLibCommon/CommonDef.h	/^static const UInt   MAX_UINT =                            0xFFFFFFFFU; \/\/\/< max. value of unsigned 32-bit integer$/;"	v
MAX_VPS_NUH_RESERVED_ZERO_LAYER_ID_PLUS1	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_VPS_NUH_RESERVED_ZERO_LAYER_ID_PLUS1 =         1;$/;"	v
MAX_VPS_NUM_HRD_PARAMETERS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_VPS_NUM_HRD_PARAMETERS =                       1;$/;"	v
MAX_VPS_OP_SETS_PLUS1	source/Lib/TLibCommon/CommonDef.h	/^static const Int MAX_VPS_OP_SETS_PLUS1 =                         1024;$/;"	v
MAX_WIDTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	83;"	d
MCTSExtractionInfo	source/Lib/TLibCommon/SEI.h	/^  struct MCTSExtractionInfo$/;"	s	class:SEIMCTSExtractionInfoSet
MCTS_ENC_CHECK	source/Lib/TLibCommon/TypeDef.h	90;"	d
MCTS_EXTRACTION	source/Lib/TLibCommon/TypeDef.h	79;"	d
MCTS_EXTRACTION_INFO_SET	source/Lib/TLibCommon/SEI.h	/^    MCTS_EXTRACTION_INFO_SET             = 158,$/;"	e	enum:SEI::PayloadType
MD5	source/Lib/libmd5/MD5.h	/^  MD5()$/;"	f	class:MD5
MD5	source/Lib/libmd5/MD5.h	/^class MD5$/;"	c
MD5Final	source/Lib/libmd5/libmd5.cpp	/^void MD5Final(unsigned char digest[16], context_md5_t *ctx)$/;"	f
MD5Init	source/Lib/libmd5/libmd5.cpp	/^void MD5Init(context_md5_t *ctx)$/;"	f
MD5STEP	source/Lib/libmd5/libmd5.cpp	167;"	d	file:
MD5Transform	source/Lib/libmd5/libmd5.cpp	/^static void MD5Transform(uint32_t buf[4], uint32_t const in[16])$/;"	f	file:
MD5Update	source/Lib/libmd5/libmd5.cpp	/^void MD5Update(context_md5_t *ctx, unsigned char *buf, unsigned len)$/;"	f
MD5_DIGEST_STRING_LENGTH	source/Lib/libmd5/MD5.h	/^static const UInt MD5_DIGEST_STRING_LENGTH=16;$/;"	v
MDCS_ANGLE_LIMIT	source/Lib/TLibCommon/CommonDef.h	/^static const Int MDCS_ANGLE_LIMIT =                                 4; \/\/\/< 0 = Horizontal\/vertical only, 1 = Horizontal\/vertical +\/- 1, 2 = Horizontal\/vertical +\/- 2 etc...$/;"	v
MDCS_MAXIMUM_HEIGHT	source/Lib/TLibCommon/CommonDef.h	/^static const Int MDCS_MAXIMUM_HEIGHT =                              8; \/\/\/< (measured in pixels) TUs with height greater than this can only use diagonal scan$/;"	v
MDCS_MAXIMUM_WIDTH	source/Lib/TLibCommon/CommonDef.h	/^static const Int MDCS_MAXIMUM_WIDTH =                               8; \/\/\/< (measured in pixels) TUs with width greater than this can only use diagonal scan$/;"	v
MD_ABOVE	source/Lib/TLibCommon/TypeDef.h	/^  MD_ABOVE,             \/\/\/< MVP of above block$/;"	e	enum:MVP_DIR
MD_ABOVE_LEFT	source/Lib/TLibCommon/TypeDef.h	/^  MD_ABOVE_LEFT         \/\/\/< MVP of above left block$/;"	e	enum:MVP_DIR
MD_ABOVE_RIGHT	source/Lib/TLibCommon/TypeDef.h	/^  MD_ABOVE_RIGHT,       \/\/\/< MVP of above right block$/;"	e	enum:MVP_DIR
MD_BELOW_LEFT	source/Lib/TLibCommon/TypeDef.h	/^  MD_BELOW_LEFT,        \/\/\/< MVP of below left block$/;"	e	enum:MVP_DIR
MD_LEFT	source/Lib/TLibCommon/TypeDef.h	/^  MD_LEFT = 0,          \/\/\/< MVP of left block$/;"	e	enum:MVP_DIR
MESEARCH_DIAMOND	source/Lib/TLibCommon/TypeDef.h	/^  MESEARCH_DIAMOND           = 1,$/;"	e	enum:MESearchMethod
MESEARCH_DIAMOND_ENHANCED	source/Lib/TLibCommon/TypeDef.h	/^  MESEARCH_DIAMOND_ENHANCED  = 3,$/;"	e	enum:MESearchMethod
MESEARCH_FULL	source/Lib/TLibCommon/TypeDef.h	/^  MESEARCH_FULL              = 0,$/;"	e	enum:MESearchMethod
MESEARCH_NUMBER_OF_METHODS	source/Lib/TLibCommon/TypeDef.h	/^  MESEARCH_NUMBER_OF_METHODS = 4$/;"	e	enum:MESearchMethod
MESEARCH_SELECTIVE	source/Lib/TLibCommon/TypeDef.h	/^  MESEARCH_SELECTIVE         = 2,$/;"	e	enum:MESearchMethod
MESearchMethod	source/Lib/TLibCommon/TypeDef.h	/^enum MESearchMethod$/;"	g
ME_ENABLE_ROUNDING_OF_MVS	source/Lib/TLibCommon/TypeDef.h	128;"	d
MIN	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	101;"	d
MIN_BIT_DEPTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	68;"	d
MIN_BIT_DEPTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	89;"	d
MIN_CHROMA_FORMAT_IDC	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	66;"	d
MIN_CHROMA_FORMAT_IDC	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	87;"	d
MIN_CUT_OFF_FREQUENCY	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	58;"	d
MIN_HEIGHT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	84;"	d
MIN_LOG2SCALE_VALUE	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	53;"	d
MIN_PU_SIZE	source/Lib/TLibCommon/CommonDef.h	/^static const Int MIN_PU_SIZE =                                      4;$/;"	v
MIN_TU_SIZE	source/Lib/TLibCommon/CommonDef.h	/^static const Int MIN_TU_SIZE =                                      4;$/;"	v
MIN_WIDTH	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	82;"	d
MLS_CG_LOG2_HEIGHT	source/Lib/TLibCommon/CommonDef.h	/^static const Int MLS_CG_LOG2_HEIGHT =                               2;$/;"	v
MLS_CG_LOG2_WIDTH	source/Lib/TLibCommon/CommonDef.h	/^static const Int MLS_CG_LOG2_WIDTH =                                2;$/;"	v
MLS_CG_SIZE	source/Lib/TLibCommon/CommonDef.h	/^static const Int MLS_CG_SIZE =                                      4; \/\/\/< Coefficient group size of 4x4; = MLS_CG_LOG2_WIDTH + MLS_CG_LOG2_HEIGHT$/;"	v
MLS_GRP_NUM	source/Lib/TLibCommon/CommonDef.h	/^static const Int MLS_GRP_NUM =                                     64; \/\/\/< Max number of coefficient groups, max(16, 64)$/;"	v
MODE_INTER	source/Lib/TLibCommon/TypeDef.h	/^  MODE_INTER                 = 0,     \/\/\/< inter-prediction mode$/;"	e	enum:PredMode
MODE_INTRA	source/Lib/TLibCommon/TypeDef.h	/^  MODE_INTRA                 = 1,     \/\/\/< intra-prediction mode$/;"	e	enum:PredMode
MRG_MAX_NUM_CANDS	source/Lib/TLibCommon/CommonDef.h	/^static const Int MRG_MAX_NUM_CANDS =                                5; \/\/\/< MERGE$/;"	v
MSB16	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	102;"	d
MSEyuvframe	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Double MSEyuvframe[MAX_NUM_COMPONENT];$/;"	m	struct:TEncAnalyze::ResultData
MSSSIM	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Double MSSSIM[MAX_NUM_COMPONENT];$/;"	m	struct:TEncAnalyze::ResultData
MVP_DIR	source/Lib/TLibCommon/TypeDef.h	/^enum MVP_DIR$/;"	g
MapData	source/Lib/TLibCommon/TComSlice.h	/^  struct MapData$/;"	s	class:ParameterSetMap
MapStrToCostMode	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const struct MapStrToCostMode$/;"	s	file:
MapStrToLevel	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const struct MapStrToLevel$/;"	s	file:
MapStrToProfile	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const struct MapStrToProfile$/;"	s	file:
MapStrToScalingListMode	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const struct MapStrToScalingListMode$/;"	s	file:
MapStrToTier	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const struct MapStrToTier$/;"	s	file:
MapStrToUIProfileName	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const struct MapStrToUIProfileName$/;"	s	file:
MatrixType	source/Lib/TLibCommon/TComRom.cpp	/^const TChar *MatrixType[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM] =$/;"	v
MatrixType_DC	source/Lib/TLibCommon/TComRom.cpp	/^const TChar *MatrixType_DC[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM] =$/;"	v
MctsExtractorTComPicSym	source/Lib/TLibCommon/TComPicSym.h	/^class MctsExtractorTComPicSym {$/;"	c
MetaLogEntry	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^struct MetaLogEntry$/;"	s
MetaLogParseException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^class MetaLogParseException: public RuntimeError$/;"	c
MismatchedIndexesException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^class MismatchedIndexesException: public RuntimeError$/;"	c
MotionVector	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  MotionVector() : x(0), y(0), error(INT_LEAST32_MAX) {}$/;"	f	struct:MotionVector
MotionVector	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^struct MotionVector$/;"	s
MsvcRegistry	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^class MsvcRegistry(object):$/;"	c
NALU_TYPE	source/App/Parcat/parcat.cpp	/^const char * NALU_TYPE[] =$/;"	v
NALUnit	source/Lib/TLibCommon/NAL.h	/^  NALUnit($/;"	f	struct:NALUnit
NALUnit	source/Lib/TLibCommon/NAL.h	/^  NALUnit() {}$/;"	f	struct:NALUnit
NALUnit	source/Lib/TLibCommon/NAL.h	/^  NALUnit(const NALUnit &src)$/;"	f	struct:NALUnit
NALUnit	source/Lib/TLibCommon/NAL.h	/^struct NALUnit$/;"	s
NALUnitEBSP	source/Lib/TLibCommon/NAL.h	/^struct NALUnitEBSP : public NALUnit$/;"	s
NALUnitEBSP	source/Lib/TLibEncoder/NALwrite.h	/^inline NALUnitEBSP::NALUnitEBSP(OutputNALUnit& nalu)$/;"	f	class:NALUnitEBSP
NAL_UNIT_ACCESS_UNIT_DELIMITER	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_ACCESS_UNIT_DELIMITER,   \/\/ 35$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_BLA_N_LP	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_BLA_N_LP,    \/\/ 18$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_BLA_W_LP	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_BLA_W_LP,    \/\/ 16$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_BLA_W_RADL	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_BLA_W_RADL,  \/\/ 17$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_CRA	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_CRA,         \/\/ 21$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_IDR_N_LP	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_IDR_N_LP,    \/\/ 20$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_IDR_W_RADL	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_IDR_W_RADL,  \/\/ 19$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RADL_N	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RADL_N,      \/\/ 6$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RADL_R	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RADL_R,      \/\/ 7$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RASL_N	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RASL_N,      \/\/ 8$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_RASL_R	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_RASL_R,      \/\/ 9$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_STSA_N	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_STSA_N,      \/\/ 4$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_STSA_R	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_STSA_R,      \/\/ 5$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TRAIL_N	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TRAIL_N = 0, \/\/ 0$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TRAIL_R	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TRAIL_R,     \/\/ 1$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TSA_N	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TSA_N,       \/\/ 2$/;"	e	enum:NalUnitType
NAL_UNIT_CODED_SLICE_TSA_R	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_CODED_SLICE_TSA_R,       \/\/ 3$/;"	e	enum:NalUnitType
NAL_UNIT_EOB	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_EOB,                     \/\/ 37$/;"	e	enum:NalUnitType
NAL_UNIT_EOS	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_EOS,                     \/\/ 36$/;"	e	enum:NalUnitType
NAL_UNIT_FILLER_DATA	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_FILLER_DATA,             \/\/ 38$/;"	e	enum:NalUnitType
NAL_UNIT_INVALID	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_INVALID,$/;"	e	enum:NalUnitType
NAL_UNIT_PPS	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_PPS,                     \/\/ 34$/;"	e	enum:NalUnitType
NAL_UNIT_PREFIX_SEI	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_PREFIX_SEI,              \/\/ 39$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_IRAP_VCL22	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_IRAP_VCL22,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_IRAP_VCL23	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_IRAP_VCL23,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL41	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL41,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL42	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL42,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL43	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL43,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL44	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL44,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL45	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL45,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL46	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL46,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_NVCL47	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_NVCL47,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL24	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL24,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL25	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL25,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL26	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL26,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL27	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL27,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL28	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL28,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL29	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL29,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL30	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL30,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL31	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL31,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_N10	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_N10,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_N12	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_N12,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_N14	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_N14,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_R11	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_R11,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_R13	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_R13,$/;"	e	enum:NalUnitType
NAL_UNIT_RESERVED_VCL_R15	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_RESERVED_VCL_R15,$/;"	e	enum:NalUnitType
NAL_UNIT_SPS	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_SPS,                     \/\/ 33$/;"	e	enum:NalUnitType
NAL_UNIT_SUFFIX_SEI	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_SUFFIX_SEI,              \/\/ 40$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_48	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_48,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_49	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_49,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_50	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_50,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_51	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_51,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_52	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_52,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_53	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_53,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_54	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_54,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_55	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_55,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_56	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_56,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_57	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_57,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_58	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_58,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_59	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_59,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_60	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_60,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_61	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_61,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_62	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_62,$/;"	e	enum:NalUnitType
NAL_UNIT_UNSPECIFIED_63	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_UNSPECIFIED_63,$/;"	e	enum:NalUnitType
NAL_UNIT_VPS	source/Lib/TLibCommon/TypeDef.h	/^  NAL_UNIT_VPS,                     \/\/ 32$/;"	e	enum:NalUnitType
NDEBUG	source/Lib/TLibCommon/CommonDef.h	43;"	d
NEIGHBOURHOOD_00_CONTEXT_1_THRESHOLD_4x4	source/Lib/TLibCommon/ContextTables.h	92;"	d
NEIGHBOURHOOD_00_CONTEXT_2_THRESHOLD_4x4	source/Lib/TLibCommon/ContextTables.h	93;"	d
NONE	source/Lib/TLibCommon/TypeDef.h	/^    NONE     = 0,$/;"	e	enum:Level::Name
NONE	source/Lib/TLibCommon/TypeDef.h	/^    NONE = 0,$/;"	e	enum:Profile::Name
NOT_VALID	source/Lib/TLibCommon/CommonDef.h	/^static const Int NOT_VALID =                                       -1;$/;"	v
NO_DISPLAY	source/Lib/TLibCommon/SEI.h	/^    NO_DISPLAY                           = 135,$/;"	e	enum:SEI::PayloadType
NO_SLICES	source/Lib/TLibCommon/TypeDef.h	/^  NO_SLICES              = 0,          \/\/\/< don't use slices \/ slice segments$/;"	e	enum:SliceConstraint
NTAPS_CHROMA	source/Lib/TLibCommon/TComInterpolationFilter.h	48;"	d
NTAPS_LUMA	source/Lib/TLibCommon/TComInterpolationFilter.h	47;"	d
NULL	source/Lib/TLibCommon/CommonDef.h	108;"	d
NUMBER_INPUT_COLOUR_SPACE_CONVERSIONS	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_INPUT_COLOUR_SPACE_CONVERSIONS = 4$/;"	e	enum:InputColourSpaceConversion
NUMBER_OF_HASHTYPES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_HASHTYPES      = 4$/;"	e	enum:HashType
NUMBER_OF_PART_SIZES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_PART_SIZES = 8$/;"	e	enum:PartSize
NUMBER_OF_PREDICTION_MODES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_PREDICTION_MODES = 2,$/;"	e	enum:PredMode
NUMBER_OF_RDPCM_MODES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_RDPCM_MODES = 3$/;"	e	enum:RDPCMMode
NUMBER_OF_RDPCM_SIGNALLING_MODES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_RDPCM_SIGNALLING_MODES = 2$/;"	e	enum:RDPCMSignallingMode
NUMBER_OF_SECTIONS	source/Lib/TLibCommon/TComTU.cpp	/^\/*static*\/ const UInt TComTU::NUMBER_OF_SECTIONS[TComTU::NUMBER_OF_SPLIT_MODES] = { 1, 2, 4 };$/;"	m	class:TComTU	file:
NUMBER_OF_SECTIONS	source/Lib/TLibCommon/TComTU.h	/^    static const UInt NUMBER_OF_SECTIONS[NUMBER_OF_SPLIT_MODES];$/;"	m	class:TComTU
NUMBER_OF_SLICE_CONSTRAINT_MODES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_SLICE_CONSTRAINT_MODES = 4$/;"	e	enum:SliceConstraint
NUMBER_OF_SLICE_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_SLICE_TYPES = 3$/;"	e	enum:SliceType
NUMBER_OF_SPLIT_MODES	source/Lib/TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
NUMBER_OF_STORED_RESIDUAL_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  NUMBER_OF_STORED_RESIDUAL_TYPES = 2$/;"	e	enum:StoredResidualType
NUMBER_OF_TIERS	source/Lib/TLibCommon/TypeDef.h	/^    NUMBER_OF_TIERS = 2$/;"	e	enum:Level::Tier
NUM_8x8_BLKS_16x16	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	71;"	d
NUM_8x8_BLKS_16x16	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	92;"	d
NUM_ABS_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	133;"	d
NUM_ABS_FLAG_CTX_CHROMA	source/Lib/TLibCommon/ContextTables.h	130;"	d
NUM_ABS_FLAG_CTX_LUMA	source/Lib/TLibCommon/ContextTables.h	129;"	d
NUM_ABS_FLAG_CTX_PER_SET	source/Lib/TLibCommon/ContextTables.h	115;"	d
NUM_CHROMA_FORMAT	source/Lib/TLibCommon/TypeDef.h	/^  NUM_CHROMA_FORMAT = 4$/;"	e	enum:ChromaFormat
NUM_CHROMA_MODE	source/Lib/TLibCommon/CommonDef.h	/^static const Int NUM_CHROMA_MODE =                                  5; \/\/\/< total number of chroma modes$/;"	v
NUM_CHROMA_PRED_CTX	source/Lib/TLibCommon/ContextTables.h	62;"	d
NUM_CHROMA_QP_ADJ_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	65;"	d
NUM_CHROMA_QP_ADJ_IDC_CTX	source/Lib/TLibCommon/ContextTables.h	66;"	d
NUM_CROSS_COMPONENT_PREDICTION_CTX	source/Lib/TLibCommon/ContextTables.h	161;"	d
NUM_CTX_LAST_FLAG_SETS	source/Lib/TLibCommon/ContextTables.h	106;"	d
NUM_CTX_LAST_FLAG_XY	source/Lib/TLibCommon/ContextTables.h	108;"	d
NUM_CTX_SETS_CHROMA	source/Lib/TLibCommon/ContextTables.h	120;"	d
NUM_CTX_SETS_LUMA	source/Lib/TLibCommon/ContextTables.h	119;"	d
NUM_CUT_OFF_FREQ	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	79;"	d
NUM_CU_TRANSQUANT_BYPASS_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	159;"	d
NUM_DELTA_QP_CTX	source/Lib/TLibCommon/ContextTables.h	71;"	d
NUM_EDGE_DIR	source/Lib/TLibCommon/TypeDef.h	/^  NUM_EDGE_DIR = 2$/;"	e	enum:DeblockEdgeDir
NUM_EXPLICIT_RDPCM_DIR_CTX	source/Lib/TLibCommon/ContextTables.h	75;"	d
NUM_EXPLICIT_RDPCM_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	74;"	d
NUM_INTER_DIR_CTX	source/Lib/TLibCommon/ContextTables.h	63;"	d
NUM_INTRA_MODE	source/Lib/TLibCommon/CommonDef.h	/^static const Int NUM_INTRA_MODE =                                  36;$/;"	v
NUM_INTRA_PREDICT_CTX	source/Lib/TLibCommon/ContextTables.h	60;"	d
NUM_LONG_TERM_REF_PIC_SPS	source/Lib/TLibCommon/CommonDef.h	/^static const Int NUM_LONG_TERM_REF_PIC_SPS =                        0;$/;"	v
NUM_MERGE_FLAG_EXT_CTX	source/Lib/TLibCommon/ContextTables.h	54;"	d
NUM_MERGE_IDX_EXT_CTX	source/Lib/TLibCommon/ContextTables.h	55;"	d
NUM_MOST_PROBABLE_MODES	source/Lib/TLibCommon/TComDataCU.h	/^static const UInt NUM_MOST_PROBABLE_MODES=3;$/;"	v
NUM_MVP_IDX_CTX	source/Lib/TLibCommon/ContextTables.h	152;"	d
NUM_MV_PREDICTORS	source/Lib/TLibEncoder/TEncSearch.h	/^static const UInt NUM_MV_PREDICTORS=3;$/;"	v
NUM_MV_RES_CTX	source/Lib/TLibCommon/ContextTables.h	64;"	d
NUM_ONE_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	132;"	d
NUM_ONE_FLAG_CTX_CHROMA	source/Lib/TLibCommon/ContextTables.h	127;"	d
NUM_ONE_FLAG_CTX_LUMA	source/Lib/TLibCommon/ContextTables.h	126;"	d
NUM_ONE_FLAG_CTX_PER_SET	source/Lib/TLibCommon/ContextTables.h	114;"	d
NUM_PART_SIZE_CTX	source/Lib/TLibCommon/ContextTables.h	57;"	d
NUM_PIC_YUV	source/Lib/TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon9
NUM_PPS_EXTENSION_FLAGS	source/Lib/TLibCommon/TypeDef.h	/^  NUM_PPS_EXTENSION_FLAGS = 8$/;"	e	enum:PPSExtensionFlagIndex
NUM_PRED_BUF	source/Lib/TLibCommon/TComPrediction.h	/^  NUM_PRED_BUF=2$/;"	e	enum:PRED_BUF_E
NUM_PRED_MODE_CTX	source/Lib/TLibCommon/ContextTables.h	58;"	d
NUM_QT_CBF_CTX_PER_SET	source/Lib/TLibCommon/ContextTables.h	143;"	d
NUM_QT_CBF_CTX_SETS	source/Lib/TLibCommon/ContextTables.h	141;"	d
NUM_QT_ROOT_CBF_CTX	source/Lib/TLibCommon/ContextTables.h	70;"	d
NUM_REF_NO_CTX	source/Lib/TLibCommon/ContextTables.h	68;"	d
NUM_REF_PIC_LIST_01	source/Lib/TLibCommon/TypeDef.h	/^  NUM_REF_PIC_LIST_01          = 2,$/;"	e	enum:RefPicList
NUM_SAO_BO_CLASSES	source/Lib/TLibCommon/TypeDef.h	571;"	d
NUM_SAO_BO_CLASSES_LOG2	source/Lib/TLibCommon/TypeDef.h	570;"	d
NUM_SAO_CABACSTATE_LABELS	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  NUM_SAO_CABACSTATE_LABELS$/;"	e	enum:SAOCabacStateLablesRDO
NUM_SAO_EO_CLASSES	source/Lib/TLibCommon/TypeDef.h	/^  NUM_SAO_EO_CLASSES,$/;"	e	enum:SAOEOClasses
NUM_SAO_EO_TYPES_LOG2	source/Lib/TLibCommon/TypeDef.h	558;"	d
NUM_SAO_MERGE_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	154;"	d
NUM_SAO_MERGE_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  NUM_SAO_MERGE_TYPES$/;"	e	enum:SAOModeMergeTypes
NUM_SAO_MODES	source/Lib/TLibCommon/TypeDef.h	/^  NUM_SAO_MODES$/;"	e	enum:SAOMode
NUM_SAO_NEW_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  NUM_SAO_NEW_TYPES$/;"	e	enum:SAOModeNewTypes
NUM_SAO_TYPE_IDX_CTX	source/Lib/TLibCommon/ContextTables.h	155;"	d
NUM_SIG_CG_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	73;"	d
NUM_SIG_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	100;"	d
NUM_SIG_FLAG_CTX_CHROMA	source/Lib/TLibCommon/ContextTables.h	82;"	d
NUM_SIG_FLAG_CTX_LUMA	source/Lib/TLibCommon/ContextTables.h	81;"	d
NUM_SKIP_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	52;"	d
NUM_SPLIT_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	51;"	d
NUM_SPS_EXTENSION_FLAGS	source/Lib/TLibCommon/TypeDef.h	/^  NUM_SPS_EXTENSION_FLAGS = 8$/;"	e	enum:SPSExtensionFlagIndex
NUM_TRANSFORMSKIP_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	157;"	d
NUM_TRANS_SUBDIV_FLAG_CTX	source/Lib/TLibCommon/ContextTables.h	69;"	d
NVM_BITS	source/Lib/TLibCommon/CommonDef.h	105;"	d
NVM_COMPILEDBY	source/Lib/TLibCommon/CommonDef.h	75;"	d
NVM_COMPILEDBY	source/Lib/TLibCommon/CommonDef.h	84;"	d
NVM_COMPILEDBY	source/Lib/TLibCommon/CommonDef.h	86;"	d
NVM_COMPILEDBY	source/Lib/TLibCommon/CommonDef.h	90;"	d
NVM_ONARCH	source/Lib/TLibCommon/CommonDef.h	77;"	d
NVM_ONARCH	source/Lib/TLibCommon/CommonDef.h	79;"	d
NVM_ONOS	source/Lib/TLibCommon/CommonDef.h	100;"	d
NVM_ONOS	source/Lib/TLibCommon/CommonDef.h	102;"	d
NVM_ONOS	source/Lib/TLibCommon/CommonDef.h	94;"	d
NVM_ONOS	source/Lib/TLibCommon/CommonDef.h	96;"	d
NVM_ONOS	source/Lib/TLibCommon/CommonDef.h	98;"	d
NV_VERSION	source/Lib/TLibCommon/CommonDef.h	68;"	d
NalUnitType	source/App/Parcat/parcat.cpp	/^enum NalUnitType$/;"	g	file:
NalUnitType	source/Lib/TLibCommon/TypeDef.h	/^enum NalUnitType$/;"	g
Name	source/Lib/TLibCommon/TypeDef.h	/^  enum Name$/;"	g	namespace:Level
Name	source/Lib/TLibCommon/TypeDef.h	/^  enum Name$/;"	g	namespace:Profile
Names	source/Lib/Utilities/program_options_lite.h	/^        Names() : opt(0) {};$/;"	f	struct:df::program_options_lite::Options::Names
Names	source/Lib/Utilities/program_options_lite.h	/^      struct Names$/;"	s	struct:df::program_options_lite::Options
NamesMap	source/Lib/Utilities/program_options_lite.h	/^      typedef std::map<std::string, NamesPtrList> NamesMap;$/;"	t	struct:df::program_options_lite::Options
NamesPtrList	source/Lib/Utilities/program_options_lite.h	/^      typedef std::list<Names*> NamesPtrList;$/;"	t	struct:df::program_options_lite::Options
NdkFinder	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^class NdkFinder(object):$/;"	c
NonContiguousQPSetException	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^class NonContiguousQPSetException: public RuntimeError$/;"	c
O0043_BEST_EFFORT_DECODING	source/Lib/TLibCommon/TypeDef.h	126;"	d
OMNI_VIEWPORT	source/Lib/TLibCommon/SEI.h	/^    OMNI_VIEWPORT                        = 156,$/;"	e	enum:SEI::PayloadType
OPTIONAL	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    OPTIONAL=1,$/;"	e	enum:ProfileFeatures::TRISTATE
OPTIONAL	source/Lib/TLibDecoder/TDecConformance.h	/^  OPTIONAL=1,$/;"	e	enum:TRISTATE
OmniViewport	source/Lib/TLibCommon/SEI.h	/^  struct OmniViewport$/;"	s	class:SEIOmniViewport
Option	source/Lib/Utilities/program_options_lite.h	/^      Option(const std::string& name, T& storage, T default_val, const std::string& desc)$/;"	f	struct:df::program_options_lite::Option
Option	source/Lib/Utilities/program_options_lite.h	/^    struct Option : public OptionBase$/;"	s	namespace:df::program_options_lite
OptionBase	source/Lib/Utilities/program_options_lite.h	/^      OptionBase(const std::string& name, const std::string& desc)$/;"	f	struct:df::program_options_lite::OptionBase
OptionBase	source/Lib/Utilities/program_options_lite.h	/^    struct OptionBase$/;"	s	namespace:df::program_options_lite
OptionFunc	source/Lib/Utilities/program_options_lite.h	/^      OptionFunc(const std::string& name, Options& parent_, Func *func_, const std::string& desc)$/;"	f	struct:df::program_options_lite::OptionFunc
OptionFunc	source/Lib/Utilities/program_options_lite.h	/^    struct OptionFunc : public OptionBase$/;"	s	namespace:df::program_options_lite
OptionSpecific	source/Lib/Utilities/program_options_lite.h	/^      OptionSpecific(Options& parent_) : parent(parent_) {}$/;"	f	class:df::program_options_lite::OptionSpecific
OptionSpecific	source/Lib/Utilities/program_options_lite.h	/^    class OptionSpecific$/;"	c	namespace:df::program_options_lite
OptionWriter	source/Lib/Utilities/program_options_lite.cpp	/^      OptionWriter(Options& rOpts, ErrorReporter& err)$/;"	f	struct:df::program_options_lite::OptionWriter
OptionWriter	source/Lib/Utilities/program_options_lite.cpp	/^    struct OptionWriter$/;"	s	namespace:df::program_options_lite	file:
OptionalValue	source/App/TAppEncoder/TAppEncCfg.h	/^    OptionalValue() : bPresent(false), value() { }$/;"	f	struct:TAppEncCfg::OptionalValue
OptionalValue	source/App/TAppEncoder/TAppEncCfg.h	/^  struct OptionalValue$/;"	s	class:TAppEncCfg
Options	source/Lib/Utilities/program_options_lite.h	/^    struct Options$/;"	s	namespace:df::program_options_lite
OutputDashedLine	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void OutputDashedLine(const TChar *pText)$/;"	f	class:TComCodingStatistics
OutputLine	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void OutputLine(const TChar *pName, const TChar sep, UInt width, const TChar *pSubClassStr, const SStat &sCABAC, const SStat &sEP)$/;"	f	class:TComCodingStatistics
OutputLine	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void OutputLine(const TChar *pName, const TChar sep, const TChar *pWidthString, const TChar *pSubClassStr,  const SStat &sEP)$/;"	f	class:TComCodingStatistics
OutputLine	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void OutputLine(const TChar *pName, const TChar sep, const TChar *pWidthString, const TChar *pSubClassStr, const SStat &sCABAC, const SStat &sEP)$/;"	f	class:TComCodingStatistics
OutputLogControl	source/Lib/TLibEncoder/TEncAnalyze.h	/^  struct OutputLogControl$/;"	s	class:TEncAnalyze
OutputNALUnit	source/Lib/TLibEncoder/NALwrite.h	/^  OutputNALUnit($/;"	f	struct:OutputNALUnit
OutputNALUnit	source/Lib/TLibEncoder/NALwrite.h	/^struct OutputNALUnit : public NALUnit$/;"	s
PAN_SCAN_RECT	source/Lib/TLibCommon/SEI.h	/^    PAN_SCAN_RECT                        = 2,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PCMLFDisableProcess	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::PCMLFDisableProcess (TComPic* pcPic)$/;"	f	class:TComSampleAdaptiveOffset
PICTURE_SNAPSHOT	source/Lib/TLibCommon/SEI.h	/^    PICTURE_SNAPSHOT                     = 15,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PICTURE_TIMING	source/Lib/TLibCommon/SEI.h	/^    PICTURE_TIMING                       = 1,$/;"	e	enum:SEI::PayloadType
PIC_YUV_ORG	source/Lib/TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon9
PIC_YUV_REC	source/Lib/TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon9
PIC_YUV_T	source/Lib/TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	t	class:TComPic	typeref:enum:TComPic::__anon9
PIC_YUV_TRUE_ORG	source/Lib/TLibCommon/TComPic.h	/^  typedef enum { PIC_YUV_ORG=0, PIC_YUV_REC=1, PIC_YUV_TRUE_ORG=2, NUM_PIC_YUV=3 } PIC_YUV_T;$/;"	e	enum:TComPic::__anon9
PLANAR_IDX	source/Lib/TLibCommon/CommonDef.h	/^static const Int PLANAR_IDX =                                       0;$/;"	v
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	363;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	366;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	387;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	393;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	396;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	402;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	408;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	412;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	415;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	418;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	421;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	427;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	432;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	435;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	339;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	342;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	345;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	348;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	351;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	354;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	357;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	360;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	363;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	366;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	369;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	372;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	375;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	378;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	381;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	387;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	393;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	412;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	417;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	420;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
POCParseException	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^    POCParseException( const std::string& pocLine ): m_pocLine( pocLine ) { }$/;"	f	class:POCParseException
POCParseException	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^class POCParseException: public RuntimeError$/;"	c
POST_FILTER_HINT	source/Lib/TLibCommon/SEI.h	/^    POST_FILTER_HINT                     = 22,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
POS_2	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	106;"	d
POS_30	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	105;"	d
PPS	source/App/Parcat/parcat.cpp	/^  PPS,                     \/\/ 34$/;"	e	enum:NalUnitType	file:
PPSExtensionFlagIndex	source/Lib/TLibCommon/TypeDef.h	/^enum PPSExtensionFlagIndex$/;"	g
PPSNeedsWriting	source/Lib/TLibEncoder/TEncTop.cpp	/^Bool TEncTop::PPSNeedsWriting(Int ppsId)$/;"	f	class:TEncTop
PPS_EXT__REXT	source/Lib/TLibCommon/TypeDef.h	/^  PPS_EXT__REXT           = 0,$/;"	e	enum:PPSExtensionFlagIndex
PRED_BUF	source/Lib/TLibCommon/TComPrediction.h	/^} PRED_BUF;$/;"	t	typeref:enum:PRED_BUF_E
PRED_BUF_E	source/Lib/TLibCommon/TComPrediction.h	/^typedef enum PRED_BUF_E$/;"	g
PRED_BUF_FILTERED	source/Lib/TLibCommon/TComPrediction.h	/^  PRED_BUF_FILTERED=1,$/;"	e	enum:PRED_BUF_E
PRED_BUF_UNFILTERED	source/Lib/TLibCommon/TComPrediction.h	/^  PRED_BUF_UNFILTERED=0,$/;"	e	enum:PRED_BUF_E
PREFIX_SEI	source/App/Parcat/parcat.cpp	/^  PREFIX_SEI,              \/\/ 39$/;"	e	enum:NalUnitType	file:
PRINT_CONSTANT	source/Lib/TLibCommon/Debug.h	58;"	d
PRINT_MACRO_VALUES	source/Lib/TLibCommon/TypeDef.h	63;"	d
PRINT_NALUS	source/App/Parcat/parcat.cpp	40;"	d	file:
PRINT_RPS_INFO	source/Lib/TLibCommon/TypeDef.h	77;"	d
PROGRESSIVE_REFINEMENT_SEGMENT_END	source/Lib/TLibCommon/SEI.h	/^    PROGRESSIVE_REFINEMENT_SEGMENT_END   = 17,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PROGRESSIVE_REFINEMENT_SEGMENT_START	source/Lib/TLibCommon/SEI.h	/^    PROGRESSIVE_REFINEMENT_SEGMENT_START = 16,  \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
PSLICE_CHROMA_ABS_CONTEXT	source/Lib/TLibCommon/ContextTables.h	411;"	d
PSLICE_CHROMA_CBF_CONTEXT	source/Lib/TLibCommon/ContextTables.h	302;"	d
PSLICE_CHROMA_LAST_POSITION_CONTEXT	source/Lib/TLibCommon/ContextTables.h	336;"	d
PSLICE_CHROMA_ONE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	407;"	d
PSLICE_CHROMA_SIGNIFICANCE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	378;"	d
PSLICE_LUMA_ABS_CONTEXT	source/Lib/TLibCommon/ContextTables.h	402;"	d
PSLICE_LUMA_CBF_CONTEXT	source/Lib/TLibCommon/ContextTables.h	298;"	d
PSLICE_LUMA_LAST_POSITION_CONTEXT	source/Lib/TLibCommon/ContextTables.h	332;"	d
PSLICE_LUMA_ONE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	398;"	d
PSLICE_LUMA_SIGNIFICANCE_CONTEXT	source/Lib/TLibCommon/ContextTables.h	373;"	d
PTL_TRACE_TEXT	source/Lib/TLibDecoder/TDecCAVLC.cpp	1629;"	d	file:
PTL_TRACE_TEXT	source/Lib/TLibDecoder/TDecCAVLC.cpp	1706;"	d	file:
PTL_TRACE_TEXT	source/Lib/TLibEncoder/TEncCavlc.cpp	1148;"	d	file:
PTL_TRACE_TEXT	source/Lib/TLibEncoder/TEncCavlc.cpp	1199;"	d	file:
PY	Makefile	/^    PY := $(wildcard c:\/windows\/py.*)$/;"	m
PYTHON_LAUNCHER	Makefile	/^      PYTHON_LAUNCHER := $(notdir $(PY))$/;"	m
PYTHON_LAUNCHER	Makefile	/^      PYTHON_LAUNCHER := python$/;"	m
PYTHON_LAUNCHER	Makefile	/^    PYTHON_LAUNCHER := python3$/;"	m
P_SLICE	source/Lib/TLibCommon/TypeDef.h	/^  P_SLICE               = 1,$/;"	e	enum:SliceType
PanScanRect	source/Lib/TLibCommon/SEI.h	/^  struct PanScanRect$/;"	s	class:SEIPanScanRect
ParameterSetManager	source/Lib/TLibCommon/TComSlice.cpp	/^ParameterSetManager::ParameterSetManager()$/;"	f	class:ParameterSetManager
ParameterSetManager	source/Lib/TLibCommon/TComSlice.h	/^class ParameterSetManager$/;"	c
ParameterSetMap	source/Lib/TLibCommon/TComSlice.h	/^  ParameterSetMap(Int maxId)$/;"	f	class:ParameterSetMap
ParameterSetMap	source/Lib/TLibCommon/TComSlice.h	/^template <class T> class ParameterSetMap$/;"	c
Parent	source/Lib/TLibCommon/TComTU.h	/^          TComTU *Parent()       { return mpParent; }$/;"	f	class:TComTU
Parent	source/Lib/TLibCommon/TComTU.h	/^    const TComTU *Parent() const { return mpParent; }$/;"	f	class:TComTU
ParseFailure	source/Lib/Utilities/program_options_lite.h	/^      ParseFailure(std::string arg0, std::string val0) throw()$/;"	f	struct:df::program_options_lite::ParseFailure
ParseFailure	source/Lib/Utilities/program_options_lite.h	/^    struct ParseFailure : public std::exception$/;"	s	namespace:df::program_options_lite
PartSize	source/Lib/TLibCommon/TypeDef.h	/^enum PartSize$/;"	g
PayloadType	source/Lib/TLibCommon/SEI.h	/^  enum PayloadType$/;"	g	class:SEI
Pel	source/Lib/TLibCommon/TypeDef.h	/^typedef       Int             Pel;               \/\/\/< pixel type$/;"	t
Pel	source/Lib/TLibCommon/TypeDef.h	/^typedef       Short           Pel;               \/\/\/< pixel type$/;"	t
PlatformInfo	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    class PlatformInfo(object):$/;"	c	class:Toolset
Point	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^struct Point$/;"	s
PredMode	source/Lib/TLibCommon/TypeDef.h	/^enum PredMode$/;"	g
ProcessChannelSection	source/Lib/TLibCommon/TComTU.h	/^    Bool ProcessChannelSection(const ChannelType chType)       const { return mRect[chType].width != 0; }$/;"	f	class:TComTU
ProcessComponentSection	source/Lib/TLibCommon/TComTU.h	/^    Bool ProcessComponentSection(const ComponentID compID)     const { return mRect[compID].width != 0; }$/;"	f	class:TComTU
ProcessingAllQuadrants	source/Lib/TLibCommon/TComTU.h	/^    Bool ProcessingAllQuadrants(const ComponentID compID)      const { return mCodeAll[compID]; }$/;"	f	class:TComTU
Profile	source/Lib/TLibCommon/TypeDef.h	/^namespace Profile$/;"	n
ProfileFeatures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^struct ProfileFeatures$/;"	s
ProfileFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^struct ProfileFeatures$/;"	s
ProfileLevelTierFeatures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    ProfileLevelTierFeatures() : m_pProfile(0), m_pLevelTier(0), m_tier(Level::MAIN), m_maxRawCtuBits(0) { }$/;"	f	class:ProfileLevelTierFeatures
ProfileLevelTierFeatures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^class ProfileLevelTierFeatures$/;"	c
ProfileLevelTierFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^    ProfileLevelTierFeatures() : m_pProfile(0), m_pLevelTier(0), m_hbrFactor(0), m_tier(Level::MAIN), m_maxRawCtuBits(0) { }$/;"	f	class:ProfileLevelTierFeatures
ProfileLevelTierFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^class ProfileLevelTierFeatures$/;"	c
ProfileTierLevel	source/Lib/TLibCommon/TComSlice.cpp	/^ProfileTierLevel::ProfileTierLevel()$/;"	f	class:ProfileTierLevel
ProfileTierLevel	source/Lib/TLibCommon/TComSlice.h	/^class ProfileTierLevel$/;"	c
QP_BITS	source/Lib/TLibCommon/TComTrQuant.h	54;"	d
QUAD_SPLIT	source/Lib/TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
QUANT_SHIFT	source/Lib/TLibCommon/CommonDef.h	/^static const Int QUANT_SHIFT =                                     14; \/\/\/< Q(4) = 2^14$/;"	v
Q_FORMAT_SCALING	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	64;"	d
Qp	source/Lib/TLibCommon/TComTrQuant.h	/^  Int Qp;$/;"	m	struct:QpParam
QpParam	source/Lib/TLibCommon/TComTrQuant.cpp	/^QpParam::QpParam(const Int           qpy,$/;"	f	class:QpParam
QpParam	source/Lib/TLibCommon/TComTrQuant.cpp	/^QpParam::QpParam(const TComDataCU &cu, const ComponentID compID)$/;"	f	class:QpParam
QpParam	source/Lib/TLibCommon/TComTrQuant.h	/^struct QpParam$/;"	s
R64_IDCT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const int8_t R64_IDCT[64][64] =$/;"	v	file:
RADL_N	source/App/Parcat/parcat.cpp	/^  RADL_N,      \/\/ 6$/;"	e	enum:NalUnitType	file:
RADL_R	source/App/Parcat/parcat.cpp	/^  RADL_R,      \/\/ 7$/;"	e	enum:NalUnitType	file:
RASL_N	source/App/Parcat/parcat.cpp	/^  RASL_N,      \/\/ 8$/;"	e	enum:NalUnitType	file:
RASL_R	source/App/Parcat/parcat.cpp	/^  RASL_R,      \/\/ 9$/;"	e	enum:NalUnitType	file:
RDOQ_CHROMA	source/Lib/TLibCommon/TComTrQuant.cpp	64;"	d	file:
RDOQ_CHROMA_LAMBDA	source/Lib/TLibCommon/TypeDef.h	130;"	d
RDPCMMode	source/Lib/TLibCommon/TypeDef.h	/^enum RDPCMMode$/;"	g
RDPCMSignallingMode	source/Lib/TLibCommon/TypeDef.h	/^enum RDPCMSignallingMode$/;"	g
RDPCM_HOR	source/Lib/TLibCommon/TypeDef.h	/^  RDPCM_HOR             = 1,$/;"	e	enum:RDPCMMode
RDPCM_OFF	source/Lib/TLibCommon/TypeDef.h	/^  RDPCM_OFF             = 0,$/;"	e	enum:RDPCMMode
RDPCM_SIGNAL_EXPLICIT	source/Lib/TLibCommon/TypeDef.h	/^  RDPCM_SIGNAL_EXPLICIT            = 1,$/;"	e	enum:RDPCMSignallingMode
RDPCM_SIGNAL_IMPLICIT	source/Lib/TLibCommon/TypeDef.h	/^  RDPCM_SIGNAL_IMPLICIT            = 0,$/;"	e	enum:RDPCMSignallingMode
RDPCM_VER	source/Lib/TLibCommon/TypeDef.h	/^  RDPCM_VER             = 2,$/;"	e	enum:RDPCMMode
READ_CODE	source/Lib/TLibDecoder/SEIread.cpp	120;"	d	file:
READ_CODE	source/Lib/TLibDecoder/SyntaxElementParser.h	71;"	d
READ_CODE	source/Lib/TLibDecoder/SyntaxElementParser.h	78;"	d
READ_CODE_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	50;"	d
READ_CODE_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	56;"	d
READ_CODE_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	62;"	d
READ_FLAG	source/Lib/TLibDecoder/SEIread.cpp	123;"	d	file:
READ_FLAG	source/Lib/TLibDecoder/SyntaxElementParser.h	74;"	d
READ_FLAG	source/Lib/TLibDecoder/SyntaxElementParser.h	81;"	d
READ_FLAG_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	53;"	d
READ_FLAG_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	59;"	d
READ_FLAG_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	65;"	d
READ_SCODE	source/Lib/TLibDecoder/SEIread.cpp	119;"	d	file:
READ_SCODE	source/Lib/TLibDecoder/SyntaxElementParser.h	70;"	d
READ_SCODE	source/Lib/TLibDecoder/SyntaxElementParser.h	77;"	d
READ_SCODE_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	49;"	d
READ_SCODE_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	55;"	d
READ_SCODE_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	61;"	d
READ_SVLC	source/Lib/TLibDecoder/SEIread.cpp	121;"	d	file:
READ_SVLC	source/Lib/TLibDecoder/SyntaxElementParser.h	73;"	d
READ_SVLC	source/Lib/TLibDecoder/SyntaxElementParser.h	80;"	d
READ_SVLC_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	52;"	d
READ_SVLC_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	58;"	d
READ_SVLC_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	64;"	d
READ_UVLC	source/Lib/TLibDecoder/SEIread.cpp	122;"	d	file:
READ_UVLC	source/Lib/TLibDecoder/SyntaxElementParser.h	72;"	d
READ_UVLC	source/Lib/TLibDecoder/SyntaxElementParser.h	79;"	d
READ_UVLC_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	51;"	d
READ_UVLC_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	57;"	d
READ_UVLC_CHK	source/Lib/TLibDecoder/SyntaxElementParser.h	63;"	d
RECOVERY_POINT	source/Lib/TLibCommon/SEI.h	/^    RECOVERY_POINT                       = 6,$/;"	e	enum:SEI::PayloadType
REDUCED_ENCODER_MEMORY	source/Lib/TLibCommon/TypeDef.h	106;"	d
REF_PIC_LIST_0	source/Lib/TLibCommon/TypeDef.h	/^  REF_PIC_LIST_0               = 0,   \/\/\/< reference list 0$/;"	e	enum:RefPicList
REF_PIC_LIST_1	source/Lib/TLibCommon/TypeDef.h	/^  REF_PIC_LIST_1               = 1,   \/\/\/< reference list 1$/;"	e	enum:RefPicList
REF_PIC_LIST_NUM_IDX	source/Lib/TLibCommon/TComSlice.h	/^static const UInt REF_PIC_LIST_NUM_IDX=32;$/;"	v
REF_PIC_LIST_X	source/Lib/TLibCommon/TypeDef.h	/^  REF_PIC_LIST_X               = 100  \/\/\/< special mark$/;"	e	enum:RefPicList
REGIONAL_NESTING	source/Lib/TLibCommon/SEI.h	/^    REGIONAL_NESTING                     = 157,$/;"	e	enum:SEI::PayloadType
REGION_REFRESH_INFO	source/Lib/TLibCommon/SEI.h	/^    REGION_REFRESH_INFO                  = 134,$/;"	e	enum:SEI::PayloadType
REGION_WISE_PACKING	source/Lib/TLibCommon/SEI.h	/^    REGION_WISE_PACKING                  = 155, $/;"	e	enum:SEI::PayloadType
RESERVED_IRAP_VCL22	source/App/Parcat/parcat.cpp	/^  RESERVED_IRAP_VCL22,$/;"	e	enum:NalUnitType	file:
RESERVED_IRAP_VCL23	source/App/Parcat/parcat.cpp	/^  RESERVED_IRAP_VCL23,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL41	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL41,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL42	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL42,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL43	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL43,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL44	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL44,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL45	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL45,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL46	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL46,$/;"	e	enum:NalUnitType	file:
RESERVED_NVCL47	source/App/Parcat/parcat.cpp	/^  RESERVED_NVCL47,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL24	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL24,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL25	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL25,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL26	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL26,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL27	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL27,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL28	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL28,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL29	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL29,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL30	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL30,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL31	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL31,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL_N10	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL_N10,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL_N12	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL_N12,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL_N14	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL_N14,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL_R11	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL_R11,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL_R13	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL_R13,$/;"	e	enum:NalUnitType	file:
RESERVED_VCL_R15	source/App/Parcat/parcat.cpp	/^  RESERVED_VCL_R15,$/;"	e	enum:NalUnitType	file:
RESIDUAL_ENCODER_SIDE	source/Lib/TLibCommon/TypeDef.h	/^  RESIDUAL_ENCODER_SIDE           = 1,$/;"	e	enum:StoredResidualType
RESIDUAL_RECONSTRUCTED	source/Lib/TLibCommon/TypeDef.h	/^  RESIDUAL_RECONSTRUCTED          = 0,$/;"	e	enum:StoredResidualType
RExt__DECODER_DEBUG_BIT_STATISTICS	source/Lib/TLibCommon/TypeDef.h	68;"	d
RExt__DECODER_DEBUG_BIT_STATISTICS_PASS_OPT_ARG	source/Lib/TLibDecoder/TDecSbac.cpp	45;"	d	file:
RExt__DECODER_DEBUG_BIT_STATISTICS_PASS_OPT_ARG	source/Lib/TLibDecoder/TDecSbac.cpp	47;"	d	file:
RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS	source/Lib/TLibCommon/CommonDef.h	/^static const Int RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS =     4;$/;"	v
RExt__GOLOMB_RICE_INCREMENT_DIVISOR	source/Lib/TLibCommon/CommonDef.h	/^static const Int RExt__GOLOMB_RICE_INCREMENT_DIVISOR =              4;$/;"	v
RExt__HIGH_BIT_DEPTH_SUPPORT	source/Lib/TLibCommon/TypeDef.h	134;"	d
RExt__HIGH_PRECISION_FORWARD_TRANSFORM	source/Lib/TLibCommon/TypeDef.h	151;"	d
RExt__HIGH_PRECISION_FORWARD_TRANSFORM	source/Lib/TLibCommon/TypeDef.h	154;"	d
RExt__PREDICTION_WEIGHTING_ANALYSIS_DC_PRECISION	source/Lib/TLibCommon/CommonDef.h	/^static const Int RExt__PREDICTION_WEIGHTING_ANALYSIS_DC_PRECISION = 0; \/\/\/< Additional fixed bit precision used during encoder-side weighting prediction analysis. Currently only used when high_precision_prediction_weighting_flag is set, for backwards compatibility reasons.$/;"	v
RM	build/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/App/Parcat/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/App/SEIRemovalApp/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/App/TAppDecoder/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/App/TAppDecoderAnalyser/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/App/TAppEncoder/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/App/TAppMCTSExtractor/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/Lib/TLibCommon/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/Lib/TLibCommonAnalyser/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/Lib/TLibDecoder/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/Lib/TLibDecoderAnalyser/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/Lib/TLibEncoder/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RM	build/source/Lib/Utilities/Makefile	/^RM = \/home\/mdl\/amk7371\/x86_64\/envs\/tensorflow\/lib\/python3.7\/site-packages\/cmake\/data\/bin\/cmake -E rm -f$/;"	m
RNSEIWindow	source/Lib/TLibCommon/TypeDef.h	/^  RNSEIWindow() : Window(), m_regionId(0) {}$/;"	f	class:RNSEIWindow
RNSEIWindow	source/Lib/TLibCommon/TypeDef.h	/^class RNSEIWindow : public Window$/;"	c
RNSEIWindowVec	source/Lib/TLibCommon/TypeDef.h	/^typedef std::vector<RNSEIWindow> RNSEIWindowVec;$/;"	t
RVM_VCEGAM10_M	source/Lib/TLibCommon/CommonDef.h	/^static const Int RVM_VCEGAM10_M =                                   4;$/;"	v
RasterAddress	source/Lib/TLibCommon/TComDataCU.h	/^namespace RasterAddress$/;"	n
Rectangle_SummaryProvider	cmake/CMakeBuild/lldb/CMakeBuildLldbExt.py	/^def Rectangle_SummaryProvider (valobj,internal_dict):$/;"	f
RefPicList	source/Lib/TLibCommon/TypeDef.h	/^enum RefPicList$/;"	g
RegionalSEI	source/Lib/TLibCommon/SEI.h	/^  RegionalSEI(): m_seiMessage(NULL) {}$/;"	f	class:RegionalSEI
RegionalSEI	source/Lib/TLibCommon/SEI.h	/^  RegionalSEI(SEI *sei, RNSEIWindowVec &regions) $/;"	f	class:RegionalSEI
RegionalSEI	source/Lib/TLibCommon/SEI.h	/^class RegionalSEI$/;"	c
ResultData	source/Lib/TLibEncoder/TEncAnalyze.h	/^    ResultData () : bits(0)$/;"	f	struct:TEncAnalyze::ResultData
ResultData	source/Lib/TLibEncoder/TEncAnalyze.h	/^  struct ResultData$/;"	s	class:TEncAnalyze
RstModuleSection	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^class RstModuleSection(object):$/;"	c
RuntimeError	source/App/utils/BitrateTargeting/RuntimeError.h	/^    RuntimeError( ): std::runtime_error( "" ), m_firstWhat( true ) { }$/;"	f	class:RuntimeError
RuntimeError	source/App/utils/BitrateTargeting/RuntimeError.h	/^class RuntimeError: public std::runtime_error$/;"	c
SAOBlkParam	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOBlkParam::SAOBlkParam()$/;"	f	class:SAOBlkParam
SAOBlkParam	source/Lib/TLibCommon/TypeDef.h	/^struct SAOBlkParam$/;"	s
SAOCabacStateLablesRDO	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^enum SAOCabacStateLablesRDO \/\/CABAC state labels$/;"	g
SAOEOClasses	source/Lib/TLibCommon/TypeDef.h	/^enum SAOEOClasses$/;"	g
SAOMode	source/Lib/TLibCommon/TypeDef.h	/^enum SAOMode \/\/mode$/;"	g
SAOModeMergeTypes	source/Lib/TLibCommon/TypeDef.h	/^enum SAOModeMergeTypes$/;"	g
SAOModeNewTypes	source/Lib/TLibCommon/TypeDef.h	/^enum SAOModeNewTypes$/;"	g
SAOOffset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOOffset::SAOOffset()$/;"	f	class:SAOOffset
SAOOffset	source/Lib/TLibCommon/TypeDef.h	/^struct SAOOffset$/;"	s
SAOProcess	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::SAOProcess(TComPic* pDecPic)$/;"	f	class:TComSampleAdaptiveOffset
SAOProcess	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::SAOProcess(TComPic* pPic, Bool* sliceEnabled, const Double *lambdas, const Bool bTestSAODisableAtPictureLevel, const Double saoEncodingRate, const Double saoEncodingRateChroma, const Bool isPreDBFSamplesUsed )$/;"	f	class:TEncSampleAdaptiveOffset
SAOStatData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAOStatData(){}$/;"	f	struct:SAOStatData
SAOStatData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^struct SAOStatData \/\/data structure for SAO statistics$/;"	s
SAO_CABACSTATE_BLK_CUR	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_CUR,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_BLK_MID	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_MID,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_BLK_NEXT	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_NEXT,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_BLK_TEMP	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_BLK_TEMP,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CABACSTATE_PIC_INIT	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAO_CABACSTATE_PIC_INIT =0,$/;"	e	enum:SAOCabacStateLablesRDO
SAO_CLASS_EO_FULL_PEAK	source/Lib/TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_FULL_PEAK   = 4,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_FULL_VALLEY	source/Lib/TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_FULL_VALLEY = 0,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_HALF_PEAK	source/Lib/TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_HALF_PEAK   = 3,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_HALF_VALLEY	source/Lib/TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_HALF_VALLEY = 1,$/;"	e	enum:SAOEOClasses
SAO_CLASS_EO_PLAIN	source/Lib/TLibCommon/TypeDef.h	/^  SAO_CLASS_EO_PLAIN       = 2,$/;"	e	enum:SAOEOClasses
SAO_MERGE_ABOVE	source/Lib/TLibCommon/TypeDef.h	/^  SAO_MERGE_ABOVE,$/;"	e	enum:SAOModeMergeTypes
SAO_MERGE_LEFT	source/Lib/TLibCommon/TypeDef.h	/^  SAO_MERGE_LEFT =0,$/;"	e	enum:SAOModeMergeTypes
SAO_MODE_MERGE	source/Lib/TLibCommon/TypeDef.h	/^  SAO_MODE_MERGE,$/;"	e	enum:SAOMode
SAO_MODE_NEW	source/Lib/TLibCommon/TypeDef.h	/^  SAO_MODE_NEW,$/;"	e	enum:SAOMode
SAO_MODE_OFF	source/Lib/TLibCommon/TypeDef.h	/^  SAO_MODE_OFF = 0,$/;"	e	enum:SAOMode
SAO_TYPE_BO	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_BO = SAO_TYPE_START_BO,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_0	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_0 = SAO_TYPE_START_EO,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_135	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_135,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_45	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_45,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_EO_90	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_EO_90,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_START_BO	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_START_BO,$/;"	e	enum:SAOModeNewTypes
SAO_TYPE_START_EO	source/Lib/TLibCommon/TypeDef.h	/^  SAO_TYPE_START_EO =0,$/;"	e	enum:SAOModeNewTypes
SBH_THRESHOLD	source/Lib/TLibCommon/CommonDef.h	/^static const Int SBH_THRESHOLD =                                    4; \/\/\/< value of the fixed SBH controlling threshold$/;"	v
SCALABLE_NESTING	source/Lib/TLibCommon/SEI.h	/^    SCALABLE_NESTING                     = 133,$/;"	e	enum:SEI::PayloadType
SCALE_BITS	source/Lib/TLibCommon/CommonDef.h	/^static const Int SCALE_BITS =                                      15; \/\/\/< For fractional bit estimates in RDOQ$/;"	v
SCALE_DOWN_422	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	63;"	d
SCALING_LIST_16x16	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_16x16,$/;"	e	enum:ScalingListSize
SCALING_LIST_32x32	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_32x32,$/;"	e	enum:ScalingListSize
SCALING_LIST_4x4	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_4x4 = 0,$/;"	e	enum:ScalingListSize
SCALING_LIST_8x8	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_8x8,$/;"	e	enum:ScalingListSize
SCALING_LIST_BITS	source/Lib/TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_BITS =                               8 ; \/\/\/< bit depth of scaling list entries$/;"	v
SCALING_LIST_DC	source/Lib/TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_DC =                                16 ; \/\/\/< default DC value$/;"	v
SCALING_LIST_DEFAULT	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_DEFAULT,$/;"	e	enum:ScalingListMode
SCALING_LIST_FILE_READ	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_FILE_READ$/;"	e	enum:ScalingListMode
SCALING_LIST_NUM	source/Lib/TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_NUM = MAX_NUM_COMPONENT * NUMBER_OF_PREDICTION_MODES; \/\/\/< list number for quantization matrix$/;"	v
SCALING_LIST_OFF	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_OFF,$/;"	e	enum:ScalingListMode
SCALING_LIST_REM_NUM	source/Lib/TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_REM_NUM =                             6;$/;"	v
SCALING_LIST_SIZE_NUM	source/Lib/TLibCommon/TypeDef.h	/^  SCALING_LIST_SIZE_NUM$/;"	e	enum:ScalingListSize
SCALING_LIST_START_VALUE	source/Lib/TLibCommon/CommonDef.h	/^static const Int SCALING_LIST_START_VALUE =                        8 ; \/\/\/< start value for dpcm mode$/;"	v
SCAN_DIAG	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_DIAG = 0,        \/\/\/< up-right diagonal scan$/;"	e	enum:COEFF_SCAN_TYPE
SCAN_GROUPED_4x4	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_GROUPED_4x4 = 1,$/;"	e	enum:COEFF_SCAN_GROUP_TYPE
SCAN_HOR	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_HOR  = 1,        \/\/\/< horizontal first scan$/;"	e	enum:COEFF_SCAN_TYPE
SCAN_NUMBER_OF_GROUP_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_NUMBER_OF_GROUP_TYPES = 2$/;"	e	enum:COEFF_SCAN_GROUP_TYPE
SCAN_NUMBER_OF_TYPES	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_NUMBER_OF_TYPES = 3$/;"	e	enum:COEFF_SCAN_TYPE
SCAN_UNGROUPED	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_UNGROUPED   = 0,$/;"	e	enum:COEFF_SCAN_GROUP_TYPE
SCAN_VER	source/Lib/TLibCommon/TypeDef.h	/^  SCAN_VER  = 2,        \/\/\/< vertical first scan$/;"	e	enum:COEFF_SCAN_TYPE
SCENE_INFO	source/Lib/TLibCommon/SEI.h	/^    SCENE_INFO                           = 9,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
SChar	source/Lib/TLibCommon/TypeDef.h	/^typedef       signed char         SChar; \/\/ Signed 8-bit values$/;"	t
SEGM_RECT_FRAME_PACKING	source/Lib/TLibCommon/SEI.h	/^    SEGM_RECT_FRAME_PACKING              = 138,$/;"	e	enum:SEI::PayloadType
SEI	source/Lib/TLibCommon/SEI.h	/^  SEI() {}$/;"	f	class:SEI
SEI	source/Lib/TLibCommon/SEI.h	/^class SEI$/;"	c
SEIActiveParameterSets	source/Lib/TLibCommon/SEI.h	/^  SEIActiveParameterSets()$/;"	f	class:SEIActiveParameterSets
SEIActiveParameterSets	source/Lib/TLibCommon/SEI.h	/^class SEIActiveParameterSets : public SEI$/;"	c
SEIAlternativeTransferCharacteristics	source/Lib/TLibCommon/SEI.h	/^  SEIAlternativeTransferCharacteristics() : m_preferredTransferCharacteristics(18)$/;"	f	class:SEIAlternativeTransferCharacteristics
SEIAlternativeTransferCharacteristics	source/Lib/TLibCommon/SEI.h	/^class SEIAlternativeTransferCharacteristics : public SEI$/;"	c
SEIAmbientViewingEnvironment	source/Lib/TLibCommon/SEI.h	/^  SEIAmbientViewingEnvironment() { }$/;"	f	class:SEIAmbientViewingEnvironment
SEIAmbientViewingEnvironment	source/Lib/TLibCommon/SEI.h	/^class SEIAmbientViewingEnvironment : public SEI$/;"	c
SEIAnnotatedRegions	source/Lib/TLibCommon/SEI.h	/^  SEIAnnotatedRegions() {}$/;"	f	class:SEIAnnotatedRegions
SEIAnnotatedRegions	source/Lib/TLibCommon/SEI.h	/^class SEIAnnotatedRegions : public SEI$/;"	c
SEIBufferingPeriod	source/Lib/TLibCommon/SEI.h	/^  SEIBufferingPeriod()$/;"	f	class:SEIBufferingPeriod
SEIBufferingPeriod	source/Lib/TLibCommon/SEI.h	/^class SEIBufferingPeriod : public SEI$/;"	c
SEIChromaResamplingFilterHint	source/Lib/TLibCommon/SEI.h	/^  SEIChromaResamplingFilterHint() {}$/;"	f	class:SEIChromaResamplingFilterHint
SEIChromaResamplingFilterHint	source/Lib/TLibCommon/SEI.h	/^class SEIChromaResamplingFilterHint : public SEI$/;"	c
SEICodedRegionCompletion	source/Lib/TLibCommon/SEI.h	/^  SEICodedRegionCompletion() { }$/;"	f	class:SEICodedRegionCompletion
SEICodedRegionCompletion	source/Lib/TLibCommon/SEI.h	/^class SEICodedRegionCompletion : public SEI$/;"	c
SEIColourRemappingInfo	source/Lib/TLibCommon/SEI.h	/^  SEIColourRemappingInfo() {}$/;"	f	class:SEIColourRemappingInfo
SEIColourRemappingInfo	source/Lib/TLibCommon/SEI.h	/^class SEIColourRemappingInfo : public SEI$/;"	c
SEIContentColourVolume	source/Lib/TLibCommon/SEI.h	/^  SEIContentColourVolume() {}$/;"	f	class:SEIContentColourVolume
SEIContentColourVolume	source/Lib/TLibCommon/SEI.h	/^class SEIContentColourVolume : public SEI$/;"	c
SEIContentLightLevelInfo	source/Lib/TLibCommon/SEI.h	/^    SEIContentLightLevelInfo() { }$/;"	f	class:SEIContentLightLevelInfo
SEIContentLightLevelInfo	source/Lib/TLibCommon/SEI.h	/^class SEIContentLightLevelInfo : public SEI$/;"	c
SEICubemapProjection	source/Lib/TLibCommon/SEI.h	/^  SEICubemapProjection() {}$/;"	f	class:SEICubemapProjection
SEICubemapProjection	source/Lib/TLibCommon/SEI.h	/^class SEICubemapProjection : public SEI$/;"	c
SEIDecodedPictureHash	source/Lib/TLibCommon/SEI.h	/^  SEIDecodedPictureHash() {}$/;"	f	class:SEIDecodedPictureHash
SEIDecodedPictureHash	source/Lib/TLibCommon/SEI.h	/^class SEIDecodedPictureHash : public SEI$/;"	c
SEIDecodingUnitInfo	source/Lib/TLibCommon/SEI.h	/^  SEIDecodingUnitInfo()$/;"	f	class:SEIDecodingUnitInfo
SEIDecodingUnitInfo	source/Lib/TLibCommon/SEI.h	/^class SEIDecodingUnitInfo : public SEI$/;"	c
SEIDeinterlaceFieldIdentification	source/Lib/TLibCommon/SEI.h	/^    SEIDeinterlaceFieldIdentification() { }$/;"	f	class:SEIDeinterlaceFieldIdentification
SEIDeinterlaceFieldIdentification	source/Lib/TLibCommon/SEI.h	/^class SEIDeinterlaceFieldIdentification : public SEI$/;"	c
SEIDependentRAPIndication	source/Lib/TLibCommon/SEI.h	/^  SEIDependentRAPIndication() { }$/;"	f	class:SEIDependentRAPIndication
SEIDependentRAPIndication	source/Lib/TLibCommon/SEI.h	/^class SEIDependentRAPIndication : public SEI$/;"	c
SEIDisplayOrientation	source/Lib/TLibCommon/SEI.h	/^  SEIDisplayOrientation()$/;"	f	class:SEIDisplayOrientation
SEIDisplayOrientation	source/Lib/TLibCommon/SEI.h	/^class SEIDisplayOrientation : public SEI$/;"	c
SEIEncoder	source/Lib/TLibEncoder/SEIEncoder.h	/^  SEIEncoder()$/;"	f	class:SEIEncoder
SEIEncoder	source/Lib/TLibEncoder/SEIEncoder.h	/^class SEIEncoder$/;"	c
SEIEquirectangularProjection	source/Lib/TLibCommon/SEI.h	/^  SEIEquirectangularProjection()  {}$/;"	f	class:SEIEquirectangularProjection
SEIEquirectangularProjection	source/Lib/TLibCommon/SEI.h	/^class SEIEquirectangularProjection : public SEI$/;"	c
SEIFillerPayload	source/Lib/TLibCommon/SEI.h	/^  SEIFillerPayload() {}$/;"	f	class:SEIFillerPayload
SEIFillerPayload	source/Lib/TLibCommon/SEI.h	/^class SEIFillerPayload : public SEI$/;"	c
SEIFilmGrainCharacteristics	source/Lib/TLibCommon/SEI.h	/^  SEIFilmGrainCharacteristics() {}$/;"	f	class:SEIFilmGrainCharacteristics
SEIFilmGrainCharacteristics	source/Lib/TLibCommon/SEI.h	/^class SEIFilmGrainCharacteristics: public SEI$/;"	c
SEIFilmGrainSynthesizer	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^SEIFilmGrainSynthesizer::SEIFilmGrainSynthesizer()$/;"	f	class:SEIFilmGrainSynthesizer
SEIFilmGrainSynthesizer	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^class SEIFilmGrainSynthesizer$/;"	c
SEIFisheyeVideoInfo	source/Lib/TLibCommon/SEI.h	/^  SEIFisheyeVideoInfo() {}$/;"	f	class:SEIFisheyeVideoInfo
SEIFisheyeVideoInfo	source/Lib/TLibCommon/SEI.h	/^class SEIFisheyeVideoInfo : public SEI$/;"	c
SEIFramePacking	source/Lib/TLibCommon/SEI.h	/^  SEIFramePacking() {}$/;"	f	class:SEIFramePacking
SEIFramePacking	source/Lib/TLibCommon/SEI.h	/^class SEIFramePacking : public SEI$/;"	c
SEIGreenMetadataInfo	source/Lib/TLibCommon/SEI.h	/^    SEIGreenMetadataInfo() {}$/;"	f	class:SEIGreenMetadataInfo
SEIGreenMetadataInfo	source/Lib/TLibCommon/SEI.h	/^class SEIGreenMetadataInfo : public SEI$/;"	c
SEIKneeFunctionInfo	source/Lib/TLibCommon/SEI.h	/^  SEIKneeFunctionInfo() {}$/;"	f	class:SEIKneeFunctionInfo
SEIKneeFunctionInfo	source/Lib/TLibCommon/SEI.h	/^class SEIKneeFunctionInfo : public SEI$/;"	c
SEIListOfIndices	source/Lib/TLibCommon/SEI.h	/^    SEIListOfIndices() : m_seiMessage(NULL) {}$/;"	f	struct:SEIRegionalNesting::SEIListOfIndices
SEIListOfIndices	source/Lib/TLibCommon/SEI.h	/^    SEIListOfIndices(std::vector<UInt> listOfIndices, SEI* sei) : m_listOfIndices(listOfIndices), m_seiMessage(sei) {}$/;"	f	struct:SEIRegionalNesting::SEIListOfIndices
SEIListOfIndices	source/Lib/TLibCommon/SEI.h	/^  struct SEIListOfIndices$/;"	s	class:SEIRegionalNesting
SEIMCTSExtractionInfoSet	source/Lib/TLibCommon/SEI.h	/^    SEIMCTSExtractionInfoSet() { }$/;"	f	class:SEIMCTSExtractionInfoSet
SEIMCTSExtractionInfoSet	source/Lib/TLibCommon/SEI.h	/^class SEIMCTSExtractionInfoSet : public SEI$/;"	c
SEIMasteringDisplayColourVolume	source/Lib/TLibCommon/SEI.h	/^    SEIMasteringDisplayColourVolume() {}$/;"	f	class:SEIMasteringDisplayColourVolume
SEIMasteringDisplayColourVolume	source/Lib/TLibCommon/SEI.h	/^class SEIMasteringDisplayColourVolume : public SEI$/;"	c
SEIMessages	source/Lib/TLibCommon/SEI.h	/^typedef std::list<SEI*> SEIMessages;$/;"	t
SEINoDisplay	source/Lib/TLibCommon/SEI.h	/^  SEINoDisplay()$/;"	f	class:SEINoDisplay
SEINoDisplay	source/Lib/TLibCommon/SEI.h	/^class SEINoDisplay : public SEI$/;"	c
SEIOmniViewport	source/Lib/TLibCommon/SEI.h	/^  SEIOmniViewport() {}$/;"	f	class:SEIOmniViewport
SEIOmniViewport	source/Lib/TLibCommon/SEI.h	/^class SEIOmniViewport : public SEI$/;"	c
SEIPanScanRect	source/Lib/TLibCommon/SEI.h	/^  SEIPanScanRect() {}$/;"	f	class:SEIPanScanRect
SEIPanScanRect	source/Lib/TLibCommon/SEI.h	/^class SEIPanScanRect : public SEI$/;"	c
SEIPictureSnapshot	source/Lib/TLibCommon/SEI.h	/^  SEIPictureSnapshot() {}$/;"	f	class:SEIPictureSnapshot
SEIPictureSnapshot	source/Lib/TLibCommon/SEI.h	/^class SEIPictureSnapshot : public SEI$/;"	c
SEIPictureTiming	source/Lib/TLibCommon/SEI.h	/^  SEIPictureTiming()$/;"	f	class:SEIPictureTiming
SEIPictureTiming	source/Lib/TLibCommon/SEI.h	/^class SEIPictureTiming : public SEI$/;"	c
SEIPostFilterHint	source/Lib/TLibCommon/SEI.h	/^  SEIPostFilterHint() {}$/;"	f	class:SEIPostFilterHint
SEIPostFilterHint	source/Lib/TLibCommon/SEI.h	/^class SEIPostFilterHint: public SEI$/;"	c
SEIProgressiveRefinementSegmentEnd	source/Lib/TLibCommon/SEI.h	/^  SEIProgressiveRefinementSegmentEnd() {}$/;"	f	class:SEIProgressiveRefinementSegmentEnd
SEIProgressiveRefinementSegmentEnd	source/Lib/TLibCommon/SEI.h	/^class SEIProgressiveRefinementSegmentEnd: public SEI$/;"	c
SEIProgressiveRefinementSegmentStart	source/Lib/TLibCommon/SEI.h	/^  SEIProgressiveRefinementSegmentStart() {}$/;"	f	class:SEIProgressiveRefinementSegmentStart
SEIProgressiveRefinementSegmentStart	source/Lib/TLibCommon/SEI.h	/^class SEIProgressiveRefinementSegmentStart : public SEI$/;"	c
SEIReader	source/Lib/TLibDecoder/SEIread.h	/^  SEIReader() {};$/;"	f	class:SEIReader
SEIReader	source/Lib/TLibDecoder/SEIread.h	/^class SEIReader: public SyntaxElementParser$/;"	c
SEIRecoveryPoint	source/Lib/TLibCommon/SEI.h	/^  SEIRecoveryPoint() {}$/;"	f	class:SEIRecoveryPoint
SEIRecoveryPoint	source/Lib/TLibCommon/SEI.h	/^class SEIRecoveryPoint : public SEI$/;"	c
SEIRegionRefreshInfo	source/Lib/TLibCommon/SEI.h	/^  SEIRegionRefreshInfo()$/;"	f	class:SEIRegionRefreshInfo
SEIRegionRefreshInfo	source/Lib/TLibCommon/SEI.h	/^class SEIRegionRefreshInfo : public SEI$/;"	c
SEIRegionWisePacking	source/Lib/TLibCommon/SEI.h	/^  SEIRegionWisePacking() {}$/;"	f	class:SEIRegionWisePacking
SEIRegionWisePacking	source/Lib/TLibCommon/SEI.h	/^class SEIRegionWisePacking : public SEI$/;"	c
SEIRegionalNesting	source/Lib/TLibCommon/SEI.h	/^  SEIRegionalNesting(): m_rnId(0) {}$/;"	f	class:SEIRegionalNesting
SEIRegionalNesting	source/Lib/TLibCommon/SEI.h	/^class SEIRegionalNesting : public SEI$/;"	c
SEIRemovalApp	source/App/SEIRemovalApp/SEIRemovalApp.cpp	/^SEIRemovalApp::SEIRemovalApp()$/;"	f	class:SEIRemovalApp
SEIRemovalApp	source/App/SEIRemovalApp/SEIRemovalApp.h	/^class SEIRemovalApp : public SEIRemovalAppCfg$/;"	c
SEIRemovalAppCfg	source/App/SEIRemovalApp/SEIRemovalAppCfg.cpp	/^SEIRemovalAppCfg::SEIRemovalAppCfg()$/;"	f	class:SEIRemovalAppCfg
SEIRemovalAppCfg	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^class SEIRemovalAppCfg$/;"	c
SEISOPDescription	source/Lib/TLibCommon/SEI.h	/^  SEISOPDescription() {}$/;"	f	class:SEISOPDescription
SEISOPDescription	source/Lib/TLibCommon/SEI.h	/^class SEISOPDescription : public SEI$/;"	c
SEIScalableNesting	source/Lib/TLibCommon/SEI.h	/^  SEIScalableNesting() {}$/;"	f	class:SEIScalableNesting
SEIScalableNesting	source/Lib/TLibCommon/SEI.h	/^class SEIScalableNesting : public SEI$/;"	c
SEISceneInfo	source/Lib/TLibCommon/SEI.h	/^  SEISceneInfo() {}$/;"	f	class:SEISceneInfo
SEISceneInfo	source/Lib/TLibCommon/SEI.h	/^class SEISceneInfo : public SEI$/;"	c
SEISegmentedRectFramePacking	source/Lib/TLibCommon/SEI.h	/^  SEISegmentedRectFramePacking() {}$/;"	f	class:SEISegmentedRectFramePacking
SEISegmentedRectFramePacking	source/Lib/TLibCommon/SEI.h	/^class SEISegmentedRectFramePacking : public SEI$/;"	c
SEIShutterIntervalInfo	source/Lib/TLibCommon/SEI.h	/^  SEIShutterIntervalInfo() {}$/;"	f	class:SEIShutterIntervalInfo
SEIShutterIntervalInfo	source/Lib/TLibCommon/SEI.h	/^class SEIShutterIntervalInfo : public SEI$/;"	c
SEISphereRotation	source/Lib/TLibCommon/SEI.h	/^  SEISphereRotation()  {}$/;"	f	class:SEISphereRotation
SEISphereRotation	source/Lib/TLibCommon/SEI.h	/^class SEISphereRotation : public SEI$/;"	c
SEITempMotionConstrainedTileSets	source/Lib/TLibCommon/SEI.h	/^  SEITempMotionConstrainedTileSets() { }$/;"	f	class:SEITempMotionConstrainedTileSets
SEITempMotionConstrainedTileSets	source/Lib/TLibCommon/SEI.h	/^class SEITempMotionConstrainedTileSets: public SEI$/;"	c
SEITemporalLevel0Index	source/Lib/TLibCommon/SEI.h	/^  SEITemporalLevel0Index()$/;"	f	class:SEITemporalLevel0Index
SEITemporalLevel0Index	source/Lib/TLibCommon/SEI.h	/^class SEITemporalLevel0Index : public SEI$/;"	c
SEITimeCode	source/Lib/TLibCommon/SEI.h	/^  SEITimeCode() {}$/;"	f	class:SEITimeCode
SEITimeCode	source/Lib/TLibCommon/SEI.h	/^class SEITimeCode : public SEI$/;"	c
SEIToneMappingInfo	source/Lib/TLibCommon/SEI.h	/^  SEIToneMappingInfo() {}$/;"	f	class:SEIToneMappingInfo
SEIToneMappingInfo	source/Lib/TLibCommon/SEI.h	/^class SEIToneMappingInfo : public SEI$/;"	c
SEIUserDataRegistered	source/Lib/TLibCommon/SEI.h	/^  SEIUserDataRegistered() {}$/;"	f	class:SEIUserDataRegistered
SEIUserDataRegistered	source/Lib/TLibCommon/SEI.h	/^class SEIUserDataRegistered : public SEI$/;"	c
SEIUserDataUnregistered	source/Lib/TLibCommon/SEI.h	/^  SEIUserDataUnregistered() {}$/;"	f	class:SEIUserDataUnregistered
SEIUserDataUnregistered	source/Lib/TLibCommon/SEI.h	/^class SEIUserDataUnregistered : public SEI$/;"	c
SEIWriter	source/Lib/TLibEncoder/SEIwrite.h	/^  SEIWriter() {};$/;"	f	class:SEIWriter
SEIWriter	source/Lib/TLibEncoder/SEIwrite.h	/^class SEIWriter:public SyntaxElementWriter$/;"	c
SEI_ENCODER_CONTROL	source/Lib/TLibCommon/TypeDef.h	92;"	d
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/App/Parcat/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/App/SEIRemovalApp/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/App/TAppDecoder/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/App/TAppDecoderAnalyser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/App/TAppEncoder/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/App/TAppMCTSExtractor/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/Lib/TLibCommon/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/Lib/TLibCommonAnalyser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/Lib/TLibDecoder/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/Lib/TLibDecoderAnalyser/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/Lib/TLibEncoder/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	build/source/Lib/Utilities/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	doc/Makefile	/^SHELL=\/bin\/bash$/;"	m
SHUTTER_INTERVAL_INFO	source/Lib/TLibCommon/SEI.h	/^    SHUTTER_INTERVAL_INFO                = 203,$/;"	e	enum:SEI::PayloadType
SHUTTER_INTERVAL_SEI_MESSAGE	source/Lib/TLibCommon/TypeDef.h	91;"	d
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	216;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	49;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	41;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
SIMULATE_VERSION_PATCH	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
SIZE_2Nx2N	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_2Nx2N           = 0,           \/\/\/< symmetric motion partition,  2Nx2N$/;"	e	enum:PartSize
SIZE_2NxN	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_2NxN            = 1,           \/\/\/< symmetric motion partition,  2Nx N$/;"	e	enum:PartSize
SIZE_2NxnD	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_2NxnD           = 5,           \/\/\/< asymmetric motion partition, 2Nx(3N\/2) + 2Nx( N\/2)$/;"	e	enum:PartSize
SIZE_2NxnU	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_2NxnU           = 4,           \/\/\/< asymmetric motion partition, 2Nx( N\/2) + 2Nx(3N\/2)$/;"	e	enum:PartSize
SIZE_Nx2N	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_Nx2N            = 2,           \/\/\/< symmetric motion partition,   Nx2N$/;"	e	enum:PartSize
SIZE_NxN	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_NxN             = 3,           \/\/\/< symmetric motion partition,   Nx N$/;"	e	enum:PartSize
SIZE_nLx2N	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_nLx2N           = 6,           \/\/\/< asymmetric motion partition, ( N\/2)x2N + (3N\/2)x2N$/;"	e	enum:PartSize
SIZE_nRx2N	source/Lib/TLibCommon/TypeDef.h	/^  SIZE_nRx2N           = 7,           \/\/\/< asymmetric motion partition, (3N\/2)x2N + ( N\/2)x2N$/;"	e	enum:PartSize
SMultiValueInput	source/App/TAppEncoder/TAppEncCfg.cpp	/^  SMultiValueInput() : minValIncl(0), maxValIncl(0), minNumValuesIncl(0), maxNumValuesIncl(0), values() { }$/;"	f	struct:SMultiValueInput
SMultiValueInput	source/App/TAppEncoder/TAppEncCfg.cpp	/^  SMultiValueInput(const T &minValue, const T &maxValue, std::size_t minNumberValues, std::size_t maxNumberValues, const T* defValues, const UInt numDefValues)$/;"	f	struct:SMultiValueInput
SMultiValueInput	source/App/TAppEncoder/TAppEncCfg.cpp	/^  SMultiValueInput(const T &minValue, const T &maxValue, std::size_t minNumberValues=0, std::size_t maxNumberValues=0)$/;"	f	struct:SMultiValueInput
SMultiValueInput	source/App/TAppEncoder/TAppEncCfg.cpp	/^  SMultiValueInput(std::vector<T> &defaults) : minValIncl(0), maxValIncl(0), minNumValuesIncl(0), maxNumValuesIncl(0), values(defaults) { }$/;"	f	struct:SMultiValueInput
SMultiValueInput	source/App/TAppEncoder/TAppEncCfg.cpp	/^struct SMultiValueInput$/;"	s	file:
SOP_DESCRIPTION	source/Lib/TLibCommon/SEI.h	/^    SOP_DESCRIPTION                      = 128,$/;"	e	enum:SEI::PayloadType
SPHERE_ROTATION	source/Lib/TLibCommon/SEI.h	/^    SPHERE_ROTATION                      = 154,$/;"	e	enum:SEI::PayloadType
SPLIT_MODE	source/Lib/TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	t	class:TComTU	typeref:enum:TComTU::TU_SPLIT_MODE
SPS	source/App/Parcat/parcat.cpp	/^  SPS,                     \/\/ 33$/;"	e	enum:NalUnitType	file:
SPSExtensionFlagIndex	source/Lib/TLibCommon/TypeDef.h	/^enum SPSExtensionFlagIndex$/;"	g
SPSNeedsWriting	source/Lib/TLibEncoder/TEncTop.cpp	/^Bool TEncTop::SPSNeedsWriting(Int spsId)$/;"	f	class:TEncTop
SPS_EXT__REXT	source/Lib/TLibCommon/TypeDef.h	/^  SPS_EXT__REXT           = 0,$/;"	e	enum:SPSExtensionFlagIndex
SStat	source/Lib/TLibCommon/TComCodingStatistics.h	/^      SStat() : bits(0), count(0), sum(0) { }$/;"	f	struct:TComCodingStatistics::SStat
SStat	source/Lib/TLibCommon/TComCodingStatistics.h	/^    struct SStat$/;"	s	class:TComCodingStatistics
STATS__BYTE_ALIGNMENT_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__BYTE_ALIGNMENT_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__ALIGNED_ESCAPE_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__ALIGNED_ESCAPE_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__ALIGNED_SIGN_BIT	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__ALIGNED_SIGN_BIT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__CHROMA_QP_ADJUSTMENT	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__CHROMA_QP_ADJUSTMENT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__CROSS_COMPONENT_PREDICTION	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__CROSS_COMPONENT_PREDICTION,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__DELTA_QP_EP	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__DELTA_QP_EP,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__ESCAPE_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__ESCAPE_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__GT1_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__GT1_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__GT2_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__GT2_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__INTER_DIR	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__INTER_DIR,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__INTRA_DIR_ANG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__INTRA_DIR_ANG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__LAST_SIG_X_Y	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__LAST_SIG_X_Y,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MERGE_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MERGE_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MERGE_INDEX	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MERGE_INDEX,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MVD	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MVD,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MVD_EP	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MVD_EP,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__MVP_IDX	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__MVP_IDX,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__PART_SIZE	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__PART_SIZE,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__PRED_MODE	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__PRED_MODE,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__QT_CBF	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__QT_CBF,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__QT_ROOT_CBF	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__QT_ROOT_CBF,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__REF_FRM_IDX	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__REF_FRM_IDX,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SAO	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SAO,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SIGN_BIT	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SIGN_BIT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SIG_COEFF_GROUP_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SIG_COEFF_GROUP_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SIG_COEFF_MAP_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SIG_COEFF_MAP_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SKIP_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SKIP_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__SPLIT_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__SPLIT_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__TQ_BYPASS_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__TQ_BYPASS_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__TRANSFORM_SKIP_FLAGS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__TRANSFORM_SKIP_FLAGS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_BITS__TRANSFORM_SUBDIV_FLAG	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_BITS__TRANSFORM_SUBDIV_FLAG,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_EP_BIT_ALIGNMENT	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_EP_BIT_ALIGNMENT,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_FIXED_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_FIXED_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_INITIALISATION	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_INITIALISATION,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_PCM_ALIGN_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_PCM_ALIGN_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_PCM_CODE_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_PCM_CODE_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__CABAC_TRM_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__CABAC_TRM_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__EMULATION_PREVENTION_3_BYTES	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__EMULATION_PREVENTION_3_BYTES,$/;"	e	enum:TComCodingStatisticsType
STATS__EXPLICIT_RDPCM_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__EXPLICIT_RDPCM_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__NAL_UNIT_HEADER_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__NAL_UNIT_HEADER_BITS,$/;"	e	enum:TComCodingStatisticsType
STATS__NAL_UNIT_PACKING	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__NAL_UNIT_PACKING,$/;"	e	enum:TComCodingStatisticsType
STATS__NAL_UNIT_TOTAL_BODY	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__NAL_UNIT_TOTAL_BODY,\/\/ This is a special case and is not included in the total sums.$/;"	e	enum:TComCodingStatisticsType
STATS__NUM_STATS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__NUM_STATS$/;"	e	enum:TComCodingStatisticsType
STATS__TRAILING_BITS	source/Lib/TLibCommon/TComCodingStatistics.h	/^  STATS__TRAILING_BITS,$/;"	e	enum:TComCodingStatisticsType
STRINGIFY	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
STRINGIFY	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	320;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
STSA_N	source/App/Parcat/parcat.cpp	/^  STSA_N,      \/\/ 4$/;"	e	enum:NalUnitType	file:
STSA_R	source/App/Parcat/parcat.cpp	/^  STSA_R,      \/\/ 5$/;"	e	enum:NalUnitType	file:
SUFFIX_SEI	source/App/Parcat/parcat.cpp	/^  SUFFIX_SEI,              \/\/ 40$/;"	e	enum:NalUnitType	file:
ScalingListMode	source/Lib/TLibCommon/TypeDef.h	/^enum ScalingListMode$/;"	g
ScalingListSize	source/Lib/TLibCommon/TypeDef.h	/^enum ScalingListSize$/;"	g
ScanGenerator	source/Lib/TLibCommon/TComRom.cpp	/^  ScanGenerator(UInt blockWidth, UInt blockHeight, UInt stride, COEFF_SCAN_TYPE scanType)$/;"	f	class:ScanGenerator
ScanGenerator	source/Lib/TLibCommon/TComRom.cpp	/^class ScanGenerator$/;"	c	file:
SetStatistics	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void SetStatistics(const TComCodingStatisticsData &src) { GetSingletonInstance().data=src; }$/;"	f	class:TComCodingStatistics
Short	source/Lib/TLibCommon/TypeDef.h	/^typedef       short               Short;$/;"	t
SignificanceMapContextType	source/Lib/TLibCommon/TypeDef.h	/^enum SignificanceMapContextType$/;"	g
SliceConstraint	source/Lib/TLibCommon/TypeDef.h	/^enum SliceConstraint$/;"	g
SliceType	source/Lib/TLibCommon/TypeDef.h	/^enum SliceType$/;"	g
StatLogValue	source/Lib/TLibCommon/TComCodingStatistics.h	/^      StatLogValue()$/;"	f	struct:TComCodingStatistics::StatLogValue
StatLogValue	source/Lib/TLibCommon/TComCodingStatistics.h	/^    struct StatLogValue$/;"	s	class:TComCodingStatistics
StoredResidualType	source/Lib/TLibCommon/TypeDef.h	/^enum StoredResidualType$/;"	g
SvnHelper	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class SvnHelper(VcsUtil):$/;"	c
SvnPropFileParser	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class SvnPropFileParser(object):$/;"	c
SvnProperties	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class SvnProperties(object):$/;"	c
SyntaxElementParser	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  SyntaxElementParser()$/;"	f	class:SyntaxElementParser
SyntaxElementParser	source/Lib/TLibDecoder/SyntaxElementParser.h	/^class SyntaxElementParser$/;"	c
SyntaxElementWriter	source/Lib/TLibEncoder/SyntaxElementWriter.h	/^  SyntaxElementWriter()$/;"	f	class:SyntaxElementWriter
SyntaxElementWriter	source/Lib/TLibEncoder/SyntaxElementWriter.h	/^class SyntaxElementWriter$/;"	c
SystemInfo	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^from pyhhi.build.common.system import SystemInfo$/;"	i
SystemInfo	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^from pyhhi.build.common.system import SystemInfo$/;"	i
SystemInfo	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^from pyhhi.build.common.system import SystemInfo$/;"	i
SystemInfo	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^class SystemInfo(object):$/;"	c
SystemInfo	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^from pyhhi.build.common.system import SystemInfo$/;"	i
TARGETS	Makefile	/^TARGETS := TLibCommon TAppDecoder TAppDecoderAnalyser TLibDecoder $/;"	m
TARGETS_ALL	Makefile	/^TARGETS_ALL := $(foreach t,$(TARGETS),$(t)-a)$/;"	m
TARGETS_ALL_CLEAN_FIRST	Makefile	/^TARGETS_ALL_CLEAN_FIRST := $(foreach t,$(TARGETS),$(t)-ca)$/;"	m
TARGETS_DEBUG	Makefile	/^TARGETS_DEBUG := $(foreach t,$(TARGETS),$(t)-d)$/;"	m
TARGETS_DEBUG_CLEAN_FIRST	Makefile	/^TARGETS_DEBUG_CLEAN_FIRST := $(foreach t,$(TARGETS),$(t)-cd)$/;"	m
TARGETS_RELEASE	Makefile	/^TARGETS_RELEASE := $(foreach t,$(TARGETS),$(t)-r)$/;"	m
TARGETS_RELEASE_CLEAN_FIRST	Makefile	/^TARGETS_RELEASE_CLEAN_FIRST := $(foreach t,$(TARGETS),$(t)-cr)$/;"	m
TARGETS_RELWITHDEBINFO	Makefile	/^TARGETS_RELWITHDEBINFO := $(foreach t,$(TARGETS),$(t)-p)$/;"	m
TARGETS_RELWITHDEBINFO_CLEAN_FIRST	Makefile	/^TARGETS_RELWITHDEBINFO_CLEAN_FIRST := $(foreach t,$(TARGETS),$(t)-cp)$/;"	m
TAppDecCfg	source/App/TAppDecoder/TAppDecCfg.h	/^  TAppDecCfg()$/;"	f	class:TAppDecCfg
TAppDecCfg	source/App/TAppDecoder/TAppDecCfg.h	/^class TAppDecCfg$/;"	c
TAppDecTop	source/App/TAppDecoder/TAppDecTop.cpp	/^TAppDecTop::TAppDecTop()$/;"	f	class:TAppDecTop
TAppDecTop	source/App/TAppDecoder/TAppDecTop.h	/^class TAppDecTop : public TAppDecCfg$/;"	c
TAppEncCfg	source/App/TAppEncoder/TAppEncCfg.cpp	/^TAppEncCfg::TAppEncCfg()$/;"	f	class:TAppEncCfg
TAppEncCfg	source/App/TAppEncoder/TAppEncCfg.h	/^class TAppEncCfg$/;"	c
TAppEncTop	source/App/TAppEncoder/TAppEncTop.cpp	/^TAppEncTop::TAppEncTop()$/;"	f	class:TAppEncTop
TAppEncTop	source/App/TAppEncoder/TAppEncTop.h	/^class TAppEncTop : public TAppEncCfg$/;"	c
TAppMctsExtCfg	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	/^  TAppMctsExtCfg()$/;"	f	class:TAppMctsExtCfg
TAppMctsExtCfg	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	/^class TAppMctsExtCfg$/;"	c
TAppMctsExtTop	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^TAppMctsExtTop::TAppMctsExtTop()$/;"	f	class:TAppMctsExtTop
TAppMctsExtTop	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^class TAppMctsExtTop : public TAppMctsExtCfg$/;"	c
TCOMCODINGSTATISTICS_ENTROPYSCALE	source/Lib/TLibCommon/TComCodingStatistics.h	/^static const Int64 TCOMCODINGSTATISTICS_ENTROPYSCALE=32768;$/;"	v
TChar	source/Lib/TLibCommon/TypeDef.h	/^typedef       char                TChar; \/\/ Used for text\/characters$/;"	t
TCoeff	source/Lib/TLibCommon/TypeDef.h	/^typedef       Int             TCoeff;            \/\/\/< transform coefficient$/;"	t
TCoeff	source/Lib/TLibCommon/TypeDef.h	/^typedef       Int64           TCoeff;            \/\/\/< transform coefficient$/;"	t
TComBitCounter	source/Lib/TLibCommon/TComBitCounter.h	/^  TComBitCounter()            {}$/;"	f	class:TComBitCounter
TComBitCounter	source/Lib/TLibCommon/TComBitCounter.h	/^class TComBitCounter : public TComBitIf$/;"	c
TComBitIf	source/Lib/TLibCommon/TComBitStream.h	/^class TComBitIf$/;"	c
TComCABACTables	source/Lib/TLibCommon/TComCABACTables.h	/^class TComCABACTables$/;"	c
TComCUMvField	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComCUMvField() : m_pcMv(NULL), m_pcMvd(NULL), m_piRefIdx(NULL), m_uiNumPartition(0) {}$/;"	f	class:TComCUMvField
TComCUMvField	source/Lib/TLibCommon/TComMotionInfo.h	/^class TComCUMvField$/;"	c
TComCodingStatistics	source/Lib/TLibCommon/TComCodingStatistics.h	/^    TComCodingStatistics() : data()$/;"	f	class:TComCodingStatistics
TComCodingStatistics	source/Lib/TLibCommon/TComCodingStatistics.h	/^class TComCodingStatistics$/;"	c
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t)$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const ChannelType chid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const ComponentID cid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const Int log2w )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const UInt log2w )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const UInt log2w, const ChannelType chid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsClassType(const TComCodingStatisticsType t, const UInt log2w, const ComponentID cid )$/;"	f	class:TComCodingStatisticsClassType
TComCodingStatisticsClassType	source/Lib/TLibCommon/TComCodingStatistics.h	/^class TComCodingStatisticsClassType$/;"	c
TComCodingStatisticsData	source/Lib/TLibCommon/TComCodingStatistics.h	/^    class TComCodingStatisticsData$/;"	c	class:TComCodingStatistics
TComCodingStatisticsType	source/Lib/TLibCommon/TComCodingStatistics.h	/^enum TComCodingStatisticsType$/;"	g
TComDataCU	source/Lib/TLibCommon/TComDataCU.cpp	/^TComDataCU::TComDataCU()$/;"	f	class:TComDataCU
TComDataCU	source/Lib/TLibCommon/TComDataCU.h	/^class TComDataCU$/;"	c
TComHRD	source/Lib/TLibCommon/TComSlice.h	/^  TComHRD()$/;"	f	class:TComHRD
TComHRD	source/Lib/TLibCommon/TComSlice.h	/^class TComHRD$/;"	c
TComInputBitstream	source/Lib/TLibCommon/TComBitStream.cpp	/^TComInputBitstream::TComInputBitstream()$/;"	f	class:TComInputBitstream
TComInputBitstream	source/Lib/TLibCommon/TComBitStream.cpp	/^TComInputBitstream::TComInputBitstream(const TComInputBitstream &src)$/;"	f	class:TComInputBitstream
TComInputBitstream	source/Lib/TLibCommon/TComBitStream.h	/^class TComInputBitstream$/;"	c
TComInterpolationFilter	source/Lib/TLibCommon/TComInterpolationFilter.h	/^  TComInterpolationFilter() {}$/;"	f	class:TComInterpolationFilter
TComInterpolationFilter	source/Lib/TLibCommon/TComInterpolationFilter.h	/^class TComInterpolationFilter$/;"	c
TComIterator	source/Lib/TLibCommon/TComList.h	/^  typedef typename std::list<C>::iterator TComIterator;$/;"	t	class:TComList
TComList	source/Lib/TLibCommon/TComList.h	/^class TComList : public std::list< C > \/\/ NOTE: should not inherit from STL classes$/;"	c
TComLoopFilter	source/Lib/TLibCommon/TComLoopFilter.cpp	/^TComLoopFilter::TComLoopFilter()$/;"	f	class:TComLoopFilter
TComLoopFilter	source/Lib/TLibCommon/TComLoopFilter.h	/^class TComLoopFilter$/;"	c
TComMv	source/Lib/TLibCommon/TComMv.h	/^  TComMv( Short iHor, Short iVer ) :$/;"	f	class:TComMv
TComMv	source/Lib/TLibCommon/TComMv.h	/^  TComMv() :$/;"	f	class:TComMv
TComMv	source/Lib/TLibCommon/TComMv.h	/^class TComMv$/;"	c
TComMvField	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMvField() : m_iRefIdx( NOT_VALID ) {}$/;"	f	class:TComMvField
TComMvField	source/Lib/TLibCommon/TComMotionInfo.h	/^class TComMvField$/;"	c
TComOutputBitstream	source/Lib/TLibCommon/TComBitStream.cpp	/^TComOutputBitstream::TComOutputBitstream()$/;"	f	class:TComOutputBitstream
TComOutputBitstream	source/Lib/TLibCommon/TComBitStream.h	/^class TComOutputBitstream : public TComBitIf$/;"	c
TComPPS	source/Lib/TLibCommon/TComSlice.cpp	/^TComPPS::TComPPS()$/;"	f	class:TComPPS
TComPPS	source/Lib/TLibCommon/TComSlice.h	/^class TComPPS$/;"	c
TComPPSRExt	source/Lib/TLibCommon/TComSlice.cpp	/^TComPPSRExt::TComPPSRExt()$/;"	f	class:TComPPSRExt
TComPPSRExt	source/Lib/TLibCommon/TComSlice.h	/^class TComPPSRExt \/\/ Names aligned to text specification$/;"	c
TComPTL	source/Lib/TLibCommon/TComSlice.cpp	/^TComPTL::TComPTL()$/;"	f	class:TComPTL
TComPTL	source/Lib/TLibCommon/TComSlice.h	/^class TComPTL$/;"	c
TComPattern	source/Lib/TLibCommon/TComPattern.h	/^  TComPattern()$/;"	f	class:TComPattern
TComPattern	source/Lib/TLibCommon/TComPattern.h	/^class TComPattern$/;"	c
TComPic	source/Lib/TLibCommon/TComPic.cpp	/^TComPic::TComPic()$/;"	f	class:TComPic
TComPic	source/Lib/TLibCommon/TComPic.h	/^class TComPic$/;"	c
TComPicSym	source/Lib/TLibCommon/TComPicSym.cpp	/^TComPicSym::TComPicSym()$/;"	f	class:TComPicSym
TComPicSym	source/Lib/TLibCommon/TComPicSym.h	/^class TComPicSym$/;"	c
TComPicYuv	source/Lib/TLibCommon/TComPicYuv.cpp	/^TComPicYuv::TComPicYuv()$/;"	f	class:TComPicYuv
TComPicYuv	source/Lib/TLibCommon/TComPicYuv.h	/^class TComPicYuv$/;"	c
TComPictureHash	source/Lib/TLibCommon/TypeDef.h	/^struct TComPictureHash$/;"	s
TComPrediction	source/Lib/TLibCommon/TComPrediction.cpp	/^TComPrediction::TComPrediction()$/;"	f	class:TComPrediction
TComPrediction	source/Lib/TLibCommon/TComPrediction.h	/^class TComPrediction : public TComWeightPrediction$/;"	c
TComRPSList	source/Lib/TLibCommon/TComSlice.h	/^                                 TComRPSList()                                            { }$/;"	f	class:TComRPSList
TComRPSList	source/Lib/TLibCommon/TComSlice.h	/^class TComRPSList$/;"	c
TComRdCost	source/Lib/TLibCommon/TComRdCost.cpp	/^TComRdCost::TComRdCost()$/;"	f	class:TComRdCost
TComRdCost	source/Lib/TLibCommon/TComRdCost.h	/^class TComRdCost$/;"	c
TComRdCostWeightPrediction	source/Lib/TLibCommon/TComRdCostWeightPrediction.h	/^namespace TComRdCostWeightPrediction$/;"	n
TComRectangle	source/Lib/TLibCommon/TComRectangle.h	/^struct TComRectangle$/;"	s
TComRefPicListModification	source/Lib/TLibCommon/TComSlice.cpp	/^TComRefPicListModification::TComRefPicListModification()$/;"	f	class:TComRefPicListModification
TComRefPicListModification	source/Lib/TLibCommon/TComSlice.h	/^class TComRefPicListModification$/;"	c
TComReferencePictureSet	source/Lib/TLibCommon/TComSlice.cpp	/^TComReferencePictureSet::TComReferencePictureSet()$/;"	f	class:TComReferencePictureSet
TComReferencePictureSet	source/Lib/TLibCommon/TComSlice.h	/^class TComReferencePictureSet$/;"	c
TComSEIFisheyeVideoInfo	source/Lib/TLibCommon/TypeDef.h	/^  TComSEIFisheyeVideoInfo() : m_fisheyeCancelFlag(false), m_fisheyePersistenceFlag(false), m_fisheyeViewDimensionIdc(0), m_fisheyeActiveAreas() { }$/;"	f	struct:TComSEIFisheyeVideoInfo
TComSEIFisheyeVideoInfo	source/Lib/TLibCommon/TypeDef.h	/^struct TComSEIFisheyeVideoInfo$/;"	s
TComSEIMasteringDisplay	source/Lib/TLibCommon/TypeDef.h	/^struct TComSEIMasteringDisplay$/;"	s
TComSEITimeSet	source/Lib/TLibCommon/TypeDef.h	/^  TComSEITimeSet() : clockTimeStampFlag(false),$/;"	f	struct:TComSEITimeSet
TComSEITimeSet	source/Lib/TLibCommon/TypeDef.h	/^struct TComSEITimeSet$/;"	s
TComSPS	source/Lib/TLibCommon/TComSlice.cpp	/^TComSPS::TComSPS()$/;"	f	class:TComSPS
TComSPS	source/Lib/TLibCommon/TComSlice.h	/^class TComSPS$/;"	c
TComSPSRExt	source/Lib/TLibCommon/TComSlice.cpp	/^TComSPSRExt::TComSPSRExt()$/;"	f	class:TComSPSRExt
TComSPSRExt	source/Lib/TLibCommon/TComSlice.h	/^class TComSPSRExt \/\/ Names aligned to text specification$/;"	c
TComSampleAdaptiveOffset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^TComSampleAdaptiveOffset::TComSampleAdaptiveOffset()$/;"	f	class:TComSampleAdaptiveOffset
TComSampleAdaptiveOffset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^class TComSampleAdaptiveOffset$/;"	c
TComScalingList	source/Lib/TLibCommon/TComSlice.cpp	/^TComScalingList::TComScalingList()$/;"	f	class:TComScalingList
TComScalingList	source/Lib/TLibCommon/TComSlice.h	/^class TComScalingList$/;"	c
TComSlice	source/Lib/TLibCommon/TComSlice.cpp	/^TComSlice::TComSlice()$/;"	f	class:TComSlice
TComSlice	source/Lib/TLibCommon/TComSlice.h	/^class TComSlice$/;"	c
TComTU	source/Lib/TLibCommon/TComTU.cpp	/^TComTU::TComTU(TComDataCU *pcCU, const UInt absPartIdxCU, const UInt cuDepth, const UInt initTrDepthRelCU)$/;"	f	class:TComTU
TComTU	source/Lib/TLibCommon/TComTU.cpp	/^TComTU::TComTU(TComTU &parent, const Bool bProcessLastOfLevel, const TU_SPLIT_MODE splitMode, const Bool splitAtCurrentDepth, const ComponentID absPartIdxSourceComponent)$/;"	f	class:TComTU
TComTU	source/Lib/TLibCommon/TComTU.h	/^class TComTU$/;"	c
TComTURecurse	source/Lib/TLibCommon/TComTU.cpp	/^TComTURecurse::TComTURecurse(      TComDataCU *pcCU,$/;"	f	class:TComTURecurse
TComTURecurse	source/Lib/TLibCommon/TComTU.h	/^    TComTURecurse(      TComDataCU *pcCU,$/;"	f	class:TComTURecurse
TComTURecurse	source/Lib/TLibCommon/TComTU.h	/^    TComTURecurse(      TComTU        &parentLevel,                            \/\/Parent TU from which recursion children are derived$/;"	f	class:TComTURecurse
TComTURecurse	source/Lib/TLibCommon/TComTU.h	/^class TComTURecurse : public TComTU$/;"	c
TComTile	source/Lib/TLibCommon/TComPicSym.cpp	/^TComTile::TComTile()$/;"	f	class:TComTile
TComTile	source/Lib/TLibCommon/TComPicSym.h	/^class TComTile$/;"	c
TComTrQuant	source/Lib/TLibCommon/TComTrQuant.cpp	/^TComTrQuant::TComTrQuant()$/;"	f	class:TComTrQuant
TComTrQuant	source/Lib/TLibCommon/TComTrQuant.h	/^class TComTrQuant$/;"	c
TComVPS	source/Lib/TLibCommon/TComSlice.cpp	/^TComVPS::TComVPS()$/;"	f	class:TComVPS
TComVPS	source/Lib/TLibCommon/TComSlice.h	/^class TComVPS$/;"	c
TComVUI	source/Lib/TLibCommon/TComSlice.h	/^  TComVUI()$/;"	f	class:TComVUI
TComVUI	source/Lib/TLibCommon/TComSlice.h	/^class TComVUI$/;"	c
TComWeightPrediction	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^TComWeightPrediction::TComWeightPrediction()$/;"	f	class:TComWeightPrediction
TComWeightPrediction	source/Lib/TLibCommon/TComWeightPrediction.h	/^class TComWeightPrediction$/;"	c
TComYuv	source/Lib/TLibCommon/TComYuv.cpp	/^TComYuv::TComYuv()$/;"	f	class:TComYuv
TComYuv	source/Lib/TLibCommon/TComYuv.h	/^class TComYuv$/;"	c
TDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::TDecBinCABAC()$/;"	f	class:TDecBinCABAC
TDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^class TDecBinCABAC : public TDecBinIf$/;"	c
TDecBinIf	source/Lib/TLibDecoder/TDecBinCoder.h	/^class TDecBinIf$/;"	c
TDecCavlc	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^TDecCavlc::TDecCavlc()$/;"	f	class:TDecCavlc
TDecCavlc	source/Lib/TLibDecoder/TDecCAVLC.h	/^class TDecCavlc : public SyntaxElementParser, public TDecEntropyIf$/;"	c
TDecConformanceCheck	source/Lib/TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::TDecConformanceCheck()$/;"	f	class:TDecConformanceCheck
TDecConformanceCheck	source/Lib/TLibDecoder/TDecConformance.h	/^class TDecConformanceCheck$/;"	c
TDecCu	source/Lib/TLibDecoder/TDecCu.cpp	/^TDecCu::TDecCu()$/;"	f	class:TDecCu
TDecCu	source/Lib/TLibDecoder/TDecCu.h	/^class TDecCu$/;"	c
TDecEntropy	source/Lib/TLibDecoder/TDecEntropy.h	/^class TDecEntropy$/;"	c
TDecEntropyIf	source/Lib/TLibDecoder/TDecEntropy.h	/^class TDecEntropyIf$/;"	c
TDecGop	source/Lib/TLibDecoder/TDecGop.cpp	/^TDecGop::TDecGop()$/;"	f	class:TDecGop
TDecGop	source/Lib/TLibDecoder/TDecGop.h	/^class TDecGop$/;"	c
TDecSbac	source/Lib/TLibDecoder/TDecSbac.cpp	/^TDecSbac::TDecSbac()$/;"	f	class:TDecSbac
TDecSbac	source/Lib/TLibDecoder/TDecSbac.h	/^class TDecSbac : public TDecEntropyIf$/;"	c
TDecSlice	source/Lib/TLibDecoder/TDecSlice.cpp	/^TDecSlice::TDecSlice()$/;"	f	class:TDecSlice
TDecSlice	source/Lib/TLibDecoder/TDecSlice.h	/^class TDecSlice$/;"	c
TDecTop	source/Lib/TLibDecoder/TDecTop.cpp	/^TDecTop::TDecTop()$/;"	f	class:TDecTop
TDecTop	source/Lib/TLibDecoder/TDecTop.h	/^class TDecTop$/;"	c
TEMPORAL_LEVEL0_INDEX	source/Lib/TLibCommon/SEI.h	/^    TEMPORAL_LEVEL0_INDEX                = 131,$/;"	e	enum:SEI::PayloadType
TEMP_MOTION_CONSTRAINED_TILE_SETS	source/Lib/TLibCommon/SEI.h	/^    TEMP_MOTION_CONSTRAINED_TILE_SETS    = 139,$/;"	e	enum:SEI::PayloadType
TEncAnalyze	source/Lib/TLibEncoder/TEncAnalyze.h	/^  TEncAnalyze() { clear(); }$/;"	f	class:TEncAnalyze
TEncAnalyze	source/Lib/TLibEncoder/TEncAnalyze.h	/^class TEncAnalyze$/;"	c
TEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^TEncBinCABAC::TEncBinCABAC()$/;"	f	class:TEncBinCABAC
TEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^class TEncBinCABAC : public TEncBinIf$/;"	c
TEncBinCABACCounter	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^TEncBinCABACCounter::TEncBinCABACCounter()$/;"	f	class:TEncBinCABACCounter
TEncBinCABACCounter	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.h	/^class TEncBinCABACCounter : public TEncBinCABAC$/;"	c
TEncBinIf	source/Lib/TLibEncoder/TEncBinCoder.h	/^class TEncBinIf$/;"	c
TEncCavlc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^TEncCavlc::TEncCavlc()$/;"	f	class:TEncCavlc
TEncCavlc	source/Lib/TLibEncoder/TEncCavlc.h	/^class TEncCavlc : public SyntaxElementWriter, public TEncEntropyIf$/;"	c
TEncCfg	source/Lib/TLibEncoder/TEncCfg.h	/^  TEncCfg()$/;"	f	class:TEncCfg
TEncCfg	source/Lib/TLibEncoder/TEncCfg.h	/^class TEncCfg$/;"	c
TEncCu	source/Lib/TLibEncoder/TEncCu.h	/^class TEncCu$/;"	c
TEncEntropy	source/Lib/TLibEncoder/TEncEntropy.h	/^class TEncEntropy$/;"	c
TEncEntropyIf	source/Lib/TLibEncoder/TEncEntropy.h	/^class TEncEntropyIf$/;"	c
TEncGOP	source/Lib/TLibEncoder/TEncGOP.cpp	/^TEncGOP::TEncGOP()$/;"	f	class:TEncGOP
TEncGOP	source/Lib/TLibEncoder/TEncGOP.h	/^class TEncGOP$/;"	c
TEncPic	source/Lib/TLibEncoder/TEncPic.cpp	/^TEncPic::TEncPic()$/;"	f	class:TEncPic
TEncPic	source/Lib/TLibEncoder/TEncPic.h	/^class TEncPic : public TComPic$/;"	c
TEncPicQPAdaptationLayer	source/Lib/TLibEncoder/TEncPic.cpp	/^TEncPicQPAdaptationLayer::TEncPicQPAdaptationLayer()$/;"	f	class:TEncPicQPAdaptationLayer
TEncPicQPAdaptationLayer	source/Lib/TLibEncoder/TEncPic.h	/^class TEncPicQPAdaptationLayer$/;"	c
TEncPreanalyzer	source/Lib/TLibEncoder/TEncPreanalyzer.cpp	/^TEncPreanalyzer::TEncPreanalyzer()$/;"	f	class:TEncPreanalyzer
TEncPreanalyzer	source/Lib/TLibEncoder/TEncPreanalyzer.h	/^class TEncPreanalyzer$/;"	c
TEncQPAdaptationUnit	source/Lib/TLibEncoder/TEncPic.cpp	/^TEncQPAdaptationUnit::TEncQPAdaptationUnit()$/;"	f	class:TEncQPAdaptationUnit
TEncQPAdaptationUnit	source/Lib/TLibEncoder/TEncPic.h	/^class TEncQPAdaptationUnit$/;"	c
TEncRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRCGOP::TEncRCGOP()$/;"	f	class:TEncRCGOP
TEncRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^class TEncRCGOP$/;"	c
TEncRCPic	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRCPic::TEncRCPic()$/;"	f	class:TEncRCPic
TEncRCPic	source/Lib/TLibEncoder/TEncRateCtrl.h	/^class TEncRCPic$/;"	c
TEncRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRCSeq::TEncRCSeq()$/;"	f	class:TEncRCSeq
TEncRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.h	/^class TEncRCSeq$/;"	c
TEncRateCtrl	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRateCtrl::TEncRateCtrl()$/;"	f	class:TEncRateCtrl
TEncRateCtrl	source/Lib/TLibEncoder/TEncRateCtrl.h	/^class TEncRateCtrl$/;"	c
TEncSEIKneeFunctionInformation	source/Lib/TLibEncoder/TEncCfg.h	/^struct TEncSEIKneeFunctionInformation$/;"	s	class:TEncCfg
TEncSampleAdaptiveOffset	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^TEncSampleAdaptiveOffset::TEncSampleAdaptiveOffset()$/;"	f	class:TEncSampleAdaptiveOffset
TEncSampleAdaptiveOffset	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^class TEncSampleAdaptiveOffset : public TComSampleAdaptiveOffset$/;"	c
TEncSbac	source/Lib/TLibEncoder/TEncSbac.cpp	/^TEncSbac::TEncSbac()$/;"	f	class:TEncSbac
TEncSbac	source/Lib/TLibEncoder/TEncSbac.h	/^class TEncSbac : public TEncEntropyIf$/;"	c
TEncSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::TEncSearch()$/;"	f	class:TEncSearch
TEncSearch	source/Lib/TLibEncoder/TEncSearch.h	/^class TEncSearch : public TComPrediction$/;"	c
TEncSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^TEncSlice::TEncSlice()$/;"	f	class:TEncSlice
TEncSlice	source/Lib/TLibEncoder/TEncSlice.h	/^class TEncSlice$/;"	c
TEncTemporalFilter	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^TEncTemporalFilter::TEncTemporalFilter() :$/;"	f	class:TEncTemporalFilter
TEncTemporalFilter	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^class TEncTemporalFilter$/;"	c
TEncTop	source/Lib/TLibEncoder/TEncTop.cpp	/^TEncTop::TEncTop() :$/;"	f	class:TEncTop
TEncTop	source/Lib/TLibEncoder/TEncTop.h	/^class TEncTop : public TEncCfg$/;"	c
TFilterCoeff	source/Lib/TLibCommon/TypeDef.h	/^typedef       Short           TFilterCoeff;      \/\/\/< filter coefficient$/;"	t
TIME_CODE	source/Lib/TLibCommon/SEI.h	/^    TIME_CODE                            = 136,$/;"	e	enum:SEI::PayloadType
TMatrixCoeff	source/Lib/TLibCommon/TypeDef.h	/^typedef       Int             TMatrixCoeff;      \/\/\/< transform matrix coefficient$/;"	t
TMatrixCoeff	source/Lib/TLibCommon/TypeDef.h	/^typedef       Short           TMatrixCoeff;      \/\/\/< transform matrix coefficient$/;"	t
TONE_MAPPING_INFO	source/Lib/TLibCommon/SEI.h	/^    TONE_MAPPING_INFO                    = 23,$/;"	e	enum:SEI::PayloadType
TRAIL_N	source/App/Parcat/parcat.cpp	/^  TRAIL_N = 0, \/\/ 0$/;"	e	enum:NalUnitType	file:
TRAIL_R	source/App/Parcat/parcat.cpp	/^  TRAIL_R,     \/\/ 1$/;"	e	enum:NalUnitType	file:
TRANSFORM_FORWARD	source/Lib/TLibCommon/TypeDef.h	/^  TRANSFORM_FORWARD              = 0,$/;"	e	enum:TransformDirection
TRANSFORM_INVERSE	source/Lib/TLibCommon/TypeDef.h	/^  TRANSFORM_INVERSE              = 1,$/;"	e	enum:TransformDirection
TRANSFORM_NUMBER_OF_DIRECTIONS	source/Lib/TLibCommon/TypeDef.h	/^  TRANSFORM_NUMBER_OF_DIRECTIONS = 2$/;"	e	enum:TransformDirection
TRCLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^struct TRCLCU$/;"	s
TRCParameter	source/Lib/TLibEncoder/TEncRateCtrl.h	/^struct TRCParameter$/;"	s
TRISTATE	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  typedef enum TRISTATE$/;"	g	struct:ProfileFeatures
TRISTATE	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  } TRISTATE;$/;"	t	struct:ProfileFeatures	typeref:enum:ProfileFeatures::TRISTATE
TRISTATE	source/Lib/TLibDecoder/TDecConformance.h	/^typedef enum TRISTATE$/;"	g
TRISTATE	source/Lib/TLibDecoder/TDecConformance.h	/^} TRISTATE;$/;"	t	typeref:enum:TRISTATE
TSA_N	source/App/Parcat/parcat.cpp	/^  TSA_N,       \/\/ 2$/;"	e	enum:NalUnitType	file:
TSA_R	source/App/Parcat/parcat.cpp	/^  TSA_R,       \/\/ 3$/;"	e	enum:NalUnitType	file:
TUCompRectHasAssociatedTransformSkipFlag	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool TUCompRectHasAssociatedTransformSkipFlag(const TComRectangle &rectSamples, const UInt transformSkipLog2MaxSize)$/;"	f
TUEntropyCodingParameters	source/Lib/TLibCommon/TypeDef.h	/^struct TUEntropyCodingParameters$/;"	s
TU_SPLIT_MODE	source/Lib/TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	g	class:TComTU
TVideoIOYuv	source/Lib/Utilities/TVideoIOYuv.h	/^  TVideoIOYuv()           {}$/;"	f	class:TVideoIOYuv
TVideoIOYuv	source/Lib/Utilities/TVideoIOYuv.h	/^class TVideoIOYuv$/;"	c
Tally	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^      Tally( ): m_sum( 0.0 ), m_numSlices( 0 ) { }$/;"	f	class:__anon2::Tally
Tally	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^  class Tally$/;"	c	namespace:__anon2	file:
TargetsParseException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^class TargetsParseException: public RuntimeError$/;"	c
TemporalFilterSourcePicInfo	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  TemporalFilterSourcePicInfo() : picBuffer(), mvs(), origOffset(0) { }$/;"	f	struct:TemporalFilterSourcePicInfo
TemporalFilterSourcePicInfo	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^struct TemporalFilterSourcePicInfo$/;"	s
Tier	source/Lib/TLibCommon/TypeDef.h	/^  enum Tier$/;"	g	namespace:Level
TileSetData	source/Lib/TLibCommon/SEI.h	/^  class TileSetData$/;"	c	class:SEITempMotionConstrainedTileSets
TimingInfo	source/Lib/TLibCommon/TComSlice.h	/^  TimingInfo()$/;"	f	class:TimingInfo
TimingInfo	source/Lib/TLibCommon/TComSlice.h	/^class TimingInfo$/;"	c
Toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^class Toolset(object):$/;"	c
TransformDirection	source/Lib/TLibCommon/TypeDef.h	/^enum TransformDirection$/;"	g
UChar	source/Lib/TLibCommon/TypeDef.h	/^typedef       unsigned char       UChar; \/\/ Unsigned 8-bit values$/;"	t
UIProfileName	source/App/TAppEncoder/TAppEncCfg.cpp	/^enum UIProfileName \/\/ this is used for determining profile strings, where multiple profiles map to a single profile idc with various constraint flag combinations$/;"	g	file:
UI_HIGHTHROUGHPUTREXT	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_HIGHTHROUGHPUTREXT = 5,$/;"	e	enum:UIProfileName	file:
UI_HIGHTHROUGHPUT_444	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_HIGHTHROUGHPUT_444     = 21308,$/;"	e	enum:UIProfileName	file:
UI_HIGHTHROUGHPUT_444_10	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_HIGHTHROUGHPUT_444_10  = 21310,$/;"	e	enum:UIProfileName	file:
UI_HIGHTHROUGHPUT_444_14	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_HIGHTHROUGHPUT_444_14  = 21314,$/;"	e	enum:UIProfileName	file:
UI_HIGHTHROUGHPUT_444_16_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_HIGHTHROUGHPUT_444_16_INTRA  = 22316$/;"	e	enum:UIProfileName	file:
UI_MAIN	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN = 1,$/;"	e	enum:UIProfileName	file:
UI_MAIN10	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN10 = 2,$/;"	e	enum:UIProfileName	file:
UI_MAIN10_STILL_PICTURE	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN10_STILL_PICTURE=10002,$/;"	e	enum:UIProfileName	file:
UI_MAINREXT	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAINREXT = 4,$/;"	e	enum:UIProfileName	file:
UI_MAINSTILLPICTURE	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAINSTILLPICTURE = 3,$/;"	e	enum:UIProfileName	file:
UI_MAIN_10_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_10_INTRA     = 2110,$/;"	e	enum:UIProfileName	file:
UI_MAIN_12	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_12           = 1112,$/;"	e	enum:UIProfileName	file:
UI_MAIN_12_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_12_INTRA     = 2112,$/;"	e	enum:UIProfileName	file:
UI_MAIN_422_10	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_422_10       = 1210,$/;"	e	enum:UIProfileName	file:
UI_MAIN_422_10_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_422_10_INTRA = 2210,$/;"	e	enum:UIProfileName	file:
UI_MAIN_422_12	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_422_12       = 1212,$/;"	e	enum:UIProfileName	file:
UI_MAIN_422_12_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_422_12_INTRA = 2212,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444          = 1308,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_10	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_10       = 1310,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_10_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_10_INTRA = 2310,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_12	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_12       = 1312,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_12_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_12_INTRA = 2312,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_16	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_16       = 1316, \/\/ non-standard profile definition, used for development purposes$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_16_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_16_INTRA = 2316,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_16_STILL_PICTURE	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_16_STILL_PICTURE = 12316,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_INTRA    = 2308,$/;"	e	enum:UIProfileName	file:
UI_MAIN_444_STILL_PICTURE	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_444_STILL_PICTURE = 11308,$/;"	e	enum:UIProfileName	file:
UI_MAIN_INTRA	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MAIN_INTRA        = 2108,$/;"	e	enum:UIProfileName	file:
UI_MONOCHROME_12	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MONOCHROME_12     = 1012,$/;"	e	enum:UIProfileName	file:
UI_MONOCHROME_16	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MONOCHROME_16     = 1016,$/;"	e	enum:UIProfileName	file:
UI_MONOCHROME_8	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_MONOCHROME_8      = 1008,$/;"	e	enum:UIProfileName	file:
UI_NONE	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UI_NONE = 0,$/;"	e	enum:UIProfileName	file:
UInt	source/Lib/TLibCommon/TypeDef.h	/^typedef       unsigned int        UInt;$/;"	t
UInt64	source/Lib/TLibCommon/TypeDef.h	/^typedef       __int64             UInt64;   \/\/ MS VC6 does not support unsigned __int64 to double conversion$/;"	t
UInt64	source/Lib/TLibCommon/TypeDef.h	/^typedef       unsigned __int64    UInt64;$/;"	t
UInt64	source/Lib/TLibCommon/TypeDef.h	/^typedef       unsigned long long  UInt64;$/;"	t
UNAME_S	Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	Makefile	/^    UNAME_S := Windows$/;"	m
UNAME_S	Makefile	/^  UNAME_S := $(shell uname -s)$/;"	m
UNSPECIFIED_48	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_48,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_49	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_49,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_50	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_50,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_51	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_51,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_52	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_52,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_53	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_53,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_54	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_54,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_55	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_55,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_56	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_56,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_57	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_57,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_58	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_58,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_59	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_59,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_60	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_60,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_61	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_61,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_62	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_62,$/;"	e	enum:NalUnitType	file:
UNSPECIFIED_63	source/App/Parcat/parcat.cpp	/^  UNSPECIFIED_63,$/;"	e	enum:NalUnitType	file:
USER_DATA_REGISTERED_ITU_T_T35	source/Lib/TLibCommon/SEI.h	/^    USER_DATA_REGISTERED_ITU_T_T35       = 4,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
USER_DATA_UNREGISTERED	source/Lib/TLibCommon/SEI.h	/^    USER_DATA_UNREGISTERED               = 5,   \/\/ TODO: add encoder command line control to create these messages$/;"	e	enum:SEI::PayloadType
UShort	source/Lib/TLibCommon/TypeDef.h	/^typedef       unsigned short      UShort;$/;"	t
UpdateCABACStat	source/Lib/TLibCommon/TComCodingStatistics.h	/^    static Void UpdateCABACStat(const TComCodingStatisticsClassType &stat, UInt uiRangeBefore, UInt uiRangeAfter, Int val)$/;"	f	class:TComCodingStatistics
UseDPCMForFirstPassIntraEstimation	source/Lib/TLibCommon/TComPrediction.cpp	/^Bool TComPrediction::UseDPCMForFirstPassIntraEstimation(TComTU &rTu, const UInt uiDirMode)$/;"	f	class:TComPrediction
VECTOR_CODING__DISTORTION_CALCULATIONS	source/Lib/TLibCommon/TypeDef.h	139;"	d
VECTOR_CODING__DISTORTION_CALCULATIONS	source/Lib/TLibCommon/TypeDef.h	142;"	d
VECTOR_CODING__INTERPOLATION_FILTER	source/Lib/TLibCommon/TypeDef.h	138;"	d
VECTOR_CODING__INTERPOLATION_FILTER	source/Lib/TLibCommon/TypeDef.h	141;"	d
VERIFY	source/App/utils/annexBbytecount.cpp	105;"	d	file:
VERIFY	source/App/utils/annexBbytecount.cpp	95;"	d	file:
VERTICAL_SPLIT	source/Lib/TLibCommon/TComTU.h	/^    typedef enum TU_SPLIT_MODE { DONT_SPLIT=0, VERTICAL_SPLIT=1, QUAD_SPLIT=2, NUMBER_OF_SPLIT_MODES=3 } SPLIT_MODE;$/;"	e	enum:TComTU::TU_SPLIT_MODE
VER_IDX	source/Lib/TLibCommon/CommonDef.h	/^static const Int VER_IDX =                                         26; \/\/\/< index for intra VERTICAL   mode$/;"	v
VPS	source/App/Parcat/parcat.cpp	/^  VPS,                     \/\/ 32$/;"	e	enum:NalUnitType	file:
VcsCommandTracer	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class VcsCommandTracer(object):$/;"	c
VcsUrl	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class VcsUrl(object):$/;"	c
VcsUtil	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^class VcsUtil(object):$/;"	c
Void	source/Lib/TLibCommon/TypeDef.h	/^typedef       void                Void;$/;"	t
WCGChromaQPControl	source/Lib/TLibCommon/TypeDef.h	/^struct WCGChromaQPControl$/;"	s
WEIGHT_PRED_SAD_RELATIVE_TO_NON_WEIGHT_PRED_SAD	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^static const Double WEIGHT_PRED_SAD_RELATIVE_TO_NON_WEIGHT_PRED_SAD=0.99; \/\/ NOTE: U0040 used 0.95$/;"	v	file:
WPACDCParam	source/Lib/TLibCommon/TComSlice.h	/^struct WPACDCParam$/;"	s
WPScalingParam	source/Lib/TLibCommon/TComSlice.h	/^struct WPScalingParam$/;"	s
WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT	source/Lib/TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT                           =2,$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING	source/Lib/TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING              =3,$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING_AND_EXTENSION	source/Lib/TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_HISTOGRAM_AND_PER_COMPONENT_AND_CLIPPING_AND_EXTENSION=4$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_SIMPLE_DC_COMBINED_COMPONENT	source/Lib/TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_SIMPLE_DC_COMBINED_COMPONENT                          =0,$/;"	e	enum:WeightedPredictionMethod
WP_PER_PICTURE_WITH_SIMPLE_DC_PER_COMPONENT	source/Lib/TLibCommon/TypeDef.h	/^  WP_PER_PICTURE_WITH_SIMPLE_DC_PER_COMPONENT                               =1,$/;"	e	enum:WeightedPredictionMethod
WRITE_CODE	source/Lib/TLibEncoder/SyntaxElementWriter.h	54;"	d
WRITE_CODE	source/Lib/TLibEncoder/SyntaxElementWriter.h	61;"	d
WRITE_FLAG	source/Lib/TLibEncoder/SyntaxElementWriter.h	57;"	d
WRITE_FLAG	source/Lib/TLibEncoder/SyntaxElementWriter.h	64;"	d
WRITE_SCODE	source/Lib/TLibEncoder/SyntaxElementWriter.h	53;"	d
WRITE_SCODE	source/Lib/TLibEncoder/SyntaxElementWriter.h	60;"	d
WRITE_SVLC	source/Lib/TLibEncoder/SyntaxElementWriter.h	56;"	d
WRITE_SVLC	source/Lib/TLibEncoder/SyntaxElementWriter.h	63;"	d
WRITE_UVLC	source/Lib/TLibEncoder/SyntaxElementWriter.h	55;"	d
WRITE_UVLC	source/Lib/TLibEncoder/SyntaxElementWriter.h	62;"	d
WeightPredAnalysis	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^WeightPredAnalysis::WeightPredAnalysis()$/;"	f	class:WeightPredAnalysis
WeightPredAnalysis	source/Lib/TLibEncoder/WeightPredAnalysis.h	/^class  WeightPredAnalysis$/;"	c
WeightedPredictionMethod	source/Lib/TLibCommon/TypeDef.h	/^enum WeightedPredictionMethod$/;"	g
Window	source/Lib/TLibCommon/TypeDef.h	/^  Window()$/;"	f	class:Window
Window	source/Lib/TLibCommon/TypeDef.h	/^class Window$/;"	c
WrongNumberOfArgumentsException	source/App/utils/BitrateTargeting/GuessLambdaModifiersMain.cpp	/^class WrongNumberOfArgumentsException: public RuntimeError$/;"	c	file:
_AMVPInfo	source/Lib/TLibCommon/TComMotionInfo.h	/^typedef struct _AMVPInfo$/;"	s
_LFCUParam	source/Lib/TLibCommon/TypeDef.h	/^typedef struct _LFCUParam$/;"	s
__ACCESSUNIT__	source/Lib/TLibCommon/AccessUnit.h	42;"	d
__ANNEXBREAD__	source/Lib/TLibDecoder/AnnexBread.h	42;"	d
__ANNEXBWRITE__	source/Lib/TLibEncoder/AnnexBwrite.h	37;"	d
__COMMONDEF__	source/Lib/TLibCommon/CommonDef.h	39;"	d
__CONTEXTMODEL3DBUFFER__	source/Lib/TLibCommon/ContextModel3DBuffer.h	39;"	d
__CONTEXTMODEL__	source/Lib/TLibCommon/ContextModel.h	40;"	d
__CONTEXTTABLES__	source/Lib/TLibCommon/ContextTables.h	40;"	d
__DEBUG__	source/Lib/TLibCommon/Debug.h	39;"	d
__EXTRACTBITRATES__	source/App/utils/BitrateTargeting/ExtractBitrates.h	35;"	d
__GUESSLAMBDAMODIFIERS__	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	35;"	d
__MsvcRegistry	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    class __MsvcRegistry(object):$/;"	c	class:MsvcRegistry
__NALREAD__	source/Lib/TLibDecoder/NALread.h	42;"	d
__NALWRITE__	source/Lib/TLibEncoder/NALwrite.h	37;"	d
__NAL__	source/Lib/TLibCommon/NAL.h	37;"	d
__PROFILELEVELTIERFEATURES__	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	39;"	d
__PROGRAM_OPTIONS_LITE__	source/Lib/Utilities/program_options_lite.h	40;"	d
__RUNTIMEERROR__	source/App/utils/BitrateTargeting/RuntimeError.h	35;"	d
__SEIENCODER__	source/Lib/TLibEncoder/SEIEncoder.h	37;"	d
__SEIFILMGRAINSYNTHESIZER__	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	40;"	d
__SEIREAD__	source/Lib/TLibDecoder/SEIread.h	40;"	d
__SEIREMOVALAPPCFG__	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	39;"	d
__SEIREMOVALAPP__	source/App/SEIRemovalApp/SEIRemovalApp.h	39;"	d
__SEIWRITE__	source/Lib/TLibEncoder/SEIwrite.h	37;"	d
__SEI__	source/Lib/TLibCommon/SEI.h	35;"	d
__SYNTAXELEMENTPARSER__	source/Lib/TLibDecoder/SyntaxElementParser.h	39;"	d
__SYNTAXELEMENTWRITER__	source/Lib/TLibEncoder/SyntaxElementWriter.h	39;"	d
__SystemInfo	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^    class __SystemInfo(object):$/;"	c	class:SystemInfo
__TAPPDECCFG__	source/App/TAppDecoder/TAppDecCfg.h	39;"	d
__TAPPDECTOP__	source/App/TAppDecoder/TAppDecTop.h	39;"	d
__TAPPENCCFG__	source/App/TAppEncoder/TAppEncCfg.h	39;"	d
__TAPPENCTOP__	source/App/TAppEncoder/TAppEncTop.h	39;"	d
__TAPPMCTSEXTCFG__	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	38;"	d
__TAPPMCTSEXTTOP__	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	39;"	d
__TCOMBITCOUNTER__	source/Lib/TLibCommon/TComBitCounter.h	39;"	d
__TCOMBITSTREAM__	source/Lib/TLibCommon/TComBitStream.h	39;"	d
__TCOMCABACTABLES__	source/Lib/TLibCommon/TComCABACTables.h	39;"	d
__TCOMCHROMAFORMAT__	source/Lib/TLibCommon/TComChromaFormat.h	35;"	d
__TCOMCODINGSTATISTICS__	source/Lib/TLibCommon/TComCodingStatistics.h	35;"	d
__TCOMDATACU__	source/Lib/TLibCommon/TComDataCU.h	40;"	d
__TCOMINTERPOLATIONFILTER__	source/Lib/TLibCommon/TComInterpolationFilter.h	40;"	d
__TCOMLIST__	source/Lib/TLibCommon/TComList.h	39;"	d
__TCOMLOOPFILTER__	source/Lib/TLibCommon/TComLoopFilter.h	39;"	d
__TCOMMOTIONINFO__	source/Lib/TLibCommon/TComMotionInfo.h	40;"	d
__TCOMMV__	source/Lib/TLibCommon/TComMv.h	39;"	d
__TCOMPATTERN__	source/Lib/TLibCommon/TComPattern.h	39;"	d
__TCOMPICSYM__	source/Lib/TLibCommon/TComPicSym.h	39;"	d
__TCOMPICYUV__	source/Lib/TLibCommon/TComPicYuv.h	39;"	d
__TCOMPIC__	source/Lib/TLibCommon/TComPic.h	39;"	d
__TCOMPREDICTION__	source/Lib/TLibCommon/TComPrediction.h	39;"	d
__TCOMRDCOSTWEIGHTPREDICTION__	source/Lib/TLibCommon/TComRdCostWeightPrediction.h	39;"	d
__TCOMRDCOST__	source/Lib/TLibCommon/TComRdCost.h	39;"	d
__TCOMRECTANGLE__	source/Lib/TLibCommon/TComRectangle.h	36;"	d
__TCOMROM__	source/Lib/TLibCommon/TComRom.h	39;"	d
__TCOMSAMPLEADAPTIVEOFFSET__	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	39;"	d
__TCOMSLICE__	source/Lib/TLibCommon/TComSlice.h	39;"	d
__TCOMTRQUANT__	source/Lib/TLibCommon/TComTrQuant.h	39;"	d
__TCOMTU__	source/Lib/TLibCommon/TComTU.h	35;"	d
__TCOMWEIGHTPREDICTION__	source/Lib/TLibCommon/TComWeightPrediction.h	39;"	d
__TCOMYUV__	source/Lib/TLibCommon/TComYuv.h	41;"	d
__TDECBINCODERCABAC__	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	39;"	d
__TDECBINCODER__	source/Lib/TLibDecoder/TDecBinCoder.h	39;"	d
__TDECCAVLC__	source/Lib/TLibDecoder/TDecCAVLC.h	39;"	d
__TDECCONFORMANCE__	source/Lib/TLibDecoder/TDecConformance.h	39;"	d
__TDECCU__	source/Lib/TLibDecoder/TDecCu.h	39;"	d
__TDECENTROPY__	source/Lib/TLibDecoder/TDecEntropy.h	39;"	d
__TDECGOP__	source/Lib/TLibDecoder/TDecGop.h	39;"	d
__TDECSBAC__	source/Lib/TLibDecoder/TDecSbac.h	39;"	d
__TDECSLICE__	source/Lib/TLibDecoder/TDecSlice.h	39;"	d
__TDECTOP__	source/Lib/TLibDecoder/TDecTop.h	39;"	d
__TEMPORAL_FILTER__	source/Lib/TLibEncoder/TEncTemporalFilter.h	39;"	d
__TENCANALYZE__	source/Lib/TLibEncoder/TEncAnalyze.h	39;"	d
__TENCBINCODERCABACCOUNTER__	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.h	39;"	d
__TENCBINCODERCABAC__	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	39;"	d
__TENCBINCODER__	source/Lib/TLibEncoder/TEncBinCoder.h	39;"	d
__TENCCAVLC__	source/Lib/TLibEncoder/TEncCavlc.h	39;"	d
__TENCCFG__	source/Lib/TLibEncoder/TEncCfg.h	39;"	d
__TENCCU__	source/Lib/TLibEncoder/TEncCu.h	39;"	d
__TENCENTROPY__	source/Lib/TLibEncoder/TEncEntropy.h	39;"	d
__TENCGOP__	source/Lib/TLibEncoder/TEncGOP.h	39;"	d
__TENCPIC__	source/Lib/TLibEncoder/TEncPic.h	39;"	d
__TENCPREANALYZER__	source/Lib/TLibEncoder/TEncPreanalyzer.h	39;"	d
__TENCRATECTRL__	source/Lib/TLibEncoder/TEncRateCtrl.h	39;"	d
__TENCSAMPLEADAPTIVEOFFSET__	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	40;"	d
__TENCSBAC__	source/Lib/TLibEncoder/TEncSbac.h	39;"	d
__TENCSEARCH__	source/Lib/TLibEncoder/TEncSearch.h	39;"	d
__TENCSLICE__	source/Lib/TLibEncoder/TEncSlice.h	39;"	d
__TENCTOP__	source/Lib/TLibEncoder/TEncTop.h	39;"	d
__TVIDEOIOYUV__	source/Lib/Utilities/TVideoIOYuv.h	39;"	d
__TYPEDEF__	source/Lib/TLibCommon/TypeDef.h	39;"	d
__WEIGHTPREDANALYSIS__	source/Lib/TLibEncoder/WeightPredAnalysis.h	38;"	d
__call__	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def __call__(self, argv=None):$/;"	f	file:
__call__	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def __call__(self):$/;"	m	class:CMakeLauncherApp	file:
__call__	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^    def __call__(self):$/;"	m	class:CMakeDocUtilApp	file:
__getattr__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __getattr__(self, item):$/;"	m	class:MsvcRegistry	file:
__getattr__	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^    def __getattr__(self, item):$/;"	m	class:SystemInfo	file:
__init__	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def __init__(self):$/;"	m	class:CMakeBuildUpdateApp
__init__	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def __init__(self):$/;"	m	class:CMakeBuildUpdateAppParams
__init__	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def __init__(self):$/;"	m	class:CMakeLauncherApp
__init__	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^    def __init__(self):$/;"	m	class:CMakeDocUtilApp
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def __init__(self):$/;"	m	class:CMakeRstUtilParams
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def __init__(self):$/;"	m	class:RstModuleSection
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def __init__(self, dry_run=False):$/;"	m	class:CMakeManualRstUtil
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def __init__(self, sys_info=None):$/;"	m	class:CMakeFinder
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def __init__(self):$/;"	m	class:CMakeCompilerInfo
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def __init__(self):$/;"	m	class:CMakeLauncherParams
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def __init__(self, build_root, compiler_info, generator_alias):$/;"	m	class:CMakeBuildTreeInfo
__init__	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def __init__(self, verbosity=1):$/;"	m	class:CMakeLauncher
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def __init__(self, use_env=True):$/;"	m	class:NdkFinder
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def __init__(self):$/;"	m	class:MsvcRegistry.__MsvcRegistry
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def __init__(self, target_os, api_level=None):$/;"	m	class:Toolset.PlatformInfo
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __init__(self):$/;"	m	class:FatBinaryTool
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __init__(self):$/;"	m	class:MsvcRegistry
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __init__(self, dylib):$/;"	m	class:DyLibInstallNameInfo
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __init__(self, ignore_system_libs=True):$/;"	m	class:DyLibInstallNameInfoInspector
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __init__(self, sys_info, toolset=None, stl='default'):$/;"	m	class:Toolset
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __init__(self, verbose=False):$/;"	m	class:BuildScriptInstaller
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^    def __init__(self, msg, list_traceback=False):$/;"	m	class:InvalidCommandLineArgumentError
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^    def __init__(self, msg, list_traceback=False):$/;"	m	class:InvalidInputParameterError
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^    def __init__(self, msg, list_traceback=True):$/;"	m	class:BaseError
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def __init__(self):$/;"	m	class:SystemInfo.__SystemInfo
__init__	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^    def __init__(self, pywin_check=False):$/;"	m	class:SystemInfo
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self):$/;"	m	class:SvnPropFileParser
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self):$/;"	m	class:SvnProperties
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self, cmd_tracer=None):$/;"	m	class:GitHelper
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self, cmd_tracer=None):$/;"	m	class:SvnHelper
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self, cmd_tracer=None):$/;"	m	class:VcsUtil
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self, enable_command_history=True):$/;"	m	class:VcsCommandTracer
__init__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __init__(self, url_str=None):$/;"	m	class:VcsUrl
__lldb_init_module	cmake/CMakeBuild/lldb/CMakeBuildLldbExt.py	/^def __lldb_init_module( debugger, dict ):$/;"	f	file:
__str__	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def __str__(self):$/;"	m	class:CMakeCompilerInfo	file:
__str__	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def __str__(self):$/;"	m	class:Toolset	file:
__str__	cmake/CMakeBuild/bin/pyhhi/build/common/error.py	/^    def __str__(self):$/;"	m	class:BaseError	file:
__str__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __str__(self):$/;"	m	class:SvnProperties	file:
__str__	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def __str__(self):$/;"	m	class:VcsUrl	file:
_add_bash_hash_bang	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _add_bash_hash_bang(self, script_old, script_new):$/;"	m	class:NdkFinder
_add_cmake_build_jobs_option	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _add_cmake_build_jobs_option(self, cmake_argv, generator_alias, build_jobs):$/;"	m	class:CMakeLauncher
_add_cmake_build_tool_options	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _add_cmake_build_tool_options(self, cmake_argv, build_tool_options):$/;"	m	class:CMakeLauncher
_add_cmake_build_verbosity_option	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _add_cmake_build_verbosity_option(self, cmake_argv, generator_alias, verbosity_level):$/;"	m	class:CMakeLauncher
_add_cmakebuild_to_git_repo	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _add_cmakebuild_to_git_repo(self, cmakebuild_tag, cmakebuild_repo):$/;"	f
_add_common_cmake_build_options	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _add_common_cmake_build_options(self, cmake_argv, params):$/;"	m	class:CMakeLauncher
_add_mingw_runtime_lib_info	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _add_mingw_runtime_lib_info(self, sys_info):$/;"	m	class:Toolset
_append_item_to_summary	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _append_item_to_summary(self, item, value):$/;"	f
_byteStreamNALUnit	source/Lib/TLibDecoder/AnnexBread.cpp	/^_byteStreamNALUnit($/;"	f	file:
_check_cmake_params	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _check_cmake_params(self, params):$/;"	m	class:CMakeLauncher
_check_cmake_user_cache_entries	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _check_cmake_user_cache_entries(self, user_cache_entries):$/;"	m	class:CMakeLauncher
_check_extension_module_names	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _check_extension_module_names(self, extension_module_names):$/;"	m	class:CMakeManualRstUtil
_check_git_url	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _check_git_url(self, git_url):$/;"	f
_check_params	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _check_params(self, params):$/;"	f
_check_params	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _check_params(self, params):$/;"	m	class:CMakeLauncherApp
_check_params	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^    def _check_params(self, params):$/;"	m	class:CMakeDocUtilApp
_check_section_title	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _check_section_title(self, section_title):$/;"	m	class:CMakeManualRstUtil
_context_md5_t	source/Lib/libmd5/libmd5.h	/^typedef struct _context_md5_t {$/;"	s
_create_build_dir_dict	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _create_build_dir_dict(self, compiler_info, generator_alias, build_configs):$/;"	m	class:CMakeBuildTreeInfo
_create_compiler_info	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _create_compiler_info(self, toolset_str, target_arch):$/;"	m	class:CMakeLauncher
_create_cray_compiler_info	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _create_cray_compiler_info(self, target):$/;"	m	class:CMakeLauncher
_create_cross_compile_build_dir	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _create_cross_compile_build_dir(self, build_root, toolchain_file, generator_alias):$/;"	m	class:CMakeBuildTreeInfo
_create_default_build_tree	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _create_default_build_tree(self, compiler_info, generator_alias, build_configs, lnk_variant, cmake_argv_optional):$/;"	m	class:CMakeLauncher
_create_mk_toolchain_script	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _create_mk_toolchain_script(self, ndk_root, hash_bang_missing):$/;"	m	class:NdkFinder
_create_script_installer	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _create_script_installer(self):$/;"	f
_create_toolset_info_short	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _create_toolset_info_short(self):$/;"	m	class:Toolset
_detect_cmake_source_tree	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _detect_cmake_source_tree(self, rst_module_filenm):$/;"	m	class:CMakeManualRstUtil
_discover_git_version	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def _discover_git_version(self):$/;"	m	class:GitHelper
_discover_macosx_sdk	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _discover_macosx_sdk(self, target_os):$/;"	m	class:Toolset
_do_inventory	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _do_inventory(self):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_do_inventory_vc14x	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _do_inventory_vc14x(self, msvc_version_str, vswhere=None):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_do_inventory_winreg	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _do_inventory_winreg(self):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_dump_inventory	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _dump_inventory(self):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_dump_module_file_header	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _dump_module_file_header(self, module_file_header):$/;"	m	class:CMakeManualRstUtil
_dump_section_list	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _dump_section_list(self, section_list):$/;"	m	class:CMakeManualRstUtil
_find_cl_cmd	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _find_cl_cmd(self, vc_inst_dir, version_str):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_find_clang	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _find_clang(self):$/;"	m	class:Toolset
_find_intel	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _find_intel(self):$/;"	m	class:Toolset
_find_ndk_root	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _find_ndk_root(self):$/;"	m	class:NdkFinder
_find_ndk_root_default	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _find_ndk_root_default(self, ndk_search_path):$/;"	m	class:NdkFinder
_find_svnadmin	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def _find_svnadmin(self):$/;"	m	class:SvnHelper
_find_svnmucc	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def _find_svnmucc(self):$/;"	m	class:SvnHelper
_find_toolchain_file	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _find_toolchain_file(self, toolset_spec):$/;"	f
_find_toolchains_dir	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _find_toolchains_dir(self):$/;"	f
_find_versioned_compiler	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _find_versioned_compiler(self, compiler_prog, toolset_version):$/;"	m	class:Toolset
_find_vswhere	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _find_vswhere(self):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_find_xcode_clang	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _find_xcode_clang(self):$/;"	m	class:Toolset
_get_android_api_level	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_android_api_level(self, toolset_cmd):$/;"	m	class:Toolset
_get_android_api_level_unified	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_android_api_level_unified(self, toolset_cmd):$/;"	m	class:Toolset
_get_clang_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_clang_version(self, clang_cmd):$/;"	m	class:Toolset
_get_cmake_module_names	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _get_cmake_module_names(self, section_list):$/;"	m	class:CMakeManualRstUtil
_get_compiler_prefix	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_compiler_prefix(self, compiler_cmd):$/;"	m	class:Toolset
_get_current_cmakebuild_version	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _get_current_cmakebuild_version(self, top_dir):$/;"	f
_get_default_cmake_generator	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _get_default_cmake_generator(self):$/;"	m	class:CMakeLauncher
_get_default_toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_default_toolset(self, sys_info):$/;"	m	class:Toolset
_get_devnull	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def _get_devnull(self):$/;"	m	class:SystemInfo.__SystemInfo
_get_extension_module_names	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _get_extension_module_names(self, section_list, section_title=None):$/;"	m	class:CMakeManualRstUtil
_get_gcc_thread_model	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_gcc_thread_model(self, gcc_cmd):$/;"	m	class:Toolset
_get_gcc_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_gcc_version(self, gcc_cmd):$/;"	m	class:Toolset
_get_git_cmakebuild_dirs	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _get_git_cmakebuild_dirs(self, top_dir):$/;"	f
_get_intel_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_intel_version(self, icpc_cmd):$/;"	m	class:Toolset
_get_machine	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_machine(self, gcc_cmd):$/;"	m	class:Toolset
_get_ndk_finder	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_ndk_finder(self):$/;"	m	class:Toolset
_get_optimal_number_cmake_jobs	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _get_optimal_number_cmake_jobs(self):$/;"	f
_get_python_version_numeric	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def _get_python_version_numeric():$/;"	f
_get_rst_module_dir	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _get_rst_module_dir(self, rst_module_filenm):$/;"	m	class:CMakeManualRstUtil
_get_toolset_category	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _get_toolset_category(self, compiler_cmd):$/;"	m	class:Toolset
_get_workspace_folder	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _get_workspace_folder(self):$/;"	f
_install_self	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _install_self(self, install_dir):$/;"	f
_is_binary_plist_file	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def _is_binary_plist_file(plist_file):$/;"	f
_is_build_target_clean	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _is_build_target_clean(self, target):$/;"	m	class:CMakeLauncher
_is_multi_configuration_generator	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _is_multi_configuration_generator(self):$/;"	m	class:CMakeLauncher
_is_valid_build_tree	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _is_valid_build_tree(self, build_dir):$/;"	m	class:CMakeLauncher
_is_vs_64bit_native_toolset_supported	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def _is_vs_64bit_native_toolset_supported(self, generator_alias):$/;"	m	class:CMakeLauncher
_is_workspace_clean	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _is_workspace_clean(self, top_dir=None):$/;"	f
_normalize_toolset_spec	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _normalize_toolset_spec(self, toolset_spec):$/;"	f
_normalize_toolset_spec	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _normalize_toolset_spec(self, toolset):$/;"	m	class:Toolset
_parse_cmake_version_retv	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def _parse_cmake_version_retv(self, retv):$/;"	m	class:CMakeFinder
_parse_command_line	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _parse_command_line(self, argv):$/;"	f
_parse_command_line	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _parse_command_line(self, argv):$/;"	m	class:CMakeLauncherApp
_parse_command_line	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^    def _parse_command_line(self, argv):$/;"	m	class:CMakeDocUtilApp
_parse_rst_module_file	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _parse_rst_module_file(self, rst_module_filenm):$/;"	m	class:CMakeManualRstUtil
_parse_version_h_file	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def _parse_version_h_file(version_file, verbatim=False):$/;"	f
_parse_version_plist_file	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def _parse_version_plist_file(plist_file, verbatim=False):$/;"	f
_patch_clang_shell_script	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _patch_clang_shell_script(self, clang_script):$/;"	m	class:NdkFinder
_print_env	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _print_env(self):$/;"	m	class:CMakeLauncherApp
_qualify_android_toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _qualify_android_toolset(self, sys_info, toolset, stl='gnustl'):$/;"	m	class:Toolset
_qualify_toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def _qualify_toolset(self, sys_info, toolset, stl='gnustl'):$/;"	m	class:Toolset
_query_cmake_version	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def _query_cmake_version(self, cmake_cmd):$/;"	m	class:CMakeFinder
_query_default_proj_home_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def _query_default_proj_home_dir(self):$/;"	m	class:SystemInfo.__SystemInfo
_query_desktop_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def _query_desktop_dir(self):$/;"	m	class:SystemInfo.__SystemInfo
_query_home_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def _query_home_dir(self):$/;"	m	class:SystemInfo.__SystemInfo
_query_linux_distro_info	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def _query_linux_distro_info(self):$/;"	m	class:SystemInfo.__SystemInfo
_query_msvc_compiler_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def _query_msvc_compiler_version(self, cl_cmd):$/;"	m	class:MsvcRegistry.__MsvcRegistry
_query_ndk_version	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _query_ndk_version(self, ndk_root):$/;"	m	class:NdkFinder
_query_ndksa_toolchains	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _query_ndksa_toolchains(self, ndksa_root):$/;"	m	class:NdkFinder
_query_platforms	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def _query_platforms(self, ndk_root):$/;"	m	class:NdkFinder
_query_search_path	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def _query_search_path(self):$/;"	m	class:SystemInfo.__SystemInfo
_query_winreg_cmake_inst_dir	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def _query_winreg_cmake_inst_dir(self):$/;"	m	class:CMakeFinder
_remove_make_env_vars	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _remove_make_env_vars(self):$/;"	m	class:CMakeLauncherApp
_remove_pycache	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def _remove_pycache(self, py_dir_root):$/;"	f
_remove_rst_extension_module_files	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _remove_rst_extension_module_files(self, extension_module_names):$/;"	m	class:CMakeManualRstUtil
_save_rst_module_file	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _save_rst_module_file(self, output_rst_filenm, module_file_header, section_list):$/;"	m	class:CMakeManualRstUtil
_sort_section_list	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _sort_section_list(self, section_list):$/;"	m	class:CMakeManualRstUtil
_svn_set_properties_url_svnmucc	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def _svn_set_properties_url_svnmucc(self, svn_url, svn_props):$/;"	m	class:SvnHelper
_update_section	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def _update_section(self, section_list, section_title, extension_module_names):$/;"	m	class:CMakeManualRstUtil
_update_svnimportprops	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def _update_svnimportprops(self, svnimportprops_file, cmakebuild_tag, svnimportprops_file_new=None):$/;"	f
_winreg	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^            import _winreg$/;"	i
_winreg	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^                import _winreg$/;"	i
abs	source/Lib/TLibCommon/CommonDef.h	/^inline Int64 abs (Int64 x) { return _abs64(x); };$/;"	f
accumBitsDU	source/Lib/TLibEncoder/TEncGOP.h	/^    Int accumBitsDU;$/;"	m	class:TEncGOP::DUData
accumNalsDU	source/Lib/TLibEncoder/TEncGOP.h	/^    Int accumNalsDU;$/;"	m	class:TEncGOP::DUData
activate	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^ProfileLevelTierFeatures::activate(const Profile::Name profileIdc,$/;"	f	class:ProfileLevelTierFeatures
activate	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^ProfileLevelTierFeatures::activate(const TComSPS &sps)$/;"	f	class:ProfileLevelTierFeatures
activate	source/Lib/TLibDecoder/TDecConformance.cpp	/^ProfileLevelTierFeatures::activate(const TComSPS &sps)$/;"	f	class:ProfileLevelTierFeatures
activatePPS	source/Lib/TLibCommon/TComSlice.cpp	/^Bool ParameterSetManager::activatePPS(Int ppsId, Bool isIRAP)$/;"	f	class:ParameterSetManager
activeSeqParameterSetId	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> activeSeqParameterSetId;$/;"	m	class:SEIActiveParameterSets
activeVPSId	source/Lib/TLibCommon/SEI.h	/^  Int activeVPSId;$/;"	m	class:SEIActiveParameterSets
add	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^      void add( double in ) { ++m_numSlices; m_sum += in; }$/;"	f	class:__anon2::Tally
addAvg	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::addAvg( const TComYuv* pcYuvSrc0, const TComYuv* pcYuvSrc1, const UInt iPartUnitIdx, const UInt uiWidth, const UInt uiHeight, const BitDepths &clipBitDepths )$/;"	f	class:TComYuv
addClip	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::addClip( const TComYuv* pcYuvSrc0, const TComYuv* pcYuvSrc1, const UInt uiTrUnitIdx, const UInt uiPartSize, const BitDepths &clipBitDepths )$/;"	f	class:TComYuv
addOption	source/Lib/Utilities/program_options_lite.cpp	/^    void Options::addOption(OptionBase *opt)$/;"	f	class:df::program_options_lite::Options
addOptions	source/Lib/Utilities/program_options_lite.cpp	/^    OptionSpecific Options::addOptions()$/;"	f	class:df::program_options_lite::Options
addPreDBFStatistics	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::addPreDBFStatistics(SAOStatData*** blkStats)$/;"	f	class:TEncSampleAdaptiveOffset
addRegion	source/Lib/TLibCommon/SEI.h	/^  Void addRegion(RNSEIWindow *regn) { m_regions.push_back(*regn); }$/;"	f	class:SEIRegionalNesting
addRegionalSEI	source/Lib/TLibCommon/SEI.cpp	/^Void SEIRegionalNesting::addRegionalSEI(RegionalSEI *regSEI)$/;"	f	class:SEIRegionalNesting
addRegionalSEI	source/Lib/TLibCommon/SEI.h	/^  Void addRegionalSEI(SEIListOfIndices const &seiWithListOfRegionIndices) $/;"	f	class:SEIRegionalNesting
addRegions	source/Lib/TLibCommon/SEI.h	/^  Void addRegions(RNSEIWindowVec const &regions) { m_regions.insert(m_regions.end(), regions.begin(), regions.end()); }$/;"	f	class:RegionalSEI
addResult	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void  addResult( const ResultData &result)$/;"	f	class:TEncAnalyze
addSubstream	source/Lib/TLibCommon/TComBitStream.cpp	/^Void   TComOutputBitstream::addSubstream( TComOutputBitstream* pcSubstream )$/;"	f	class:TComOutputBitstream
addSubstreamSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                        addSubstreamSize( UInt size )                          { m_substreamSizes.push_back(size);                             }$/;"	f	class:TComSlice
addToPictureLsit	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::addToPictureLsit( list<TEncRCPic*>& listPreviousPictures )$/;"	f	class:TEncRCPic
addWeightBi	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::addWeightBi( const TComYuv              *pcYuvSrc0,$/;"	f	class:TComWeightPrediction
addWeightUni	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::addWeightUni( const TComYuv        *const pcYuvSrc0,$/;"	f	class:TComWeightPrediction
add_extension_modules	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def add_extension_modules(self, rst_module_filenm, extension_module_names, section_title="Extension Modules", output_rst_filenm=None):$/;"	m	class:CMakeManualRstUtil
add_property	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def add_property(self, prop, prop_values):$/;"	m	class:SvnProperties
add_to_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def add_to_command_history(self, cmd_argv):$/;"	m	class:VcsCommandTracer
adjustGOPid	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int EfficientFieldIRAPMapping::adjustGOPid(const Int GOPid)$/;"	f	class:EfficientFieldIRAPMapping
align	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::align()$/;"	f	class:TDecBinCABAC
align	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::align()$/;"	f	class:TEncBinCABAC
align	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::align()$/;"	f	class:TEncBinCABACCounter
allocate	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Void allocate(UInt width, UInt height, const T& value=T())$/;"	f	struct:Array2D
allocateNewSlice	source/Lib/TLibCommon/TComPic.h	/^  Void          allocateNewSlice()           {m_picSym.allocateNewSlice();         }$/;"	f	class:TComPic
allocateNewSlice	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::allocateNewSlice()$/;"	f	class:TComPicSym
allocatePS	source/Lib/TLibCommon/TComSlice.h	/^  T *allocatePS(const Int psId)$/;"	f	class:ParameterSetMap
android	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^            import pyhhi.build.common.android$/;"	i
anticlockwiseRotation	source/Lib/TLibCommon/SEI.h	/^  UInt anticlockwiseRotation;$/;"	m	class:SEIDisplayOrientation
app	cmake/CMakeBuild/bin/cmake.py	/^app = pyhhi.build.app.cmk.CMakeLauncherApp()$/;"	v
app	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.app.cmk$/;"	i
app	cmake/CMakeBuild/bin/cmake_docutil.py	/^app = pyhhi.build.app.cmkdocapp.CMakeDocUtilApp()$/;"	v
app	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.app.cmkdocapp$/;"	i
app	cmake/CMakeBuild/bin/cmakebuild_update.py	/^app = pyhhi.build.app.cmbldup.CMakeBuildUpdateApp()$/;"	v
app	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.app.cmbldup$/;"	i
app_args_add_log_level	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def app_args_add_log_level(parser):$/;"	f
app_configure_logging	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def app_configure_logging(log_level):$/;"	f
applyColourRemapping	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::applyColourRemapping(const TComPicYuv& pic, SEIColourRemappingInfo& criSEI, const TComSPS &activeSPS)$/;"	f	class:TAppDecTop
applyColourRemappingInfoLut1D	source/App/TAppDecoder/TAppDecTop.cpp	/^applyColourRemappingInfoLut1D(Int inVal, const std::vector<Int> &lut, const Int inValPrecisionBits)$/;"	f	file:
applyDeblockingFilterMetric	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::applyDeblockingFilterMetric( TComPic* pcPic, UInt uiNumSlices )$/;"	f	class:TEncGOP
applyDeblockingFilterParameterSelection	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::applyDeblockingFilterParameterSelection( TComPic* pcPic, const UInt numSlices, const Int gopID )$/;"	f	class:TEncGOP
applyForwardRDPCM	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::applyForwardRDPCM( TComTU& rTu, const ComponentID compID, Pel* pcResidual, const UInt uiStride, const QpParam& cQP, TCoeff* pcCoeff, TCoeff &uiAbsSum, const RDPCMMode mode )$/;"	f	class:TComTrQuant
applyMotion	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::applyMotion(const Array2D<MotionVector> &mvs, const TComPicYuv &input, TComPicYuv &output) const$/;"	f	class:TEncTemporalFilter
applyReferencePictureSet	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::applyReferencePictureSet( TComList<TComPic*>& rcListPic, const TComReferencePictureSet *pReferencePictureSet)$/;"	f	class:TComSlice
arg	source/Lib/Utilities/program_options_lite.h	/^      std::string arg;$/;"	m	struct:df::program_options_lite::ParseFailure
argparse	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import argparse$/;"	i
argparse	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import argparse$/;"	i
argparse	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import argparse$/;"	i
arrangeLongtermPicturesInRPS	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::arrangeLongtermPicturesInRPS(TComSlice *pcSlice, TComList<TComPic*>& rcListPic)$/;"	f	class:TEncGOP
automaticallySelectRExtProfile	source/App/TAppEncoder/TAppEncCfg.cpp	/^automaticallySelectRExtProfile(const Bool bUsingGeneralRExtTools,$/;"	f	file:
average	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^      double average( ) const { return m_sum \/ ( double )m_numSlices; }$/;"	f	class:__anon2::Tally
azimuthCentre	source/Lib/TLibCommon/SEI.h	/^    Int  azimuthCentre;$/;"	m	struct:SEIOmniViewport::OmniViewport
b32	source/Lib/libmd5/libmd5.h	/^    uint32_t b32[16];$/;"	m	union:_context_md5_t::__anon6
b8	source/Lib/libmd5/libmd5.h	/^    unsigned char b8[64];$/;"	m	union:_context_md5_t::__anon6
bApplyWeight	source/Lib/TLibCommon/TComRdCost.h	/^  Bool                  bApplyWeight;     \/\/ whether weighted prediction is used or not$/;"	m	class:DistParam
bCanUseLevel8p5	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     bCanUseLevel8p5;$/;"	m	struct:ProfileFeatures
bCanUseLevel8p5	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool                     bCanUseLevel8p5;$/;"	m	struct:ProfileFeatures
bChanged	source/Lib/TLibCommon/TComSlice.h	/^    Bool                  bChanged;$/;"	m	struct:ParameterSetMap::MapData
bDebugPredEnabled	source/Lib/TLibDecoder/TDecEntropy.cpp	/^static const Bool bDebugPredEnabled = DebugOptionList::DebugPred.getInt()!=0;$/;"	v	file:
bDebugPredEnabled	source/Lib/TLibEncoder/TEncEntropy.cpp	/^static const Bool bDebugPredEnabled = DebugOptionList::DebugPred.getInt()!=0;$/;"	v	file:
bDebugRQT	source/Lib/TLibDecoder/TDecEntropy.cpp	/^static const Bool bDebugRQT = DebugOptionList::DebugRQT.getInt()!=0;$/;"	v	file:
bInternalEdge	source/Lib/TLibCommon/TypeDef.h	/^  Bool bInternalEdge;                     \/\/\/< indicates internal edge$/;"	m	struct:_LFCUParam
bIsBiPred	source/Lib/TLibCommon/TComRdCost.h	/^  Bool                  bIsBiPred;$/;"	m	class:DistParam
bLeftEdge	source/Lib/TLibCommon/TypeDef.h	/^  Bool bLeftEdge;                         \/\/\/< indicates left edge$/;"	m	struct:_LFCUParam
bPresent	source/App/TAppEncoder/TAppEncCfg.h	/^    Bool bPresent;$/;"	m	struct:TAppEncCfg::OptionalValue
bPresentFlag	source/Lib/TLibCommon/SEI.h	/^    Bool  bPresentFlag;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModel
bPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool bPresentFlag;$/;"	m	struct:WPScalingParam
bTopEdge	source/Lib/TLibCommon/TypeDef.h	/^  Bool bTopEdge;                          \/\/\/< indicates top edge$/;"	m	struct:_LFCUParam
bWavefrontsAndTilesCanBeUsedSimultaneously	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     bWavefrontsAndTilesCanBeUsedSimultaneously;$/;"	m	struct:ProfileFeatures
bWavefrontsAndTilesCanBeUsedSimultaneously	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool                     bWavefrontsAndTilesCanBeUsedSimultaneously;$/;"	m	struct:ProfileFeatures
bilateralFilter	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::bilateralFilter(const TComPicYuv &orgPic,$/;"	f	class:TEncTemporalFilter
bitDepth	source/App/TAppDecoder/TAppDecTop.cpp	/^                                    const Int  bitDepth,$/;"	v	file:
bitDepth	source/Lib/TLibCommon/TComRdCost.h	/^  Int                   bitDepth;$/;"	m	class:DistParam
bitRateValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt bitRateValueMinus1[MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
bitrate	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^  double bitrate;$/;"	m	struct:Point
bitrateVector	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^  std::vector< double > bitrateVector;$/;"	m	struct:MetaLogEntry
bitrateVectorSize	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function bitrateVectorSize {$/;"	f
bits	source/Lib/TLibCommon/TComCodingStatistics.h	/^      Int64 bits;$/;"	m	struct:TComCodingStatistics::SStat
bits	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Double bits;$/;"	m	struct:TEncAnalyze::ResultData
bits	source/Lib/libmd5/libmd5.h	/^  uint32_t bits[2];$/;"	m	struct:_context_md5_t
bitwiseOrCbfPartRange	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::bitwiseOrCbfPartRange( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
bldtools	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^        import pyhhi.build.common.bldtools$/;"	i
bldtools	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
bldtools	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
blendStripe	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::blendStripe(Pel *decSampleOffsetY, int32_t *grainStripe,$/;"	f	class:SEIFilmGrainSynthesizer
blockAverage	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^Pel SEIFilmGrainSynthesizer::blockAverage(Pel *decSampleBlk8,$/;"	f	class:SEIFilmGrainSynthesizer
blockCbpBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int blockCbpBits[NUM_QT_CBF_CTX_SETS * NUM_QT_CBF_CTX_PER_SET][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon10
blockRootCbpBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int blockRootCbpBits[4][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon10
bottomOffset	source/Lib/TLibCommon/SEI.h	/^    Int bottomOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
bottomRightTileIndex	source/Lib/TLibCommon/SEI.h	/^            Int &bottomRightTileIndex(const Int tileRectIndex)       { return m_bottom_right_tile_index[tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
bottomRightTileIndex	source/Lib/TLibCommon/SEI.h	/^      const Int &bottomRightTileIndex(const Int tileRectIndex) const { return m_bottom_right_tile_index[tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
boundingBoxHeight	source/Lib/TLibCommon/SEI.h	/^    UInt boundingBoxHeight;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxLeft	source/Lib/TLibCommon/SEI.h	/^    UInt boundingBoxLeft;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxTop	source/Lib/TLibCommon/SEI.h	/^    UInt boundingBoxTop;         \/\/ only valid if bBoundingBoxValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxValid	source/Lib/TLibCommon/SEI.h	/^    Bool boundingBoxValid;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
boundingBoxWidth	source/Lib/TLibCommon/SEI.h	/^    UInt boundingBoxWidth;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
buf	source/Lib/libmd5/libmd5.h	/^  uint32_t buf[4];$/;"	m	struct:_context_md5_t
build	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.app.cmk$/;"	i
build	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.common.util$/;"	i
build	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.app.cmkdocapp$/;"	i
build	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.common.util$/;"	i
build	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.app.cmbldup$/;"	i
build	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.common.util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^        import pyhhi.build.common.bldtools$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.vcsutil as vcsutil$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.cmksupp as cmksupp$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.system as system$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.cmkdoc as cmkdoc$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.system as system$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^            import pyhhi.build.common.android$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.system as system$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.ver as ver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.cmbldver as cmbldver$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.util as util$/;"	i
build	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.ver as ver$/;"	i
buildNextStateTable	source/Lib/TLibCommon/ContextModel.cpp	/^Void ContextModel::buildNextStateTable()$/;"	f	class:ContextModel
byteReverse	source/Lib/libmd5/libmd5.cpp	/^void byteReverse(uint32_t *buf, unsigned len)$/;"	f
byteReverse	source/Lib/libmd5/libmd5.cpp	26;"	d	file:
byteStreamNALUnit	source/Lib/TLibDecoder/AnnexBread.cpp	/^byteStreamNALUnit($/;"	f
cabacBypassAlignmentEnabledFlag	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 cabacBypassAlignmentEnabledFlag;$/;"	m	struct:ProfileFeatures
cabacBypassAlignmentEnabledFlag	source/Lib/TLibDecoder/TDecConformance.h	/^  TRISTATE                 cabacBypassAlignmentEnabledFlag;$/;"	m	struct:ProfileFeatures
cabac_zero_word_padding	source/Lib/TLibEncoder/TEncGOP.cpp	/^cabac_zero_word_padding(TComSlice *const pcSlice, TComPic *const pcPic, const std::size_t binCountsInNalUnits, const std::size_t numBytesInVclNalUnits, std::ostringstream &nalUnitData, const Bool cabacZeroWordPaddingEnabled)$/;"	f	file:
calAverageLambda	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::calAverageLambda()$/;"	f	class:TEncRCPic
calAverageQP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::calAverageQP()$/;"	f	class:TEncRCPic
calCostSliceI	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::calCostSliceI(TComPic* pcPic) \/\/ TODO: this only analyses the first slice segment. What about the others?$/;"	f	class:TEncSlice
calcAndPrintHashStatus	source/Lib/TLibDecoder/TDecGop.cpp	/^static Void calcAndPrintHashStatus(TComPicYuv& pic, const SEIDecodedPictureHash* pictureHashSEI, const BitDepths &bitDepths, UInt &numChecksumErrors)$/;"	f	file:
calcCRC	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^UInt calcCRC(const TComPicYuv& pic, TComPictureHash &digest, const BitDepths &bitDepths)$/;"	f
calcChecksum	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^UInt calcChecksum(const TComPicYuv& pic, TComPictureHash &digest, const BitDepths &bitDepths)$/;"	f
calcCost	source/Lib/TLibCommon/ContextModel3DBuffer.cpp	/^UInt ContextModel3DBuffer::calcCost( SliceType sliceType, Int qp, UChar* ctxModel )$/;"	f	class:ContextModel3DBuffer
calcHAD	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::calcHAD( Int bitDepth, const Pel* pi0, Int iStride0, const Pel* pi1, Int iStride1, Int iWidth, Int iHeight )$/;"	f	class:TComRdCost
calcMD5	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^UInt calcMD5(const TComPicYuv& pic, TComPictureHash &digest, const BitDepths &bitDepths)$/;"	f
calcPatternSigCtx	source/Lib/TLibCommon/TComTrQuant.cpp	/^Int  TComTrQuant::calcPatternSigCtx( const UInt* sigCoeffGroupFlag, UInt uiCGPosX, UInt uiCGPosY, UInt widthInGroups, UInt heightInGroups )$/;"	f	class:TComTrQuant
calcRdCost	source/Lib/TLibCommon/TComRdCost.cpp	/^Double TComRdCost::calcRdCost( Double numBits, Distortion distortion, DFunc eDFunc )$/;"	f	class:TComRdCost
calcScale	source/Lib/TLibEncoder/TEncTop.cpp	/^Int calcScale(Int x)$/;"	f
calc_poc	source/App/Parcat/parcat.cpp	/^int calc_poc(int iPOClsb, int prevTid0POC, int getBitsForPOC, int nalu_type)$/;"	f
calculateAndFormatDifferencePercentage	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function calculateAndFormatDifferencePercentage {$/;"	f
calculateBoundingCtuTsAddrForSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::calculateBoundingCtuTsAddrForSlice(UInt &startCtuTSAddrSlice, UInt &boundingCtuTSAddrSlice, Bool &haveReachedTileBoundary,$/;"	f	class:TEncSlice
calculateCollocatedFromL0Flag	source/Lib/TLibEncoder/TEncGOP.cpp	/^static UInt calculateCollocatedFromL0Flag(const TComSlice *pSlice)$/;"	f	file:
calculateCombinedValues	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void calculateCombinedValues(const ChromaFormat chFmt, Double &PSNRyuv, Double &MSEyuv, const BitDepths &bitDepths)$/;"	f	class:TEncAnalyze
calculateLambda	source/Lib/TLibEncoder/TEncSlice.cpp	/^Double TEncSlice::calculateLambda( const TComSlice* slice,$/;"	f	class:TEncSlice
calculateLambdaIntra	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::calculateLambdaIntra(Double alpha, Double beta, Double MADPerPixel, Double bitsPerPixel)$/;"	f	class:TEncRCPic
calculateLumaDQP	source/Lib/TLibEncoder/TEncCu.cpp	/^Int TEncCu::calculateLumaDQP(TComDataCU *pCU, const UInt absPartIdx, const TComYuv * pOrgYuv)$/;"	f	class:TEncCu
calculateParameterSetChangedFlag	source/Lib/TLibCommon/TComSlice.cpp	/^Void calculateParameterSetChangedFlag(Bool &bChanged, const std::vector<UChar> *pOldData, const std::vector<UChar> *pNewData)$/;"	f
cancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool cancelFlag;$/;"	m	class:SEIDisplayOrientation
cbrFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool cbrFlag           [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
change_rpaths	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def change_rpaths(self, dylib, rpaths_dict):$/;"	m	class:DyLibInstallNameInfoInspector
checkCRA	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::checkCRA(const TComReferencePictureSet *pReferencePictureSet, Int& pocCRA, NalUnitType& associatedIRAPType, TComList<TComPic *>& rcListPic)$/;"	f	class:TComSlice
checkColRefIdx	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::checkColRefIdx(UInt curSliceIdx, TComPic* pic)$/;"	f	class:TComSlice
checkCtuDecoding	source/Lib/TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::checkCtuDecoding(const UInt numUsedBits)$/;"	f	class:TDecConformanceCheck
checkCtuDecoding	source/Lib/TLibDecoder/TDecConformance.h	/^  checkCtuDecoding(const UInt numUsedBits) { }$/;"	f	class:TDecConformanceCheck
checkDcOfMatrix	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComScalingList::checkDcOfMatrix()$/;"	f	class:TComScalingList
checkDefaultScalingList	source/Lib/TLibCommon/TComSlice.cpp	/^Bool TComScalingList::checkDefaultScalingList()$/;"	f	class:TComScalingList
checkLeadingPictureRestrictions	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::checkLeadingPictureRestrictions(TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
checkMVPRange	source/Lib/TLibCommon/TComPrediction.cpp	/^Bool checkMVPRange(TComMv& cMv, UInt ctuLength, UInt tileXPosInCtus, UInt tileYPosInCtus, UInt tileWidthtInCtus, UInt tileHeightInCtus, Int PredXLeft, Int PredXRight, Int PredYTop, Int PredYBottom, ChromaFormat chromaFormat)$/;"	f
checkNoOutputPriorPics	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::checkNoOutputPriorPics (TComList<TComPic*>* pcListPic)$/;"	f	class:TDecTop
checkPPS	source/Lib/TLibDecoder/TDecConformance.cpp	/^checkPPS(const TComSPS &sps,$/;"	f	file:
checkPredMode	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComScalingList::checkPredMode(UInt sizeId, UInt listId)$/;"	f	class:TComScalingList
checkRange	source/Lib/TLibDecoder/TDecConformance.h	/^  static Void checkRange(const T& , const TChar *, const T& , const T& ) { }$/;"	f	class:TDecConformanceCheck
checkRange	source/Lib/TLibDecoder/TDecConformance.h	/^  static Void checkRange(const T& val, const TChar *name, const T& minValInclusive, const T& maxValInclusive)$/;"	f	class:TDecConformanceCheck
checkRegionalNestedSEIPayloadType	source/Lib/TLibCommon/SEI.h	/^  static Bool checkRegionalNestedSEIPayloadType(SEI::PayloadType const payloadType)$/;"	f	class:RegionalSEI
checkSPS	source/Lib/TLibDecoder/TDecConformance.cpp	/^checkSPS(const TComSPS &sps,$/;"	f	file:
checkSameID	source/Lib/TLibCommon/TypeDef.h	/^  Bool checkSameID(RNSEIWindow const &rhs) const$/;"	f	class:RNSEIWindow
checkSameRegion	source/Lib/TLibCommon/TypeDef.h	/^  Bool checkSameRegion(RNSEIWindow const &rhs) const$/;"	f	class:RNSEIWindow
checkSliceActivation	source/Lib/TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::checkSliceActivation(const TComSlice &slice,$/;"	f	class:TDecConformanceCheck
checkSliceActivation	source/Lib/TLibDecoder/TDecConformance.h	/^  checkSliceActivation(const TComSlice &\/*slice*\/,$/;"	f	class:TDecConformanceCheck
checkTMctsMvp	source/Lib/TLibCommon/TComPrediction.cpp	/^Bool TComPrediction::checkTMctsMvp(TComDataCU* pcCU, Int partIdx)$/;"	f	class:TComPrediction
checkThatAllRefPicsAreAvailable	source/Lib/TLibCommon/TComSlice.cpp	/^Int TComSlice::checkThatAllRefPicsAreAvailable( TComList<TComPic*>& rcListPic, const TComReferencePictureSet *pReferencePictureSet, Bool printErrors, Int pocRandomAccess, Bool bUseRecoveryPoint)$/;"	f	class:TComSlice
checkTiles	source/Lib/TLibDecoder/TDecConformance.cpp	/^checkTiles(const TComSPS &sps,$/;"	f	file:
checkToolAvailability	source/Lib/TLibDecoder/TDecConformance.cpp	/^checkToolAvailability(const TComSPS &sps,$/;"	f	file:
check_comspec	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def check_comspec(self):$/;"	m	class:SystemInfo.__SystemInfo
check_os_detection	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def check_os_detection(self, todo_list):$/;"	m	class:SystemInfo.__SystemInfo
check_python_version	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def check_python_version(version_tuple=None):$/;"	f
check_pywin_registry	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def check_pywin_registry(self):$/;"	m	class:SystemInfo.__SystemInfo
chromaCbQpScale	source/Lib/TLibCommon/TypeDef.h	/^  Double chromaCbQpScale; \/\/\/< Chroma Cb QP Scale (1.0:default)$/;"	m	struct:WCGChromaQPControl
chromaCrQpScale	source/Lib/TLibCommon/TypeDef.h	/^  Double chromaCrQpScale; \/\/\/< Chroma Cr QP Scale (1.0:default)$/;"	m	struct:WCGChromaQPControl
chromaFormatValid	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Bool chromaFormatValid(ChromaFormat chFmt) const { return (profile == Profile::MAINREXT || profile == Profile::HIGHTHROUGHPUTREXT) ? chFmt<=maxChromaFormat : (chFmt == maxChromaFormat ); }$/;"	f	struct:ProfileFeatures
chromaFormatValid	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool chromaFormatValid(ChromaFormat chFmt) const { return (profile == Profile::MAINREXT || profile == Profile::HIGHTHROUGHPUTREXT) ? chFmt<=maxChromaFormat : (chFmt == maxChromaFormat ); }$/;"	f	struct:ProfileFeatures
chromaQPMappingTableSize	source/Lib/TLibCommon/TComRom.h	/^static const Int chromaQPMappingTableSize = 58;$/;"	v
chromaQpOffset	source/Lib/TLibCommon/TypeDef.h	/^  Double chromaQpOffset;  \/\/\/< Chroma QP Offset (0.0:default)$/;"	m	struct:WCGChromaQPControl
chromaQpOffsetListEnabledFlag	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 chromaQpOffsetListEnabledFlag;$/;"	m	struct:ProfileFeatures
chromaQpOffsetListEnabledFlag	source/Lib/TLibDecoder/TDecConformance.h	/^  TRISTATE                 chromaQpOffsetListEnabledFlag;$/;"	m	struct:ProfileFeatures
chromaQpScale	source/Lib/TLibCommon/TypeDef.h	/^  Double chromaQpScale;   \/\/\/< Chroma QP Scale (0.0:default)$/;"	m	struct:WCGChromaQPControl
clear	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def clear(self):$/;"	m	class:SvnProperties
clear	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::clear()$/;"	f	class:TComOutputBitstream
clear	source/Lib/TLibCommon/TComCodingStatistics.h	/^      Void clear() { bits=0; count=0; sum=0; }$/;"	f	struct:TComCodingStatistics::SStat
clear	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::clear()$/;"	f	class:TComYuv
clear	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void    clear()$/;"	f	class:TEncAnalyze
clearCbf	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::clearCbf( UInt uiIdx, ComponentID compID, UInt uiNumParts )$/;"	f	class:TComDataCU
clearChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void clearChangedFlag(Int psId)$/;"	f	class:ParameterSetMap
clearChromaQpOffsetList	source/Lib/TLibCommon/TComSlice.h	/^  Void                   clearChromaQpOffsetList()                                        { m_chromaQpOffsetListLen = 0;                    }$/;"	f	class:TComPPSRExt
clearEmulationPreventionByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  Void      clearEmulationPreventionByteLocation()                                   { m_emulationPreventionByteLocation.clear();          }$/;"	f	class:TComInputBitstream
clearMvField	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::clearMvField()$/;"	f	class:TComCUMvField
clearPPSChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void           clearPPSChangedFlag(Int ppsId)                              { m_ppsMap.clearChangedFlag(ppsId); }$/;"	f	class:ParameterSetManager
clearRegions	source/Lib/TLibCommon/SEI.h	/^  Void clearRegions() { m_regions.clear(); }$/;"	f	class:SEIRegionalNesting
clearSPSChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void           clearSPSChangedFlag(Int spsId)                              { m_spsMap.clearChangedFlag(spsId); }$/;"	f	class:ParameterSetManager
clearSliceARLCnt	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::clearSliceARLCnt()$/;"	f	class:TComTrQuant
clearSliceBuffer	source/Lib/TLibCommon/TComPic.h	/^  Void          clearSliceBuffer()           {m_picSym.clearSliceBuffer();         }$/;"	f	class:TComPic
clearSliceBuffer	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::clearSliceBuffer()$/;"	f	class:TComPicSym
clearSubstreamSizes	source/Lib/TLibCommon/TComSlice.h	/^  Void                        clearSubstreamSizes( )                                 { return m_substreamSizes.clear();                              }$/;"	f	class:TComSlice
clearVPSChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void           clearVPSChangedFlag(Int vpsId)                              { m_vpsMap.clearChangedFlag(vpsId); }$/;"	f	class:ParameterSetManager
clear_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def clear_command_history(self):$/;"	m	class:GitHelper
clear_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def clear_command_history(self):$/;"	m	class:SvnHelper
clear_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def clear_command_history(self):$/;"	m	class:VcsCommandTracer
clipMv	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::clipMv    (TComMv&  rcMv) const$/;"	f	class:TComDataCU
clockTimeStampFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool clockTimeStampFlag;$/;"	m	struct:TComSEITimeSet
close	source/Lib/Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::close()$/;"	f	class:TVideoIOYuv
cmakebuild_update	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def cmakebuild_update(self, params):$/;"	f
cmbldup	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.app.cmbldup$/;"	i
cmbldver	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.cmbldver as cmbldver$/;"	i
cmk	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.app.cmk$/;"	i
cmkdoc	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.cmkdoc as cmkdoc$/;"	i
cmkdocapp	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.app.cmkdocapp$/;"	i
cmksupp	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.cmksupp as cmksupp$/;"	i
cntDroppedFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool cntDroppedFlag;$/;"	m	struct:TComSEITimeSet
codeAUD	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void AUDWriter::codeAUD(TComBitIf& bs, const Int pictureType)$/;"	f	class:AUDWriter
codeAlfCtrlFlag	source/Lib/TLibEncoder/TEncCavlc.h	/^  Void codeAlfCtrlFlag   ( ComponentID \/*component*\/, UInt \/*code*\/ ) {printf("Not supported\\n"); assert(0);}$/;"	f	class:TEncCavlc
codeCUTransquantBypassFlag	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeCUTransquantBypassFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeCUTransquantBypassFlag	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeChromaQpAdjustment	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeChromaQpAdjustment( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeChromaQpAdjustment	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx )$/;"	f	class:TEncSbac
codeCoeffNxN	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeCoeffNxN    ( TComTU& \/*rTu*\/, TCoeff* \/*pcCoef*\/, const ComponentID \/*compID*\/ )$/;"	f	class:TEncCavlc
codeCoeffNxN	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeCoeffNxN( TComTU &rTu, TCoeff* pcCoef, const ComponentID compID )$/;"	f	class:TEncSbac
codeCrossComponentPrediction	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeCrossComponentPrediction( TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TEncCavlc
codeCrossComponentPrediction	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TEncSbac
codeDeltaQP	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncCavlc
codeDeltaQP	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeExplicitRdpcmMode	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeExplicitRdpcmMode( TComTU& \/*rTu*\/, const ComponentID \/*compID*\/ )$/;"	f	class:TEncCavlc
codeExplicitRdpcmMode	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeExplicitRdpcmMode( TComTU &rTu, const ComponentID compID )$/;"	f	class:TEncSbac
codeHrdParameters	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeHrdParameters( const TComHRD *hrd, Bool commonInfPresentFlag, UInt maxNumSubLayersMinus1 )$/;"	f	class:TEncCavlc
codeIPCMInfo	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeIPCMInfo( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeIPCMInfo	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeInterDir	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeInterDir( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeInterDir	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeInterDir( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeInterModeFlag	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeInterModeFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/, UInt \/*uiEncMode*\/ )$/;"	f	class:TEncCavlc
codeIntraDirChroma	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeIntraDirChroma( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeIntraDirChroma	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeIntraDirChroma( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeIntraDirLumaAng	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeIntraDirLumaAng( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, Bool \/*isMultiple*\/)$/;"	f	class:TEncCavlc
codeIntraDirLumaAng	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeIntraDirLumaAng( TComDataCU* pcCU, UInt absPartIdx, Bool isMultiple)$/;"	f	class:TEncSbac
codeLastSignificantXY	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeLastSignificantXY( UInt uiPosX, UInt uiPosY, Int width, Int height, ComponentID component, UInt uiScanIdx )$/;"	f	class:TEncSbac
codeMVPIdx	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMVPIdx ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TEncCavlc
codeMVPIdx	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMVPIdx ( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncSbac
codeMergeFlag	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMergeFlag    ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeMergeFlag	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMergeFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeMergeIndex	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMergeIndex    ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeMergeIndex	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMergeIndex( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeMvd	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeMvd( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TEncCavlc
codeMvd	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeMvd( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncSbac
codePPS	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePPS( const TComPPS* pcPPS )$/;"	f	class:TEncCavlc
codePPS	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codePPS( const TComPPS* \/*pcPPS*\/ )$/;"	f	class:TEncSbac
codePTL	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePTL( const TComPTL* pcPTL, Bool profilePresentFlag, Int maxNumSubLayersMinus1)$/;"	f	class:TEncCavlc
codePartSize	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePartSize( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TEncCavlc
codePartSize	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TEncSbac
codePredMode	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codePredMode( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codePredMode	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeProfileTier	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeProfileTier( const ProfileTierLevel* ptl, const Bool bIsSubLayer )$/;"	f	class:TEncCavlc
codeQtCbf	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtCbf( TComTU& \/*rTu*\/, const ComponentID \/*compID*\/, const Bool \/*lowestLevel*\/ )$/;"	f	class:TEncCavlc
codeQtCbf	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TEncSbac
codeQtCbfZero	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtCbfZero( TComTU& \/*rTu*\/, const ChannelType \/*chType*\/ )$/;"	f	class:TEncCavlc
codeQtCbfZero	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtCbfZero( TComTU & rTu, const ChannelType chType )$/;"	f	class:TEncSbac
codeQtRootCbf	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtRootCbf( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeQtRootCbf	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtRootCbf( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeQtRootCbfZero	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeQtRootCbfZero( )$/;"	f	class:TEncCavlc
codeQtRootCbfZero	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeQtRootCbfZero( )$/;"	f	class:TEncSbac
codeRefFrmIdx	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeRefFrmIdx( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TEncCavlc
codeRefFrmIdx	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeRefFrmIdx( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncSbac
codeSAOBlkParam	source/Lib/TLibEncoder/TEncCavlc.h	/^  Void codeSAOBlkParam(SAOBlkParam& \/*saoBlkParam*\/, const BitDepths& \/*bitDepths*\/, Bool* \/*sliceEnabled*\/, Bool \/*leftMergeAvail*\/, Bool \/*aboveMergeAvail*\/, Bool \/*onlyEstMergeInfo*\/ = false){printf("only supported in CABAC"); assert(0); exit(-1);}$/;"	f	class:TEncCavlc
codeSAOBlkParam	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSAOBlkParam(SAOBlkParam& saoBlkParam, const BitDepths &bitDepths$/;"	f	class:TEncSbac
codeSAOOffsetParam	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSAOOffsetParam(ComponentID compIdx, SAOOffset& ctbParam, Bool sliceEnabled, const Int channelBitDepth)$/;"	f	class:TEncSbac
codeSAOSign	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSAOSign( UInt code )$/;"	f	class:TEncSbac
codeSPS	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSPS( const TComSPS* pcSPS )$/;"	f	class:TEncCavlc
codeSPS	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSPS( const TComSPS* \/*pcSPS*\/ )$/;"	f	class:TEncSbac
codeSaoMaxUvlc	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoMaxUvlc    ( UInt code, UInt maxSymbol )$/;"	f	class:TEncSbac
codeSaoMerge	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoMerge       ( UInt uiCode )$/;"	f	class:TEncSbac
codeSaoTypeIdx	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoTypeIdx       ( UInt uiCode)$/;"	f	class:TEncSbac
codeSaoUflc	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSaoUflc       ( UInt uiLength, UInt uiCode )$/;"	f	class:TEncSbac
codeScalingList	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeScalingList( const TComScalingList &scalingList )$/;"	f	class:TEncCavlc
codeShortTermRefPicSet	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeShortTermRefPicSet( const TComReferencePictureSet* rps, Bool calledFromSliceHeader, Int idx)$/;"	f	class:TEncCavlc
codeSkipFlag	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSkipFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TEncCavlc
codeSkipFlag	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncSbac
codeSliceFinish	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSliceFinish ()$/;"	f	class:TEncCavlc
codeSliceFinish	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSliceFinish()$/;"	f	class:TEncSbac
codeSliceHeader	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSliceHeader         ( TComSlice* pcSlice )$/;"	f	class:TEncCavlc
codeSliceHeader	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSliceHeader( TComSlice* \/*pcSlice*\/ )$/;"	f	class:TEncSbac
codeSplitFlag	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeSplitFlag   ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TEncCavlc
codeSplitFlag	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeSplitFlag   ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TEncSbac
codeTerminatingBit	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeTerminatingBit      ( UInt \/*uilsLast*\/ )$/;"	f	class:TEncCavlc
codeTerminatingBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTerminatingBit( UInt uilsLast )$/;"	f	class:TEncSbac
codeTilesWPPEntryPoint	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void  TEncCavlc::codeTilesWPPEntryPoint( TComSlice* pSlice )$/;"	f	class:TEncCavlc
codeTilesWPPEntryPoint	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTilesWPPEntryPoint( TComSlice* \/*pSlice*\/ )$/;"	f	class:TEncSbac
codeTransformSkipFlags	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeTransformSkipFlags (TComTU& \/*rTu*\/, ComponentID \/*component*\/ )$/;"	f	class:TEncCavlc
codeTransformSkipFlags	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTransformSkipFlags (TComTU &rTu, ComponentID component )$/;"	f	class:TEncSbac
codeTransformSubdivFlag	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeTransformSubdivFlag( UInt \/*uiSymbol*\/, UInt \/*uiCtx*\/ )$/;"	f	class:TEncCavlc
codeTransformSubdivFlag	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeTransformSubdivFlag( UInt uiSymbol, UInt uiCtx )$/;"	f	class:TEncSbac
codeVPS	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeVPS( const TComVPS* pcVPS )$/;"	f	class:TEncCavlc
codeVPS	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::codeVPS( const TComVPS* \/*pcVPS*\/ )$/;"	f	class:TEncSbac
codeVUI	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::codeVUI( const TComVUI *pcVUI, const TComSPS* pcSPS )$/;"	f	class:TEncCavlc
codedValue	source/Lib/TLibCommon/SEI.h	/^    Int codedValue;$/;"	m	struct:SEIColourRemappingInfo::CRIlut
coeffGroupRDStats	source/Lib/TLibCommon/TComTrQuant.cpp	/^} coeffGroupRDStats;$/;"	t	typeref:struct:__anon8	file:
colourVolumeSEIEnabled	source/Lib/TLibCommon/TypeDef.h	/^  Bool      colourVolumeSEIEnabled;$/;"	m	struct:TComSEIMasteringDisplay
common	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.common.util$/;"	i
common	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.common.util$/;"	i
common	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.common.util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^        import pyhhi.build.common.bldtools$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.system as system$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.system as system$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^            import pyhhi.build.common.android$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.system as system$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.ver as ver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.cmbldver as cmbldver$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.util as util$/;"	i
common	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.ver as ver$/;"	i
comp	source/Lib/TLibCommon/TComSlice.h	/^    } comp;$/;"	m	union:ChromaQpAdj::__anon12	typeref:struct:ChromaQpAdj::__anon12::__anon13
compCRC	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^UInt compCRC(Int bitdepth, const Pel* plane, UInt width, UInt height, UInt stride, TComPictureHash &digest)$/;"	f
compChecksum	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^UInt compChecksum(Int bitdepth, const Pel* plane, UInt width, UInt height, UInt stride, TComPictureHash &digest, const BitDepths &\/*bitDepths*\/)$/;"	f
compIdx	source/Lib/TLibCommon/TComRdCost.h	/^  ComponentID           compIdx;$/;"	m	class:DistParam
compModelValue	source/Lib/TLibCommon/SEI.h	/^    std::vector<Int> compModelValue;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModelIntensityValues
compress	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::compress(SChar *pePredMode, const SChar* pePredModeSource, const Int scale, const TComCUMvField &source)$/;"	f	class:TComCUMvField
compress	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::compress(SChar* pePredMode, Int scale)$/;"	f	class:TComCUMvField
compressCtu	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::compressCtu( TComDataCU* pCtu )$/;"	f	class:TEncCu
compressGOP	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::compressGOP( Int iPOCLast, Int iNumPicRcvd, TComList<TComPic*>& rcListPic,$/;"	f	class:TEncGOP
compressMV	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::compressMV()$/;"	f	class:TComDataCU
compressMotion	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::compressMotion()$/;"	f	class:TComPic
compressSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::compressSlice( TComPic* pcPic, const Bool bCompressEntireSlice, const Bool bFastDeltaQP )$/;"	f	class:TEncSlice
confirmPara	source/App/TAppEncoder/TAppEncCfg.cpp	/^Bool confirmPara(Bool bflag, const TChar* message)$/;"	f
const	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
contextSetStartTable	source/Lib/TLibCommon/TComChromaFormat.h	/^static const UInt contextSetStartTable            [MAX_NUM_CHANNEL_TYPE] = {FIRST_CTX_SET_LUMA,      FIRST_CTX_SET_CHROMA     };$/;"	v
context_md5_t	source/Lib/libmd5/libmd5.h	/^} context_md5_t;$/;"	t	typeref:struct:_context_md5_t
convertPayloadToRBSP	source/Lib/TLibDecoder/NALread.cpp	/^static Void convertPayloadToRBSP(vector<uint8_t>& nalUnitBuf, TComInputBitstream *bitstream, Bool isVclNalUnit)$/;"	f	file:
copyFrom	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  Void copyFrom( const ContextModel3DBuffer* src )$/;"	f	class:ContextModel3DBuffer
copyFrom	source/Lib/TLibCommon/SEI.h	/^  Void copyFrom( const SEIColourRemappingInfo &seiCriInput)$/;"	f	class:SEIColourRemappingInfo
copyFrom	source/Lib/TLibCommon/SEI.h	/^  Void copyFrom(const SEIAnnotatedRegions &seiAnnotatedRegions)$/;"	f	class:SEIAnnotatedRegions
copyFrom	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::copyFrom( TComCUMvField const * pcCUMvFieldSrc, Int iNumPartSrc, Int iPartAddrDst )$/;"	f	class:TComCUMvField
copyFromPicComponent	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyFromPicComponent  ( const ComponentID compID, const TComPicYuv* pcPicYuvSrc, const UInt ctuRsAddr, const UInt uiAbsZorderIdx )$/;"	f	class:TComYuv
copyFromPicYuv	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyFromPicYuv   ( const TComPicYuv* pcPicYuvSrc, const UInt ctuRsAddr, const UInt uiAbsZorderIdx )$/;"	f	class:TComYuv
copyInterPredInfoFrom	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copyInterPredInfoFrom    ( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefPicList )$/;"	f	class:TComDataCU
copyPartFrom	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copyPartFrom( TComDataCU* pcCU, UInt uiPartUnitIdx, UInt uiDepth )$/;"	f	class:TComDataCU
copyPartToComponent	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToComponent( const ComponentID compID, TComYuv* pcYuvDst, const UInt uiSrcPartIdx ) const$/;"	f	class:TComYuv
copyPartToPartComponent	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToPartComponent  ( const ComponentID compID, TComYuv* pcYuvDst, const UInt uiPartIdx, const UInt iWidthComponent, const UInt iHeightComponent ) const$/;"	f	class:TComYuv
copyPartToPartComponentMxN	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToPartComponentMxN  ( const ComponentID compID, TComYuv* pcYuvDst, const TComRectangle &rect) const$/;"	f	class:TComYuv
copyPartToPartYuv	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToPartYuv   ( TComYuv* pcYuvDst, const UInt uiPartIdx, const UInt iWidth, const UInt iHeight ) const$/;"	f	class:TComYuv
copyPartToYuv	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyPartToYuv( TComYuv* pcYuvDst, const UInt uiSrcPartIdx ) const$/;"	f	class:TComYuv
copyPlane	source/Lib/Utilities/TVideoIOYuv.cpp	/^copyPlane(const TComPicYuv &src, const ComponentID srcPlane, TComPicYuv &dest, const ComponentID destPlane)$/;"	f	file:
copySliceInfo	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::copySliceInfo(TComSlice *pSrc)$/;"	f	class:TComSlice
copyState	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::copyState( const TDecBinIf* pcTDecBinIf )$/;"	f	class:TDecBinCABAC
copyState	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::copyState( const TEncBinIf* pcTEncBinIf )$/;"	f	class:TEncBinCABAC
copySubCU	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copySubCU( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TComDataCU
copyTo	source/Lib/TLibCommon/SEI.cpp	/^void SEIBufferingPeriod::copyTo (SEIBufferingPeriod& target)$/;"	f	class:SEIBufferingPeriod
copyTo	source/Lib/TLibCommon/SEI.cpp	/^void SEIPictureTiming::copyTo (SEIPictureTiming& target)$/;"	f	class:SEIPictureTiming
copyTo	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::copyTo( TComCUMvField* pcCUMvFieldDst, Int iPartAddrDst ) const$/;"	f	class:TComCUMvField
copyTo	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::copyTo( TComCUMvField* pcCUMvFieldDst, Int iPartAddrDst, UInt uiOffset, UInt uiNumPart ) const$/;"	f	class:TComCUMvField
copyToPartComponent	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPartComponent( const ComponentID compID, TComYuv* pcYuvDst, const UInt uiDstPartIdx ) const$/;"	f	class:TComYuv
copyToPartYuv	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPartYuv( TComYuv* pcYuvDst, const UInt uiDstPartIdx ) const$/;"	f	class:TComYuv
copyToPic	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::copyToPic( UChar uhDepth )$/;"	f	class:TComDataCU
copyToPic	source/Lib/TLibCommon/TComPicYuv.cpp	/^Void  TComPicYuv::copyToPic (TComPicYuv*  pcPicYuvDst) const$/;"	f	class:TComPicYuv
copyToPicComponent	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPicComponent  ( const ComponentID compID, TComPicYuv* pcPicYuvDst, const UInt ctuRsAddr, const UInt uiAbsZorderIdx, const UInt uiPartDepth, const UInt uiPartIdx ) const$/;"	f	class:TComYuv
copyToPicYuv	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::copyToPicYuv   ( TComPicYuv* pcPicYuvDst, const UInt ctuRsAddr, const UInt uiAbsZorderIdx, const UInt uiPartDepth, const UInt uiPartIdx ) const$/;"	f	class:TComYuv
count	source/Lib/TLibCommon/TComCodingStatistics.h	/^      Int64 count;$/;"	m	struct:TComCodingStatistics::SStat
count	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int64 count[MAX_NUM_SAO_CLASSES];$/;"	m	struct:SAOStatData
countNonZeroCoeffs	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Int TEncEntropy::countNonZeroCoeffs( TCoeff* pcCoef, UInt uiSize )$/;"	f	class:TEncEntropy
countStartCodeEmulations	source/Lib/TLibCommon/TComBitStream.cpp	/^Int TComOutputBitstream::countStartCodeEmulations()$/;"	f	class:TComOutputBitstream
countingType	source/Lib/TLibCommon/TypeDef.h	/^  Int  countingType;$/;"	m	struct:TComSEITimeSet
cpbCntMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt cpbCntMinus1;$/;"	m	struct:HrdSubLayerInfo
cpbNalFactor	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     cpbNalFactor;                \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
cpbNalFactor	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     cpbNalFactor;                \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
cpbSizeValue	source/Lib/TLibCommon/TComSlice.h	/^  UInt cpbSizeValue      [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
cpbVclFactor	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     cpbVclFactor;$/;"	m	struct:ProfileFeatures
cpbVclFactor	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     cpbVclFactor;$/;"	m	struct:ProfileFeatures
crFullRangeFlag	source/App/TAppDecoder/TAppDecTop.cpp	/^                                    const Bool crFullRangeFlag,$/;"	v	file:
crInputFullRangeFlag	source/App/TAppDecoder/TAppDecTop.cpp	/^                                    const Bool crInputFullRangeFlag,$/;"	v	file:
crInputMatrixCoefficients	source/App/TAppDecoder/TAppDecTop.cpp	/^                                    const Int  crInputMatrixCoefficients,$/;"	v	file:
create	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::create()$/;"	f	class:TAppDecTop
create	source/App/TAppEncoder/TAppEncCfg.cpp	/^Void TAppEncCfg::create()$/;"	f	class:TAppEncCfg
create	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::create()$/;"	f	class:TAppMctsExtTop
create	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::create(uint32_t width, uint32_t height, ChromaFormat fmt, $/;"	f	class:SEIFilmGrainSynthesizer
create	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::create( ChromaFormat chromaFormatIDC, UInt uiNumPartition, UInt uiWidth, UInt uiHeight, Bool bDecSubCu, Int unitSize$/;"	f	class:TComDataCU
create	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::create( UInt uiMaxCUDepth )$/;"	f	class:TComLoopFilter
create	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::create( UInt uiNumPartition )$/;"	f	class:TComCUMvField
create	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::create( const TComSPS &sps, const TComPPS &pps, const Bool bCreateEncoderSourcePicYuv, const Bool bCreateForImmediateReconstruction )$/;"	f	class:TComPic
create	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::create  ( const TComSPS &sps, const TComPPS &pps, UInt uiMaxDepth, const Bool bAllocateCtuArray )$/;"	f	class:TComPicSym
create	source/Lib/TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::create ( const Int picWidth,                 \/\/\/< picture width$/;"	f	class:TComPicYuv
create	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::create( Int picWidth, Int picHeight, ChromaFormat format, UInt maxCUWidth, UInt maxCUHeight, UInt maxCUDepth, UInt lumaBitShift, UInt chromaBitShift )$/;"	f	class:TComSampleAdaptiveOffset
create	source/Lib/TLibCommon/TComSlice.h	/^  Void                           create  (Int numberOfEntries)                            { m_referencePictureSets.resize(numberOfEntries);         }$/;"	f	class:TComRPSList
create	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::create( UInt iWidth, UInt iHeight, ChromaFormat chromaFormatIDC )$/;"	f	class:TComYuv
create	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::create( UInt uiMaxDepth, UInt uiMaxWidth, UInt uiMaxHeight, ChromaFormat chromaFormatIDC )$/;"	f	class:TDecCu
create	source/Lib/TLibDecoder/TDecGop.cpp	/^Void TDecGop::create()$/;"	f	class:TDecGop
create	source/Lib/TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::create()$/;"	f	class:TDecSlice
create	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::create()$/;"	f	class:TDecTop
create	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::create(UChar uhTotalDepth, UInt uiMaxWidth, UInt uiMaxHeight, ChromaFormat chromaFormat)$/;"	f	class:TEncCu
create	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void  TEncGOP::create()$/;"	f	class:TEncGOP
create	source/Lib/TLibEncoder/TEncPic.cpp	/^Void TEncPic::create( const TComSPS &sps, const TComPPS &pps, UInt uiMaxAdaptiveQPDepth )$/;"	f	class:TEncPic
create	source/Lib/TLibEncoder/TEncPic.cpp	/^Void TEncPicQPAdaptationLayer::create( Int iWidth, Int iHeight, UInt uiAQPartWidth, UInt uiAQPartHeight )$/;"	f	class:TEncPicQPAdaptationLayer
create	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::create( TEncRCSeq* encRCSeq, Int numPic )$/;"	f	class:TEncRCGOP
create	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::create( TEncRCSeq* encRCSeq, TEncRCGOP* encRCGOP, Int frameLevel, list<TEncRCPic*>& listPreviousPictures )$/;"	f	class:TEncRCPic
create	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::create( Int totalFrames, Int targetBitrate, Int frameRate, Int GOPSize, Int picWidth, Int picHeight, Int LCUWidth, Int LCUHeight, Int numberOfLevel, Bool useLCUSeparateModel, Int adaptiveBit )$/;"	f	class:TEncRCSeq
create	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::create( Int iWidth, Int iHeight, ChromaFormat chromaFormat, UInt iMaxCUWidth, UInt iMaxCUHeight, UChar uhTotalDepth )$/;"	f	class:TEncSlice
create	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::create ()$/;"	f	class:TEncTop
createEncData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::createEncData(Bool isPreDBFSamplesUsed)$/;"	f	class:TEncSampleAdaptiveOffset
createExplicitReferencePictureSetFromReference	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::createExplicitReferencePictureSetFromReference( TComList<TComPic*>& rcListPic, const TComReferencePictureSet *pReferencePictureSet, Bool isRAP, Int pocRandomAccess, Bool bUseRecoveryPoint, const Bool bEfficientFieldIRAPEnabled)$/;"	f	class:TComSlice
createGrainSynthesizer	source/Lib/TLibCommon/TComPic.cpp	/^void TComPic::createGrainSynthesizer(Bool bFirstPictureInSequence, SEIFilmGrainSynthesizer* pGrainCharacteristics, TComPicYuv* pGrainBuf, const TComSPS* sps)$/;"	f	class:TComPic
createHrdParamBuffer	source/Lib/TLibCommon/TComSlice.h	/^  Void              createHrdParamBuffer()$/;"	f	class:TComVPS
createLibs	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def createLibs(self, src_lib_dirs, dst_lib_dir, incremental=True):$/;"	m	class:FatBinaryTool
createRPSList	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSPS::createRPSList( Int numRPS )$/;"	f	class:TComSPS
createWithoutCUInfo	source/Lib/TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::createWithoutCUInfo ( const Int picWidth,                 \/\/\/< picture width$/;"	f	class:TComPicYuv
create_empty_repository	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def create_empty_repository(self, repo_path, std_layout=True):$/;"	m	class:SvnHelper
create_install_name_info	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def create_install_name_info(self, dylib):$/;"	m	class:DyLibInstallNameInfoInspector
create_ndksa_toolchain	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def create_ndksa_toolchain(self, ndk_toolchain, api_level=None, unified_headers=False, ndk_stl='gnustl', ndk_llvm_version=None, inst_dir=None):$/;"	m	class:NdkFinder
crossComponentPrediction	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::crossComponentPrediction(       TComTU      & rTu,$/;"	f	class:TComTrQuant
ctxIndMap4x4	source/Lib/TLibCommon/TComRom.cpp	/^const UInt ctxIndMap4x4[4*4] =$/;"	v
d64CodedLevelandDist	source/Lib/TLibCommon/TComTrQuant.cpp	/^  Double d64CodedLevelandDist; \/\/ distortion and level cost only$/;"	m	struct:__anon8	file:
d64SigCost	source/Lib/TLibCommon/TComTrQuant.cpp	/^  Double d64SigCost;$/;"	m	struct:__anon8	file:
d64SigCost_0	source/Lib/TLibCommon/TComTrQuant.cpp	/^  Double d64SigCost_0;$/;"	m	struct:__anon8	file:
d64UncodedDist	source/Lib/TLibCommon/TComTrQuant.cpp	/^  Double d64UncodedDist;    \/\/ all zero coded block distortion$/;"	m	struct:__anon8	file:
data	source/App/utils/annexBbytecount.cpp	/^  const char data[10];$/;"	m	struct:__anon1	file:
data	source/Lib/TLibCommon/TComCodingStatistics.h	/^    TComCodingStatisticsData data;$/;"	m	class:TComCodingStatistics
dataBase	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  int8_t dataBase[NUM_CUT_OFF_FREQ][NUM_CUT_OFF_FREQ][DATA_BASE_SIZE][DATA_BASE_SIZE];$/;"	m	struct:GrainSynthesisStruct_t
dataBaseGen	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::dataBaseGen()$/;"	f	class:SEIFilmGrainSynthesizer
data_len	source/App/utils/annexBbytecount.cpp	/^  unsigned data_len;$/;"	m	struct:__anon1	file:
deblockFactor	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const uint32_t deblockFactor[13] =$/;"	v	file:
deblockGrainStripe	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::deblockGrainStripe(int32_t *grainStripe, uint32_t widthComp, uint32_t strideComp)$/;"	f	class:SEIFilmGrainSynthesizer
debugCabacBinTargetLine	source/Lib/TLibCommon/Debug.cpp	/^const UInt debugCabacBinTargetLine = 0;$/;"	v
debugCabacBinWindow	source/Lib/TLibCommon/Debug.cpp	/^const UInt debugCabacBinWindow     = 1000000;$/;"	v
debugEncoderSearchBinTargetLine	source/Lib/TLibCommon/Debug.cpp	/^const UInt debugEncoderSearchBinTargetLine = 0;$/;"	v
debugEncoderSearchBinWindow	source/Lib/TLibCommon/Debug.cpp	/^const UInt debugEncoderSearchBinWindow     = 1000000;$/;"	v
debug_reorder_data_inter_token	source/Lib/TLibCommon/Debug.cpp	/^const TChar *debug_reorder_data_inter_token[MAX_NUM_COMPONENT+1]$/;"	v
decideBlkParams	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::decideBlkParams(TComPic* pic, Bool* sliceEnabled, SAOStatData*** blkStats, TComPicYuv* srcYuv, TComPicYuv* resYuv,$/;"	f	class:TEncSampleAdaptiveOffset
decidePicParams	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::decidePicParams(Bool* sliceEnabled, const TComPic* pic, const Double saoEncodingRate, const Double saoEncodingRateChroma)$/;"	f	class:TEncSampleAdaptiveOffset
decode	source/App/SEIRemovalApp/SEIRemovalApp.cpp	/^UInt SEIRemovalApp::decode()$/;"	f	class:SEIRemovalApp
decode	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::decode()$/;"	f	class:TAppDecTop
decode	source/Lib/TLibDecoder/TDecTop.cpp	/^Bool TDecTop::decode(InputNALUnit& nalu, Int& iSkipFrame, Int& iPOCLastDisplay, Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
decodeAlignedBinsEP	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeAlignedBinsEP( UInt& ruiBins, Int numBins, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBin	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBin( UInt& ruiBin, ContextModel &rcCtxModel, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBinEP	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBinEP( UInt& ruiBin, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBinTrm	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::decodeBinTrm( UInt& ruiBin )$/;"	f	class:TDecBinCABAC
decodeBinsEP	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBinsEP( UInt& ruiBin, Int numBins, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeCUTransquantBypassFlag	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeCUTransquantBypassFlag(TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeChromaQpAdjustment	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeChromaQpAdjustment( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecEntropy
decodeCoeff	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeCoeff( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool& bCodeDQP, Bool& isChromaQpAdjCoded )$/;"	f	class:TDecEntropy
decodeCtu	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::decodeCtu( TComDataCU* pCtu, Bool& isLastCtuOfSliceSegment )$/;"	f	class:TDecCu
decodeIPCMInfo	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeInterDirPU	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeInterDirPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx )$/;"	f	class:TDecEntropy
decodeIntraDirModeChroma	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeIntraDirModeChroma( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeIntraDirModeLuma	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeIntraDirModeLuma  ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeMVPIdxPU	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMVPIdxPU( TComDataCU* pcSubCU, UInt uiPartAddr, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodeMergeFlag	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMergeFlag( TComDataCU* pcSubCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPUIdx )$/;"	f	class:TDecEntropy
decodeMergeIndex	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMergeIndex( TComDataCU* pcCU, UInt uiPartIdx, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeMvdPU	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeMvdPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodePPS	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    decodePPS                   ( TComPPS* pcPPS ) { m_pcEntropyDecoderIf->parsePPS(pcPPS); }$/;"	f	class:TDecEntropy
decodePUWise	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePUWise( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, TComDataCU* pcSubCU )$/;"	f	class:TDecEntropy
decodePartSize	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodePredInfo	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePredInfo    ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, TComDataCU* pcSubCU )$/;"	f	class:TDecEntropy
decodePredMode	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeQP	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeQP          ( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecEntropy
decodeRefFrmIdxPU	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeRefFrmIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodeRemainingBytes	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    decodeRemainingBytes( Bool noTrailingBytesExpected ) { m_pcEntropyDecoderIf->parseRemainingBytes(noTrailingBytesExpected); }$/;"	f	class:TDecEntropy
decodeSPS	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    decodeSPS                   ( TComSPS* pcSPS ) { m_pcEntropyDecoderIf->parseSPS(pcSPS); }$/;"	f	class:TDecEntropy
decodeSkipFlag	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeSliceHeader	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    decodeSliceHeader           ( TComSlice* pcSlice, ParameterSetManager *parameterSetManager, const Int prevTid0POC)  { m_pcEntropyDecoderIf->parseSliceHeader(pcSlice, parameterSetManager, prevTid0POC);         }$/;"	f	class:TDecEntropy
decodeSplitFlag	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::decodeSplitFlag   ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeTerminatingBit	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    decodeTerminatingBit        ( UInt& ruiIsLast )       { m_pcEntropyDecoderIf->parseTerminatingBit(ruiIsLast);     }$/;"	f	class:TDecEntropy
decodeVPS	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    decodeVPS                   ( TComVPS* pcVPS ) { m_pcEntropyDecoderIf->parseVPS(pcVPS); }$/;"	f	class:TDecEntropy
decodingRefreshMarking	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::decodingRefreshMarking(Int& pocCRA, Bool& bRefreshPending, TComList<TComPic*>& rcListPic, const bool bEfficientFieldIRAPEnabled)$/;"	f	class:TComSlice
decompressCtu	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::decompressCtu( TComDataCU* pCtu )$/;"	f	class:TDecCu
decompressSlice	source/Lib/TLibDecoder/TDecGop.cpp	/^Void TDecGop::decompressSlice(TComInputBitstream* pcBitstream, TComPic* pcPic)$/;"	f	class:TDecGop
decompressSlice	source/Lib/TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::decompressSlice(TComInputBitstream** ppcSubstreams, TComPic* pcPic, TDecSbac* pcSbacDecoder)$/;"	f	class:TDecSlice
default_error_reporter	source/Lib/Utilities/program_options_lite.cpp	/^    ErrorReporter default_error_reporter;$/;"	m	namespace:df::program_options_lite	file:
deletePicBuffer	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::deletePicBuffer ( )$/;"	f	class:TDecTop
deletePicBuffer	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::deletePicBuffer()$/;"	f	class:TEncTop
deleteSEIs	source/Lib/TLibCommon/SEI.cpp	/^Void deleteSEIs (SEIMessages &seiList)$/;"	f
delete_rpaths	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def delete_rpaths(self, dylib, rpath_list):$/;"	m	class:DyLibInstallNameInfoInspector
deriveLeftBottomIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftBottomIdx( UInt  uiPartIdx,      UInt&      ruiPartIdxLB ) const$/;"	f	class:TComDataCU
deriveLeftBottomIdxGeneral	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftBottomIdxGeneral( UInt uiAbsPartIdx, UInt uiPartIdx, UInt& ruiPartIdxLB ) const$/;"	f	class:TComDataCU
deriveLeftRightTopIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftRightTopIdx ( UInt uiPartIdx, UInt& ruiPartIdxLT, UInt& ruiPartIdxRT ) const$/;"	f	class:TComDataCU
deriveLeftRightTopIdxGeneral	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveLeftRightTopIdxGeneral ( UInt uiAbsPartIdx, UInt uiPartIdx, UInt& ruiPartIdxLT, UInt& ruiPartIdxRT ) const$/;"	f	class:TComDataCU
deriveLoopFilterBoundaryAvailibility	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::deriveLoopFilterBoundaryAvailibility(Int ctuRsAddr,$/;"	f	class:TComPicSym
deriveModeMergeRDO	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::deriveModeMergeRDO(const BitDepths &bitDepths, Int ctuRsAddr, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES], Bool* sliceEnabled, SAOStatData*** blkStats, SAOBlkParam& modeParam, Double& modeNormCost, TEncSbac** cabacCoderRDO, Int inCabacLabel)$/;"	f	class:TEncSampleAdaptiveOffset
deriveModeNewRDO	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::deriveModeNewRDO(const BitDepths &bitDepths, Int ctuRsAddr, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES], Bool* sliceEnabled, SAOStatData*** blkStats, SAOBlkParam& modeParam, Double& modeNormCost, TEncSbac** cabacCoderRDO, Int inCabacLabel)$/;"	f	class:TEncSampleAdaptiveOffset
deriveOffsets	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::deriveOffsets(ComponentID compIdx, const Int channelBitDepth, Int typeIdc, SAOStatData& statData, Int* quantOffsets, Int& typeAuxInfo)$/;"	f	class:TEncSampleAdaptiveOffset
deriveRightBottomIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::deriveRightBottomIdx( UInt uiPartIdx, UInt &ruiPartIdxRB ) const$/;"	f	class:TComDataCU
deriveTestModeAMP	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::deriveTestModeAMP (TComDataCU *pcBestCU, PartSize eParentPartSize, Bool &bTestAMP_Hor, Bool &bTestAMP_Ver, Bool &bTestMergeAMP_Hor, Bool &bTestMergeAMP_Ver)$/;"	f	class:TEncCu
destroy	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::destroy()$/;"	f	class:TAppDecTop
destroy	source/App/TAppEncoder/TAppEncCfg.cpp	/^Void TAppEncCfg::destroy()$/;"	f	class:TAppEncCfg
destroy	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::destroy()$/;"	f	class:TAppMctsExtTop
destroy	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::destroy()$/;"	f	class:TComDataCU
destroy	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::destroy()$/;"	f	class:TComLoopFilter
destroy	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::destroy()$/;"	f	class:TComCUMvField
destroy	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::destroy()$/;"	f	class:TComPic
destroy	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::destroy()$/;"	f	class:TComPicSym
destroy	source/Lib/TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::destroy()$/;"	f	class:TComPicYuv
destroy	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::destroy()$/;"	f	class:TComPrediction
destroy	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::destroy()$/;"	f	class:TComSampleAdaptiveOffset
destroy	source/Lib/TLibCommon/TComSlice.h	/^  Void                           destroy ()                                               { }$/;"	f	class:TComRPSList
destroy	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::destroy()$/;"	f	class:TComYuv
destroy	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::destroy()$/;"	f	class:TDecCu
destroy	source/Lib/TLibDecoder/TDecGop.cpp	/^Void TDecGop::destroy()$/;"	f	class:TDecGop
destroy	source/Lib/TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::destroy()$/;"	f	class:TDecSlice
destroy	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::destroy()$/;"	f	class:TDecTop
destroy	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::destroy()$/;"	f	class:TEncCu
destroy	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void  TEncGOP::destroy()$/;"	f	class:TEncGOP
destroy	source/Lib/TLibEncoder/TEncPic.cpp	/^Void TEncPic::destroy()$/;"	f	class:TEncPic
destroy	source/Lib/TLibEncoder/TEncPic.cpp	/^Void TEncPicQPAdaptationLayer::destroy()$/;"	f	class:TEncPicQPAdaptationLayer
destroy	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::destroy()$/;"	f	class:TEncRCGOP
destroy	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::destroy()$/;"	f	class:TEncRCPic
destroy	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::destroy()$/;"	f	class:TEncRCSeq
destroy	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::destroy()$/;"	f	class:TEncRateCtrl
destroy	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::destroy()$/;"	f	class:TEncSearch
destroy	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::destroy()$/;"	f	class:TEncSlice
destroy	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::destroy ()$/;"	f	class:TEncTop
destroyEncData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::destroyEncData()$/;"	f	class:TEncSampleAdaptiveOffset
destroyRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::destroyRCGOP()$/;"	f	class:TEncRateCtrl
destroyROM	source/Lib/TLibCommon/TComRom.cpp	/^Void destroyROM()$/;"	f
destroyScalingList	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::destroyScalingList()$/;"	f	class:TComTrQuant
determineCabacInitIdx	source/Lib/TLibEncoder/TEncCavlc.h	/^  SliceType determineCabacInitIdx  (const TComSlice* \/*pSlice*\/) { assert(0); return I_SLICE; };$/;"	f	class:TEncCavlc
determineCabacInitIdx	source/Lib/TLibEncoder/TEncEntropy.h	/^  SliceType determineCabacInitIdx   (const TComSlice *pSlice) { return m_pcEntropyCoderIf->determineCabacInitIdx(pSlice); }$/;"	f	class:TEncEntropy
determineCabacInitIdx	source/Lib/TLibEncoder/TEncSbac.cpp	/^SliceType TEncSbac::determineCabacInitIdx(const TComSlice *pSlice)$/;"	f	class:TEncSbac
df	source/Lib/Utilities/program_options_lite.cpp	/^namespace df$/;"	n	file:
df	source/Lib/Utilities/program_options_lite.h	/^namespace df$/;"	n
diff	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int64 diff[MAX_NUM_SAO_CLASSES];$/;"	m	struct:SAOStatData
discontinuityFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool discontinuityFlag;$/;"	m	struct:TComSEITimeSet
dissociateSEIObject	source/Lib/TLibCommon/SEI.h	/^  SEI *dissociateSEIObject()  \/\/ Dissociates SEI; receiver of this function in charge of memory deallocation.$/;"	f	class:RegionalSEI
divideByPowerOf2	source/Lib/TLibCommon/TComMv.h	/^  Void divideByPowerOf2 (const Int i)$/;"	f	class:TComMv
doChecking	source/Lib/TLibDecoder/TDecConformance.h	/^  static inline Bool doChecking()$/;"	f	class:TDecConformanceCheck
doHelp	source/Lib/Utilities/program_options_lite.cpp	/^    void doHelp(ostream& out, Options& opts, unsigned columns)$/;"	f	namespace:df::program_options_lite
doHelpOpt	source/Lib/Utilities/program_options_lite.cpp	/^    static void doHelpOpt(ostream& out, const Options::Names& entry, unsigned pad_short = 0)$/;"	f	namespace:df::program_options_lite
doesFileExist	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function doesFileExist {$/;"	f
duBitRateValue	source/Lib/TLibCommon/TComSlice.h	/^  UInt duBitRateValue    [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
ducpbSizeValue	source/Lib/TLibCommon/TComSlice.h	/^  UInt ducpbSizeValue    [MAX_CPB_CNT][2];$/;"	m	struct:HrdSubLayerInfo
dump	source/Lib/TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::dump (const std::string &fileName, const BitDepths &bitDepths, const Bool bAppend, const Bool bForceTo8Bit) const$/;"	f	class:TComPicYuv
elevationCentre	source/Lib/TLibCommon/SEI.h	/^    Int  elevationCentre;$/;"	m	struct:SEIOmniViewport::OmniViewport
emulation_prevention_three_byte	source/Lib/TLibEncoder/NALwrite.cpp	/^static const UChar emulation_prevention_three_byte[] = {3};$/;"	v	file:
enable4ChromaPUsInIntraNxNCU	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool enable4ChromaPUsInIntraNxNCU(const ChromaFormat chFmt)$/;"	f
enableTMctsCheck	source/Lib/TLibDecoder/TDecConformance.h	/^  Void enableTMctsCheck(Bool enabled) { m_tmctsCheckEnabled = enabled; };$/;"	f	class:TDecConformanceCheck
enabled	source/Lib/TLibCommon/TypeDef.h	/^  Bool   enabled;         \/\/\/< Enabled flag (0:default)$/;"	m	struct:WCGChromaQPControl
encode	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::encode()$/;"	f	class:TAppEncTop
encode	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::encode( Bool flush, TComPicYuv* pcPicYuvOrg, TComPicYuv* pcPicYuvTrueOrg, const InputColourSpaceConversion ipCSC, const InputColourSpaceConversion snrCSC, TComList<TComPicYuv*>& rcListPicYuvRecOut, std::list<AccessUnit>& accessUnitsOut, Int& iNumEncoded )$/;"	f	class:TEncTop
encode	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::encode(Bool flush, TComPicYuv* pcPicYuvOrg, TComPicYuv* pcPicYuvTrueOrg, const InputColourSpaceConversion ipCSC, const InputColourSpaceConversion snrCSC, TComList<TComPicYuv*>& rcListPicYuvRecOut, std::list<AccessUnit>& accessUnitsOut, Int& iNumEncoded, Bool isTff)$/;"	f	class:TEncTop
encodeAlignedBinsEP	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeAlignedBinsEP( UInt binValues, Int numBins )$/;"	f	class:TEncBinCABAC
encodeBin	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBin( UInt binValue, ContextModel &rcCtxModel )$/;"	f	class:TEncBinCABAC
encodeBin	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBin( UInt binValue, ContextModel &rcCtxModel )$/;"	f	class:TEncBinCABACCounter
encodeBinEP	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBinEP( UInt binValue )$/;"	f	class:TEncBinCABAC
encodeBinEP	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBinEP( UInt \/*binValue*\/ )$/;"	f	class:TEncBinCABACCounter
encodeBinTrm	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBinTrm( UInt binValue )$/;"	f	class:TEncBinCABAC
encodeBinTrm	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBinTrm( UInt binValue )$/;"	f	class:TEncBinCABACCounter
encodeBinsEP	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodeBinsEP( UInt binValues, Int numBins )$/;"	f	class:TEncBinCABAC
encodeBinsEP	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::encodeBinsEP( UInt \/*binValues*\/, Int numBins )$/;"	f	class:TEncBinCABACCounter
encodeCUTransquantBypassFlag	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeChromaQpAdjustment	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx, Bool inRd )$/;"	f	class:TEncEntropy
encodeCoeff	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCoeff( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool& bCodeDQP, Bool& codeChromaQpAdj )$/;"	f	class:TEncEntropy
encodeCoeffNxN	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCoeffNxN( TComTU &rTu, TCoeff* pcCoef, const ComponentID compID)$/;"	f	class:TEncEntropy
encodeCrossComponentPrediction	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TEncEntropy
encodeCtu	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::encodeCtu ( TComDataCU* pCtu )$/;"	f	class:TEncCu
encodeIPCMInfo	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeInterDirPU	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeInterDirPU( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeIntraDirModeChroma	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeIntraDirModeChroma( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeIntraDirModeLuma	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeIntraDirModeLuma  ( TComDataCU* pcCU, UInt absPartIdx, Bool isMultiplePU )$/;"	f	class:TEncEntropy
encodeMVPIdxPU	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMVPIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncEntropy
encodeMergeFlag	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMergeFlag( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeMergeIndex	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMergeIndex( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeMvdPU	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeMvdPU( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncEntropy
encodePCMAlignBits	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::encodePCMAlignBits()$/;"	f	class:TEncBinCABAC
encodePPS	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePPS( const TComPPS* pcPPS )$/;"	f	class:TEncEntropy
encodePUWise	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePUWise( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodePartSize	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool bRD )$/;"	f	class:TEncEntropy
encodePredInfo	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePredInfo( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodePredMode	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeQP	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQP( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeQtCbf	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TEncEntropy
encodeQtCbfZero	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtCbfZero( TComTU &rTu, const ChannelType chType )$/;"	f	class:TEncEntropy
encodeQtRootCbf	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtRootCbf( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncEntropy
encodeQtRootCbfZero	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeQtRootCbfZero( )$/;"	f	class:TEncEntropy
encodeRefFrmIdxPU	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeRefFrmIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefList )$/;"	f	class:TEncEntropy
encodeResAndCalcRdInterCU	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::encodeResAndCalcRdInterCU( TComDataCU* pcCU, TComYuv* pcYuvOrg, TComYuv* pcYuvPred,$/;"	f	class:TEncSearch
encodeSAOBlkParam	source/Lib/TLibEncoder/TEncEntropy.h	/^  Void encodeSAOBlkParam(SAOBlkParam& saoBlkParam, const BitDepths &bitDepths, Bool* sliceEnabled, Bool leftMergeAvail, Bool aboveMergeAvail){m_pcEntropyCoderIf->codeSAOBlkParam(saoBlkParam, bitDepths, sliceEnabled, leftMergeAvail, aboveMergeAvail, false);}$/;"	f	class:TEncEntropy
encodeSPS	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSPS( const TComSPS* pcSPS )$/;"	f	class:TEncEntropy
encodeSkipFlag	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, Bool bRD )$/;"	f	class:TEncEntropy
encodeSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::encodeSlice   ( TComPic* pcPic, TComOutputBitstream* pcSubstreams, UInt &numBinsCoded )$/;"	f	class:TEncSlice
encodeSliceFinish	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSliceFinish()$/;"	f	class:TEncEntropy
encodeSliceHeader	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSliceHeader ( TComSlice* pcSlice )$/;"	f	class:TEncEntropy
encodeSplitFlag	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeSplitFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool bRD )$/;"	f	class:TEncEntropy
encodeTerminatingBit	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeTerminatingBit      ( UInt uiIsLast )$/;"	f	class:TEncEntropy
encodeTilesWPPEntryPoint	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void  TEncEntropy::encodeTilesWPPEntryPoint( TComSlice* pSlice )$/;"	f	class:TEncEntropy
encodeTransformSubdivFlag	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeTransformSubdivFlag( UInt uiSymbol, UInt uiCtx )$/;"	f	class:TEncEntropy
encodeVPS	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::encodeVPS( const TComVPS* pcVPS )$/;"	f	class:TEncEntropy
enumToString	source/App/TAppEncoder/TAppEncCfg.cpp	/^static std::string enumToString(P map[], UInt mapLen, const T val)$/;"	f	file:
eofBeforeNBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  Bool eofBeforeNBytes(UInt n)$/;"	f	class:InputByteStream
error	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int error;$/;"	m	struct:MotionVector
error	source/Lib/Utilities/program_options_lite.cpp	/^    ostream& ErrorReporter::error(const string& where)$/;"	f	class:df::program_options_lite::ErrorReporter
error_reporter	source/Lib/Utilities/program_options_lite.cpp	/^      ErrorReporter& error_reporter;$/;"	m	struct:df::program_options_lite::OptionWriter	file:
estBit	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::estBit( estBitsSbacStruct* \/*pcEstBitsCabac*\/, Int \/*width*\/, Int \/*height*\/, ChannelType \/*chType*\/, COEFF_SCAN_TYPE \/*scanType*\/ )$/;"	f	class:TEncCavlc
estBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estBit( estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, ChannelType chType, COEFF_SCAN_TYPE scanType )$/;"	f	class:TEncSbac
estBitsSbacStruct	source/Lib/TLibCommon/TComTrQuant.h	/^} estBitsSbacStruct;$/;"	t	typeref:struct:__anon10
estCBFBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estCBFBit( estBitsSbacStruct* pcEstBitsSbac )$/;"	f	class:TEncSbac
estIntraPredChromaQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::estIntraPredChromaQT(TComDataCU* pcCU,$/;"	f	class:TEncSearch
estIntraPredLumaQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::estIntraPredLumaQT(TComDataCU* pcCU,$/;"	f	class:TEncSearch
estIterOffset	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Int TEncSampleAdaptiveOffset::estIterOffset(Int typeIdx, Double lambda, Int offsetInput, Int64 count, Int64 diffSum, Int shift, Int bitIncrease, Int64& bestDist, Double& bestCost, Int offsetTh )$/;"	f	class:TEncSampleAdaptiveOffset
estLastSignificantPositionBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estLastSignificantPositionBit( estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, ChannelType chType, COEFF_SCAN_TYPE scanType )$/;"	f	class:TEncSbac
estSaoDist	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Int64 TEncSampleAdaptiveOffset::estSaoDist(Int64 count, Int64 offset, Int64 diffSum, Int shift)$/;"	f	class:TEncSampleAdaptiveOffset
estSignificantCoeffGroupMapBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estSignificantCoeffGroupMapBit( estBitsSbacStruct* pcEstBitsSbac, ChannelType chType )$/;"	f	class:TEncSbac
estSignificantCoefficientsBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estSignificantCoefficientsBit( estBitsSbacStruct* pcEstBitsSbac, ChannelType chType )$/;"	f	class:TEncSbac
estSignificantMapBit	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::estSignificantMapBit( estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, ChannelType chType )$/;"	f	class:TEncSbac
estimateBit	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::estimateBit (estBitsSbacStruct* pcEstBitsSbac, Int width, Int height, const ChannelType chType, COEFF_SCAN_TYPE scanType )$/;"	f	class:TEncEntropy
estimatePicLambda	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::estimatePicLambda( list<TEncRCPic*>& listPreviousPictures, SliceType eSliceType)$/;"	f	class:TEncRCPic
estimatePicQP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::estimatePicQP( Double lambda, list<TEncRCPic*>& listPreviousPictures )$/;"	f	class:TEncRCPic
exec_main_default_try	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def exec_main_default_try(main_fnc, sys_exit_err=1, finally_action=None):$/;"	f
executeLoopFilters	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::executeLoopFilters(Int& poc, TComList<TComPic*>*& rpcListPic)$/;"	f	class:TDecTop
expected	source/App/utils/annexBbytecount.cpp	/^  AnnexBStats expected;$/;"	m	struct:__anon1	file:
extendPicBorder	source/Lib/TLibCommon/TComPicYuv.cpp	/^Void TComPicYuv::extendPicBorder ()$/;"	f	class:TComPicYuv
extendedPrecisionProcessingFlag	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 extendedPrecisionProcessingFlag;$/;"	m	struct:ProfileFeatures
extendedPrecisionProcessingFlag	source/Lib/TLibDecoder/TDecConformance.h	/^  TRISTATE                 extendedPrecisionProcessingFlag;$/;"	m	struct:ProfileFeatures
extensionFlag	source/Lib/TLibCommon/SEI.h	/^  Bool extensionFlag;$/;"	m	class:SEIDisplayOrientation
extract	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::extract()$/;"	f	class:TAppMctsExtTop
extractBitrateFromVector	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function extractBitrateFromVector {$/;"	f
extractBitratesExecutable	source/App/utils/BitrateTargeting/makefile	/^extractBitratesExecutable = extractBitrates.exe$/;"	m
extractBitratesForQPs	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^  std::map< unsigned char, double > extractBitratesForQPs( std::istream& i )$/;"	f	namespace:__anon2
extractBitratesForTemporalLayers	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^std::vector< double > extractBitratesForTemporalLayers( std::istream& i )$/;"	f
extractBitratesObjects	source/App/utils/BitrateTargeting/makefile	/^extractBitratesObjects = ExtractBitrates.o ExtractBitratesMain.o$/;"	m
extractLambdaModifier	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function extractLambdaModifier {$/;"	f
extractSeisByType	source/Lib/TLibCommon/SEI.cpp	/^SEIMessages extractSeisByType(SEIMessages &seiList, SEI::PayloadType seiType)$/;"	f
extractSubstream	source/Lib/TLibCommon/TComBitStream.cpp	/^TComInputBitstream *TComInputBitstream::extractSubstream( UInt uiNumBits )$/;"	f	class:TComInputBitstream
fastForwardDst	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void fastForwardDst(TCoeff *block, TCoeff *coeff, Int shift)  \/\/ input block, output coeff$/;"	f
fastInverseDst	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void fastInverseDst(TCoeff *tmp, TCoeff *block, Int shift, const TCoeff outputMinimum, const TCoeff outputMaximum)  \/\/ input tmp, output block$/;"	f
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fgsDeinit	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::fgsDeinit()$/;"	f	class:SEIFilmGrainSynthesizer
fgsInit	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::fgsInit()$/;"	f	class:SEIFilmGrainSynthesizer
fillMvpCand	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::fillMvpCand ( const UInt partIdx, const UInt partAddr, const RefPicList eRefPicList, const Int refIdx, AMVPInfo* pInfo ) const$/;"	f	class:TComDataCU
fillReferenceSamples	source/Lib/TLibCommon/TComPattern.cpp	/^Void fillReferenceSamples( const Int bitDepth, $/;"	f
filter	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filter(Int bitDepth, Pel const *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, TFilterCoeff const *coeff)$/;"	f	class:TComInterpolationFilter
filter	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Bool TEncTemporalFilter::filter(TComPicYuv *orgPic, Int receivedPoc)$/;"	f	class:TEncTemporalFilter
filterCopy	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterCopy(Int bitDepth, const Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Bool isFirst, Bool isLast)$/;"	f	class:TComInterpolationFilter
filterHor	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterHor(Int bitDepth, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Bool isLast, TFilterCoeff const *coeff)$/;"	f	class:TComInterpolationFilter
filterHor	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterHor(const ComponentID compID, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Int frac, Bool isLast, const ChromaFormat fmt, const Int bitDepth )$/;"	f	class:TComInterpolationFilter
filterIntraReferenceSamples	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool filterIntraReferenceSamples (const ChannelType chType, const ChromaFormat chFmt, const Bool intraReferenceSmoothingDisabled)$/;"	f
filterOutGoodBitrates	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function filterOutGoodBitrates {$/;"	f
filterPicture	source/Lib/TLibDecoder/TDecGop.cpp	/^Void TDecGop::filterPicture(TComPic* pcPic)$/;"	f	class:TDecGop
filterVer	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterVer(Int bitDepth, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Bool isFirst, Bool isLast, TFilterCoeff const *coeff)$/;"	f	class:TComInterpolationFilter
filterVer	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^Void TComInterpolationFilter::filterVer(const ComponentID compID, Pel *src, Int srcStride, Pel *dst, Int dstStride, Int width, Int height, Int frac, Bool isFirst, Bool isLast, const ChromaFormat fmt, const Int bitDepth )$/;"	f	class:TComInterpolationFilter
filter_segment	source/App/Parcat/parcat.cpp	/^std::vector<uint8_t> filter_segment(const std::vector<uint8_t> & v, int idx, int * poc_base, int * last_idr_poc)$/;"	f
filteringIntraReferenceSamples	source/Lib/TLibCommon/TComPattern.cpp	/^Bool TComPrediction::filteringIntraReferenceSamples(const ComponentID compID, UInt uiDirMode, UInt uiTuChWidth, UInt uiTuChHeight, const ChromaFormat chFmt, const Bool intraReferenceSmoothingDisabled)$/;"	f	class:TComPrediction
finalize	source/Lib/libmd5/MD5.h	/^  void finalize(unsigned char digest[MD5_DIGEST_STRING_LENGTH])$/;"	f	class:MD5
find	source/Lib/TLibCommon/TComList.h	/^  TComIterator find( const C& rcT ) \/\/ leszek$/;"	f	class:TComList
findMatchingLTRP	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Bool TEncCavlc::findMatchingLTRP ( TComSlice* pcSlice, UInt *ltrpsIndex, Int ltrpPOC, Bool usedFlag )$/;"	f	class:TEncCavlc
find_cmake	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def find_cmake(self):$/;"	m	class:CMakeFinder
find_nal_unit	source/App/Parcat/parcat.cpp	/^int find_nal_unit(const uint8_t* buf, int size, int* nal_start, int* nal_end)$/;"	f
find_repo_name_from_src_path	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def find_repo_name_from_src_path(src_path):$/;"	f
find_repo_path_from_src_path	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def find_repo_path_from_src_path(src_path):$/;"	f
find_tool_on_path	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def find_tool_on_path(tool, must_succeed=False, search_path=None):$/;"	f
finish	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::finish()$/;"	f	class:TDecBinCABAC
finish	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::finish()$/;"	f	class:TEncBinCABAC
finish	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^Void TEncBinCABACCounter::finish()$/;"	f	class:TEncBinCABACCounter
finishCU	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::finishCU( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TEncCu
finishWarningReport	source/Lib/TLibDecoder/TDecConformance.h	/^  static inline Void finishWarningReport() { }$/;"	f	class:TDecConformanceCheck
finishWarningReport	source/Lib/TLibDecoder/TDecConformance.h	/^  static inline Void finishWarningReport()$/;"	f	class:TDecConformanceCheck
firstSignificanceMapContext	source/Lib/TLibCommon/TypeDef.h	/^        UInt             firstSignificanceMapContext;$/;"	m	struct:TUEntropyCodingParameters
fixedPicRateFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool fixedPicRateFlag;$/;"	m	struct:HrdSubLayerInfo
fixedPicRateWithinCvsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool fixedPicRateWithinCvsFlag;$/;"	m	struct:HrdSubLayerInfo
flagTMctsError	source/Lib/TLibDecoder/TDecConformance.h	/^  Void flagTMctsError(const char *error)$/;"	f	class:TDecConformanceCheck
flush	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::flush()$/;"	f	class:TEncBinCABAC
formatCapabilityFactorx1000	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     formatCapabilityFactorx1000; \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
formatCapabilityFactorx1000	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     formatCapabilityFactorx1000; \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
formatLambdaModifier	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function formatLambdaModifier {$/;"	f
fullTimeStampFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool fullTimeStampFlag;$/;"	m	struct:TComSEITimeSet
func	source/Lib/Utilities/program_options_lite.h	/^      Func* func;$/;"	m	struct:df::program_options_lite::OptionFunc
functools	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import functools$/;"	i
g	Makefile	/^      g := mgwmake$/;"	m
g_HLSTraceEnable	source/Lib/TLibCommon/TComRom.cpp	/^Bool   g_HLSTraceEnable = true;$/;"	v
g_RCAlphaMaxValue	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCAlphaMaxValue = 500.0;$/;"	v
g_RCAlphaMinValue	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCAlphaMinValue = 0.05;$/;"	v
g_RCBetaMaxValue	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCBetaMaxValue  = -0.1;$/;"	v
g_RCBetaMinValue	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCBetaMinValue  = -3.0;$/;"	v
g_RCInvalidQPValue	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Int g_RCInvalidQPValue = -999;$/;"	v
g_RCIterationNum	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Int g_RCIterationNum = 20;$/;"	v
g_RCLCUSmoothWindowSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Int g_RCLCUSmoothWindowSize = 4;$/;"	v
g_RCMaxPicListSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Int g_RCMaxPicListSize = 32;$/;"	v
g_RCSmoothWindowSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Int g_RCSmoothWindowSize = 40;$/;"	v
g_RCWeightCurrentLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightCurrentLambda = 1.0 - g_RCWeightHistoryLambda;$/;"	v
g_RCWeightHistoryLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightHistoryLambda = 0.5;$/;"	v
g_RCWeightPicRargetBitInBuffer	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightPicRargetBitInBuffer = 1.0 - g_RCWeightPicTargetBitInGOP;$/;"	v
g_RCWeightPicTargetBitInGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^const Double g_RCWeightPicTargetBitInGOP    = 0.9;$/;"	v
g_aiT16	source/Lib/TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT16[TRANSFORM_NUMBER_OF_DIRECTIONS][16][16] =$/;"	v
g_aiT32	source/Lib/TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT32[TRANSFORM_NUMBER_OF_DIRECTIONS][32][32] =$/;"	v
g_aiT4	source/Lib/TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT4 [TRANSFORM_NUMBER_OF_DIRECTIONS][4][4]   =$/;"	v
g_aiT8	source/Lib/TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_aiT8 [TRANSFORM_NUMBER_OF_DIRECTIONS][8][8]   =$/;"	v
g_as_DST_MAT_4	source/Lib/TLibCommon/TComRom.cpp	/^const TMatrixCoeff g_as_DST_MAT_4[TRANSFORM_NUMBER_OF_DIRECTIONS][4][4] =$/;"	v
g_aucChromaScale	source/Lib/TLibCommon/TComRom.cpp	/^const UChar g_aucChromaScale[NUM_CHROMA_FORMAT][chromaQPMappingTableSize]=$/;"	v
g_aucConvertToBit	source/Lib/TLibCommon/TComRom.cpp	/^SChar  g_aucConvertToBit  [ MAX_CU_SIZE+1 ];$/;"	v
g_aucIntraModeNumFast_NotUseMPM	source/Lib/TLibCommon/TComRom.cpp	/^const UChar g_aucIntraModeNumFast_NotUseMPM[MAX_CU_DEPTH] =$/;"	v
g_aucIntraModeNumFast_UseMPM	source/Lib/TLibCommon/TComRom.cpp	/^const UChar g_aucIntraModeNumFast_UseMPM[MAX_CU_DEPTH] =$/;"	v
g_auiPUOffset	source/Lib/TLibCommon/TComRom.cpp	/^const UInt g_auiPUOffset[NUMBER_OF_PART_SIZES] = { 0, 8, 4, 4, 2, 10, 1, 5};$/;"	v
g_auiRasterToPelX	source/Lib/TLibCommon/TComRom.cpp	/^UInt g_auiRasterToPelX  [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_auiRasterToPelY	source/Lib/TLibCommon/TComRom.cpp	/^UInt g_auiRasterToPelY  [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_auiRasterToZscan	source/Lib/TLibCommon/TComRom.cpp	/^UInt g_auiRasterToZscan [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_auiZscanToRaster	source/Lib/TLibCommon/TComRom.cpp	/^UInt g_auiZscanToRaster [ MAX_NUM_PART_IDXS_IN_CTU_WIDTH*MAX_NUM_PART_IDXS_IN_CTU_WIDTH ] = { 0, };$/;"	v
g_bEncDecTraceDisable	source/Lib/TLibCommon/TComRom.cpp	/^const Bool g_bEncDecTraceDisable = false;$/;"	v
g_bEncDecTraceEnable	source/Lib/TLibCommon/TComRom.cpp	/^const Bool g_bEncDecTraceEnable  = true;$/;"	v
g_bJustDoIt	source/Lib/TLibCommon/TComRom.cpp	/^Bool   g_bJustDoIt = false;$/;"	v
g_chroma422IntraAngleMappingTable	source/Lib/TLibCommon/TComRom.cpp	/^const UChar g_chroma422IntraAngleMappingTable[NUM_INTRA_MODE] =$/;"	v
g_debugCounter	source/Lib/TLibCommon/Debug.cpp	/^UInt  g_debugCounter  = 0;$/;"	v
g_hTrace	source/Lib/TLibCommon/TComRom.cpp	/^FILE*  g_hTrace = NULL; \/\/ Set to NULL to open up a file. Set to stdout to use the current output$/;"	v
g_invQuantScales	source/Lib/TLibCommon/TComRom.cpp	/^const Int g_invQuantScales[SCALING_LIST_REM_NUM] =$/;"	v
g_nSymbolCounter	source/Lib/TLibCommon/TComRom.cpp	/^UInt64 g_nSymbolCounter = 0;$/;"	v
g_quantInterDefault8x8	source/Lib/TLibCommon/TComRom.cpp	/^const Int g_quantInterDefault8x8[8*8] =$/;"	v
g_quantIntraDefault8x8	source/Lib/TLibCommon/TComRom.cpp	/^const Int g_quantIntraDefault8x8[8*8] =$/;"	v
g_quantScales	source/Lib/TLibCommon/TComRom.cpp	/^const Int g_quantScales[SCALING_LIST_REM_NUM] =$/;"	v
g_quantTSDefault4x4	source/Lib/TLibCommon/TComRom.cpp	/^const Int g_quantTSDefault4x4[4*4] =$/;"	v
g_scalingListSize	source/Lib/TLibCommon/TComRom.cpp	/^const UInt g_scalingListSize   [SCALING_LIST_SIZE_NUM] = {16,64,256,1024};$/;"	v
g_scalingListSizeX	source/Lib/TLibCommon/TComRom.cpp	/^const UInt g_scalingListSizeX  [SCALING_LIST_SIZE_NUM] = { 4, 8, 16,  32};$/;"	v
g_scanOrder	source/Lib/TLibCommon/TComRom.cpp	/^UInt* g_scanOrder[SCAN_NUMBER_OF_GROUP_TYPES][SCAN_NUMBER_OF_TYPES][ MAX_CU_DEPTH ][ MAX_CU_DEPTH ];$/;"	v
g_transformMatrixShift	source/Lib/TLibCommon/TComRom.h	/^static const Int g_transformMatrixShift[TRANSFORM_NUMBER_OF_DIRECTIONS] = {  6, 6 };$/;"	v
g_transformMatrixShift	source/Lib/TLibCommon/TComRom.h	/^static const Int g_transformMatrixShift[TRANSFORM_NUMBER_OF_DIRECTIONS] = { 14, 6 };$/;"	v
g_uiGroupIdx	source/Lib/TLibCommon/TComRom.cpp	/^const UInt g_uiGroupIdx[ MAX_TU_SIZE ]   = {0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9};$/;"	v
g_uiMaxCpbSize	source/App/TAppEncoder/TAppEncCfg.cpp	/^UInt g_uiMaxCpbSize[2][21] =$/;"	v
g_uiMinInGroup	source/Lib/TLibCommon/TComRom.cpp	/^const UInt g_uiMinInGroup[ LAST_SIGNIFICANT_GROUPS ] = {0,1,2,3,4,6,8,12,16,24};$/;"	v
gaussianLUT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const int8_t gaussianLUT[2048] =$/;"	v	file:
generalIntraConstraintFlag	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     generalIntraConstraintFlag;$/;"	m	struct:ProfileFeatures
generalIntraConstraintFlag	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool                     generalIntraConstraintFlag;$/;"	m	struct:ProfileFeatures
generalLowerBitRateConstraint	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 generalLowerBitRateConstraint;$/;"	m	struct:ProfileFeatures
generalLowerBitRateConstraint	source/Lib/TLibDecoder/TDecConformance.h	/^  TRISTATE                 generalLowerBitRateConstraint;$/;"	m	struct:ProfileFeatures
generalOnePictureOnlyConstraintFlag	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Bool                     generalOnePictureOnlyConstraintFlag;$/;"	m	struct:ProfileFeatures
generalOnePictureOnlyConstraintFlag	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool                     generalOnePictureOnlyConstraintFlag;$/;"	m	struct:ProfileFeatures
generalRExtToolsEnabled	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  TRISTATE                 generalRExtToolsEnabled;$/;"	m	struct:ProfileFeatures
generalRExtToolsEnabled	source/Lib/TLibDecoder/TDecConformance.h	/^  TRISTATE                 generalRExtToolsEnabled;$/;"	m	struct:ProfileFeatures
generatePPS_RBSP	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::generatePPS_RBSP(TComBitIf* rbsp, const TComPPS *pps)$/;"	f	class:TEncGOP
generateSPS_RBSP	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::generateSPS_RBSP(TComBitIf* rbsp, const TComSPS *sps)$/;"	f	class:TEncGOP
generateVPS_RBSP	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::generateVPS_RBSP(TComBitIf* rbsp, const TComVPS *vps)$/;"	f	class:TEncGOP
get	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  ContextModel& get( UInt uiZ, UInt uiY, UInt uiX )$/;"	f	class:ContextModel3DBuffer
get	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  ContextModel* get( UInt uiZ )$/;"	f	class:ContextModel3DBuffer
get	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  ContextModel* get( UInt uiZ, UInt uiY )$/;"	f	class:ContextModel3DBuffer
get	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  T& get(UInt x, UInt y)$/;"	f	struct:Array2D
get	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  const T& get(UInt x, UInt y) const$/;"	f	struct:Array2D
getAMVPInfo	source/Lib/TLibCommon/TComMotionInfo.h	/^  AMVPInfo* getAMVPInfo () { return &m_cAMVPInfo; }$/;"	f	class:TComCUMvField
getAQLayer	source/Lib/TLibEncoder/TEncPic.h	/^  TEncPicQPAdaptationLayer* getAQLayer( UInt uiDepth )  { return &m_acAQLayer[uiDepth]; }$/;"	f	class:TEncPic
getAQPartHeight	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                   getAQPartHeight()       { return m_uiAQPartHeight;      }$/;"	f	class:TEncPicQPAdaptationLayer
getAQPartStride	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                   getAQPartStride()       { return m_uiNumAQPartInWidth;  }$/;"	f	class:TEncPicQPAdaptationLayer
getAQPartWidth	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                   getAQPartWidth()        { return m_uiAQPartWidth;       }$/;"	f	class:TEncPicQPAdaptationLayer
getAbsHor	source/Lib/TLibCommon/TComMv.h	/^  Int   getAbsHor () const { return abs( m_iHor );   }$/;"	f	class:TComMv
getAbsVer	source/Lib/TLibCommon/TComMv.h	/^  Int   getAbsVer () const { return abs( m_iVer );   }$/;"	f	class:TComMv
getAccessUnitDelimiter	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getAccessUnitDelimiter() const  { return m_AccessUnitDelimiter; }$/;"	f	class:TEncCfg
getActiveParameterSetsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getActiveParameterSetsSEIEnabled ()                   { return m_activeParameterSetsSEIEnabled; }$/;"	f	class:TEncCfg
getActiveSPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComSPS* getActiveSPS()const { return m_spsMap.getPS(m_activeSPSId); };$/;"	f	class:ParameterSetManager
getActiveVPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComVPS* getActiveVPS()const { return m_vpsMap.getPS(m_activeVPSId); };$/;"	f	class:ParameterSetManager
getActivity	source/Lib/TLibEncoder/TEncPic.h	/^  Double getActivity()           { return m_dActivity; }$/;"	f	class:TEncQPAdaptationUnit
getAdaptiveBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int    getAdaptiveBits()              { return m_adaptiveBit;  }$/;"	f	class:TEncRCSeq
getAddr	source/Lib/TLibCommon/TComPicYuv.h	/^  Pel*          getAddr           (const ComponentID ch)       { return  m_piPicOrg[ch];   }$/;"	f	class:TComPicYuv
getAddr	source/Lib/TLibCommon/TComPicYuv.h	/^  Pel*          getAddr           (const ComponentID ch, const Int ctuRSAddr )       { return m_piPicOrg[ch] + m_ctuOffsetInBuffer[ch==0?0:1][ ctuRSAddr ]; }$/;"	f	class:TComPicYuv
getAddr	source/Lib/TLibCommon/TComPicYuv.h	/^  Pel*          getAddr           (const ComponentID ch, const Int ctuRSAddr, const Int uiAbsZorderIdx )$/;"	f	class:TComPicYuv
getAddr	source/Lib/TLibCommon/TComPicYuv.h	/^  const Pel*    getAddr           (const ComponentID ch) const { return  m_piPicOrg[ch];   }$/;"	f	class:TComPicYuv
getAddr	source/Lib/TLibCommon/TComPicYuv.h	/^  const Pel*    getAddr           (const ComponentID ch, const Int ctuRSAddr ) const { return m_piPicOrg[ch] + m_ctuOffsetInBuffer[ch==0?0:1][ ctuRSAddr ]; }$/;"	f	class:TComPicYuv
getAddr	source/Lib/TLibCommon/TComPicYuv.h	/^  const Pel*    getAddr           (const ComponentID ch, const Int ctuRSAddr, const Int uiAbsZorderIdx ) const$/;"	f	class:TComPicYuv
getAddr	source/Lib/TLibCommon/TComYuv.h	/^  Pel*         getAddr                    (const ComponentID id)                    { return m_apiBuf[id]; }$/;"	f	class:TComYuv
getAddr	source/Lib/TLibCommon/TComYuv.h	/^  Pel*         getAddr                    (const ComponentID id, const UInt iTransUnitIdx, const UInt iBlkSizeForComponent)$/;"	f	class:TComYuv
getAddr	source/Lib/TLibCommon/TComYuv.h	/^  Pel*         getAddr                    (const ComponentID id, const UInt uiPartUnitIdx)$/;"	f	class:TComYuv
getAddr	source/Lib/TLibCommon/TComYuv.h	/^  const Pel*   getAddr                    (const ComponentID id) const              { return m_apiBuf[id]; }$/;"	f	class:TComYuv
getAddr	source/Lib/TLibCommon/TComYuv.h	/^  const Pel*   getAddr                    (const ComponentID id, const UInt iTransUnitIdx, const UInt iBlkSizeForComponent) const$/;"	f	class:TComYuv
getAddr	source/Lib/TLibCommon/TComYuv.h	/^  const Pel*   getAddr                    (const ComponentID id, const UInt uiPartUnitIdx) const$/;"	f	class:TComYuv
getAddrPix	source/Lib/TLibCommon/TComYuv.h	/^  Pel*         getAddrPix                 (const ComponentID id, const UInt iPixX, const UInt iPixY )       { return m_apiBuf[id] + iPixY * getStride(id) + iPixX; }$/;"	f	class:TComYuv
getAddrPix	source/Lib/TLibCommon/TComYuv.h	/^  const Pel*   getAddrPix                 (const ComponentID id, const UInt iPixX, const UInt iPixY ) const { return m_apiBuf[id] + iPixY * getStride(id) + iPixX; }$/;"	f	class:TComYuv
getAllowedChromaDir	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getAllowedChromaDir( UInt uiAbsPartIdx, UInt uiModeList[NUM_CHROMA_MODE] ) const$/;"	f	class:TComDataCU
getAlphaUpdate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getAlphaUpdate()               { return m_alphaUpdate; }$/;"	f	class:TEncRCSeq
getAmbientViewingEnvironmentSEIAmbientLightX	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort getAmbientViewingEnvironmentSEIAmbientLightX()              { return m_aveSEIAmbientLightX; }$/;"	f	class:TEncCfg
getAmbientViewingEnvironmentSEIAmbientLightY	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort getAmbientViewingEnvironmentSEIAmbientLightY()              { return m_aveSEIAmbientLightY; }$/;"	f	class:TEncCfg
getAmbientViewingEnvironmentSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getAmbientViewingEnvironmentSEIEnabled ()                    { return m_aveSEIEnabled; }$/;"	f	class:TEncCfg
getAmbientViewingEnvironmentSEIIlluminance	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getAmbientViewingEnvironmentSEIIlluminance()                 { return m_aveSEIAmbientIlluminance; }$/;"	f	class:TEncCfg
getAnalyzeAllData	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzeAllData() { return m_gcAnalyzeAll; }$/;"	f	class:TEncGOP
getAnalyzeBData	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzeBData()   { return m_gcAnalyzeB; }$/;"	f	class:TEncGOP
getAnalyzeIData	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzeIData()   { return m_gcAnalyzeI; }$/;"	f	class:TEncGOP
getAnalyzePData	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze& getAnalyzePData()   { return m_gcAnalyzeP; }$/;"	f	class:TEncGOP
getAnnotatedRegionSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::string &getAnnotatedRegionSEIFileRoot() const           { return m_arSEIFileRoot; }$/;"	f	class:TEncCfg
getApcSlicePilot	source/Lib/TLibDecoder/TDecTop.h	/^  TComSlice* getApcSlicePilot() { return m_apcSlicePilot; }$/;"	f	class:TDecTop
getArlCoeff	source/Lib/TLibCommon/TComDataCU.h	/^  TCoeff*       getArlCoeff                   ( ComponentID component )                                    { return m_pcArlCoeff[component];            }$/;"	f	class:TComDataCU
getAspectRatioIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int               getAspectRatioIdc() const                              { return m_aspectRatioIdc;                       }$/;"	f	class:TComVUI
getAspectRatioIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getAspectRatioIdc()                                   { return m_aspectRatioIdc; }$/;"	f	class:TEncCfg
getAspectRatioInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getAspectRatioInfoPresentFlag() const                  { return m_aspectRatioInfoPresentFlag;           }$/;"	f	class:TComVUI
getAspectRatioInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getAspectRatioInfoPresentFlag()                       { return m_aspectRatioInfoPresentFlag; }$/;"	f	class:TEncCfg
getAssociatedIRAPPOC	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getAssociatedIRAPPOC() const                           { return m_iAssociatedIRAP;                                     }$/;"	f	class:TComSlice
getAssociatedIRAPType	source/Lib/TLibCommon/TComSlice.h	/^  NalUnitType                 getAssociatedIRAPType() const                          { return m_iAssociatedIRAPType;                                 }$/;"	f	class:TComSlice
getAverageBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getAverageBits()                 { return m_averageBits; }$/;"	f	class:TEncRCSeq
getAvgActivity	source/Lib/TLibEncoder/TEncPic.h	/^  Double                 getAvgActivity()        { return m_dAvgActivity;        }$/;"	f	class:TEncPicQPAdaptationLayer
getBaseQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getBaseQP                       () const { return  m_iQP; } \/\/ public should use getQPForPicture.$/;"	f	class:TEncCfg
getBeta	source/Lib/TLibCommon/TComLoopFilter.h	/^  static Int getBeta( Int qp )$/;"	f	class:TComLoopFilter
getBetaUpdate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getBetaUpdate()                { return m_betaUpdate; }$/;"	f	class:TEncRCSeq
getBinCABAC	source/Lib/TLibEncoder/TEncTop.h	/^  TEncBinCABAC*           getBinCABAC           () { return  &m_cBinCoderCABAC;       }$/;"	f	class:TEncTop
getBinCountingEnableFlag	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  Bool  getBinCountingEnableFlag  ()              { return m_binCountIncrement != 0;     }$/;"	f	class:TEncBinCABAC
getBinsCoded	source/Lib/TLibCommon/ContextModel.h	/^  UInt getBinsCoded()           { return m_binsCoded;   }$/;"	f	class:ContextModel
getBinsCoded	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  UInt  getBinsCoded              ()              { return m_uiBinsCoded;                }$/;"	f	class:TEncBinCABAC
getBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getBitDepth(ChannelType type) const                                             { return m_bitDepths.recon[type];                                      }$/;"	f	class:TComSPS
getBitDepthConstraint	source/Lib/TLibCommon/TComSlice.h	/^  UInt          getBitDepthConstraint() const               { return m_bitDepthConstraintValue;     }$/;"	f	class:ProfileTierLevel
getBitDepthConstraintValue	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt         getBitDepthConstraintValue() const                    { return m_bitDepthConstraintValue; }$/;"	f	class:TEncCfg
getBitDepthY	source/Lib/TLibCommon/TComPattern.h	/^  Int   getBitDepthY() const      { return m_bitDepth;       }$/;"	f	class:TComPattern
getBitDepths	source/Lib/TLibCommon/TComSlice.h	/^  const BitDepths&       getBitDepths() const                                                            { return m_bitDepths;                                                  }$/;"	f	class:TComSPS
getBitRateScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getBitRateScale( ) const                                                   { return m_bitRateScale;                                     }$/;"	f	class:TComHRD
getBitRateValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getBitRateValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl ) const         { return m_HRD[layer].bitRateValueMinus1[cpbcnt][nalOrVcl];  }$/;"	f	class:TComHRD
getBitRatio	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getBitRatio( Int idx )           { assert( idx<m_GOPSize); return m_bitsRatio[idx]; }$/;"	f	class:TEncRCSeq
getBitRatio	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int* getBitRatio()                    { return m_bitsRatio; }$/;"	f	class:TEncRCSeq
getBits	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Double  getBits()                   const { return m_runningTotal.bits;   }$/;"	f	class:TEncAnalyze
getBitsCoded	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getBitsCoded()                                     { return m_targetBits - m_estHeaderBits - m_bitsLeft; }$/;"	f	class:TEncRCPic
getBitsForPOC	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getBitsForPOC() const                                                           { return m_uiBitsForPOC;                                               }$/;"	f	class:TComSPS
getBitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getBitsLeft()                                      { return m_bitsLeft; }$/;"	f	class:TEncRCPic
getBitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getBitsLeft()              { return m_bitsLeft; }$/;"	f	class:TEncRCGOP
getBitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int64  getBitsLeft()                  { return m_bitsLeft; }$/;"	f	class:TEncRCSeq
getBitsOfVectorWithPredictor	source/Lib/TLibCommon/TComRdCost.h	/^  UInt getBitsOfVectorWithPredictor( const Int x, const Int y )$/;"	f	class:TComRdCost
getBitstream	source/Lib/TLibDecoder/NALread.h	/^          TComInputBitstream &getBitstream()       { return m_Bitstream; }$/;"	f	class:InputNALUnit
getBitstream	source/Lib/TLibDecoder/NALread.h	/^    const TComInputBitstream &getBitstream() const { return m_Bitstream; }$/;"	f	class:InputNALUnit
getBitstream	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  TComInputBitstream* getBitstream() { return m_pcBitstream; }$/;"	f	class:SyntaxElementParser
getBitstreamRestrictionFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getBitstreamRestrictionFlag() const                    { return m_bitstreamRestrictionFlag;             }$/;"	f	class:TComVUI
getBitstreamRestrictionFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getBitstreamRestrictionFlag()                         { return m_bitstreamRestrictionFlag; }$/;"	f	class:TEncCfg
getBlkStats	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::getBlkStats(const ComponentID compIdx, const Int channelBitDepth, SAOStatData* statsDataTypes$/;"	f	class:TEncSampleAdaptiveOffset
getBottomEdgePosInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      getBottomEdgePosInCtus () const              { return m_bottomEdgePosInCtus; }$/;"	f	class:TComTile
getBuf	source/Lib/TLibCommon/TComPicYuv.h	/^  Pel*          getBuf            (const ComponentID ch)       { return  m_apiPicBuf[ch];   }$/;"	f	class:TComPicYuv
getBuf	source/Lib/TLibCommon/TComPicYuv.h	/^  const Pel*    getBuf            (const ComponentID ch) const { return  m_apiPicBuf[ch];   }$/;"	f	class:TComPicYuv
getBufferingPeriodSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getBufferingPeriodSEIEnabled() const                         { return m_bufferingPeriodSEIEnabled; }$/;"	f	class:TEncCfg
getBufferingRate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  UInt       getBufferingRate()         { return m_bufferingRate;  }$/;"	f	class:TEncRateCtrl
getByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  UInt  getByteLocation              ( )                     { return m_fifo_idx                    ; }$/;"	f	class:TComInputBitstream
getByteStream	source/Lib/TLibCommon/TComBitStream.cpp	/^UChar* TComOutputBitstream::getByteStream() const$/;"	f	class:TComOutputBitstream
getByteStreamLength	source/Lib/TLibCommon/TComBitStream.cpp	/^UInt TComOutputBitstream::getByteStreamLength()$/;"	f	class:TComOutputBitstream
getCBFContextOffset	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt getCBFContextOffset (const ComponentID component)$/;"	f
getCLLSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getCLLSEIEnabled()                                           { return m_cllSEIEnabled; }$/;"	f	class:TEncCfg
getCLLSEIMaxContentLightLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort  getCLLSEIMaxContentLightLevel()                            { return m_cllSEIMaxContentLevel; }$/;"	f	class:TEncCfg
getCLLSEIMaxPicAvgLightLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort  getCLLSEIMaxPicAvgLightLevel()                             { return m_cllSEIMaxPicAvgLevel; }$/;"	f	class:TEncCfg
getCU	source/Lib/TLibCommon/TComTU.h	/^    TComDataCU *getCU()                                              { return mpcCU; }$/;"	f	class:TComTU
getCU	source/Lib/TLibCommon/TComTU.h	/^    const TComDataCU *getCU()                                  const { return mpcCU; }$/;"	f	class:TComTU
getCUDepth	source/Lib/TLibCommon/TComTU.h	/^    UInt getCUDepth()                                          const { return mCuDepth; }$/;"	f	class:TComTU
getCUEncoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncCu*        getCUEncoder() { return m_pcCuEncoder; }                        \/\/\/< CU encoder$/;"	f	class:TEncSlice
getCUMvField	source/Lib/TLibCommon/TComDataCU.h	/^        TComCUMvField* getCUMvField           ( RefPicList e )                                             { return &m_acCUMvField[e];                  }$/;"	f	class:TComDataCU
getCUMvField	source/Lib/TLibCommon/TComDataCU.h	/^  const TComCUMvField* getCUMvField           ( RefPicList e ) const                                       { return &m_acCUMvField[e];                  }$/;"	f	class:TComDataCU
getCUMvField	source/Lib/TLibCommon/TComPicSym.h	/^    const TComCUMvField* getCUMvField ( RefPicList e )  const { return &m_CUMvField[e];                  }$/;"	f	struct:TComPicSym::DPBPerCtuData
getCUPelX	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          getCUPelX                     ( ) const                                                    { return m_uiCUPelX;                         }$/;"	f	class:TComDataCU
getCUPelY	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          getCUPelY                     ( ) const                                                    { return m_uiCUPelY;                         }$/;"	f	class:TComDataCU
getCUTransquantBypass	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          getCUTransquantBypass         ( UInt uiIdx ) const                                         { return m_CUTransquantBypass[uiIdx];        }$/;"	f	class:TComDataCU
getCUTransquantBypass	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         getCUTransquantBypass         ( )                                                          { return m_CUTransquantBypass;               }$/;"	f	class:TComDataCU
getCUTransquantBypassFlagForceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getCUTransquantBypassFlagForceValue()                 { return m_CUTransquantBypassFlagForce; }$/;"	f	class:TEncCfg
getCabacBypassAlignmentEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getCabacBypassAlignmentEnabledFlag() const                                      { return m_cabacBypassAlignmentEnabledFlag;      }$/;"	f	class:TComSPSRExt
getCabacBypassAlignmentEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getCabacBypassAlignmentEnabledFlag              ()       const      { return m_cabacBypassAlignmentEnabledFlag;  }$/;"	f	class:TEncCfg
getCabacInitFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getCabacInitFlag()                                     { return m_cabacInitFlag;                                       } \/\/!< get CABAC initial flag$/;"	f	class:TComSlice
getCabacInitPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getCabacInitPresentFlag() const                                  { return m_cabacInitPresentFlag;                }$/;"	f	class:TComPPS
getCabacZeroWordPaddingEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getCabacZeroWordPaddingEnabled()           const { return m_cabacZeroWordPaddingEnabled;  }$/;"	f	class:TEncCfg
getCavlcCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncCavlc*              getCavlcCoder         () { return  &m_cCavlcCoder;          }$/;"	f	class:TEncTop
getCbf	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getCbf                        ( UInt uiIdx, ComponentID eType ) const                      { return m_puhCbf[eType][uiIdx];             }$/;"	f	class:TComDataCU
getCbf	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getCbf                        ( UInt uiIdx, ComponentID eType, UInt uiTrDepth ) const      { return ( ( getCbf( uiIdx, eType ) >> uiTrDepth ) & 0x1 ); }$/;"	f	class:TComDataCU
getCbf	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getCbf                        ( ComponentID eType )                                        { return m_puhCbf[eType];                    }$/;"	f	class:TComDataCU
getCbrFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getCbrFlag( Int layer, Int cpbcnt, Int nalOrVcl ) const                    { return m_HRD[layer].cbrFlag[cpbcnt][nalOrVcl];             }$/;"	f	class:TComHRD
getCcvSEIAvgLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIAvgLuminanceValue  ()                            { return m_ccvSEIAvgLuminanceValue;  }$/;"	f	class:TEncCfg
getCcvSEIAvgLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIAvgLuminanceValuePresentFlag()                   { return m_ccvSEIAvgLuminanceValuePresentFlag; }$/;"	f	class:TEncCfg
getCcvSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEICancelFlag()                                     { return m_ccvSEICancelFlag; }$/;"	f	class:TEncCfg
getCcvSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIEnabled()                                        { return m_ccvSEIEnabled; }$/;"	f	class:TEncCfg
getCcvSEIMaxLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIMaxLuminanceValue  ()                            { return m_ccvSEIMaxLuminanceValue;  }$/;"	f	class:TEncCfg
getCcvSEIMaxLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIMaxLuminanceValuePresentFlag()                   { return m_ccvSEIMaxLuminanceValuePresentFlag; }$/;"	f	class:TEncCfg
getCcvSEIMinLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIMinLuminanceValue  ()                            { return m_ccvSEIMinLuminanceValue;  }$/;"	f	class:TEncCfg
getCcvSEIMinLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIMinLuminanceValuePresentFlag()                   { return m_ccvSEIMinLuminanceValuePresentFlag; }$/;"	f	class:TEncCfg
getCcvSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIPersistenceFlag()                                { return m_ccvSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getCcvSEIPrimariesPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCcvSEIPrimariesPresentFlag()                           { return m_ccvSEIPrimariesPresentFlag; }$/;"	f	class:TEncCfg
getCcvSEIPrimariesX	source/Lib/TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIPrimariesX(Int index)                            { return m_ccvSEIPrimariesX[index]; }$/;"	f	class:TEncCfg
getCcvSEIPrimariesY	source/Lib/TLibEncoder/TEncCfg.h	/^  Double   getCcvSEIPrimariesY(Int index)                            { return m_ccvSEIPrimariesY[index]; }$/;"	f	class:TEncCfg
getChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getChangedFlag(Int psId) const$/;"	f	class:ParameterSetMap
getChannelTypeScaleX	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt        getChannelTypeScaleX      (const ChannelType id, const ChromaFormat fmt) { return (isLuma(id) || (fmt==CHROMA_444)) ? 0 : 1;                  }$/;"	f
getChannelTypeScaleX	source/Lib/TLibCommon/TComPicYuv.h	/^  UInt          getChannelTypeScaleX(const ChannelType id) const { return ::getChannelTypeScaleX(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getChannelTypeScaleY	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt        getChannelTypeScaleY      (const ChannelType id, const ChromaFormat fmt) { return (isLuma(id) || (fmt!=CHROMA_420)) ? 0 : 1;                  }$/;"	f
getChannelTypeScaleY	source/Lib/TLibCommon/TComPicYuv.h	/^  UInt          getChannelTypeScaleY(const ChannelType id) const { return ::getChannelTypeScaleY(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getCheckLDC	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getCheckLDC() const                                    { return m_bCheckLDC;                                           }$/;"	f	class:TComSlice
getCheckLTMSBPresent	source/Lib/TLibCommon/TComPic.h	/^  Bool          getCheckLTMSBPresent     () { return m_bCheckLTMSB;}$/;"	f	class:TComPic
getCheckLTMSBPresent	source/Lib/TLibCommon/TComSlice.cpp	/^Bool TComReferencePictureSet::getCheckLTMSBPresent(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getChromaFormat	source/Lib/TLibCommon/TComPic.h	/^  ChromaFormat  getChromaFormat() const                           { return m_apcPicYuv[PIC_YUV_REC]->getChromaFormat(); }$/;"	f	class:TComPic
getChromaFormat	source/Lib/TLibCommon/TComPicYuv.h	/^  ChromaFormat  getChromaFormat   ()                     const { return m_chromaFormatIDC; }$/;"	f	class:TComPicYuv
getChromaFormat	source/Lib/TLibCommon/TComPrediction.h	/^  ChromaFormat getChromaFormat() const { return m_cYuvPredTemp.getChromaFormat(); }$/;"	f	class:TComPrediction
getChromaFormat	source/Lib/TLibCommon/TComYuv.h	/^  ChromaFormat getChromaFormat            ()                     const { return m_chromaFormatIDC; }$/;"	f	class:TComYuv
getChromaFormatConstraint	source/Lib/TLibCommon/TComSlice.h	/^  ChromaFormat  getChromaFormatConstraint() const           { return m_chromaFormatConstraintValue; }$/;"	f	class:ProfileTierLevel
getChromaFormatConstraintValue	source/Lib/TLibEncoder/TEncCfg.h	/^  ChromaFormat getChromaFormatConstraintValue() const                { return m_chromaFormatConstraintValue; }$/;"	f	class:TEncCfg
getChromaFormatIdc	source/Lib/TLibCommon/TComSlice.h	/^  ChromaFormat           getChromaFormatIdc () const                                                     { return m_chromaFormatIdc;                                            }$/;"	f	class:TComSPS
getChromaFormatIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  ChromaFormat  getChromaFormatIdc          ( )              { return m_chromaFormatIDC; }$/;"	f	class:TEncCfg
getChromaLocInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getChromaLocInfoPresentFlag() const                    { return m_chromaLocInfoPresentFlag;             }$/;"	f	class:TComVUI
getChromaLocInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getChromaLocInfoPresentFlag()                         { return m_chromaLocInfoPresentFlag; }$/;"	f	class:TEncCfg
getChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getChromaQpAdj                ( Int idx ) const                                            { return m_ChromaQpAdj[idx];                 } \/\/\/< When value = 0, cu_chroma_qp_offset_flag=0; when value>0, indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=value-1$/;"	f	class:TComDataCU
getChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getChromaQpAdj                ( )                                                          { return m_ChromaQpAdj;                      } \/\/\/< array of chroma QP adjustments (indexed). when value = 0, cu_chroma_qp_offset_flag=0; when value>0, indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=value-1$/;"	f	class:TComDataCU
getChromaQpOffsetListEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getChromaQpOffsetListEnabledFlag() const                         { return getChromaQpOffsetListLen()>0;            }$/;"	f	class:TComPPSRExt
getChromaQpOffsetListEntry	source/Lib/TLibCommon/TComSlice.h	/^  const ChromaQpAdj&     getChromaQpOffsetListEntry( Int cuChromaQpOffsetIdxPlus1 ) const$/;"	f	class:TComPPSRExt
getChromaQpOffsetListLen	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getChromaQpOffsetListLen() const                                 { return m_chromaQpOffsetListLen;                 }$/;"	f	class:TComPPSRExt
getChromaResamplingFilterHintEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getChromaResamplingFilterHintEnabled()                { return m_chromaResamplingFilterHintEnabled;}$/;"	f	class:TEncCfg
getChromaResamplingHorFilterIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getChromaResamplingHorFilterIdc()                     { return m_chromaResamplingHorFilterIdc;}$/;"	f	class:TEncCfg
getChromaResamplingVerFilterIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getChromaResamplingVerFilterIdc()                     { return m_chromaResamplingVerFilterIdc;}$/;"	f	class:TEncCfg
getChromaSampleLocTypeBottomField	source/Lib/TLibCommon/TComSlice.h	/^  Int               getChromaSampleLocTypeBottomField() const              { return m_chromaSampleLocTypeBottomField;       }$/;"	f	class:TComVUI
getChromaSampleLocTypeBottomField	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getChromaSampleLocTypeBottomField()                   { return m_chromaSampleLocTypeBottomField; }$/;"	f	class:TEncCfg
getChromaSampleLocTypeTopField	source/Lib/TLibCommon/TComSlice.h	/^  Int               getChromaSampleLocTypeTopField() const                 { return m_chromaSampleLocTypeTopField;          }$/;"	f	class:TComVUI
getChromaSampleLocTypeTopField	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getChromaSampleLocTypeTopField()                      { return m_chromaSampleLocTypeTopField; }$/;"	f	class:TEncCfg
getChromaWeight	source/Lib/TLibCommon/TComRdCost.h	/^  Double  getChromaWeight () { return ((m_distortionWeight[COMPONENT_Cb] + m_distortionWeight[COMPONENT_Cr]) \/ 2.0); }$/;"	f	class:TComRdCost
getChromasCorrespondingPULumaIdx	source/Lib/TLibCommon/TComChromaFormat.h	/^getChromasCorrespondingPULumaIdx(const UInt lumaZOrderIdxInCtu,$/;"	f
getClipForBiPredMeEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getClipForBiPredMeEnabled          () const { return m_bClipForBiPredMeEnabled; }$/;"	f	class:TEncCfg
getCmpSEICmpCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCmpSEICmpCancelFlag()                                  { return m_cmpSEICmpCancelFlag; }$/;"	f	class:TEncCfg
getCmpSEICmpPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCmpSEICmpPersistenceFlag()                             { return m_cmpSEICmpPersistenceFlag; }$/;"	f	class:TEncCfg
getCmpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getCmpSEIEnabled()                                        { return m_cmpSEIEnabled; }$/;"	f	class:TEncCfg
getCodeChromaQpAdjFlag	source/Lib/TLibEncoder/TEncCu.h	/^  Bool getCodeChromaQpAdjFlag() { return m_stillToCodeChromaQpOffsetFlag; }$/;"	f	class:TEncCu
getCodedChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  SChar         getCodedChromaQpAdj           ( ) const                                                    { return m_codedChromaQpAdj;                 }$/;"	f	class:TComDataCU
getCodedQP	source/Lib/TLibCommon/TComDataCU.h	/^  SChar         getCodedQP                    ( ) const                                                    { return m_codedQP;                          }$/;"	f	class:TComDataCU
getCoefScanIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCoefScanIdx(const UInt uiAbsPartIdx, const UInt uiWidth, const UInt uiHeight, const ComponentID compID) const$/;"	f	class:TComDataCU
getCoeff	source/Lib/TLibCommon/TComDataCU.h	/^  TCoeff*       getCoeff                      ( ComponentID component )                                    { return m_pcTrCoeff[component];             }$/;"	f	class:TComDataCU
getCoefficientOffset	source/Lib/TLibCommon/TComTU.h	/^    UInt getCoefficientOffset(const ComponentID compID)        const { return mOffsets[compID]; }$/;"	f	class:TComTU
getColFromL0Flag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getColFromL0Flag() const                               { return m_colFromL0Flag;                                       }$/;"	f	class:TComSlice
getColRefIdx	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getColRefIdx() const                                   { return m_colRefIdx;                                           }$/;"	f	class:TComSlice
getColourDescriptionPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getColourDescriptionPresentFlag() const                { return m_colourDescriptionPresentFlag;         }$/;"	f	class:TComVUI
getColourDescriptionPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getColourDescriptionPresentFlag()                     { return m_colourDescriptionPresentFlag; }$/;"	f	class:TEncCfg
getColourPrimaries	source/Lib/TLibCommon/TComSlice.h	/^  Int               getColourPrimaries() const                             { return m_colourPrimaries;                      }$/;"	f	class:TComVUI
getColourPrimaries	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getColourPrimaries()                                  { return m_colourPrimaries; }$/;"	f	class:TEncCfg
getColourRemapInfoSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::string &getColourRemapInfoSEIFileRoot() const           { return m_colourRemapSEIFileRoot; }$/;"	f	class:TEncCfg
getColumnWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getColumnWidth                 ( UInt columnIdx )            { return m_tileColumnWidth[columnIdx]; }$/;"	f	class:TEncCfg
getComponentScaleX	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt        getComponentScaleX        (const ComponentID id, const ChromaFormat fmt) { return getChannelTypeScaleX(toChannelType(id), fmt);               }$/;"	f
getComponentScaleX	source/Lib/TLibCommon/TComPic.h	/^  Int           getComponentScaleX(const ComponentID id) const    { return m_apcPicYuv[PIC_YUV_REC]->getComponentScaleX(id); }$/;"	f	class:TComPic
getComponentScaleX	source/Lib/TLibCommon/TComPicYuv.h	/^  UInt          getComponentScaleX(const ComponentID id) const { return ::getComponentScaleX(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getComponentScaleX	source/Lib/TLibCommon/TComYuv.h	/^  UInt         getComponentScaleX         (const ComponentID id) const { return ::getComponentScaleX(id, m_chromaFormatIDC); }$/;"	f	class:TComYuv
getComponentScaleY	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt        getComponentScaleY        (const ComponentID id, const ChromaFormat fmt) { return getChannelTypeScaleY(toChannelType(id), fmt);               }$/;"	f
getComponentScaleY	source/Lib/TLibCommon/TComPic.h	/^  Int           getComponentScaleY(const ComponentID id) const    { return m_apcPicYuv[PIC_YUV_REC]->getComponentScaleY(id); }$/;"	f	class:TComPic
getComponentScaleY	source/Lib/TLibCommon/TComPicYuv.h	/^  UInt          getComponentScaleY(const ComponentID id) const { return ::getComponentScaleY(id, m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getComponentScaleY	source/Lib/TLibCommon/TComYuv.h	/^  UInt         getComponentScaleY         (const ComponentID id) const { return ::getComponentScaleY(id, m_chromaFormatIDC); }$/;"	f	class:TComYuv
getConformanceWindow	source/Lib/TLibCommon/TComPic.h	/^  const Window& getConformanceWindow() const { return m_picSym.getSPS().getConformanceWindow(); }$/;"	f	class:TComPic
getConformanceWindow	source/Lib/TLibCommon/TComSlice.h	/^  Window&                getConformanceWindow()                                                          { return  m_conformanceWindow;                                         }$/;"	f	class:TComSPS
getConformanceWindow	source/Lib/TLibCommon/TComSlice.h	/^  const Window&          getConformanceWindow() const                                                    { return  m_conformanceWindow;                                         }$/;"	f	class:TComSPS
getConformanceWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Window   &getConformanceWindow()                           { return m_conformanceWindow; }$/;"	f	class:TEncCfg
getConstrainedIntraPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getConstrainedIntraPred() const                                  { return  m_bConstrainedIntraPred;              }$/;"	f	class:TComPPS
getContextSetIndex	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt getContextSetIndex (const ComponentID  component,$/;"	f
getCost	source/Lib/TLibCommon/TComRdCost.h	/^  Distortion getCost( UInt b )                 { return Distortion(( m_motionLambda * b ) \/ 65536.0); }$/;"	f	class:TComRdCost
getCostMode	source/Lib/TLibEncoder/TEncCfg.h	/^  CostMode     getCostMode( ) const                                  { return m_costMode; }$/;"	f	class:TEncCfg
getCostOfVectorWithPredictor	source/Lib/TLibCommon/TComRdCost.h	/^  Distortion getCostOfVectorWithPredictor( const Int x, const Int y )$/;"	f	class:TComRdCost
getCpbCntMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getCpbCntMinus1( Int layer ) const                                         { return m_HRD[layer].cpbCntMinus1;                          }$/;"	f	class:TComHRD
getCpbDpbDelaysPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getCpbDpbDelaysPresentFlag( ) const                      { return getNalHrdParametersPresentFlag() || getVclHrdParametersPresentFlag(); }$/;"	f	class:TComHRD
getCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getCpbRemovalDelayLengthMinus1( ) const                                    { return m_cpbRemovalDelayLengthMinus1;                      }$/;"	f	class:TComHRD
getCpbSaturationEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getCpbSaturationEnabled()                             { return m_RCCpbSaturationEnabled;}$/;"	f	class:TEncCfg
getCpbSaturationEnabled	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Bool       getCpbSaturationEnabled()  { return m_CpbSaturationEnabled;  }$/;"	f	class:TEncRateCtrl
getCpbSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt         getCpbSize             ()                             { return m_RCCpbSize;}$/;"	f	class:TEncCfg
getCpbSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  UInt       getCpbSize()               { return m_cpbSize;        }$/;"	f	class:TEncRateCtrl
getCpbSizeInBits	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    UInt64 getCpbSizeInBits()            const { return (m_pLevelTier!=0 && m_pProfile!=0) ? UInt64(m_pProfile->cpbVclFactor) * m_pLevelTier->maxCpb[m_tier?1:0] : UInt64(0); }$/;"	f	class:ProfileLevelTierFeatures
getCpbSizeInBits	source/Lib/TLibDecoder/TDecConformance.h	/^    UInt64 getCpbSizeInBits()            const { return (m_pLevelTier!=0 && m_pProfile!=0) ? UInt64(m_pProfile->cpbVclFactor) * m_pLevelTier->maxCpb[m_tier?1:0] : UInt64(0); }$/;"	f	class:ProfileLevelTierFeatures
getCpbSizeScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getCpbSizeScale( ) const                                                   { return m_cpbSizeScale;                                     }$/;"	f	class:TComHRD
getCpbSizeValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl ) const         { return m_HRD[layer].cpbSizeValue[cpbcnt][nalOrVcl];        }$/;"	f	class:TComHRD
getCpbState	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  UInt       getCpbState()              { return m_cpbState;       }$/;"	f	class:TEncRateCtrl
getCprmsPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getCprmsPresentFlag( UInt i ) const                  { return m_cprmsPresentFlag[ i ];                                  }$/;"	f	class:TComVPS
getCrossComponentPredictionAlpha	source/Lib/TLibCommon/TComDataCU.h	/^  SChar         getCrossComponentPredictionAlpha( UInt uiIdx, ComponentID compID )                         { return m_crossComponentPredictionAlpha[compID][uiIdx]; }$/;"	f	class:TComDataCU
getCrossComponentPredictionAlpha	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        getCrossComponentPredictionAlpha( ComponentID compID )                                     { return m_crossComponentPredictionAlpha[compID];        }$/;"	f	class:TComDataCU
getCrossComponentPredictionEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getCrossComponentPredictionEnabledFlag() const                   { return m_crossComponentPredictionEnabledFlag;   }$/;"	f	class:TComPPSRExt
getCrossComponentPredictionEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getCrossComponentPredictionEnabledFlag     ()                const { return m_crossComponentPredictionEnabledFlag;   }$/;"	f	class:TEncCfg
getCtu	source/Lib/TLibCommon/TComPic.h	/^  TComDataCU*   getCtu( UInt ctuRsAddr )           { return  m_picSym.getCtu( ctuRsAddr ); }$/;"	f	class:TComPic
getCtu	source/Lib/TLibCommon/TComPic.h	/^  const TComDataCU* getCtu( UInt ctuRsAddr ) const { return  m_picSym.getCtu( ctuRsAddr ); }$/;"	f	class:TComPic
getCtu	source/Lib/TLibCommon/TComPicSym.h	/^  TComDataCU*        getCtu( UInt ctuRsAddr )                              { return m_pictureCtuArray[ctuRsAddr];  }$/;"	f	class:TComPicSym
getCtu	source/Lib/TLibCommon/TComPicSym.h	/^  const TComDataCU*  getCtu( UInt ctuRsAddr ) const                        { return m_pictureCtuArray[ctuRsAddr];  }$/;"	f	class:TComPicSym
getCtuAbove	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuAbove                   ( )                                                          { return m_pCtuAbove;                        }$/;"	f	class:TComDataCU
getCtuAboveLeft	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuAboveLeft               ( )                                                          { return m_pCtuAboveLeft;                    }$/;"	f	class:TComDataCU
getCtuAboveRight	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuAboveRight              ( )                                                          { return m_pCtuAboveRight;                   }$/;"	f	class:TComDataCU
getCtuLeft	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   getCtuLeft                    ( )                                                          { return m_pCtuLeft;                         }$/;"	f	class:TComDataCU
getCtuRsAddr	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          getCtuRsAddr                  ( ) const                                                    { return m_ctuRsAddr;                        }$/;"	f	class:TComDataCU
getCtuRsAddr	source/Lib/TLibCommon/TComDataCU.h	/^  UInt&         getCtuRsAddr                  ( )                                                          { return m_ctuRsAddr;                        }$/;"	f	class:TComDataCU
getCtuRsToTsAddrMap	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getCtuRsToTsAddrMap( Int ctuRsAddr ) const            { return *(m_ctuRsToTsAddrMap + (ctuRsAddr>=m_numCtusInFrame ? m_numCtusInFrame : ctuRsAddr)); }$/;"	f	class:TComPicSym
getCtuTsToRsAddrMap	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getCtuTsToRsAddrMap( Int ctuTsAddr ) const            { return *(m_ctuTsToRsAddrMap + (ctuTsAddr>=m_numCtusInFrame ? m_numCtusInFrame : ctuTsAddr)); }$/;"	f	class:TComPicSym
getCtxInterDir	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxInterDir( UInt uiAbsPartIdx ) const$/;"	f	class:TComDataCU
getCtxQtCbf	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxQtCbf( TComTU &rTu, const ChannelType chType ) const$/;"	f	class:TComDataCU
getCtxSkipFlag	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxSkipFlag( UInt uiAbsPartIdx ) const$/;"	f	class:TComDataCU
getCtxSplitFlag	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getCtxSplitFlag( UInt uiAbsPartIdx, UInt uiDepth ) const$/;"	f	class:TComDataCU
getCuEncoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncCu*                 getCuEncoder          () { return  &m_cCuEncoder;           }$/;"	f	class:TEncTop
getCurrSliceIdx	source/Lib/TLibCommon/TComPic.h	/^  UInt          getCurrSliceIdx() const           { return m_uiCurrSliceIdx;                }$/;"	f	class:TComPic
getDPBPerCtuData	source/Lib/TLibCommon/TComPicSym.h	/^  DPBPerCtuData&       getDPBPerCtuData(UInt ctuRsAddr)                    { return m_dpbPerCtuData[ctuRsAddr]; }$/;"	f	class:TComPicSym
getDPBPerCtuData	source/Lib/TLibCommon/TComPicSym.h	/^  const DPBPerCtuData& getDPBPerCtuData(UInt ctuRsAddr) const              { return m_dpbPerCtuData[ctuRsAddr]; }$/;"	f	class:TComPicSym
getDeblockingFilterBetaOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getDeblockingFilterBetaOffsetDiv2()const               { return m_deblockingFilterBetaOffsetDiv2;                      }$/;"	f	class:TComSlice
getDeblockingFilterBetaOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getDeblockingFilterBetaOffsetDiv2() const                        { return m_deblockingFilterBetaOffsetDiv2;      } \/\/!< get beta offset for deblocking filter$/;"	f	class:TComPPS
getDeblockingFilterControlPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getDeblockingFilterControlPresentFlag() const                    { return m_deblockingFilterControlPresentFlag;  }$/;"	f	class:TComPPS
getDeblockingFilterDisable	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getDeblockingFilterDisable() const                     { return m_deblockingFilterDisable;                             }$/;"	f	class:TComSlice
getDeblockingFilterMetric	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getDeblockingFilterMetric       ()      { return m_deblockingFilterMetric; }$/;"	f	class:TEncCfg
getDeblockingFilterOverrideEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getDeblockingFilterOverrideEnabledFlag() const                   { return m_deblockingFilterOverrideEnabledFlag; }$/;"	f	class:TComPPS
getDeblockingFilterOverrideFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getDeblockingFilterOverrideFlag() const                { return m_deblockingFilterOverrideFlag;                        }$/;"	f	class:TComSlice
getDeblockingFilterTcOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getDeblockingFilterTcOffsetDiv2() const                { return m_deblockingFilterTcOffsetDiv2;                        }$/;"	f	class:TComSlice
getDeblockingFilterTcOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getDeblockingFilterTcOffsetDiv2() const                          { return m_deblockingFilterTcOffsetDiv2;        } \/\/!< get tc offset for deblocking filter$/;"	f	class:TComPPS
getDecimalWidth	source/Lib/TLibCommon/Debug.cpp	/^UInt getDecimalWidth(const Double value)$/;"	f
getDecodedPictureHashSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  HashType getDecodedPictureHashSEIType() const                      { return m_decodedPictureHashSEIType; }$/;"	f	class:TEncCfg
getDecodingRefreshType	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getDecodingRefreshType          ()      { return  m_uiDecodingRefreshType; }$/;"	f	class:TEncCfg
getDecodingUnitInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getDecodingUnitInfoSEIEnabled() const                        { return m_decodingUnitInfoSEIEnabled; }$/;"	f	class:TEncCfg
getDefDisplayWindow	source/Lib/TLibCommon/TComPic.h	/^  Window        getDefDisplayWindow() const  { return m_picSym.getSPS().getVuiParametersPresentFlag() ? m_picSym.getSPS().getVuiParameters()->getDefaultDisplayWindow() : Window(); }$/;"	f	class:TComPic
getDefaultDisplayWindow	source/Lib/TLibCommon/TComSlice.h	/^  Window&           getDefaultDisplayWindow()                              { return m_defaultDisplayWindow;                 }$/;"	f	class:TComVUI
getDefaultDisplayWindow	source/Lib/TLibCommon/TComSlice.h	/^  const Window&     getDefaultDisplayWindow() const                        { return m_defaultDisplayWindow;                 }$/;"	f	class:TComVUI
getDefaultDisplayWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Window      &getDefaultDisplayWindow()                             { return m_defaultDisplayWindow; }$/;"	f	class:TEncCfg
getDeltaPOC	source/Lib/TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getDeltaPOC(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getDeltaPocMSBCycleLT	source/Lib/TLibCommon/TComSlice.h	/^  Int     getDeltaPocMSBCycleLT(Int i) const           { return m_deltaPOCMSBCycleLT[i];     }$/;"	f	class:TComReferencePictureSet
getDeltaPocMSBPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getDeltaPocMSBPresentFlag(Int i) const       { return m_deltaPocMSBPresentFlag[i]; }$/;"	f	class:TComReferencePictureSet
getDeltaQpRD	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getDeltaQpRD                    () const { return m_uiDeltaQpRD; }$/;"	f	class:TEncCfg
getDeltaRIdxMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int     getDeltaRIdxMinus1() const                   { return m_deltaRIdxMinus1;            }$/;"	f	class:TComReferencePictureSet
getDeltaRPS	source/Lib/TLibCommon/TComSlice.h	/^  Int     getDeltaRPS() const                          { return m_deltaRPS;                   }$/;"	f	class:TComReferencePictureSet
getDependentSliceSegmentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getDependentSliceSegmentFlag() const                   { return m_dependentSliceSegmentFlag;                           }$/;"	f	class:TComSlice
getDependentSliceSegmentsEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getDependentSliceSegmentsEnabledFlag() const                     { return m_dependentSliceSegmentsEnabledFlag;   }$/;"	f	class:TComPPS
getDepth	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getDepth                      ( UInt uiIdx ) const                                         { return m_puhDepth[uiIdx];                  }$/;"	f	class:TComDataCU
getDepth	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getDepth                      ( )                                                          { return m_puhDepth;                         }$/;"	f	class:TComDataCU
getDepth	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getDepth() const                                       { return m_iDepth;                                              }$/;"	f	class:TComSlice
getDequantCoeff	source/Lib/TLibCommon/TComTrQuant.h	/^  Int* getDequantCoeff                  ( UInt list, Int qp, UInt size ) { return m_dequantCoef          [size][list][qp]; };  \/\/!< get DeQuant Coefficent$/;"	f	class:TComTrQuant
getDiffCuChromaQpOffsetDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getDiffCuChromaQpOffsetDepth () const                            { return m_diffCuChromaQpOffsetDepth;             }$/;"	f	class:TComPPSRExt
getDiffCuChromaQpOffsetDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getDiffCuChromaQpOffsetDepth    ()         const { return m_diffCuChromaQpOffsetDepth;  }$/;"	f	class:TEncCfg
getDifferentialLumaChromaBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getDifferentialLumaChromaBitDepth() const                                       { return Int(m_bitDepths.recon[CHANNEL_TYPE_LUMA]) - Int(m_bitDepths.recon[CHANNEL_TYPE_CHROMA]); }$/;"	f	class:TComSPS
getDisableIntraPUsInInterSlices	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getDisableIntraPUsInInterSlices    () const { return m_bDisableIntraPUsInInterSlices; }$/;"	f	class:TEncCfg
getDisplayOrientationSEIAngle	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getDisplayOrientationSEIAngle()                              { return m_displayOrientationSEIAngle; }$/;"	f	class:TEncCfg
getDistPart	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::getDistPart( Int bitDepth, const Pel* piCur, Int iCurStride,  const Pel* piOrg, Int iOrgStride, UInt uiBlkWidth, UInt uiBlkHeight, const ComponentID compID, DFunc eDFunc )$/;"	f	class:TComRdCost
getDistortion	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Int64 TEncSampleAdaptiveOffset::getDistortion(const Int channelBitDepth, Int typeIdc, Int typeAuxInfo, Int* invQuantOffset, SAOStatData& statData)$/;"	f	class:TEncSampleAdaptiveOffset
getDouble	source/Lib/TLibCommon/Debug.h	/^  Double              getDouble()   const       { return m_dVal;    }$/;"	f	class:EnvVar
getDpbOutputDelayDuLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getDpbOutputDelayDuLengthMinus1( ) const                                   { return m_dpbOutputDelayDuLengthMinus1;                     }$/;"	f	class:TComHRD
getDpbOutputDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getDpbOutputDelayLengthMinus1( ) const                                     { return m_dpbOutputDelayLengthMinus1;                       }$/;"	f	class:TComHRD
getDuBitRateValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getDuBitRateValueMinus1(Int layer, Int cpbcnt, Int nalOrVcl ) const        { return m_HRD[layer].duBitRateValue[cpbcnt][nalOrVcl];      }$/;"	f	class:TComHRD
getDuCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getDuCpbRemovalDelayLengthMinus1( ) const                                  { return m_duCpbRemovalDelayLengthMinus1;                    }$/;"	f	class:TComHRD
getDuCpbSizeScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getDuCpbSizeScale( ) const                                                 { return m_ducpbSizeScale;                                   }$/;"	f	class:TComHRD
getDuCpbSizeValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getDuCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl ) const       { return m_HRD[layer].ducpbSizeValue[cpbcnt][nalOrVcl];      }$/;"	f	class:TComHRD
getEfficientFieldIRAPEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getEfficientFieldIRAPEnabled( ) const                 { return m_bEfficientFieldIRAPEnabled; }$/;"	f	class:TEncCfg
getEmulationPreventionByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  UInt      getEmulationPreventionByteLocation  ( UInt idx )                         { return m_emulationPreventionByteLocation[ idx ];    }$/;"	f	class:TComInputBitstream
getEmulationPreventionByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  const std::vector<UInt> &getEmulationPreventionByteLocation  () const              { return m_emulationPreventionByteLocation;           }$/;"	f	class:TComInputBitstream
getEnableTMVPFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getEnableTMVPFlag() const                              { return m_enableTMVPFlag;                                      }$/;"	f	class:TComSlice
getEncBinIf	source/Lib/TLibEncoder/TEncSbac.h	/^  TEncBinIf* getEncBinIf()  { return m_pcBinIf; }$/;"	f	class:TEncSbac
getEncCABACTableIdx	source/Lib/TLibCommon/TComSlice.h	/^  SliceType                   getEncCABACTableIdx() const                            { return m_encCABACTableIdx;                                    }$/;"	f	class:TComSlice
getEncCABACTableIdx	source/Lib/TLibEncoder/TEncSlice.h	/^  SliceType getEncCABACTableIdx() const           { return m_encCABACTableIdx;        }$/;"	f	class:TEncSlice
getEncRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* getEncRCSeq()        { return m_encRCSeq; }$/;"	f	class:TEncRCGOP
getEntropyBits	source/Lib/TLibCommon/ContextModel.h	/^  Int getEntropyBits(Short val) { return m_entropyBits[m_ucState ^ val]; }$/;"	f	class:ContextModel
getEntropyBitsTrm	source/Lib/TLibCommon/ContextModel.h	/^  static Int getEntropyBitsTrm( Int val ) { return m_entropyBits[126 ^ val]; }$/;"	f	class:ContextModel
getEntropyCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncEntropy*            getEntropyCoder       () { return  &m_cEntropyCoder;        }$/;"	f	class:TEncTop
getEntropyCodingSyncEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getEntropyCodingSyncEnabledFlag() const                          { return m_entropyCodingSyncEnabledFlag;        }$/;"	f	class:TComPPS
getEntropyCodingSyncEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getEntropyCodingSyncEnabledFlag() const                      { return m_entropyCodingSyncEnabledFlag; }$/;"	f	class:TEncCfg
getEntropyDecoder	source/Lib/TLibDecoder/TDecEntropy.h	/^  TDecEntropyIf* getEntropyDecoder() { return m_pcEntropyDecoderIf; }$/;"	f	class:TDecEntropy
getEnvVarInUse	source/Lib/TLibCommon/Debug.cpp	/^std::list<EnvVar*> &EnvVar::getEnvVarInUse()$/;"	f	class:EnvVar
getEnvVarList	source/Lib/TLibCommon/Debug.cpp	/^std::list<std::pair<std::string, std::string> > &EnvVar::getEnvVarList()$/;"	f	class:EnvVar
getErpSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getErpSEICancelFlag()                                        { return m_erpSEICancelFlag; }$/;"	f	class:TEncCfg
getErpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getErpSEIEnabled()                                           { return m_erpSEIEnabled; }$/;"	f	class:TEncCfg
getErpSEIGuardBandFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getErpSEIGuardBandFlag()                                     { return m_erpSEIGuardBandFlag; }$/;"	f	class:TEncCfg
getErpSEIGuardBandType	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getErpSEIGuardBandType()                                     { return m_erpSEIGuardBandType; }  $/;"	f	class:TEncCfg
getErpSEILeftGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getErpSEILeftGuardBandWidth()                                { return m_erpSEILeftGuardBandWidth; }  $/;"	f	class:TEncCfg
getErpSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getErpSEIPersistenceFlag()                                   { return m_erpSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getErpSEIRightGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getErpSEIRightGuardBandWidth()                               { return m_erpSEIRightGuardBandWidth; }      $/;"	f	class:TEncCfg
getErrScaleCoeff	source/Lib/TLibCommon/TComTrQuant.h	/^  Double* getErrScaleCoeff              ( UInt list, UInt size, Int qp ) { return m_errScale             [size][list][qp]; };  \/\/!< get Error Scale Coefficent$/;"	f	class:TComTrQuant
getErrScaleCoeffNoScalingList	source/Lib/TLibCommon/TComTrQuant.h	/^  Double& getErrScaleCoeffNoScalingList ( UInt list, UInt size, Int qp ) { return m_errScaleNoScalingList[size][list][qp]; };  \/\/!< get Error Scale Coefficent$/;"	f	class:TComTrQuant
getEstHeaderBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getEstHeaderBits()                                 { return m_estHeaderBits; }$/;"	f	class:TEncRCPic
getExplicitRdpcmMode	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getExplicitRdpcmMode          ( ComponentID component, UInt partIdx ) const                { return m_explicitRdpcmMode[component][partIdx]; }$/;"	f	class:TComDataCU
getExplicitRdpcmMode	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getExplicitRdpcmMode          ( ComponentID component )                                    { return m_explicitRdpcmMode[component];     }$/;"	f	class:TComDataCU
getExt360Data	source/Lib/TLibEncoder/TEncGOP.h	/^  TExt360EncGop &getExt360Data() { return m_ext360; }$/;"	f	class:TEncGOP
getExt360Info	source/Lib/TLibEncoder/TEncAnalyze.h	/^  TExt360EncAnalyze& getExt360Info() { return m_ext360; }$/;"	f	class:TEncAnalyze
getExtendedPrecisionProcessingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getExtendedPrecisionProcessingFlag() const                                      { return m_extendedPrecisionProcessingFlag;      }$/;"	f	class:TComSPSRExt
getExtendedPrecisionProcessingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getExtendedPrecisionProcessingFlag         ()         const { return m_extendedPrecisionProcessingFlag;  }$/;"	f	class:TEncCfg
getFGCSEICompModelPresent	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getFGCSEICompModelPresent(Int index)                         { return m_fgcSEICompModelPresent[index]; }$/;"	f	class:TEncCfg
getFGCSEICompModelValue	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt    getFGCSEICompModelValue(Int index, Int ctr, Int modelCtr) { return m_fgcSEICompModelValue[index][ctr][modelCtr]; }$/;"	f	class:TEncCfg
getFGCSEIIntensityIntervalLowerBound	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEIIntensityIntervalLowerBound(Int index, Int ctr) { return m_fgcSEIIntensityIntervalLowerBound[index][ctr]; }$/;"	f	class:TEncCfg
getFGCSEIIntensityIntervalUpperBound	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEIIntensityIntervalUpperBound(Int index, Int ctr) { return m_fgcSEIIntensityIntervalUpperBound[index][ctr]; }$/;"	f	class:TEncCfg
getFGCSEINumIntensityIntervalMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEINumIntensityIntervalMinus1(Int index) { return m_fgcSEINumIntensityIntervalMinus1[index]; }$/;"	f	class:TEncCfg
getFGCSEINumModelValuesMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getFGCSEINumModelValuesMinus1(Int index) { return m_fgcSEINumModelValuesMinus1[index]; }$/;"	f	class:TEncCfg
getFIFO	source/Lib/TLibCommon/TComBitStream.h	/^  const std::vector<uint8_t>& getFIFO() const { return m_fifo; }$/;"	f	class:TComOutputBitstream
getFIFO	source/Lib/TLibCommon/TComBitStream.h	/^  std::vector<uint8_t>& getFIFO() { return m_fifo; }$/;"	f	class:TComOutputBitstream
getFastDeltaQp	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getFastDeltaQp                  () const { return m_bFastDeltaQP; }$/;"	f	class:TEncCfg
getFastDeltaQp	source/Lib/TLibEncoder/TEncCu.h	/^  Bool getFastDeltaQp       () const                  { return m_bFastDeltaQP;      }$/;"	f	class:TEncCu
getFastInterSearchMode	source/Lib/TLibEncoder/TEncCfg.h	/^  FastInterSearchMode getFastInterSearchMode() const{ return m_fastInterSearchMode;  }$/;"	f	class:TEncCfg
getFastMEAssumingSmootherMVEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getFastMEAssumingSmootherMVEnabled () const { return m_bFastMEAssumingSmootherMVEnabled; }$/;"	f	class:TEncCfg
getFastMEForGenBLowDelayEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getFastMEForGenBLowDelayEnabled ()      { return m_bFastMEForGenBLowDelayEnabled; }$/;"	f	class:TEncCfg
getFastUDIUseMPMEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getFastUDIUseMPMEnabled         ()      { return m_bFastUDIUseMPMEnabled; }$/;"	f	class:TEncCfg
getFieldSeqFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getFieldSeqFlag() const                                { return m_fieldSeqFlag;                         }$/;"	f	class:TComVUI
getFifo	source/Lib/TLibCommon/TComBitStream.h	/^        std::vector<uint8_t> &getFifo()       { return m_fifo; }$/;"	f	class:TComInputBitstream
getFifo	source/Lib/TLibCommon/TComBitStream.h	/^  const std::vector<uint8_t> &getFifo() const { return m_fifo; }$/;"	f	class:TComInputBitstream
getFilmGrainCharactersticsSEIBlendingModeID	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar getFilmGrainCharactersticsSEIBlendingModeID()                { return m_fgcSEIBlendingModeID; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEICancelFlag()                    { return m_fgcSEICancelFlag; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEIEnabled()                       { return m_fgcSEIEnabled; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEILog2ScaleFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar getFilmGrainCharactersticsSEILog2ScaleFactor()               { return m_fgcSEILog2ScaleFactor; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEIModelID	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar getFilmGrainCharactersticsSEIModelID()                       { return m_fgcSEIModelID; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEIPersistenceFlag()               { return m_fgcSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getFilmGrainCharactersticsSEISepColourDescPresent	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getFilmGrainCharactersticsSEISepColourDescPresent()          { return m_fgcSEISepColourDescPresentFlag; }$/;"	f	class:TEncCfg
getFinalized	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getFinalized() const                                   { return m_bFinalized;                                          }$/;"	f	class:TComSlice
getFirstComponentOfChannel	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline ComponentID getFirstComponentOfChannel(const ChannelType id)                         { return (isLuma(id) ? COMPONENT_Y : COMPONENT_Cb);                  }$/;"	f
getFirstCtuRsAddr	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      getFirstCtuRsAddr      () const              { return m_firstCtuRsAddr; }$/;"	f	class:TComTile
getFirstPPS	source/Lib/TLibCommon/TComSlice.h	/^  TComPPS*       getFirstPPS()                                               { return m_ppsMap.getFirstPS(); };$/;"	f	class:ParameterSetManager
getFirstPS	source/Lib/TLibCommon/TComSlice.h	/^  T* getFirstPS()$/;"	f	class:ParameterSetMap
getFirstSPS	source/Lib/TLibCommon/TComSlice.h	/^  TComSPS*       getFirstSPS()                                               { return m_spsMap.getFirstPS(); };$/;"	f	class:ParameterSetManager
getFirstSliceInSequence	source/Lib/TLibDecoder/TDecTop.h	/^  Bool  getFirstSliceInSequence ()         { return m_bFirstSliceInSequence; }$/;"	f	class:TDecTop
getFirstVPS	source/Lib/TLibCommon/TComSlice.h	/^  TComVPS*       getFirstVPS()                                               { return m_vpsMap.getFirstPS(); };$/;"	f	class:ParameterSetManager
getFixedPicRateFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getFixedPicRateFlag( Int layer ) const                                     { return m_HRD[layer].fixedPicRateFlag;                      }$/;"	f	class:TComHRD
getFixedPicRateWithinCvsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getFixedPicRateWithinCvsFlag( Int layer ) const                            { return m_HRD[layer].fixedPicRateWithinCvsFlag;             }$/;"	f	class:TComHRD
getForceDecodeBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getForceDecodeBitDepth()        const                                           { return m_forceDecodeBitDepth;                                        }$/;"	f	class:TComSPS
getForceIntraQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getForceIntraQP        ()                             { return m_RCForceIntraQP;        }$/;"	f	class:TEncCfg
getFrameFieldInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getFrameFieldInfoPresentFlag() const                   { return m_frameFieldInfoPresentFlag;            }$/;"	f	class:TComVUI
getFrameFieldInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getFrameFieldInfoPresentFlag()                        { return m_frameFieldInfoPresentFlag; }$/;"	f	class:TEncCfg
getFrameHeightInCtus	source/Lib/TLibCommon/TComPic.h	/^  UInt          getFrameHeightInCtus() const       { return m_picSym.getFrameHeightInCtus();   }$/;"	f	class:TComPic
getFrameHeightInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getFrameHeightInCtus() const                          { return m_frameHeightInCtus;           }$/;"	f	class:TComPicSym
getFrameLevel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getFrameLevel()                                    { return m_frameLevel; }$/;"	f	class:TEncRCPic
getFrameOnlyConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getFrameOnlyConstraintFlag() const          { return m_frameOnlyConstraintFlag;     }$/;"	f	class:ProfileTierLevel
getFrameOnlyConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getFrameOnlyConstraintFlag() const                    { return m_frameOnlyConstraintFlag; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getFramePackingArrangementSEIEnabled() const                 { return m_framePackingSEIEnabled; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIId()                            { return m_framePackingSEIId; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIInterpretation	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIInterpretation()                { return m_framePackingSEIInterpretation; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIQuincunx	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIQuincunx()                      { return m_framePackingSEIQuincunx; }$/;"	f	class:TEncCfg
getFramePackingArrangementSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getFramePackingArrangementSEIType()                          { return m_framePackingSEIType; }$/;"	f	class:TEncCfg
getFrameRate	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getFrameRate                    ()      { return  m_iFrameRate; }$/;"	f	class:TEncCfg
getFrameRate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getFrameRate()                   { return m_frameRate; }$/;"	f	class:TEncRCSeq
getFrameSkip	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getFrameSkip                    ()      { return  m_FrameSkip; }$/;"	f	class:TEncCfg
getFrameWidthInCtus	source/Lib/TLibCommon/TComPic.h	/^  UInt          getFrameWidthInCtus() const        { return m_picSym.getFrameWidthInCtus();    }$/;"	f	class:TComPic
getFrameWidthInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getFrameWidthInCtus() const                           { return m_frameWidthInCtus;            }$/;"	f	class:TComPicSym
getFramesLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getFramesLeft()                  { return m_framesLeft; }$/;"	f	class:TEncRCSeq
getFramesToBeEncoded	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getFramesToBeEncoded            ()      { return  m_framesToBeEncoded; }$/;"	f	class:TEncCfg
getFviSEIData	source/Lib/TLibEncoder/TEncCfg.h	/^  const TComSEIFisheyeVideoInfo& getFviSEIData() const               { return m_fisheyeVideoInfo; }$/;"	f	class:TEncCfg
getFviSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool    getFviSEIEnabled() const                                   { return m_fviSEIEnabled; }$/;"	f	class:TEncCfg
getGOPEncoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncGOP*                getGOPEncoder         () { return  &m_cGOPEncoder;          }$/;"	f	class:TEncTop
getGOPEntry	source/Lib/TLibEncoder/TEncCfg.h	/^  const GOPEntry &getGOPEntry               ( Int   i ) const { return m_GOPList[i]; }$/;"	f	class:TEncCfg
getGOPID2Level	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getGOPID2Level( Int ID )         { assert( ID < m_GOPSize ); return m_GOPID2Level[ID]; }$/;"	f	class:TEncRCSeq
getGOPID2Level	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int* getGOPID2Level()                 { return m_GOPID2Level; }$/;"	f	class:TEncRCSeq
getGOPSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getGOPSize                      ()      { return  m_iGOPSize; }$/;"	f	class:TEncCfg
getGOPSize	source/Lib/TLibEncoder/TEncGOP.h	/^  Int   getGOPSize()          { return  m_iGopSize;  }$/;"	f	class:TEncGOP
getGOPSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getGOPSize()                     { return m_GOPSize; }$/;"	f	class:TEncRCSeq
getGeneralPTL	source/Lib/TLibCommon/TComSlice.h	/^  ProfileTierLevel*       getGeneralPTL()                              { return &m_generalPTL;                   }$/;"	f	class:TComPTL
getGeneralPTL	source/Lib/TLibCommon/TComSlice.h	/^  const ProfileTierLevel* getGeneralPTL() const                        { return &m_generalPTL;                   }$/;"	f	class:TComPTL
getGolombRiceStatisticsIndex	source/Lib/TLibCommon/TComTU.cpp	/^UInt TComTU::getGolombRiceStatisticsIndex(const ComponentID compID)$/;"	f	class:TComTU
getGopBasedTemporalFilterEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getGopBasedTemporalFilterEnabled() const                     { return m_gopBasedTemporalFilterEnabled; }$/;"	f	class:TEncCfg
getGopID	source/Lib/TLibEncoder/TEncSlice.h	/^  Int     getGopID() const            { return m_gopID;   }$/;"	f	class:TEncSlice
getGradualDecodingRefreshInfoEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getGradualDecodingRefreshInfoEnabled() const                 { return m_gradualDecodingRefreshInfoEnabled; }$/;"	f	class:TEncCfg
getHandleCraAsBlaFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getHandleCraAsBlaFlag() const                          { return m_handleCraAsBlaFlag;                                  }$/;"	f	class:TComSlice
getHarmonizeGopFirstFieldCoupleEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getHarmonizeGopFirstFieldCoupleEnabled( ) const       { return m_bHarmonizeGopFirstFieldCoupleEnabled; }$/;"	f	class:TEncCfg
getHbrFactor	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt getHbrFactor(Bool bLowerBitRateConstraintFlag) const    \/\/ currently not used for checking$/;"	f	struct:ProfileFeatures
getHbrFactor	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt getHbrFactor(Bool bLowerBitRateConstraintFlag) const    \/\/ currently not used for checking$/;"	f	struct:ProfileFeatures
getHeight	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getHeight                     ( UInt uiIdx ) const                                         { return m_puhHeight[uiIdx];                 }$/;"	f	class:TComDataCU
getHeight	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getHeight                     ( )                                                          { return m_puhHeight;                        }$/;"	f	class:TComDataCU
getHeight	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getHeight         (const ComponentID id) const { return  m_picHeight >> getComponentScaleY(id);  }$/;"	f	class:TComPicYuv
getHeight	source/Lib/TLibCommon/TComYuv.h	/^  UInt         getHeight                  (const ComponentID id) const { return m_iHeight >> getComponentScaleY(id);  }$/;"	f	class:TComYuv
getHeldBits	source/Lib/TLibCommon/TComBitStream.h	/^  UChar getHeldBits  ()          { return m_held_bits;          }$/;"	f	class:TComInputBitstream
getHeldBits	source/Lib/TLibCommon/TComBitStream.h	/^  UChar getHeldBits  ()          { return m_held_bits;          }$/;"	f	class:TComOutputBitstream
getHighPrecisionOffsetsEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getHighPrecisionOffsetsEnabledFlag() const                                      { return m_highPrecisionOffsetsEnabledFlag;      }$/;"	f	class:TComSPSRExt
getHighPrecisionOffsetsEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getHighPrecisionOffsetsEnabledFlag() const { return m_highPrecisionOffsetsEnabledFlag; }$/;"	f	class:TEncCfg
getHor	source/Lib/TLibCommon/TComMotionInfo.h	/^  Int getHor   () const { return  m_acMv.getHor(); }$/;"	f	class:TComMvField
getHor	source/Lib/TLibCommon/TComMv.h	/^  Int   getHor    () const { return m_iHor;          }$/;"	f	class:TComMv
getHrdOpSetIdx	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getHrdOpSetIdx( UInt i ) const                       { return m_hrdOpSetIdx[ i ];                                       }$/;"	f	class:TComVPS
getHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  TComHRD*          getHrdParameters( UInt i )                           { return &m_hrdParameters[ i ];                                    }$/;"	f	class:TComVPS
getHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  TComHRD*          getHrdParameters()                                     { return &m_hrdParameters;                       }$/;"	f	class:TComVUI
getHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  const TComHRD*    getHrdParameters( UInt i ) const                     { return &m_hrdParameters[ i ];                                    }$/;"	f	class:TComVPS
getHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  const TComHRD*    getHrdParameters()  const                              { return &m_hrdParameters;                       }$/;"	f	class:TComVUI
getHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getHrdParametersPresentFlag() const                    { return m_hrdParametersPresentFlag;             }$/;"	f	class:TComVUI
getIPCMFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          getIPCMFlag                   ( UInt uiIdx ) const                                         { return m_pbIPCMFlag[uiIdx];                }$/;"	f	class:TComDataCU
getIPCMFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         getIPCMFlag                   ( )                                                          { return m_pbIPCMFlag;                       }$/;"	f	class:TComDataCU
getIdrPicFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getIdrPicFlag() const                                  { return getNalUnitType() == NAL_UNIT_CODED_SLICE_IDR_W_RADL || getNalUnitType() == NAL_UNIT_CODED_SLICE_IDR_N_LP; }$/;"	f	class:TComSlice
getInitialCpbFullness	source/Lib/TLibEncoder/TEncCfg.h	/^  Double       getInitialCpbFullness  ()                             { return m_RCInitialCpbFullness;  }$/;"	f	class:TEncCfg
getInitialCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getInitialCpbRemovalDelayLengthMinus1( ) const                             { return m_initialCpbRemovalDelayLengthMinus1;               }$/;"	f	class:TComHRD
getInitialQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getInitialQP           ()                             { return m_RCInitialQP;           }$/;"	f	class:TEncCfg
getInt	source/Lib/TLibCommon/Debug.h	/^  Int                 getInt()      const       { return m_iVal;    }$/;"	f	class:EnvVar
getInterDir	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getInterDir                   ( UInt uiIdx ) const                                         { return m_puhInterDir[uiIdx];               }$/;"	f	class:TComDataCU
getInterDir	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getInterDir                   ( )                                                          { return m_puhInterDir;                      }$/;"	f	class:TComDataCU
getInterMergeCandidates	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getInterMergeCandidates( UInt uiAbsPartIdx, UInt uiPUIdx, TComMvField* pcMvFieldNeighbours, UChar* puhInterDirNeighbours, Int& numValidMergeCand, UInt &numSpatialMergeCandidates, Int mrgCandIdx ) const$/;"	f	class:TComDataCU
getInterRPSPrediction	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getInterRPSPrediction() const                { return m_interRPSPrediction;         }$/;"	f	class:TComReferencePictureSet
getInterlacedSourceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getInterlacedSourceFlag() const             { return m_interlacedSourceFlag;        }$/;"	f	class:ProfileTierLevel
getInterlacedSourceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getInterlacedSourceFlag() const                       { return m_interlacedSourceFlag; }$/;"	f	class:TEncCfg
getIntraConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getIntraConstraintFlag() const              { return m_intraConstraintFlag;         }$/;"	f	class:ProfileTierLevel
getIntraConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getIntraConstraintFlag() const                        { return m_intraConstraintFlag; }$/;"	f	class:TEncCfg
getIntraDir	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getIntraDir                   ( const ChannelType channelType, const UInt uiIdx ) const    { return m_puhIntraDir[channelType][uiIdx];  }$/;"	f	class:TComDataCU
getIntraDir	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getIntraDir                   ( const ChannelType channelType )                   const    { return m_puhIntraDir[channelType];         }$/;"	f	class:TComDataCU
getIntraDirPredictor	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getIntraDirPredictor( UInt uiAbsPartIdx, Int uiIntraDirPred[NUM_MOST_PROBABLE_MODES], const ComponentID compID, Int* piMode ) const$/;"	f	class:TComDataCU
getIntraLambdaModifier	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::vector<Double>& getIntraLambdaModifier()                        const { return m_adIntraLambdaModifier;         }$/;"	f	class:TEncCfg
getIntraPeriod	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getIntraPeriod                  ()      { return  m_uiIntraPeriod; }$/;"	f	class:TEncCfg
getIntraQPOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getIntraQPOffset                () const    { return  m_intraQPOffset; }$/;"	f	class:TEncCfg
getIntraQpFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    getIntraQpFactor                ()                        const { return m_dIntraQpFactor;                }$/;"	f	class:TEncCfg
getIntraSizeIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getIntraSizeIdx(UInt uiAbsPartIdx) const$/;"	f	class:TComDataCU
getIntraSmoothingDisabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getIntraSmoothingDisabledFlag() const                                           { return m_intraSmoothingDisabledFlag;           }$/;"	f	class:TComSPSRExt
getIntraSmoothingDisabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getIntraSmoothingDisabledFlag               ()      const { return m_intraSmoothingDisabledFlag; }$/;"	f	class:TEncCfg
getIsChromaQpAdjCoded	source/Lib/TLibDecoder/TDecCu.h	/^  Bool getIsChromaQpAdjCoded    ()                        { return m_IsChromaQpAdjCoded;        }$/;"	f	class:TDecCu
getIsLongTerm	source/Lib/TLibCommon/TComPic.h	/^  Bool          getIsLongTerm() const            { return m_bIsLongTerm; }$/;"	f	class:TComPic
getIsUsedAsLongTerm	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getIsUsedAsLongTerm(Int i, Int j) const                { return m_bIsUsedAsLongTerm[i][j];                             }$/;"	f	class:TComSlice
getKeepHierBit	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getKeepHierBit         ()                             { return m_RCKeepHierarchicalBit; }$/;"	f	class:TEncCfg
getKneeFunctionInformationSEI	source/Lib/TLibEncoder/TEncCfg.h	/^  const TEncSEIKneeFunctionInformation &getKneeFunctionInformationSEI() const        { return m_kneeFunctionInformationSEI; }$/;"	f	class:TEncCfg
getKneeSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getKneeSEIEnabled()                                          { return m_kneeSEIEnabled; }$/;"	f	class:TEncCfg
getLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCLCU& getLCU( Int LCUIdx )                            { return m_LCUs[LCUIdx]; }$/;"	f	class:TEncRCPic
getLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCLCU* getLCU()                                        { return m_LCUs; }$/;"	f	class:TEncRCPic
getLCUCoded	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getLCUCoded()                                      { return m_numberOfLCU - m_LCULeft; }$/;"	f	class:TEncRCPic
getLCUEstLambda	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::getLCUEstLambda( Double bpp )$/;"	f	class:TEncRCPic
getLCUEstLambdaAndQP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::getLCUEstLambdaAndQP(Double bpp, Int clipPicQP, Int *estQP)$/;"	f	class:TEncRCPic
getLCUEstQP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::getLCUEstQP( Double lambda, Int clipPicQP )$/;"	f	class:TEncRCPic
getLCUHeight	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getLCUHeight()                   { return m_LCUHeight; }$/;"	f	class:TEncRCSeq
getLCUInitTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::getLCUInitTargetBits()$/;"	f	class:TEncRCPic
getLCULeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getLCULeft()                                       { return m_LCULeft; }$/;"	f	class:TEncRCPic
getLCULevelRC	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getLCULevelRC          ()                             { return m_RCLCULevelRC; }$/;"	f	class:TEncCfg
getLCUPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter   getLCUPara( Int level, Int LCUIdx )            { assert( LCUIdx  < m_numberOfLCU ); return getLCUPara(level)[LCUIdx]; }$/;"	f	class:TEncRCSeq
getLCUPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter*  getLCUPara( Int level )                        { assert( level < m_numberOfLevel ); return m_LCUPara[level]; }$/;"	f	class:TEncRCSeq
getLCUPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter** getLCUPara()                                   { return m_LCUPara; }$/;"	f	class:TEncRCSeq
getLCUTargetBpp	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCPic::getLCUTargetBpp(SliceType eSliceType)$/;"	f	class:TEncRCPic
getLCUWidth	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getLCUWidth()                    { return m_LCUWidth; }$/;"	f	class:TEncRCSeq
getLFCrossSliceBoundaryFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getLFCrossSliceBoundaryFlag()                          { return m_LFCrossSliceBoundaryFlag;                            }$/;"	f	class:TComSlice
getLFCrossSliceBoundaryFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getLFCrossSliceBoundaryFlag     ()                       { return m_bLFCrossSliceBoundaryFlag;   }$/;"	f	class:TEncCfg
getLFCrossTileBoundaryFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getLFCrossTileBoundaryFlag               ()                  { return m_loopFilterAcrossTilesEnabledFlag;   }$/;"	f	class:TEncCfg
getLSB	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int getLSB(Int poc, Int maxLSB)$/;"	f
getLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Double  getLambda() { return m_dLambda; }$/;"	f	class:TComRdCost
getLambdaFromQPEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getLambdaFromQPEnable           () const    { return  m_lambdaFromQPEnable; }$/;"	f	class:TEncCfg
getLambdaModifier	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    getLambdaModifier               ( UInt uiIndex )          const { return m_adLambdaModifier[ uiIndex ]; }$/;"	f	class:TEncCfg
getLambdas	source/Lib/TLibCommon/TComSlice.h	/^  const Double*               getLambdas() const                                     { return m_lambdas;                                             }$/;"	f	class:TComSlice
getLastCodedQP	source/Lib/TLibCommon/TComDataCU.cpp	/^SChar TComDataCU::getLastCodedQP( UInt uiAbsPartIdx ) const$/;"	f	class:TComDataCU
getLastIDR	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getLastIDR() const                                     { return m_iLastIDR;                                            }$/;"	f	class:TComSlice
getLastLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getLastLambda()                { return m_lastLambda;   }$/;"	f	class:TEncRCSeq
getLastSignificantContextParameters	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Void getLastSignificantContextParameters (const ComponentID  component,$/;"	f
getLastValidPartIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^Int TComDataCU::getLastValidPartIdx( Int iAbsPartIdx ) const$/;"	f	class:TComDataCU
getLayerIdIncludedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getLayerIdIncludedFlag(UInt opsIdx, UInt id) const   { return m_layerIdIncludedFlag[opsIdx][id];                        }$/;"	f	class:TComVPS
getLeftAverageBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getLeftAverageBits()             { assert( m_framesLeft > 0 ); return (Int)(m_bitsLeft \/ m_framesLeft); }$/;"	f	class:TEncRCSeq
getLevelIdc	source/Lib/TLibCommon/TComSlice.h	/^  Level::Name   getLevelIdc() const                         { return m_levelIdc;                    }$/;"	f	class:ProfileTierLevel
getLevelTierFeatures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    const LevelTierFeatures   *getLevelTierFeatures() const { return m_pLevelTier; }$/;"	f	class:ProfileLevelTierFeatures
getLevelTierFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^    const LevelTierFeatures   *getLevelTierFeatures() const { return m_pLevelTier; }$/;"	f	class:ProfileLevelTierFeatures
getList1IdxToList0Idx	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getList1IdxToList0Idx( Int list1Idx ) const            { return m_list1IdxToList0Idx[list1Idx];                        }$/;"	f	class:TComSlice
getListOfColourSpaceConverts	source/Lib/TLibCommon/TComChromaFormat.cpp	/^std::string getListOfColourSpaceConverts(const Bool bIsForward)$/;"	f
getListPic	source/Lib/TLibEncoder/TEncGOP.h	/^  TComList<TComPic*>*   getListPic()      { return m_pcListPic; }$/;"	f	class:TEncGOP
getListPic	source/Lib/TLibEncoder/TEncTop.h	/^  TComList<TComPic*>*     getListPic            () { return  &m_cListPic;             }$/;"	f	class:TEncTop
getListsModificationPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getListsModificationPresentFlag() const                          { return m_listsModificationPresentFlag;        }$/;"	f	class:TComPPS
getLocalRPS	source/Lib/TLibCommon/TComSlice.h	/^  TComReferencePictureSet*    getLocalRPS()                                          { return &m_localRPS;                                           }$/;"	f	class:TComSlice
getLog2DiffMaxMinCodingBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getLog2DiffMaxMinCodingBlockSize() const                                        { return m_log2DiffMaxMinCodingBlockSize;                              }$/;"	f	class:TComSPS
getLog2MaxMvLengthHorizontal	source/Lib/TLibCommon/TComSlice.h	/^  Int               getLog2MaxMvLengthHorizontal() const                   { return m_log2MaxMvLengthHorizontal;            }$/;"	f	class:TComVUI
getLog2MaxMvLengthHorizontal	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getLog2MaxMvLengthHorizontal()                        { return m_log2MaxMvLengthHorizontal; }$/;"	f	class:TEncCfg
getLog2MaxMvLengthVertical	source/Lib/TLibCommon/TComSlice.h	/^  Int               getLog2MaxMvLengthVertical() const                     { return m_log2MaxMvLengthVertical;              }$/;"	f	class:TComVUI
getLog2MaxMvLengthVertical	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getLog2MaxMvLengthVertical()                          { return m_log2MaxMvLengthVertical; }$/;"	f	class:TEncCfg
getLog2MaxTransformSkipBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getLog2MaxTransformSkipBlockSize() const                         { return m_log2MaxTransformSkipBlockSize;         }$/;"	f	class:TComPPSRExt
getLog2MaxTransformSkipBlockSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt getLog2MaxTransformSkipBlockSize                () const      { return m_log2MaxTransformSkipBlockSize;     }$/;"	f	class:TEncCfg
getLog2MinCodingBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getLog2MinCodingBlockSize() const                                               { return m_log2MinCodingBlockSize;                                     }$/;"	f	class:TComSPS
getLog2ParallelMergeLevelMinus2	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getLog2ParallelMergeLevelMinus2() const                          { return m_log2ParallelMergeLevelMinus2;        }$/;"	f	class:TComPPS
getLog2ParallelMergeLevelMinus2	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt         getLog2ParallelMergeLevelMinus2   ()                  { return m_log2ParallelMergeLevelMinus2;       }$/;"	f	class:TEncCfg
getLog2SaoOffsetScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getLog2SaoOffsetScale(ChannelType type) const                    { return m_log2SaoOffsetScale[type];             }$/;"	f	class:TComPPSRExt
getLongTermRefsPresent	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getLongTermRefsPresent() const                                                  { return m_bLongTermRefsPresent;                                       }$/;"	f	class:TComSPS
getLoopFilter	source/Lib/TLibEncoder/TEncTop.h	/^  TComLoopFilter*         getLoopFilter         () { return  &m_cLoopFilter;          }$/;"	f	class:TEncTop
getLoopFilterAcrossSlicesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getLoopFilterAcrossSlicesEnabledFlag() const                     { return m_loopFilterAcrossSlicesEnabledFlag;   }$/;"	f	class:TComPPS
getLoopFilterAcrossTilesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getLoopFilterAcrossTilesEnabledFlag() const                      { return m_loopFilterAcrossTilesEnabledFlag;    }$/;"	f	class:TComPPS
getLoopFilterBetaOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getLoopFilterBetaOffset         ()      { return m_loopFilterBetaOffsetDiv2; }$/;"	f	class:TEncCfg
getLoopFilterDisable	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getLoopFilterDisable            ()      { return  m_bLoopFilterDisable;       }$/;"	f	class:TEncCfg
getLoopFilterOffsetInPPS	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getLoopFilterOffsetInPPS        ()      { return m_loopFilterOffsetInPPS; }$/;"	f	class:TEncCfg
getLoopFilterTcOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getLoopFilterTcOffset           ()      { return m_loopFilterTcOffsetDiv2; }$/;"	f	class:TEncCfg
getLowDelayHrdFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getLowDelayHrdFlag( Int layer ) const                                      { return m_HRD[layer].lowDelayHrdFlag;                       }$/;"	f	class:TComHRD
getLowerBitRateConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getLowerBitRateConstraintFlag() const       { return m_lowerBitRateConstraintFlag;  }$/;"	f	class:ProfileTierLevel
getLowerBitRateConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getLowerBitRateConstraintFlag() const                 { return m_lowerBitRateConstraintFlag; }$/;"	f	class:TEncCfg
getLowerBound	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getLowerBound()                                    { return m_lowerBound; }$/;"	f	class:TEncRCPic
getLtRefPicPocLsbSps	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getLtRefPicPocLsbSps(UInt index) const                                          { assert( index < MAX_NUM_LONG_TERM_REF_PICS ); return m_ltRefPicPocLsbSps[index]; }$/;"	f	class:TComSPS
getLumaLevelToDeltaQPMapping	source/Lib/TLibEncoder/TEncCfg.h	/^  const LumaLevelToDeltaQPMapping& getLumaLevelToDeltaQPMapping() const { return m_lumaLevelToDeltaQPMapping; }$/;"	f	class:TEncCfg
getMVPIdx	source/Lib/TLibCommon/TComDataCU.h	/^  Int           getMVPIdx                     ( RefPicList eRefPicList, UInt uiIdx) const                  { return m_apiMVPIdx[eRefPicList][uiIdx];    }$/;"	f	class:TComDataCU
getMVPIdx	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        getMVPIdx                     ( RefPicList eRefPicList )                                   { return m_apiMVPIdx[eRefPicList];           }$/;"	f	class:TComDataCU
getMVPNum	source/Lib/TLibCommon/TComDataCU.h	/^  Int           getMVPNum                     ( RefPicList eRefPicList, UInt uiIdx ) const                 { return m_apiMVPNum[eRefPicList][uiIdx];    }$/;"	f	class:TComDataCU
getMVPNum	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        getMVPNum                     ( RefPicList eRefPicList )                                   { return m_apiMVPNum[eRefPicList];           }$/;"	f	class:TComDataCU
getMarginX	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getMarginX        (const ComponentID id) const { return m_marginX >> getComponentScaleX(id);  }$/;"	f	class:TComPicYuv
getMarginY	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getMarginY        (const ComponentID id) const { return m_marginY >> getComponentScaleY(id);  }$/;"	f	class:TComPicYuv
getMasteringDisplaySEI	source/Lib/TLibEncoder/TEncCfg.h	/^  const TComSEIMasteringDisplay &getMasteringDisplaySEI() const      { return m_masteringDisplay; }$/;"	f	class:TEncCfg
getMatrixCoefficients	source/Lib/TLibCommon/TComSlice.h	/^  Int               getMatrixCoefficients() const                          { return m_matrixCoefficients;                   }$/;"	f	class:TComVUI
getMatrixCoefficients	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getMatrixCoefficients()                               { return m_matrixCoefficients; }$/;"	f	class:TEncCfg
getMaxAQDepth	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                      getMaxAQDepth()             { return m_uiMaxAQDepth;        }$/;"	f	class:TEncPic
getMaxBitsPerMinCuDenom	source/Lib/TLibCommon/TComSlice.h	/^  Int               getMaxBitsPerMinCuDenom() const                        { return m_maxBitsPerMinCuDenom;                 }$/;"	f	class:TComVUI
getMaxBitsPerMinCuDenom	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getMaxBitsPerMinCuDenom()                             { return m_maxBitsPerMinCuDenom; }$/;"	f	class:TEncCfg
getMaxBytesPerPicDenom	source/Lib/TLibCommon/TComSlice.h	/^  Int               getMaxBytesPerPicDenom() const                         { return m_maxBytesPerPicDenom;                  }$/;"	f	class:TComVUI
getMaxBytesPerPicDenom	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getMaxBytesPerPicDenom()                              { return m_maxBytesPerPicDenom; }$/;"	f	class:TEncCfg
getMaxCUDepthOffset	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt getMaxCUDepthOffset(const ChromaFormat chFmt, const UInt quadtreeTULog2MinSize)$/;"	f
getMaxCUHeight	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxCUHeight() const                                                          { return  m_uiMaxCUHeight;                                             }$/;"	f	class:TComSPS
getMaxCUWidth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxCUWidth() const                                                           { return  m_uiMaxCUWidth;                                              }$/;"	f	class:TComSPS
getMaxCuDQPDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxCuDQPDepth() const                                         { return m_uiMaxCuDQPDepth;                     }$/;"	f	class:TComPPS
getMaxCuDQPDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getMaxCuDQPDepth                () const { return  m_iMaxCuDQPDepth; }$/;"	f	class:TEncCfg
getMaxDPBNumFrames	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^Int ProfileLevelTierFeatures::getMaxDPBNumFrames(const UInt PicSizeInSamplesY) \/\/ returns -1 if no limit, otherwise a limit of DPB pictures is indicated.$/;"	f	class:ProfileLevelTierFeatures
getMaxDecPicBuffering	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxDecPicBuffering(UInt tlayer) const                                        { return m_uiMaxDecPicBuffering[tlayer];                               }$/;"	f	class:TComSPS
getMaxDecPicBuffering	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getMaxDecPicBuffering(UInt tLayer) const             { return m_uiMaxDecPicBuffering[tLayer];                           }$/;"	f	class:TComVPS
getMaxDecPicBuffering	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getMaxDecPicBuffering           (UInt tlayer) { return m_maxDecPicBuffering[tlayer]; }$/;"	f	class:TEncCfg
getMaxDeltaQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getMaxDeltaQP                   () const { return  m_iMaxDeltaQP; }$/;"	f	class:TEncCfg
getMaxLatencyIncrease	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getMaxLatencyIncrease(UInt tLayer) const             { return m_uiMaxLatencyIncrease[tLayer];                           }$/;"	f	class:TComVPS
getMaxLatencyIncreasePlus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxLatencyIncreasePlus1(UInt tlayer) const                                   { return m_uiMaxLatencyIncreasePlus1[tlayer];                          }$/;"	f	class:TComSPS
getMaxLayers	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getMaxLayers() const                                 { return m_uiMaxLayers;                                            }$/;"	f	class:TComVPS
getMaxLog2CtbSize	source/Lib/TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::getMaxLog2CtbSize(const TComPTL &\/*ptl*\/,$/;"	f	class:TDecConformanceCheck
getMaxLog2TrDynamicRange	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getMaxLog2TrDynamicRange(ChannelType channelType) const                         { return getSpsRangeExtension().getExtendedPrecisionProcessingFlag() ? std::max<Int>(15, Int(m_bitDepths.recon[channelType] + 6)) : 15; }$/;"	f	class:TComSPS
getMaxNuhReservedZeroLayerId	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getMaxNuhReservedZeroLayerId() const                 { return m_maxNuhReservedZeroLayerId;                              }$/;"	f	class:TComVPS
getMaxNumMergeCand	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getMaxNumMergeCand() const                             { return m_maxNumMergeCand;                                     }$/;"	f	class:TComSlice
getMaxNumMergeCand	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt         getMaxNumMergeCand                ()                  { return m_maxNumMergeCand;   }$/;"	f	class:TEncCfg
getMaxNumOffsetsPerPic	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getMaxNumOffsetsPerPic                   ()                  { return m_maxNumOffsetsPerPic; }$/;"	f	class:TEncCfg
getMaxOffsetQVal	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  static Int getMaxOffsetQVal(const Int channelBitDepth) { return (1<<(std::min<Int>(channelBitDepth,MAX_SAO_TRUNCATED_BITDEPTH)-5))-1; } \/\/Table 9-32, inclusive$/;"	f	class:TComSampleAdaptiveOffset
getMaxOpSets	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getMaxOpSets() const                                 { return m_numOpSets;                                              }$/;"	f	class:TComVPS
getMaxPicHeightInLumaSamples	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^LevelTierFeatures::getMaxPicHeightInLumaSamples() const$/;"	f	class:LevelTierFeatures
getMaxPicHeightInLumaSamples	source/Lib/TLibDecoder/TDecConformance.cpp	/^LevelTierFeatures::getMaxPicHeightInLumaSamples() const$/;"	f	class:LevelTierFeatures
getMaxPicWidthInLumaSamples	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^LevelTierFeatures::getMaxPicWidthInLumaSamples()  const$/;"	f	class:LevelTierFeatures
getMaxPicWidthInLumaSamples	source/Lib/TLibDecoder/TDecConformance.cpp	/^LevelTierFeatures::getMaxPicWidthInLumaSamples()  const$/;"	f	class:LevelTierFeatures
getMaxRawCtuBits	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    UInt   getMaxRawCtuBits()            const { return m_maxRawCtuBits; }$/;"	f	class:ProfileLevelTierFeatures
getMaxRawCtuBits	source/Lib/TLibDecoder/TDecConformance.h	/^    UInt getMaxRawCtuBits()              const { return m_maxRawCtuBits; }$/;"	f	class:ProfileLevelTierFeatures
getMaxRefPicNum	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getMaxRefPicNum                 ()                              { return m_iMaxRefPicNum;           }$/;"	f	class:TEncCfg
getMaxTLayers	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxTLayers() const                                                           { return m_uiMaxTLayers; }$/;"	f	class:TComSPS
getMaxTLayers	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getMaxTLayers() const                                { return m_uiMaxTLayers;                                           }$/;"	f	class:TComVPS
getMaxTempLayer	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getMaxTempLayer                 ()                              { return m_maxTempLayer;              } $/;"	f	class:TEncCfg
getMaxTotalCUDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxTotalCUDepth() const                                                      { return  m_uiMaxTotalCUDepth;                                         }$/;"	f	class:TComSPS
getMaxTrSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getMaxTrSize() const                                                            { return  m_uiMaxTrSize;                                               }$/;"	f	class:TComSPS
getMergeAMP	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          getMergeAMP                   ( ) const                                                    { return m_bIsMergeAMP;                      }$/;"	f	class:TComDataCU
getMergeFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          getMergeFlag                  ( UInt uiIdx ) const                                         { return m_pbMergeFlag[uiIdx];               }$/;"	f	class:TComDataCU
getMergeFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         getMergeFlag                  ( )                                                          { return m_pbMergeFlag;                      }$/;"	f	class:TComDataCU
getMergeIndex	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getMergeIndex                 ( UInt uiIdx ) const                                         { return m_puhMergeIndex[uiIdx];             }$/;"	f	class:TComDataCU
getMergeIndex	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getMergeIndex                 ( )                                                          { return m_puhMergeIndex;                    }$/;"	f	class:TComDataCU
getMergeList	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Int TComSampleAdaptiveOffset::getMergeList(TComPic* pic, Int ctuRsAddr, SAOBlkParam* blkParams, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES])$/;"	f	class:TComSampleAdaptiveOffset
getMinCUHeight	source/Lib/TLibCommon/TComPic.h	/^  UInt          getMinCUHeight() const             { return m_picSym.getMinCUHeight();         }$/;"	f	class:TComPic
getMinCUHeight	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getMinCUHeight() const                                { return m_uiMinCUHeight;               }$/;"	f	class:TComPicSym
getMinCUWidth	source/Lib/TLibCommon/TComPic.h	/^  UInt          getMinCUWidth() const              { return m_picSym.getMinCUWidth();          }$/;"	f	class:TComPic
getMinCUWidth	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getMinCUWidth() const                                 { return m_uiMinCUWidth;                }$/;"	f	class:TComPicSym
getMinCr	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    Double getMinCr()                    const { return (m_pLevelTier!=0 && m_pProfile!=0) ? (m_pProfile->minCrScaleFactorx10 * m_pLevelTier->minCrBase[m_tier?1:0])\/10.0 : 0.0 ; }   \/\/ currently not used for checking$/;"	f	class:ProfileLevelTierFeatures
getMinCr	source/Lib/TLibDecoder/TDecConformance.h	/^    Double getMinCr()                    const { return (m_pLevelTier!=0 && m_pProfile!=0) ? (m_pProfile->minCrScaleFactorx10 * m_pLevelTier->minCrBase[m_tier?1:0])\/10.0 : 0.0 ; }   \/\/ currently not used for checking$/;"	f	class:ProfileLevelTierFeatures
getMinLog2CtbSize	source/Lib/TLibDecoder/TDecConformance.cpp	/^TDecConformanceCheck::getMinLog2CtbSize(const TComPTL &ptl,$/;"	f	class:TDecConformanceCheck
getMinSearchWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getMinSearchWindow                 () const { return m_minSearchWindow; }$/;"	f	class:TEncCfg
getMinSpatialSegmentationIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int               getMinSpatialSegmentationIdc() const                   { return m_minSpatialSegmentationIdc;            }$/;"	f	class:TComVUI
getMinSpatialSegmentationIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getMinSpatialSegmentationIdc()                        { return m_minSpatialSegmentationIdc; }$/;"	f	class:TEncCfg
getMotionEstimationSearchMethod	source/Lib/TLibEncoder/TEncCfg.h	/^  MESearchMethod getMotionEstimationSearchMethod ( ) const { return m_motionEstimationSearchMethod; }$/;"	f	class:TEncCfg
getMotionVectorsOverPicBoundariesFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getMotionVectorsOverPicBoundariesFlag() const          { return m_motionVectorsOverPicBoundariesFlag;   }$/;"	f	class:TComVUI
getMotionVectorsOverPicBoundariesFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getMotionVectorsOverPicBoundariesFlag()               { return m_motionVectorsOverPicBoundariesFlag; }$/;"	f	class:TEncCfg
getMps	source/Lib/TLibCommon/ContextModel.h	/^  UChar getMps    ()                { return ( m_ucState  & 1 ); }                    \/\/\/< get curret MPS$/;"	f	class:ContextModel
getMsssim	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Double  getMsssim(ComponentID compID) const { return  m_runningTotal.MSSSIM[compID];  }$/;"	f	class:TEncAnalyze
getMv	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv       & getMv()       { return  m_acMv; }$/;"	f	class:TComMvField
getMv	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv const & getMv    ( Int iIdx ) const { return  m_pcMv    [iIdx]; }$/;"	f	class:TComCUMvField
getMv	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv const & getMv() const { return  m_acMv; }$/;"	f	class:TComMvField
getMvField	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getMvField ( const TComDataCU* pcCU, UInt uiAbsPartIdx, RefPicList eRefPicList, TComMvField& rcMvField )$/;"	f	class:TComDataCU
getMvPredAMVP	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::getMvPredAMVP( TComDataCU* pcCU, UInt uiPartIdx, UInt uiPartAddr, RefPicList eRefPicList, TComMv& rcMvPred )$/;"	f	class:TComPrediction
getMvPredAbove	source/Lib/TLibCommon/TComDataCU.h	/^  Void          getMvPredAbove                ( TComMv&     rcMvPred ) const                               { rcMvPred = m_cMvFieldB.getMv();            }$/;"	f	class:TComDataCU
getMvPredAboveRight	source/Lib/TLibCommon/TComDataCU.h	/^  Void          getMvPredAboveRight           ( TComMv&     rcMvPred ) const                               { rcMvPred = m_cMvFieldC.getMv();            }$/;"	f	class:TComDataCU
getMvPredLeft	source/Lib/TLibCommon/TComDataCU.h	/^  Void          getMvPredLeft                 ( TComMv&     rcMvPred ) const                               { rcMvPred = m_cMvFieldA.getMv();            }$/;"	f	class:TComDataCU
getMvd	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv const & getMvd   ( Int iIdx ) const { return  m_pcMvd   [iIdx]; }$/;"	f	class:TComCUMvField
getMvdL1ZeroFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getMvdL1ZeroFlag() const                               { return m_bLMvdL1Zero;                                         }$/;"	f	class:TComSlice
getNalHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getNalHrdParametersPresentFlag( ) const                                    { return m_nalHrdParametersPresentFlag;                      }$/;"	f	class:TComHRD
getNalUnitType	source/Lib/TLibCommon/TComSlice.h	/^  NalUnitType                 getNalUnitType() const                                 { return m_eNalUnitType;                                        }$/;"	f	class:TComSlice
getNalUnitType	source/Lib/TLibEncoder/TEncGOP.cpp	/^NalUnitType TEncGOP::getNalUnitType(Int pocCurr, Int lastIDR, Bool isField)$/;"	f	class:TEncGOP
getName	source/Lib/TLibCommon/Debug.h	/^  const std::string  &getName()     const       { return m_sName;   }$/;"	f	class:EnvVar
getName	source/Lib/TLibCommon/TComCodingStatistics.h	/^static inline const TChar* getName(TComCodingStatisticsType name)$/;"	f
getNeutralChromaIndicationFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getNeutralChromaIndicationFlag() const                 { return m_neutralChromaIndicationFlag;          }$/;"	f	class:TComVUI
getNeutralChromaIndicationFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getNeutralChromaIndicationFlag()                      { return m_neutralChromaIndicationFlag; }$/;"	f	class:TEncCfg
getNoDisplaySEITLayer	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getNoDisplaySEITLayer()                                      { return m_noDisplaySEITLayer; }$/;"	f	class:TEncCfg
getNoOutputPriorPicsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getNoOutputPriorPicsFlag() const                       { return m_noOutputPriorPicsFlag;                               }$/;"	f	class:TComSlice
getNoOutputPriorPicsFlag	source/Lib/TLibDecoder/TDecTop.h	/^  Bool  getNoOutputPriorPicsFlag () { return m_isNoOutputPriorPics; }$/;"	f	class:TDecTop
getNoRaslOutputFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getNoRaslOutputFlag() const                            { return m_noRaslOutputFlag;                                    }$/;"	f	class:TComSlice
getNonPackedConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getNonPackedConstraintFlag() const          { return m_nonPackedConstraintFlag;     }$/;"	f	class:ProfileTierLevel
getNonPackedConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getNonPackedConstraintFlag() const                    { return m_nonPackedConstraintFlag; }$/;"	f	class:TEncCfg
getNumAQPartInHeight	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                   getNumAQPartInHeight()  { return m_uiNumAQPartInHeight; }$/;"	f	class:TEncPicQPAdaptationLayer
getNumAQPartInWidth	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                   getNumAQPartInWidth()   { return m_uiNumAQPartInWidth;  }$/;"	f	class:TEncPicQPAdaptationLayer
getNumAllocatedSlice	source/Lib/TLibCommon/TComPic.h	/^  UInt          getNumAllocatedSlice() const      {return m_picSym.getNumAllocatedSlice();}$/;"	f	class:TComPic
getNumAllocatedSlice	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getNumAllocatedSlice() const                          { return UInt(m_apSlices.size());       }$/;"	f	class:TComPicSym
getNumBitsLeft	source/Lib/TLibCommon/TComBitStream.h	/^  UInt getNumBitsLeft() { return 8*((UInt)m_fifo.size() - m_fifo_idx) + m_num_held_bits; }$/;"	f	class:TComInputBitstream
getNumBitsRead	source/Lib/TLibCommon/TComBitStream.h	/^  UInt  getNumBitsRead() { return m_numBitsRead; }$/;"	f	class:TComInputBitstream
getNumBitsUntilByteAligned	source/Lib/TLibCommon/TComBitCounter.h	/^  Int         getNumBitsUntilByteAligned() const                              { return (8 - m_uiBitCounter) & 0x7;}$/;"	f	class:TComBitCounter
getNumBitsUntilByteAligned	source/Lib/TLibCommon/TComBitStream.h	/^  Int getNumBitsUntilByteAligned() const { return (8 - m_num_held_bits) & 0x7; }$/;"	f	class:TComOutputBitstream
getNumBitsUntilByteAligned	source/Lib/TLibCommon/TComBitStream.h	/^  UInt getNumBitsUntilByteAligned() { return m_num_held_bits & (0x7); }$/;"	f	class:TComInputBitstream
getNumColumnsMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getNumColumnsMinus1            ()                            { return m_iNumColumnsMinus1; }$/;"	f	class:TEncCfg
getNumExtraSliceHeaderBits	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getNumExtraSliceHeaderBits() const                               { return m_numExtraSliceHeaderBits;             }$/;"	f	class:TComPPS
getNumHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getNumHrdParameters() const                          { return m_numHrdParameters;                                       }$/;"	f	class:TComVPS
getNumLongTermRefPicSPS	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getNumLongTermRefPicSPS() const                                                 { return m_numLongTermRefPicSPS;                                       }$/;"	f	class:TComSPS
getNumPartInCtuHeight	source/Lib/TLibCommon/TComPic.h	/^  UInt          getNumPartInCtuHeight() const      { return m_picSym.getNumPartInCtuHeight();  }$/;"	f	class:TComPic
getNumPartInCtuHeight	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getNumPartInCtuHeight() const                         { return m_numPartInCtuHeight;   }$/;"	f	class:TComPicSym
getNumPartInCtuWidth	source/Lib/TLibCommon/TComPic.h	/^  UInt          getNumPartInCtuWidth() const       { return m_picSym.getNumPartInCtuWidth();   }$/;"	f	class:TComPic
getNumPartInCtuWidth	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getNumPartInCtuWidth() const                          { return m_numPartInCtuWidth;    }$/;"	f	class:TComPicSym
getNumPartitions	source/Lib/TLibCommon/TComDataCU.cpp	/^UChar TComDataCU::getNumPartitions(const UInt uiAbsPartIdx) const$/;"	f	class:TComDataCU
getNumPartitionsInCtu	source/Lib/TLibCommon/TComPic.h	/^  UInt          getNumPartitionsInCtu() const      { return m_picSym.getNumPartitionsInCtu();  }$/;"	f	class:TComPic
getNumPartitionsInCtu	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getNumPartitionsInCtu() const                         { return m_numPartitionsInCtu;   }$/;"	f	class:TComPicSym
getNumPic	source/Lib/TLibEncoder/TEncAnalyze.h	/^  UInt    getNumPic()                 const { return  m_uiNumPic;   }$/;"	f	class:TEncAnalyze
getNumPic	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getNumPic()                { return m_numPic;}$/;"	f	class:TEncRCGOP
getNumPixel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getNumPixel()                    { return m_numberOfPixel; }$/;"	f	class:TEncRCSeq
getNumRectRegions	source/Lib/TLibCommon/SEI.h	/^  UInt getNumRectRegions()  const  { return (UInt) m_regions.size(); }$/;"	f	class:SEIRegionalNesting
getNumRefIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int     getNumRefIdc() const                         { return m_numRefIdc;                  }$/;"	f	class:TComReferencePictureSet
getNumRefIdx	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getNumRefIdx( RefPicList e ) const                     { return m_aiNumRefIdx[e];                                      }$/;"	f	class:TComSlice
getNumRefIdxL0DefaultActive	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getNumRefIdxL0DefaultActive() const                              { return m_numRefIdxL0DefaultActive;            }$/;"	f	class:TComPPS
getNumRefIdxL1DefaultActive	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getNumRefIdxL1DefaultActive() const                              { return m_numRefIdxL1DefaultActive;            }$/;"	f	class:TComPPS
getNumRegions	source/Lib/TLibCommon/SEI.h	/^  UInt getNumRegions() const { return (UInt) m_regions.size(); }$/;"	f	class:RegionalSEI
getNumReorderPics	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getNumReorderPics(UInt tlayer) const                                            { return m_numReorderPics[tlayer];                                     }$/;"	f	class:TComSPS
getNumReorderPics	source/Lib/TLibCommon/TComSlice.h	/^  UInt              getNumReorderPics(UInt tLayer) const                 { return m_numReorderPics[tLayer];                                 }$/;"	f	class:TComVPS
getNumReorderPics	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getNumReorderPics               (UInt tlayer) { return m_numReorderPics[tlayer]; }$/;"	f	class:TEncCfg
getNumRnSEIMessage	source/Lib/TLibCommon/SEI.h	/^  UInt getNumRnSEIMessage() const  { return (UInt) m_rnSeiMessages.size(); }$/;"	f	class:SEIRegionalNesting
getNumRowsMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getNumRowsMinus1               ()                            { return m_iNumRowsMinus1; }$/;"	f	class:TEncCfg
getNumRpsCurrTempList	source/Lib/TLibCommon/TComSlice.cpp	/^Int TComSlice::getNumRpsCurrTempList() const$/;"	f	class:TComSlice
getNumTicksPocDiffOneMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int  getNumTicksPocDiffOneMinus1( ) const    { return m_numTicksPocDiffOneMinus1;    }$/;"	f	class:TimingInfo
getNumTicksPocDiffOneMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getNumTicksPocDiffOneMinus1()                         { return m_numTicksPocDiffOneMinus1;    }$/;"	f	class:TEncCfg
getNumTileColumnsMinus1	source/Lib/TLibCommon/TComPicSym.h	/^  Int                getNumTileColumnsMinus1() const                       { return m_numTileColumnsMinus1; }$/;"	f	class:TComPicSym
getNumTileColumnsMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getNumTileColumnsMinus1() const                                  { return m_numTileColumnsMinus1;                }$/;"	f	class:TComPPS
getNumTileRowsMinus1	source/Lib/TLibCommon/TComPicSym.h	/^  Int                getNumTileRowsMinus1() const                          { return m_numTileRowsMinus1;    }$/;"	f	class:TComPicSym
getNumTileRowsMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getNumTileRowsMinus1() const                                     { return m_numTileRowsMinus1;                   }$/;"	f	class:TComPPS
getNumTiles	source/Lib/TLibCommon/TComPicSym.h	/^  Int                getNumTiles() const                                   { return (m_numTileRowsMinus1+1)*(m_numTileColumnsMinus1+1); }$/;"	f	class:TComPicSym
getNumUnitsInTick	source/Lib/TLibCommon/TComSlice.h	/^  UInt getNumUnitsInTick( ) const              { return m_numUnitsInTick;              }$/;"	f	class:TimingInfo
getNumWrittenBits	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^UInt TEncBinCABAC::getNumWrittenBits()$/;"	f	class:TEncBinCABAC
getNumWrittenBits	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^UInt TEncBinCABACCounter::getNumWrittenBits()$/;"	f	class:TEncBinCABACCounter
getNumberOfChecksumErrorsDetected	source/App/TAppDecoder/TAppDecTop.h	/^  UInt  getNumberOfChecksumErrorsDetected() const { return m_cTDecTop.getNumberOfChecksumErrorsDetected(); }$/;"	f	class:TAppDecTop
getNumberOfChecksumErrorsDetected	source/Lib/TLibDecoder/TDecGop.h	/^  UInt getNumberOfChecksumErrorsDetected() const { return m_numberOfChecksumErrorsDetected; }$/;"	f	class:TDecGop
getNumberOfChecksumErrorsDetected	source/Lib/TLibDecoder/TDecTop.h	/^  UInt  getNumberOfChecksumErrorsDetected() const { return m_cGopDecoder.getNumberOfChecksumErrorsDetected(); }$/;"	f	class:TDecTop
getNumberOfCtusInFrame	source/Lib/TLibCommon/TComPic.h	/^  UInt          getNumberOfCtusInFrame() const     { return m_picSym.getNumberOfCtusInFrame(); }$/;"	f	class:TComPic
getNumberOfCtusInFrame	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getNumberOfCtusInFrame() const                        { return m_numCtusInFrame;              }$/;"	f	class:TComPicSym
getNumberOfLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfLCU()                                   { return m_numberOfLCU; }$/;"	f	class:TEncRCPic
getNumberOfLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfLCU()                 { return m_numberOfLCU; }$/;"	f	class:TEncRCSeq
getNumberOfLevel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfLevel()               { return m_numberOfLevel; }$/;"	f	class:TEncRCSeq
getNumberOfLongtermPictures	source/Lib/TLibCommon/TComSlice.h	/^  Int     getNumberOfLongtermPictures() const          { return m_numberOfLongtermPictures;   }$/;"	f	class:TComReferencePictureSet
getNumberOfNegativePictures	source/Lib/TLibCommon/TComSlice.h	/^  Int     getNumberOfNegativePictures() const          { return m_numberOfNegativePictures;   }$/;"	f	class:TComReferencePictureSet
getNumberOfPictures	source/Lib/TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getNumberOfPictures() const$/;"	f	class:TComReferencePictureSet
getNumberOfPixel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getNumberOfPixel()                                 { return m_numberOfPixel; }$/;"	f	class:TEncRCPic
getNumberOfPositivePictures	source/Lib/TLibCommon/TComSlice.h	/^  Int     getNumberOfPositivePictures() const          { return m_numberOfPositivePictures;   }$/;"	f	class:TComReferencePictureSet
getNumberOfReferencePictureSets	source/Lib/TLibCommon/TComSlice.h	/^  Int                            getNumberOfReferencePictureSets() const                  { return Int(m_referencePictureSets.size());              }$/;"	f	class:TComRPSList
getNumberOfSubstreamSizes	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getNumberOfSubstreamSizes( )                           { return (UInt) m_substreamSizes.size();                        }$/;"	f	class:TComSlice
getNumberOfTileRects	source/Lib/TLibCommon/SEI.h	/^      Int  getNumberOfTileRects() const$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
getNumberOfTileSets	source/Lib/TLibCommon/SEI.h	/^  Int  getNumberOfTileSets()                 const { return Int(m_tile_set_data.size()); }$/;"	f	class:SEITempMotionConstrainedTileSets
getNumberOfTimesets	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getNumberOfTimesets()                                        { return m_timeCodeSEINumTs; }$/;"	f	class:TEncCfg
getNumberOfWrittenBits	source/Lib/TLibCommon/TComBitCounter.h	/^  UInt        getNumberOfWrittenBits() const                                  { return m_uiBitCounter; }$/;"	f	class:TComBitCounter
getNumberOfWrittenBits	source/Lib/TLibCommon/TComBitStream.h	/^  UInt getNumberOfWrittenBits() const { return UInt(m_fifo.size()) * 8 + m_num_held_bits; }$/;"	f	class:TComOutputBitstream
getNumberOfWrittenBits	source/Lib/TLibEncoder/TEncCavlc.h	/^  UInt  getNumberOfWrittenBits()                { return  m_pcBitIf->getNumberOfWrittenBits();  }$/;"	f	class:TEncCavlc
getNumberOfWrittenBits	source/Lib/TLibEncoder/TEncEntropy.h	/^  UInt    getNumberOfWrittenBits    ()                        { return m_pcEntropyCoderIf->getNumberOfWrittenBits(); }$/;"	f	class:TEncEntropy
getNumberOfWrittenBits	source/Lib/TLibEncoder/TEncSbac.h	/^  UInt  getNumberOfWrittenBits ()                { return m_pcBinIf->getNumWrittenBits(); }$/;"	f	class:TEncSbac
getNumberValidChannelTypes	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt        getNumberValidChannelTypes(const ChromaFormat fmt)                       { return (fmt==CHROMA_400) ? 1 : MAX_NUM_CHANNEL_TYPE;               }$/;"	f
getNumberValidComponents	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt        getNumberValidComponents  (const ChromaFormat fmt)                       { return (fmt==CHROMA_400) ? 1 : MAX_NUM_COMPONENT;                  }$/;"	f
getNumberValidComponents	source/Lib/TLibCommon/TComPic.h	/^  Int           getNumberValidComponents() const                  { return m_apcPicYuv[PIC_YUV_REC]->getNumberValidComponents(); }$/;"	f	class:TComPic
getNumberValidComponents	source/Lib/TLibCommon/TComPicYuv.h	/^  UInt          getNumberValidComponents() const { return ::getNumberValidComponents(m_chromaFormatIDC); }$/;"	f	class:TComPicYuv
getNumberValidComponents	source/Lib/TLibCommon/TComYuv.h	/^  UInt         getNumberValidComponents   ()                     const { return ::getNumberValidComponents(m_chromaFormatIDC); }$/;"	f	class:TComYuv
getOmniViewportSEIAzimuthCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getOmniViewportSEIAzimuthCentre(Int idx)                     { return m_omniViewportSEIAzimuthCentre[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getOmniViewportSEICancelFlag()                               { return m_omniViewportSEICancelFlag; }$/;"	f	class:TEncCfg
getOmniViewportSEICntMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEICntMinus1()                                { return m_omniViewportSEICntMinus1; }$/;"	f	class:TEncCfg
getOmniViewportSEIElevationCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getOmniViewportSEIElevationCentre(Int idx)                   { return m_omniViewportSEIElevationCentre[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getOmniViewportSEIEnabled()                                  { return m_omniViewportSEIEnabled; }$/;"	f	class:TEncCfg
getOmniViewportSEIHorRange	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEIHorRange(Int idx)                          { return m_omniViewportSEIHorRange[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEIId	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEIId()                                       { return m_omniViewportSEIId; }$/;"	f	class:TEncCfg
getOmniViewportSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getOmniViewportSEIPersistenceFlag()                          { return m_omniViewportSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getOmniViewportSEITiltCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getOmniViewportSEITiltCentre(Int idx)                        { return m_omniViewportSEITiltCentre[idx]; }$/;"	f	class:TEncCfg
getOmniViewportSEIVerRange	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getOmniViewportSEIVerRange(Int idx)                          { return m_omniViewportSEIVerRange[idx]; }$/;"	f	class:TEncCfg
getOnePictureOnlyConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getOnePictureOnlyConstraintFlag() const     { return m_onePictureOnlyConstraintFlag;}$/;"	f	class:ProfileTierLevel
getOnePictureOnlyConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getOnePictureOnlyConstraintFlag() const               { return m_onePictureOnlyConstraintFlag; }$/;"	f	class:TEncCfg
getOutputFlagPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getOutputFlagPresentFlag() const                                 { return m_OutputFlagPresentFlag;               }$/;"	f	class:TComPPS
getOutputLogControl	source/Lib/TLibEncoder/TEncTop.h	/^  TEncAnalyze::OutputLogControl getOutputLogControl() const$/;"	f	class:TEncTop
getOutputMark	source/Lib/TLibCommon/TComPic.h	/^  Bool          getOutputMark () const      { return m_bNeededForOutput;  }$/;"	f	class:TComPic
getOverscanAppropriateFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getOverscanAppropriateFlag() const                     { return m_overscanAppropriateFlag;              }$/;"	f	class:TComVUI
getOverscanAppropriateFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getOverscanAppropriateFlag()                          { return m_overscanAppropriateFlag; }$/;"	f	class:TEncCfg
getOverscanInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getOverscanInfoPresentFlag() const                     { return m_overscanInfoPresentFlag;              }$/;"	f	class:TComVUI
getOverscanInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getOverscanInfoPresentFlag()                          { return m_overscanInfoPresentFlag; }$/;"	f	class:TEncCfg
getPCMBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getPCMBitDepth(ChannelType type) const                                          { return m_pcmBitDepths[type];                                         }$/;"	f	class:TComSPS
getPCMFilterDisableFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getPCMFilterDisableFlag() const                                                 { return m_bPCMFilterDisableFlag;                                      }$/;"	f	class:TComSPS
getPCMFilterDisableFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPCMFilterDisableFlag         ()      { return m_bPCMFilterDisableFlag;   }$/;"	f	class:TEncCfg
getPCMInputBitDepthFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPCMInputBitDepthFlag         ()      { return m_bPCMInputBitDepthFlag;   }$/;"	f	class:TEncCfg
getPCMLog2MaxSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getPCMLog2MaxSize() const                                                       { return  m_pcmLog2MaxSize;                                            }$/;"	f	class:TComSPS
getPCMLog2MaxSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getPCMLog2MaxSize               ()      { return m_pcmLog2MaxSize;  }$/;"	f	class:TEncCfg
getPCMLog2MinSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getPCMLog2MinSize() const                                                       { return  m_uiPCMLog2MinSize;                                          }$/;"	f	class:TComSPS
getPCMLog2MinSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getPCMLog2MinSize               ()      { return  m_uiPCMLog2MinSize;  }$/;"	f	class:TEncCfg
getPCMSample	source/Lib/TLibCommon/TComDataCU.h	/^  Pel*          getPCMSample                  ( ComponentID component )                                    { return m_pcIPCMSample[component];          }$/;"	f	class:TComDataCU
getPOC	source/Lib/TLibCommon/TComPic.h	/^  Int           getPOC() const                     { return  m_picSym.getSlice(m_uiCurrSliceIdx)->getPOC();  }$/;"	f	class:TComPic
getPOC	source/Lib/TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getPOC(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getPOC	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getPOC() const                                         { return m_iPOC;                                                }$/;"	f	class:TComSlice
getPPS	source/Lib/TLibCommon/TComPicSym.h	/^  const TComPPS&     getPPS()                 const                        { return m_pps; }$/;"	f	class:TComPicSym
getPPS	source/Lib/TLibCommon/TComSlice.h	/^  TComPPS*       getPPS(Int ppsId)                                           { return m_ppsMap.getPS(ppsId); };$/;"	f	class:ParameterSetManager
getPPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComPPS*              getPPS() const                                         { return m_pcPPS;                                               }$/;"	f	class:TComSlice
getPPSChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool           getPPSChangedFlag(Int ppsId) const                          { return m_ppsMap.getChangedFlag(ppsId); }$/;"	f	class:ParameterSetManager
getPPSDeblockingFilterDisabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getPPSDeblockingFilterDisabledFlag() const                       { return m_ppsDeblockingFilterDisabledFlag;     } \/\/!< get offset for deblocking filter disabled$/;"	f	class:TComPPS
getPPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getPPSId() const                                       { return m_iPPSId;                                              }$/;"	f	class:TComSlice
getPPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getPPSId() const                                                 { return m_PPSId;                               }$/;"	f	class:TComPPS
getPS	source/Lib/TLibCommon/TComSlice.h	/^  T* getPS(Int psId)$/;"	f	class:ParameterSetMap
getPS	source/Lib/TLibCommon/TComSlice.h	/^  const T* getPS(Int psId) const$/;"	f	class:ParameterSetMap
getPTL	source/Lib/TLibCommon/TComSlice.h	/^  TComPTL*               getPTL()                                                                        { return &m_pcPTL;                                                     }$/;"	f	class:TComSPS
getPTL	source/Lib/TLibCommon/TComSlice.h	/^  TComPTL*          getPTL()                                             { return &m_pcPTL;                                                 }$/;"	f	class:TComVPS
getPTL	source/Lib/TLibCommon/TComSlice.h	/^  const TComPTL*         getPTL() const                                                                  { return &m_pcPTL;                                                     }$/;"	f	class:TComSPS
getPTL	source/Lib/TLibCommon/TComSlice.h	/^  const TComPTL*    getPTL() const                                       { return &m_pcPTL;                                                 }$/;"	f	class:TComVPS
getPUAbove	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUAbove( UInt& uiAPartUnitIdx,$/;"	f	class:TComDataCU
getPUAboveLeft	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUAboveLeft( UInt& uiALPartUnitIdx, UInt uiCurrPartUnitIdx, Bool bEnforceSliceRestriction ) const$/;"	f	class:TComDataCU
getPUAboveRight	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUAboveRight(UInt&  uiARPartUnitIdx, UInt uiCurrPartUnitIdx, UInt uiPartUnitOffset, Bool bEnforceSliceRestriction) const$/;"	f	class:TComDataCU
getPUBelowLeft	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPUBelowLeft(UInt& uiBLPartUnitIdx,  UInt uiCurrPartUnitIdx, UInt uiPartUnitOffset, Bool bEnforceSliceRestriction) const$/;"	f	class:TComDataCU
getPULeft	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getPULeft( UInt& uiLPartUnitIdx,$/;"	f	class:TComDataCU
getPad	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getPad                          ( Int i )      { assert (i < 2 );                      return  m_aiPad[i]; }$/;"	f	class:TEncCfg
getPartIndexAndSize	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getPartIndexAndSize( UInt uiPartIdx, UInt& ruiPartAddr, Int& riWidth, Int& riHeight ) const$/;"	f	class:TComDataCU
getPartPosition	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::getPartPosition( UInt partIdx, Int& xP, Int& yP, Int& nPSW, Int& nPSH) const$/;"	f	class:TComDataCU
getPartitionSize	source/Lib/TLibCommon/TComDataCU.h	/^  PartSize      getPartitionSize              ( UInt uiIdx ) const                                         { return static_cast<PartSize>( m_pePartSize[uiIdx] ); }$/;"	f	class:TComDataCU
getPartitionSize	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        getPartitionSize              ( )                                                          { return m_pePartSize;                       }$/;"	f	class:TComDataCU
getPartitionSize	source/Lib/TLibCommon/TComPicSym.h	/^    PartSize getPartitionSize( const UInt absPartAddr ) const { return static_cast<PartSize>( m_pePartSize[absPartAddr] ); }$/;"	f	struct:TComPicSym::DPBPerCtuData
getPatternLStride	source/Lib/TLibCommon/TComPattern.h	/^  Int   getPatternLStride() const { return m_patternStride;  }$/;"	f	class:TComPattern
getPcPic	source/Lib/TLibDecoder/TDecTop.h	/^  TComPic* getPcPic() const { return m_pcPic; }$/;"	f	class:TDecTop
getPersistentRiceAdaptationEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getPersistentRiceAdaptationEnabledFlag() const                                  { return m_persistentRiceAdaptationEnabledFlag;  }$/;"	f	class:TComSPSRExt
getPersistentRiceAdaptationEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getPersistentRiceAdaptationEnabledFlag          ()                 const { return m_persistentRiceAdaptationEnabledFlag;  }$/;"	f	class:TEncCfg
getPic	source/Lib/TLibCommon/TComDataCU.h	/^  TComPic*         getPic                     ( )                                                          { return m_pcPic;                            }$/;"	f	class:TComDataCU
getPic	source/Lib/TLibCommon/TComDataCU.h	/^  const TComPic*   getPic                     ( ) const                                                    { return m_pcPic;                            }$/;"	f	class:TComDataCU
getPic	source/Lib/TLibCommon/TComSlice.h	/^  TComPic*                    getPic()                                               { return m_pcPic;                                               }$/;"	f	class:TComSlice
getPic	source/Lib/TLibCommon/TComSlice.h	/^  const TComPic*              getPic() const                                         { return m_pcPic;                                               }$/;"	f	class:TComSlice
getPicActualBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicActualBits()                                 { return m_picActualBits; }$/;"	f	class:TEncRCPic
getPicActualHeaderBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicActualHeaderBits()                           { return m_picActualHeaderBits; }$/;"	f	class:TEncRCPic
getPicActualLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getPicActualLambda()                             { return m_picLambda; }$/;"	f	class:TEncRCPic
getPicActualQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicActualQP()                                   { return m_picQP; }$/;"	f	class:TEncRCPic
getPicDurationInTcMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getPicDurationInTcMinus1( Int layer ) const                                { return m_HRD[layer].picDurationInTcMinus1;                 }$/;"	f	class:TComHRD
getPicEstLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getPicEstLambda()                                { return m_estPicLambda; }$/;"	f	class:TEncRCPic
getPicEstQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicEstQP()                                      { return m_estPicQP; }$/;"	f	class:TEncRCPic
getPicHeight	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicHeight()                   { return m_picHeight; }$/;"	f	class:TEncRCSeq
getPicHeightInLumaSamples	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getPicHeightInLumaSamples() const                                               { return  m_picHeightInLumaSamples;                                    }$/;"	f	class:TComSPS
getPicInitQPMinus26	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getPicInitQPMinus26() const                                      { return  m_picInitQPMinus26;                   }$/;"	f	class:TComPPS
getPicLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicLeft()               { return m_picLeft; }$/;"	f	class:TEncRCGOP
getPicList	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  list<TEncRCPic*>& getPicList() { return m_listRCPictures; }$/;"	f	class:TEncRateCtrl
getPicMSE	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getPicMSE()                                      { return m_picMSE; }$/;"	f	class:TEncRCPic
getPicOutputFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getPicOutputFlag() const                               { return m_PicOutputFlag;                                       }$/;"	f	class:TComSlice
getPicPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter   getPicPara( Int level )                        { assert( level < m_numberOfLevel ); return m_picPara[level]; }$/;"	f	class:TEncRCSeq
getPicPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter*  getPicPara()                                   { return m_picPara; }$/;"	f	class:TEncRCSeq
getPicSym	source/Lib/TLibCommon/TComPic.h	/^  TComPicSym*   getPicSym()                        { return  &m_picSym;    }$/;"	f	class:TComPic
getPicSym	source/Lib/TLibCommon/TComPic.h	/^  const TComPicSym* getPicSym() const              { return  &m_picSym;    }$/;"	f	class:TComPic
getPicWidth	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPicWidth()                    { return m_picWidth; }$/;"	f	class:TEncRCSeq
getPicWidthInLumaSamples	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getPicWidthInLumaSamples() const                                                { return  m_picWidthInLumaSamples;                                     }$/;"	f	class:TComSPS
getPicYuvDisp	source/Lib/TLibCommon/TComPic.cpp	/^TComPicYuv* TComPic::getPicYuvDisp()$/;"	f	class:TComPic
getPicYuvOrg	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvOrg()        { return  m_apcPicYuv[PIC_YUV_ORG]; }$/;"	f	class:TComPic
getPicYuvPred	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvPred()       { return  m_pcPicYuvPred; }$/;"	f	class:TComPic
getPicYuvRec	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvRec()        { return  m_apcPicYuv[PIC_YUV_REC]; }$/;"	f	class:TComPic
getPicYuvResi	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvResi()       { return  m_pcPicYuvResi; }$/;"	f	class:TComPic
getPicYuvTrueOrg	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*   getPicYuvTrueOrg()        { return  m_apcPicYuv[PIC_YUV_TRUE_ORG]; }$/;"	f	class:TComPic
getPictureTimingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getPictureTimingSEIEnabled() const                           { return m_pictureTimingSEIEnabled; }$/;"	f	class:TEncCfg
getPixelsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getPixelsLeft()                                    { return m_pixelsLeft; }$/;"	f	class:TEncRCPic
getPocLSBLT	source/Lib/TLibCommon/TComSlice.h	/^  Int     getPocLSBLT(Int i) const                     { return m_pocLSBLT[i];               }$/;"	f	class:TComReferencePictureSet
getPocProportionalToTimingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getPocProportionalToTimingFlag( ) const { return m_pocProportionalToTimingFlag; }$/;"	f	class:TimingInfo
getPocProportionalToTimingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getPocProportionalToTimingFlag()                      { return m_pocProportionalToTimingFlag; }$/;"	f	class:TEncCfg
getPpsRangeExtension	source/Lib/TLibCommon/TComSlice.h	/^  TComPPSRExt&           getPpsRangeExtension()                                           { return m_ppsRangeExtension;                   }$/;"	f	class:TComPPS
getPpsRangeExtension	source/Lib/TLibCommon/TComSlice.h	/^  const TComPPSRExt&     getPpsRangeExtension() const                                     { return m_ppsRangeExtension;                   }$/;"	f	class:TComPPS
getPreDBFStatistics	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::getPreDBFStatistics(TComPic* pPic)$/;"	f	class:TEncSampleAdaptiveOffset
getPredSearch	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSearch*             getPredSearch         () { return  &m_cSearch;              }$/;"	f	class:TEncTop
getPredictionMode	source/Lib/TLibCommon/TComDataCU.h	/^  PredMode      getPredictionMode             ( UInt uiIdx ) const                                         { return static_cast<PredMode>( m_pePredMode[uiIdx] ); }$/;"	f	class:TComDataCU
getPredictionMode	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        getPredictionMode             ( )                                                          { return m_pePredMode;                       }$/;"	f	class:TComDataCU
getPredictorPtr	source/Lib/TLibCommon/TComPrediction.h	/^  Pel*  getPredictorPtr           ( const ComponentID compID, const Bool bUseFilteredPredictions )$/;"	f	class:TComPrediction
getPrintFrameMSE	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPrintFrameMSE                ()         const { return m_printFrameMSE;              }$/;"	f	class:TEncCfg
getPrintHexPsnr	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPrintHexPsnr                 ()         const { return m_printHexPsnr;               }$/;"	f	class:TEncCfg
getPrintMSEBasedSequencePSNR	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPrintMSEBasedSequencePSNR    ()         const { return m_printMSEBasedSequencePSNR;  }$/;"	f	class:TEncCfg
getPrintMSSSIM	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPrintMSSSIM                  ()         const { return m_printMSSSIM;               }$/;"	f	class:TEncCfg
getPrintSequenceMSE	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getPrintSequenceMSE             ()         const { return m_printSequenceMSE;           }$/;"	f	class:TEncCfg
getProfileCompatibilityFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getProfileCompatibilityFlag(Int i) const    { return m_profileCompatibilityFlag[i]; }$/;"	f	class:ProfileTierLevel
getProfileFeatures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    const ProfileFeatures     *getProfileFeatures()   const { return m_pProfile; }$/;"	f	class:ProfileLevelTierFeatures
getProfileFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^    const ProfileFeatures     *getProfileFeatures()   const { return m_pProfile; }$/;"	f	class:ProfileLevelTierFeatures
getProfileIdc	source/Lib/TLibCommon/TComSlice.h	/^  Profile::Name getProfileIdc() const                       { return m_profileIdc;                  }$/;"	f	class:ProfileTierLevel
getProfileSpace	source/Lib/TLibCommon/TComSlice.h	/^  Int           getProfileSpace() const                     { return m_profileSpace;                }$/;"	f	class:ProfileTierLevel
getProgressiveSourceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool          getProgressiveSourceFlag() const            { return m_progressiveSourceFlag;       }$/;"	f	class:ProfileTierLevel
getProgressiveSourceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getProgressiveSourceFlag() const                      { return m_progressiveSourceFlag; }$/;"	f	class:TEncCfg
getPsnr	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Double  getPsnr(ComponentID compID) const { return  m_runningTotal.psnr[compID];  }$/;"	f	class:TEncAnalyze
getQP	source/Lib/TLibCommon/TComDataCU.h	/^  SChar         getQP                         ( UInt uiIdx ) const                                         { return m_phQP[uiIdx];                      }$/;"	f	class:TComDataCU
getQP	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        getQP                         ( )                                                          { return m_phQP;                             }$/;"	f	class:TComDataCU
getQPAdaptationRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getQPAdaptationRange            () const { return  m_iQPAdaptationRange; }$/;"	f	class:TEncCfg
getQPAdaptationUnit	source/Lib/TLibEncoder/TEncPic.h	/^  TEncQPAdaptationUnit*  getQPAdaptationUnit()   { return m_acTEncAQU;           }$/;"	f	class:TEncPicQPAdaptationLayer
getQPForPicture	source/Lib/TLibEncoder/TEncTop.cpp	/^Int TEncCfg::getQPForPicture(const UInt gopIndex, const TComSlice *pSlice) const$/;"	f	class:TEncCfg
getQpBDOffset	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getQpBDOffset(ChannelType type) const                                           { return m_qpBDOffset[type];                                           }$/;"	f	class:TComSPS
getQpDelta	source/Lib/TLibCommon/TComTrQuant.h	/^  Int     getQpDelta(Int qp) { return m_qpDelta[qp]; }$/;"	f	class:TComTrQuant
getQpMinCuAbove	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getQpMinCuAbove( UInt& uiAPartUnitIdx, UInt uiCurrAbsIdxInCtu ) const$/;"	f	class:TComDataCU
getQpMinCuLeft	source/Lib/TLibCommon/TComDataCU.cpp	/^const TComDataCU* TComDataCU::getQpMinCuLeft( UInt& uiLPartUnitIdx, UInt uiCurrAbsIdxInCtu ) const$/;"	f	class:TComDataCU
getQpOffset	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getQpOffset(ComponentID compID) const$/;"	f	class:TComPPS
getQtRootCbf	source/Lib/TLibCommon/TComDataCU.cpp	/^UChar TComDataCU::getQtRootCbf( UInt uiIdx ) const$/;"	f	class:TComDataCU
getQuadtreeTULog2MaxSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTULog2MaxSize() const                                                { return m_uiQuadtreeTULog2MaxSize;                                    }$/;"	f	class:TComSPS
getQuadtreeTULog2MaxSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTULog2MaxSize        ()      const { return m_uiQuadtreeTULog2MaxSize; }$/;"	f	class:TEncCfg
getQuadtreeTULog2MinSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTULog2MinSize() const                                                { return m_uiQuadtreeTULog2MinSize;                                    }$/;"	f	class:TComSPS
getQuadtreeTULog2MinSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTULog2MinSize        ()      const { return m_uiQuadtreeTULog2MinSize; }$/;"	f	class:TEncCfg
getQuadtreeTULog2MinSizeInCU	source/Lib/TLibCommon/TComDataCU.cpp	/^UInt TComDataCU::getQuadtreeTULog2MinSizeInCU( UInt absPartIdx ) const$/;"	f	class:TComDataCU
getQuadtreeTUMaxDepthInter	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTUMaxDepthInter() const                                              { return m_uiQuadtreeTUMaxDepthInter;                                  }$/;"	f	class:TComSPS
getQuadtreeTUMaxDepthInter	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTUMaxDepthInter      ()      const { return m_uiQuadtreeTUMaxDepthInter; }$/;"	f	class:TEncCfg
getQuadtreeTUMaxDepthIntra	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getQuadtreeTUMaxDepthIntra() const                                              { return m_uiQuadtreeTUMaxDepthIntra;                                  }$/;"	f	class:TComSPS
getQuadtreeTUMaxDepthIntra	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getQuadtreeTUMaxDepthIntra      ()      const { return m_uiQuadtreeTUMaxDepthIntra; }$/;"	f	class:TEncCfg
getQuantCoeff	source/Lib/TLibCommon/TComTrQuant.h	/^  Int* getQuantCoeff                    ( UInt list, Int qp, UInt size ) { return m_quantCoef            [size][list][qp]; };  \/\/!< get Quant Coefficent$/;"	f	class:TComTrQuant
getRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP*      getRCGOP()                              { return m_encRCGOP; }$/;"	f	class:TEncRCPic
getRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP* getRCGOP()          { assert ( m_encRCGOP != NULL ); return m_encRCGOP; }$/;"	f	class:TEncRateCtrl
getRCPic	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCPic* getRCPic()          { assert ( m_encRCPic != NULL ); return m_encRCPic; }$/;"	f	class:TEncRateCtrl
getRCQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int        getRCQP ()         { return m_RCQP; }$/;"	f	class:TEncRateCtrl
getRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* getRCSeq()          { assert ( m_encRCSeq != NULL ); return m_encRCSeq; }$/;"	f	class:TEncRateCtrl
getRCSequence	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq*      getRCSequence()                         { return m_encRCSeq; }$/;"	f	class:TEncRCPic
getRDGoOnSbacCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSbac*               getRDGoOnSbacCoder    () { return  &m_cRDGoOnSbacCoder;     }$/;"	f	class:TEncTop
getRDSbacCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSbac***             getRDSbacCoder        () { return  m_pppcRDSbacCoder;       }$/;"	f	class:TEncTop
getRDpenalty	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getRDpenalty                    ()      { return m_rdPenalty;  }$/;"	f	class:TEncCfg
getRNId	source/Lib/TLibCommon/SEI.h	/^  UInt getRNId()            const  { return m_rnId; }$/;"	f	class:SEIRegionalNesting
getROIY	source/Lib/TLibCommon/TComPattern.h	/^  __inline Pel*  getROIY()$/;"	f	class:TComPattern
getROIY	source/Lib/TLibCommon/TComPattern.h	/^  __inline const Pel*  getROIY() const$/;"	f	class:TComPattern
getROIYHeight	source/Lib/TLibCommon/TComPattern.h	/^  Int   getROIYHeight() const     { return m_roiHeight;      }$/;"	f	class:TComPattern
getROIYPosX	source/Lib/TLibCommon/TComPattern.h	/^  Int   getROIYPosX() const       { return m_roiPosX; }$/;"	f	class:TComPattern
getROIYPosY	source/Lib/TLibCommon/TComPattern.h	/^  Int   getROIYPosY() const       { return m_roiPosY; }$/;"	f	class:TComPattern
getROIYWidth	source/Lib/TLibCommon/TComPattern.h	/^  Int   getROIYWidth() const      { return m_roiWidth;       }$/;"	f	class:TComPattern
getRPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComReferencePictureSet* getRPS()                                            { return m_pRPS;                                                }$/;"	f	class:TComSlice
getRPSList	source/Lib/TLibCommon/TComSlice.h	/^  TComRPSList*           getRPSList()                                                                    { return &m_RPSList;                                                   }$/;"	f	class:TComSPS
getRPSList	source/Lib/TLibCommon/TComSlice.h	/^  const TComRPSList*     getRPSList() const                                                              { return &m_RPSList;                                                   }$/;"	f	class:TComSPS
getRPSidx	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getRPSidx() const                                      { return m_rpsIdx;                                              }$/;"	f	class:TComSlice
getRapPicFlag	source/Lib/TLibCommon/TComSlice.cpp	/^Bool TComSlice::getRapPicFlag() const$/;"	f	class:TComSlice
getRateCtrl	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncRateCtrl* getRateCtrl()       { return m_pcRateCtrl;  }$/;"	f	class:TEncGOP
getRateCtrl	source/Lib/TLibEncoder/TEncTop.h	/^  TEncRateCtrl*           getRateCtrl           () { return &m_cRateCtrl;             }$/;"	f	class:TEncTop
getRdCost	source/Lib/TLibEncoder/TEncTop.h	/^  TComRdCost*             getRdCost             () { return  &m_cRdCost;              }$/;"	f	class:TEncTop
getRdpcmEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getRdpcmEnabledFlag(const RDPCMSignallingMode signallingMode) const             { return m_rdpcmEnabledFlag[signallingMode];     }$/;"	f	class:TComSPSRExt
getRdpcmEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getRdpcmEnabledFlag                             (const RDPCMSignallingMode signallingMode)        const      { return m_rdpcmEnabledFlag[signallingMode];  }$/;"	f	class:TEncCfg
getReWriteParamSetsFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getReWriteParamSetsFlag         ()      { return m_bReWriteParamSetsFlag; }$/;"	f	class:TEncCfg
getReconMark	source/Lib/TLibCommon/TComPic.h	/^  Bool          getReconMark () const      { return m_bReconstructed;  }$/;"	f	class:TComPic
getRecoveryPointSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getRecoveryPointSEIEnabled() const                           { return m_recoveryPointSEIEnabled; }$/;"	f	class:TEncCfg
getRect	source/Lib/TLibCommon/TComTU.h	/^    const TComRectangle &getRect(const ComponentID compID)     const { return mRect[compID];    }$/;"	f	class:TComTU
getRefIdc	source/Lib/TLibCommon/TComSlice.cpp	/^Int  TComReferencePictureSet::getRefIdc(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getRefIdx	source/Lib/TLibCommon/TComMotionInfo.h	/^  Int            getRefIdx( Int iIdx ) const { return  m_piRefIdx[iIdx]; }$/;"	f	class:TComCUMvField
getRefIdx	source/Lib/TLibCommon/TComMotionInfo.h	/^  Int getRefIdx() const { return  m_iRefIdx;       }$/;"	f	class:TComMvField
getRefMatrixId	source/Lib/TLibCommon/TComSlice.h	/^  UInt       getRefMatrixId(UInt sizeId, UInt listId) const                     { return m_refMatrixId[sizeId][listId];                      } \/\/!< get reference matrix ID$/;"	f	class:TComScalingList
getRefPOC	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getRefPOC( RefPicList e, Int iRefIdx) const            { return m_aiRefPOCList[e][iRefIdx];                            }$/;"	f	class:TComSlice
getRefPUPartPos	source/Lib/TLibCommon/TComPrediction.cpp	/^Void getRefPUPartPos(TComDataCU* pcCU, TComMv& cMv, Int uiPartIdx, Int& ruiPredXLeft, Int& ruiPredYTop, Int& ruiPredXRight, Int& ruiPredYBottom, Int iWidth, Int iHeight)$/;"	f
getRefPic	source/Lib/TLibCommon/TComSlice.h	/^  TComPic*                    getRefPic( RefPicList e, Int iRefIdx)                  { return m_apcRefPicList[e][iRefIdx];                           }$/;"	f	class:TComSlice
getRefPic	source/Lib/TLibCommon/TComSlice.h	/^  const TComPic*              getRefPic( RefPicList e, Int iRefIdx) const            { return m_apcRefPicList[e][iRefIdx];                           }$/;"	f	class:TComSlice
getRefPicListModification	source/Lib/TLibCommon/TComSlice.h	/^  TComRefPicListModification* getRefPicListModification()                            { return &m_RefPicListModification;                             }$/;"	f	class:TComSlice
getRefPicListModificationFlagL0	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getRefPicListModificationFlagL0() const        { return m_refPicListModificationFlagL0;                                  }$/;"	f	class:TComRefPicListModification
getRefPicListModificationFlagL1	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getRefPicListModificationFlagL1() const        { return m_refPicListModificationFlagL1;                                  }$/;"	f	class:TComRefPicListModification
getRefPicSetIdxL0	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getRefPicSetIdxL0(UInt idx) const              { assert(idx<REF_PIC_LIST_NUM_IDX); return m_RefPicSetIdxL0[idx];         }$/;"	f	class:TComRefPicListModification
getRefPicSetIdxL1	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getRefPicSetIdxL1(UInt idx) const              { assert(idx<REF_PIC_LIST_NUM_IDX); return m_RefPicSetIdxL1[idx];         }$/;"	f	class:TComRefPicListModification
getRefQP	source/Lib/TLibCommon/TComDataCU.cpp	/^SChar TComDataCU::getRefQP( UInt uiCurrAbsIdxInCtu ) const$/;"	f	class:TComDataCU
getReferencePictureSet	source/Lib/TLibCommon/TComSlice.h	/^  TComReferencePictureSet*       getReferencePictureSet(Int referencePictureSetNum)       { return &m_referencePictureSets[referencePictureSetNum]; }$/;"	f	class:TComRPSList
getReferencePictureSet	source/Lib/TLibCommon/TComSlice.h	/^  const TComReferencePictureSet* getReferencePictureSet(Int referencePictureSetNum) const { return &m_referencePictureSets[referencePictureSetNum]; }$/;"	f	class:TComRPSList
getReferencePictureSetIdxForSOP	source/Lib/TLibEncoder/TEncTop.cpp	/^Int TEncTop::getReferencePictureSetIdxForSOP(Int POCCurr, Int GOPid )$/;"	f	class:TEncTop
getRefineBitsForIntra	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::getRefineBitsForIntra( Int orgBits )$/;"	f	class:TEncRCPic
getRegionId	source/Lib/TLibCommon/TypeDef.h	/^  Int  getRegionId() const     { return getWindowEnabledFlag() ? m_regionId : 0;    }$/;"	f	class:RNSEIWindow
getRegionalNestingSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::string &getRegionalNestingSEIFileRoot() const           { return m_regionalNestingSEIFileRoot; }$/;"	f	class:TEncCfg
getRegions	source/Lib/TLibCommon/SEI.h	/^  const RNSEIWindowVec& getRegions() { return m_regions; }$/;"	f	class:RegionalSEI
getRegions	source/Lib/TLibCommon/SEI.h	/^  const std::vector<RNSEIWindow> &getRegions() const { return m_regions; }$/;"	f	class:SEIRegionalNesting
getResetEncoderStateAfterIRAP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getResetEncoderStateAfterIRAP() const                        { return m_resetEncoderStateAfterIRAP; }$/;"	f	class:TEncCfg
getRestrictMESampling	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getRestrictMESampling              () const { return m_bRestrictMESampling; }$/;"	f	class:TEncCfg
getRestrictedRefPicListsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getRestrictedRefPicListsFlag() const                   { return m_restrictedRefPicListsFlag;            }$/;"	f	class:TComVUI
getRightEdgePosInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      getRightEdgePosInCtus  () const              { return m_rightEdgePosInCtus; }$/;"	f	class:TComTile
getRnSEIMessages	source/Lib/TLibCommon/SEI.h	/^  const std::vector< SEIListOfIndices >& getRnSEIMessages() const { return m_rnSeiMessages; }$/;"	f	class:SEIRegionalNesting
getRowHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt  getRowHeight                   ( UInt rowIdx )               { return m_tileRowHeight[rowIdx]; }$/;"	f	class:TEncCfg
getRpcListPic	source/Lib/TLibDecoder/TDecTop.h	/^  TComList<TComPic*>*  getRpcListPic()  { return &m_cListPic; };$/;"	f	class:TDecTop
getRwpSEIConstituentPictureMatchingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIConstituentPictureMatchingFlag ()                                                   { return m_rwpSEIConstituentPictureMatchingFlag; }$/;"	f	class:TEncCfg
getRwpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIEnabled()                                                                           { return m_rwpSEIEnabled; }$/;"	f	class:TEncCfg
getRwpSEINumPackedRegions	source/Lib/TLibEncoder/TEncCfg.h	/^  Int      getRwpSEINumPackedRegions ()                                                                 { return m_rwpSEINumPackedRegions; }$/;"	f	class:TEncCfg
getRwpSEIPackedPictureHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIPackedPictureHeight ()                                                              { return m_rwpSEIPackedPictureHeight; }$/;"	f	class:TEncCfg
getRwpSEIPackedPictureWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIPackedPictureWidth ()                                                               { return m_rwpSEIPackedPictureWidth; }$/;"	f	class:TEncCfg
getRwpSEIPackedRegionHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionHeight(UInt idx) const                                                   { return m_rwpSEIPackedRegionHeight[idx]; } $/;"	f	class:TEncCfg
getRwpSEIPackedRegionLeft	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionLeft(UInt idx) const                                                     { return m_rwpSEIPackedRegionLeft[idx]; }$/;"	f	class:TEncCfg
getRwpSEIPackedRegionTop	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionTop(UInt idx) const                                                      { return m_rwpSEIPackedRegionTop[idx]; } $/;"	f	class:TEncCfg
getRwpSEIPackedRegionWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort  getRwpSEIPackedRegionWidth(UInt idx) const                                                    { return m_rwpSEIPackedRegionWidth[idx]; } $/;"	f	class:TEncCfg
getRwpSEIProjPictureHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIProjPictureHeight ()                                                                { return m_rwpSEIProjPictureHeight; }$/;"	f	class:TEncCfg
getRwpSEIProjPictureWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int      getRwpSEIProjPictureWidth ()                                                                 { return m_rwpSEIProjPictureWidth; }$/;"	f	class:TEncCfg
getRwpSEIProjRegionHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIProjRegionHeight(UInt idx) const                                                    { return m_rwpSEIProjRegionHeight[idx]; } $/;"	f	class:TEncCfg
getRwpSEIProjRegionLeft	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIProjRegionLeft(UInt idx) const                                                      { return m_rwpSEIProjRegionLeft[idx]; } $/;"	f	class:TEncCfg
getRwpSEIProjRegionWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIProjRegionWidth(UInt idx) const                                                     { return m_rwpSEIProjRegionWidth[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpBottomGuardBandHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpBottomGuardBandHeight(UInt idx) const                                             { return m_rwpSEIRwpBottomGuardBandHeight[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIRwpCancelFlag()                                                                     { return m_rwpSEIRwpCancelFlag; }$/;"	f	class:TEncCfg
getRwpSEIRwpGuardBandFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIRwpGuardBandFlag(UInt idx) const                                                    { return m_rwpSEIRwpGuardBandFlag[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpGuardBandNotUsedForPredFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool    getRwpSEIRwpGuardBandNotUsedForPredFlag(UInt idx) const                                         { return m_rwpSEIRwpGuardBandNotUsedForPredFlag[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpGuardBandType	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpGuardBandType(UInt idx) const                                                       { return m_rwpSEIRwpGuardBandType[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpLeftGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpLeftGuardBandWidth(UInt idx) const                                                { return m_rwpSEIRwpLeftGuardBandWidth[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getRwpSEIRwpPersistenceFlag ()                                                               { return m_rwpSEIRwpPersistenceFlag; }$/;"	f	class:TEncCfg
getRwpSEIRwpRightGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpRightGuardBandWidth(UInt idx) const                                               { return m_rwpSEIRwpRightGuardBandWidth[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpSEIProjRegionTop	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getRwpSEIRwpSEIProjRegionTop(UInt idx) const                                                 { return m_rwpSEIRwpSEIProjRegionTop[idx]; } $/;"	f	class:TEncCfg
getRwpSEIRwpTopGuardBandHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar   getRwpSEIRwpTopGuardBandHeight(UInt idx) const                                                { return m_rwpSEIRwpTopGuardBandHeight[idx]; }$/;"	f	class:TEncCfg
getRwpSEIRwpTransformType	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar    getRwpSEIRwpTransformType(UInt idx) const                                                    { return m_rwpSEIRwpTransformType[idx]; } $/;"	f	class:TEncCfg
getSAO	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSampleAdaptiveOffset* getSAO              () { return  &m_cEncSAO;              }$/;"	f	class:TEncTop
getSAOBlkParam	source/Lib/TLibCommon/TComPicSym.h	/^  SAOBlkParam*       getSAOBlkParam()                                      { return m_saoBlkParams;}$/;"	f	class:TComPicSym
getSAOBlkParam	source/Lib/TLibCommon/TComPicSym.h	/^  const SAOBlkParam* getSAOBlkParam() const                                { return m_saoBlkParams;}$/;"	f	class:TComPicSym
getSAOMergeAvailability	source/Lib/TLibCommon/TComPic.cpp	/^Bool  TComPic::getSAOMergeAvailability(Int currAddr, Int mergeAddr)$/;"	f	class:TComPic
getSEIAlternativeTransferCharacteristicsSEIEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSEIAlternativeTransferCharacteristicsSEIEnable( ) const   { return m_alternativeTransferCharacteristicsSEIEnabled; }$/;"	f	class:TEncCfg
getSEIGreenMetadataInfoSEIEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSEIGreenMetadataInfoSEIEnable( ) const                    { return m_greenMetadataInfoSEIEnabled; }$/;"	f	class:TEncCfg
getSEIGreenMetadataType	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar getSEIGreenMetadataType() const                              { return m_greenMetadataType; }$/;"	f	class:TEncCfg
getSEIMessageString	source/Lib/TLibCommon/SEI.cpp	/^const TChar *SEI::getSEIMessageString(SEI::PayloadType payloadType)$/;"	f	class:SEI
getSEIPreferredTransferCharacteristics	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar getSEIPreferredTransferCharacteristics() const               { return m_preferredTransferCharacteristics; }$/;"	f	class:TEncCfg
getSEIXSDMetricType	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar getSEIXSDMetricType() const                                  { return m_xsdMetricType; }$/;"	f	class:TEncCfg
getSEIs	source/Lib/TLibCommon/TComPic.h	/^  SEIMessages& getSEIs() { return m_SEIs; }$/;"	f	class:TComPic
getSEIs	source/Lib/TLibCommon/TComPic.h	/^  const SEIMessages& getSEIs() const { return m_SEIs; }$/;"	f	class:TComPic
getSEIs	source/Lib/TLibDecoder/TDecTop.h	/^  SEIMessages& getSEIs() { return m_SEIs; }$/;"	f	class:TDecTop
getSOPDescriptionSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSOPDescriptionSEIEnabled() const                          { return m_SOPDescriptionSEIEnabled; }$/;"	f	class:TEncCfg
getSPS	source/Lib/TLibCommon/TComPicSym.h	/^  const TComSPS&     getSPS()                 const                        { return m_sps; }$/;"	f	class:TComPicSym
getSPS	source/Lib/TLibCommon/TComSlice.h	/^  TComSPS*       getSPS(Int spsId)                                           { return m_spsMap.getPS(spsId); };$/;"	f	class:ParameterSetManager
getSPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComSPS*              getSPS() const                                         { return m_pcSPS;                                               }$/;"	f	class:TComSlice
getSPSChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool           getSPSChangedFlag(Int spsId) const                          { return m_spsMap.getChangedFlag(spsId); }$/;"	f	class:ParameterSetManager
getSPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getSPSId() const                                                                { return m_SPSId;                                                      }$/;"	f	class:TComSPS
getSPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getSPSId() const                                                 { return m_SPSId;                               }$/;"	f	class:TComPPS
getSPSTemporalMVPEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getSPSTemporalMVPEnabledFlag() const                                            { return m_SPSTemporalMVPEnabledFlag;                                  }$/;"	f	class:TComSPS
getSaoCtuBoundary	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSaoCtuBoundary              ()                            { return m_saoCtuBoundary; }$/;"	f	class:TEncCfg
getSaoEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getSaoEnabledFlag(ChannelType chType) const            { return m_saoEnabledFlag[chType];                              }$/;"	f	class:TComSlice
getSaoEncodingRate	source/Lib/TLibEncoder/TEncCfg.h	/^  Double getSaoEncodingRate() const                                  { return m_saoEncodingRate; }$/;"	f	class:TEncCfg
getSaoEncodingRateChroma	source/Lib/TLibEncoder/TEncCfg.h	/^  Double getSaoEncodingRateChroma() const                            { return m_saoEncodingRateChroma; }$/;"	f	class:TEncCfg
getSarHeight	source/Lib/TLibCommon/TComSlice.h	/^  Int               getSarHeight() const                                   { return m_sarHeight;                            }$/;"	f	class:TComVUI
getSarHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getSarHeight()                                        { return m_sarHeight; }$/;"	f	class:TEncCfg
getSarWidth	source/Lib/TLibCommon/TComSlice.h	/^  Int               getSarWidth() const                                    { return m_sarWidth;                             }$/;"	f	class:TComVUI
getSarWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getSarWidth()                                         { return m_sarWidth; }$/;"	f	class:TEncCfg
getSbacCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSbac*               getSbacCoder          () { return  &m_cSbacCoder;           }$/;"	f	class:TEncTop
getScalableNestingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getScalableNestingSEIEnabled() const                         { return m_scalableNestingSEIEnabled; }$/;"	f	class:TEncCfg
getScaledChromaQP	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Int getScaledChromaQP(Int unscaledChromaQP, const ChromaFormat chFmt)$/;"	f
getScalingList	source/Lib/TLibCommon/TComSlice.h	/^  TComScalingList&       getScalingList()                                                                { return m_scalingList;                                                }$/;"	f	class:TComSPS
getScalingList	source/Lib/TLibCommon/TComSlice.h	/^  TComScalingList&       getScalingList()                                                 { return m_scalingList;                         }$/;"	f	class:TComPPS
getScalingList	source/Lib/TLibCommon/TComSlice.h	/^  const TComScalingList& getScalingList() const                                                          { return m_scalingList;                                                }$/;"	f	class:TComSPS
getScalingList	source/Lib/TLibCommon/TComSlice.h	/^  const TComScalingList& getScalingList() const                                           { return m_scalingList;                         }$/;"	f	class:TComPPS
getScalingListAddress	source/Lib/TLibCommon/TComSlice.h	/^  Int*       getScalingListAddress(UInt sizeId, UInt listId)                    { return &(m_scalingListCoef[sizeId][listId][0]);            } \/\/!< get matrix coefficient$/;"	f	class:TComScalingList
getScalingListAddress	source/Lib/TLibCommon/TComSlice.h	/^  const Int* getScalingListAddress(UInt sizeId, UInt listId) const              { return &(m_scalingListCoef[sizeId][listId][0]);            } \/\/!< get matrix coefficient$/;"	f	class:TComScalingList
getScalingListDC	source/Lib/TLibCommon/TComSlice.h	/^  Int        getScalingListDC(UInt sizeId, UInt listId) const                   { return m_scalingListDC[sizeId][listId];                    } \/\/!< get DC value$/;"	f	class:TComScalingList
getScalingListDefaultAddress	source/Lib/TLibCommon/TComSlice.cpp	/^const Int* TComScalingList::getScalingListDefaultAddress(UInt sizeId, UInt listId)$/;"	f	class:TComScalingList
getScalingListFileName	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::string& getScalingListFileName () const                 { return m_scalingListFileName;   }$/;"	f	class:TEncCfg
getScalingListFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getScalingListFlag() const                                                      { return m_scalingListEnabledFlag;                                     }$/;"	f	class:TComSPS
getScalingListPredModeFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       getScalingListPredModeFlag(UInt sizeId, UInt listId) const         { return m_scalingListPredModeFlagIsDPCM[sizeId][listId];    }$/;"	f	class:TComScalingList
getScalingListPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getScalingListPresentFlag() const                                               { return m_scalingListPresentFlag;                                     }$/;"	f	class:TComSPS
getScalingListPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getScalingListPresentFlag() const                                { return m_scalingListPresentFlag;              }$/;"	f	class:TComPPS
getScalingListType	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Int getScalingListType(const PredMode predMode, const ComponentID compID)$/;"	f
getSearchRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getSearchRange                     () const { return m_iSearchRange; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEICancel	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSegmentedRectFramePackingArrangementSEICancel()           { return m_segmentedRectFramePackingSEICancel; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSegmentedRectFramePackingArrangementSEIEnabled() const    { return m_segmentedRectFramePackingSEIEnabled; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEIPersistence	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSegmentedRectFramePackingArrangementSEIPersistence()      { return m_segmentedRectFramePackingSEIPersistence; }$/;"	f	class:TEncCfg
getSegmentedRectFramePackingArrangementSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSegmentedRectFramePackingArrangementSEIType()             { return m_segmentedRectFramePackingSEIType; }$/;"	f	class:TEncCfg
getSeisByType	source/Lib/TLibCommon/SEI.cpp	/^SEIMessages getSeisByType(SEIMessages &seiList, SEI::PayloadType seiType)$/;"	f
getSeqBpp	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double getSeqBpp()                    { return m_seqTargetBpp; }$/;"	f	class:TEncRCSeq
getSigCoeffGroupCtxInc	source/Lib/TLibCommon/TComTrQuant.cpp	/^UInt TComTrQuant::getSigCoeffGroupCtxInc  (const UInt*  uiSigCoeffGroupFlag,$/;"	f	class:TComTrQuant
getSigCtxInc	source/Lib/TLibCommon/TComTrQuant.cpp	/^Int TComTrQuant::getSigCtxInc    (       Int                        patternSigCtx,$/;"	f	class:TComTrQuant
getSignDataHidingEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getSignDataHidingEnabledFlag() const                             { return m_signDataHidingEnabledFlag;           }$/;"	f	class:TComPPS
getSignDataHidingEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getSignDataHidingEnabledFlag()                        { return m_SignDataHidingEnabledFlag; }$/;"	f	class:TEncCfg
getSignificanceMapContextOffset	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt getSignificanceMapContextOffset (const ComponentID component)$/;"	f
getSiiSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getSiiSEIEnabled()                                        { return m_siiSEIEnabled; }$/;"	f	class:TEncCfg
getSiiSEIFixedSIwithinCLVS	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool     getSiiSEIFixedSIwithinCLVS()                              { return m_siiSEISubLayerNumUnitsInSI.empty(); }$/;"	f	class:TEncCfg
getSiiSEIMaxSubLayersMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEIMaxSubLayersMinus1()                             { return UInt(std::max(1u, UInt(m_siiSEISubLayerNumUnitsInSI.size()))-1 ); }$/;"	f	class:TEncCfg
getSiiSEINumUnitsInShutterInterval	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEINumUnitsInShutterInterval()                      { return m_siiSEINumUnitsInShutterInterval; }$/;"	f	class:TEncCfg
getSiiSEISubLayerNumUnitsInSI	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEISubLayerNumUnitsInSI(UInt idx) const             { return m_siiSEISubLayerNumUnitsInSI[idx]; }$/;"	f	class:TEncCfg
getSiiSEITimeScale	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt     getSiiSEITimeScale()                                      { return m_siiSEITimeScale; }$/;"	f	class:TEncCfg
getSkipFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          getSkipFlag                   ( UInt idx ) const                                           { return m_skipFlag[idx];                    }$/;"	f	class:TComDataCU
getSkipFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         getSkipFlag                   ( )                                                          { return m_skipFlag;                         }$/;"	f	class:TComDataCU
getSlice	source/Lib/TLibCommon/TComDataCU.h	/^  TComSlice*       getSlice                   ( )                                                          { return m_pcSlice;                          }$/;"	f	class:TComDataCU
getSlice	source/Lib/TLibCommon/TComDataCU.h	/^  const TComSlice* getSlice                   ( ) const                                                    { return m_pcSlice;                          }$/;"	f	class:TComDataCU
getSlice	source/Lib/TLibCommon/TComPic.h	/^  TComSlice*    getSlice(Int i)                    { return  m_picSym.getSlice(i);  }$/;"	f	class:TComPic
getSlice	source/Lib/TLibCommon/TComPic.h	/^  const TComSlice* getSlice(Int i) const           { return  m_picSym.getSlice(i);  }$/;"	f	class:TComPic
getSlice	source/Lib/TLibCommon/TComPicSym.h	/^    const TComSlice* getSlice()                         const { return m_pSlice; }$/;"	f	struct:TComPicSym::DPBPerCtuData
getSlice	source/Lib/TLibCommon/TComPicSym.h	/^  TComSlice*         getSlice(UInt i)                                      { return m_apSlices[i];             }$/;"	f	class:TComPicSym
getSlice	source/Lib/TLibCommon/TComPicSym.h	/^  const TComSlice*   getSlice(UInt i) const                                { return m_apSlices[i];             }$/;"	f	class:TComPicSym
getSliceArgument	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceArgument() const                               { return m_sliceArgument;                                       }$/;"	f	class:TComSlice
getSliceArgument	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSliceArgument               ()                            { return m_sliceArgument;       }$/;"	f	class:TEncCfg
getSliceBits	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceBits() const                                   { return m_sliceBits;                                           }$/;"	f	class:TComSlice
getSliceChromaOffsetQpIntraOrPeriodic	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getSliceChromaOffsetQpIntraOrPeriodic( Bool bIsCr) const                                            { return m_sliceChromaQpOffsetIntraOrPeriodic[bIsCr?1:0]; }$/;"	f	class:TEncCfg
getSliceChromaOffsetQpPeriodicity	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getSliceChromaOffsetQpPeriodicity() const                                                           { return m_sliceChromaQpOffsetPeriodicity; }$/;"	f	class:TEncCfg
getSliceChromaQpDelta	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getSliceChromaQpDelta(ComponentID compID) const        { return isLuma(compID) ? 0 : m_iSliceChromaQpDelta[compID];    }$/;"	f	class:TComSlice
getSliceChromaQpFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getSliceChromaQpFlag() const                                     { return  m_bSliceChromaQpFlag;                 }$/;"	f	class:TComPPS
getSliceCurEndCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceCurEndCtuTsAddr() const                        { return m_sliceCurEndCtuTsAddr;                                } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceCurStartCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceCurStartCtuTsAddr() const                      { return m_sliceCurStartCtuTsAddr;                              } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceEncoder	source/Lib/TLibEncoder/TEncCu.h	/^  TEncSlice* getSliceEncoder() { return m_pcSliceEncoder; }$/;"	f	class:TEncCu
getSliceEncoder	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncSlice*  getSliceEncoder()   { return m_pcSliceEncoder; }$/;"	f	class:TEncGOP
getSliceEncoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSlice*              getSliceEncoder       () { return  &m_cSliceEncoder;        }$/;"	f	class:TEncTop
getSliceHeaderExtensionPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getSliceHeaderExtensionPresentFlag() const                       { return m_sliceHeaderExtensionPresentFlag;     }$/;"	f	class:TComPPS
getSliceIdx	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceIdx() const                                    { return  m_sliceIdx;                                           }$/;"	f	class:TComSlice
getSliceIdx	source/Lib/TLibEncoder/TEncSlice.h	/^  UInt    getSliceIdx()         { return m_uiSliceIdx;                    }$/;"	f	class:TEncSlice
getSliceMode	source/Lib/TLibCommon/TComSlice.h	/^  SliceConstraint             getSliceMode() const                                   { return m_sliceMode;                                           }$/;"	f	class:TComSlice
getSliceMode	source/Lib/TLibEncoder/TEncCfg.h	/^  SliceConstraint getSliceMode         () const                      { return m_sliceMode;           }$/;"	f	class:TEncCfg
getSliceNSamples	source/Lib/TLibCommon/TComTrQuant.h	/^  Int*    getSliceNSamples(){ return m_sliceNsamples ;}$/;"	f	class:TComTrQuant
getSliceQp	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getSliceQp() const                                     { return m_iSliceQp;                                            }$/;"	f	class:TComSlice
getSliceQpBase	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getSliceQpBase() const                                 { return m_iSliceQpBase;                                        }$/;"	f	class:TComSlice
getSliceQpDelta	source/Lib/TLibCommon/TComSlice.h	/^  Int                         getSliceQpDelta() const                                { return m_iSliceQpDelta;                                       }$/;"	f	class:TComSlice
getSliceSegmentArgument	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentArgument() const                        { return m_sliceSegmentArgument;                                }$/;"	f	class:TComSlice
getSliceSegmentArgument	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSliceSegmentArgument        ()                            { return m_sliceSegmentArgument;}$/;"	f	class:TEncCfg
getSliceSegmentBits	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentBits() const                            { return m_sliceSegmentBits;                                    }$/;"	f	class:TComSlice
getSliceSegmentCurEndCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentCurEndCtuTsAddr() const                 { return m_sliceSegmentCurEndCtuTsAddr;                         } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceSegmentCurStartCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSliceSegmentCurStartCtuTsAddr() const               { return m_sliceSegmentCurStartCtuTsAddr;                       } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
getSliceSegmentMode	source/Lib/TLibCommon/TComSlice.h	/^  SliceConstraint             getSliceSegmentMode() const                            { return m_sliceSegmentMode;                                    }$/;"	f	class:TComSlice
getSliceSegmentMode	source/Lib/TLibEncoder/TEncCfg.h	/^  SliceConstraint getSliceSegmentMode  () const                      { return m_sliceSegmentMode;    }$/;"	f	class:TEncCfg
getSliceSumC	source/Lib/TLibCommon/TComTrQuant.h	/^  Double* getSliceSumC()    { return m_sliceSumC; }$/;"	f	class:TComTrQuant
getSliceType	source/Lib/TLibCommon/TComSlice.h	/^  SliceType                   getSliceType() const                                   { return m_eSliceType;                                          }$/;"	f	class:TComSlice
getSourceHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getSourceHeight                 ()      { return  m_iSourceHeight; }$/;"	f	class:TEncCfg
getSourceWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       getSourceWidth                  ()      { return  m_iSourceWidth; }$/;"	f	class:TEncCfg
getSphereRotationSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSphereRotationSEICancelFlag()                             { return m_sphereRotationSEICancelFlag; }$/;"	f	class:TEncCfg
getSphereRotationSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSphereRotationSEIEnabled()                                { return m_sphereRotationSEIEnabled; }$/;"	f	class:TEncCfg
getSphereRotationSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getSphereRotationSEIPersistenceFlag()                        { return m_sphereRotationSEIPersistenceFlag; }$/;"	f	class:TEncCfg
getSphereRotationSEIPitch	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSphereRotationSEIPitch()                                  { return m_sphereRotationSEIPitch; }$/;"	f	class:TEncCfg
getSphereRotationSEIRoll	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSphereRotationSEIRoll()                                   { return m_sphereRotationSEIRoll; }$/;"	f	class:TEncCfg
getSphereRotationSEIYaw	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getSphereRotationSEIYaw()                                    { return m_sphereRotationSEIYaw; }$/;"	f	class:TEncCfg
getSpsRangeExtension	source/Lib/TLibCommon/TComSlice.h	/^  TComSPSRExt&           getSpsRangeExtension()                                                          { return m_spsRangeExtension;                                          }$/;"	f	class:TComSPS
getSpsRangeExtension	source/Lib/TLibCommon/TComSlice.h	/^  const TComSPSRExt&     getSpsRangeExtension() const                                                    { return m_spsRangeExtension;                                          }$/;"	f	class:TComSPS
getSqrtLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Double  getSqrtLambda ()   { return m_sqrtLambda; }$/;"	f	class:TComRdCost
getState	source/Lib/TLibCommon/ContextModel.h	/^  UChar getState  ()                { return ( m_ucState >> 1 ); }                    \/\/\/< get current state$/;"	f	class:ContextModel
getStatistics	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::getStatistics(SAOStatData*** blkStats, TComPicYuv* orgYuv, TComPicYuv* srcYuv, TComPic* pPic, Bool isCalculatePreDeblockSamples)$/;"	f	class:TEncSampleAdaptiveOffset
getStream	source/Lib/TLibDecoder/TDecConformance.h	/^  static inline std::ostream &getStream()  { return std::cout; }$/;"	f	class:TDecConformanceCheck
getStream	source/Lib/TLibDecoder/TDecConformance.h	/^  static inline std::ostream &getStream()$/;"	f	class:TDecConformanceCheck
getStreamBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getStreamBitDepth(ChannelType type) const                                       { return m_bitDepths.stream[type];                                     }$/;"	f	class:TComSPS
getStride	source/Lib/TLibCommon/TComPic.h	/^  Int           getStride(const ComponentID id) const          { return m_apcPicYuv[PIC_YUV_REC]->getStride(id); }$/;"	f	class:TComPic
getStride	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getStride         (const ChannelType id) const { return ((m_picWidth     ) + (m_marginX  <<1)) >> getChannelTypeScaleX(id); }$/;"	f	class:TComPicYuv
getStride	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getStride         (const ComponentID id) const { return ((m_picWidth     ) + (m_marginX  <<1)) >> getComponentScaleX(id); }$/;"	f	class:TComPicYuv
getStride	source/Lib/TLibCommon/TComYuv.h	/^  UInt         getStride                  (const ComponentID id) const { return m_iWidth >> getComponentScaleX(id);   }$/;"	f	class:TComYuv
getString	source/Lib/TLibCommon/Debug.h	/^  const std::string  &getString()   const       { return m_sVal;    }$/;"	f	class:EnvVar
getSubLayerLevelPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                    getSubLayerLevelPresentFlag(Int i) const     { return m_subLayerLevelPresentFlag[i];   }$/;"	f	class:TComPTL
getSubLayerPTL	source/Lib/TLibCommon/TComSlice.h	/^  ProfileTierLevel*       getSubLayerPTL(Int i)                        { return &m_subLayerPTL[i];               }$/;"	f	class:TComPTL
getSubLayerPTL	source/Lib/TLibCommon/TComSlice.h	/^  const ProfileTierLevel* getSubLayerPTL(Int i) const                  { return &m_subLayerPTL[i];               }$/;"	f	class:TComPTL
getSubLayerProfilePresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                    getSubLayerProfilePresentFlag(Int i) const   { return m_subLayerProfilePresentFlag[i]; }$/;"	f	class:TComPTL
getSubPicCpbParamsInPicTimingSEIFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getSubPicCpbParamsInPicTimingSEIFlag( ) const                              { return m_subPicCpbParamsInPicTimingSEIFlag;                }$/;"	f	class:TComHRD
getSubPicCpbParamsPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getSubPicCpbParamsPresentFlag( ) const                                     { return m_subPicCpbParamsPresentFlag;                       }$/;"	f	class:TComHRD
getSubstreamForCtuAddr	source/Lib/TLibCommon/TComPic.cpp	/^UInt TComPic::getSubstreamForCtuAddr(const UInt ctuAddr, const Bool bAddressInRaster, TComSlice *pcSlice)$/;"	f	class:TComPic
getSubstreamSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getSubstreamSize( Int idx )                            { assert(idx<getNumberOfSubstreamSizes()); return m_substreamSizes[idx]; }$/;"	f	class:TComSlice
getSummaryOutFilename	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::string& getSummaryOutFilename() const                   { return m_summaryOutFilename; }$/;"	f	class:TEncCfg
getSummaryPicFilenameBase	source/Lib/TLibEncoder/TEncCfg.h	/^  const std::string& getSummaryPicFilenameBase() const               { return m_summaryPicFilenameBase; }$/;"	f	class:TEncCfg
getSummaryVerboseness	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getSummaryVerboseness( ) const                           { return m_summaryVerboseness; }$/;"	f	class:TEncCfg
getTComTile	source/Lib/TLibCommon/TComPicSym.h	/^  TComTile*          getTComTile  ( UInt tileIdx )                         { return &(m_tileParameters[tileIdx]); }$/;"	f	class:TComPicSym
getTComTile	source/Lib/TLibCommon/TComPicSym.h	/^  const TComTile*    getTComTile  ( UInt tileIdx ) const                   { return &(m_tileParameters[tileIdx]); }$/;"	f	class:TComPicSym
getTDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoder.h	/^  virtual TDecBinCABAC*   getTDecBinCABAC   ()             { return 0; }$/;"	f	class:TDecBinIf
getTDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoder.h	/^  virtual const TDecBinCABAC*   getTDecBinCABAC   () const { return 0; }$/;"	f	class:TDecBinIf
getTDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^  TDecBinCABAC* getTDecBinCABAC()             { return this; }$/;"	f	class:TDecBinCABAC
getTDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^  const TDecBinCABAC* getTDecBinCABAC() const { return this; }$/;"	f	class:TDecBinCABAC
getTEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoder.h	/^  virtual TEncBinCABAC*   getTEncBinCABAC   ()  { return 0; }$/;"	f	class:TEncBinIf
getTEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoder.h	/^  virtual const TEncBinCABAC*   getTEncBinCABAC   () const { return 0; }$/;"	f	class:TEncBinIf
getTEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  TEncBinCABAC* getTEncBinCABAC()  { return this; }$/;"	f	class:TEncBinCABAC
getTEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  const TEncBinCABAC* getTEncBinCABAC() const { return this; }$/;"	f	class:TEncBinCABAC
getTEncTop	source/App/TAppEncoder/TAppEncTop.h	/^  TEncTop&    getTEncTop  ()   { return  m_cTEncTop; }      \/\/\/< return encoder class pointer reference$/;"	f	class:TAppEncTop
getTLayer	source/Lib/TLibCommon/TComPic.h	/^  UInt          getTLayer() const               { return m_uiTLayer;   }$/;"	f	class:TComPic
getTLayer	source/Lib/TLibCommon/TComSlice.h	/^  UInt                        getTLayer() const                                      { return m_uiTLayer;                                            }$/;"	f	class:TComSlice
getTMCTSExtractionSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTMCTSExtractionSEIEnabled() const                         { return m_tmctsExtractionSEIEnabled; }$/;"	f	class:TEncCfg
getTMCTSSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTMCTSSEIEnabled()                                         { return m_tmctsSEIEnabled; }$/;"	f	class:TEncCfg
getTMCTSSEITileConstraint	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTMCTSSEITileConstraint()                                  { return m_tmctsSEITileConstraint; }$/;"	f	class:TEncCfg
getTMISEICameraIsoSpeedIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEICameraIsoSpeedIdc()                                 { return m_cameraIsoSpeedIdc;  }$/;"	f	class:TEncCfg
getTMISEICameraIsoSpeedValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEICameraIsoSpeedValue()                               { return m_cameraIsoSpeedValue;  }$/;"	f	class:TEncCfg
getTMISEICodedDataBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEICodedDataBitDepth()                                 { return m_codedDataBitDepth;  }$/;"	f	class:TEncCfg
getTMISEICodedPivotValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*  getTMISEICodedPivotValue()                                   { return m_codedPivotValue;  }$/;"	f	class:TEncCfg
getTMISEIExposurIndexIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposurIndexIdc()                                   { return m_exposureIndexIdc;  }$/;"	f	class:TEncCfg
getTMISEIExposurIndexValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposurIndexValue()                                 { return m_exposureIndexValue;  }$/;"	f	class:TEncCfg
getTMISEIExposureCompensationValueDenomIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposureCompensationValueDenomIdc()                 { return m_exposureCompensationValueDenomIdc;  }$/;"	f	class:TEncCfg
getTMISEIExposureCompensationValueNumerator	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExposureCompensationValueNumerator()                { return m_exposureCompensationValueNumerator;  }$/;"	f	class:TEncCfg
getTMISEIExposureCompensationValueSignFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTMISEIExposureCompensationValueSignFlag()                 { return m_exposureCompensationValueSignFlag;  }$/;"	f	class:TEncCfg
getTMISEIExtendedRangeWhiteLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExtendedRangeWhiteLevel()                           { return m_extendedRangeWhiteLevel;  }$/;"	f	class:TEncCfg
getTMISEIExtendedWhiteLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIExtendedWhiteLevelLumaCodeValue()                   { return m_extendedWhiteLevelLumaCodeValue;  }$/;"	f	class:TEncCfg
getTMISEIMaxValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIMaxValue()                                          { return m_maxValue;  }$/;"	f	class:TEncCfg
getTMISEIMinValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIMinValue()                                          { return m_minValue;  }$/;"	f	class:TEncCfg
getTMISEIModelID	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIModelID()                                           { return m_modelId;  }$/;"	f	class:TEncCfg
getTMISEINominalBlackLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEINominalBlackLevelLumaCodeValue()                    { return m_nominalBlackLevelLumaCodeValue;  }$/;"	f	class:TEncCfg
getTMISEINominalWhiteLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEINominalWhiteLevelLumaCodeValue()                    { return m_nominalWhiteLevelLumaCodeValue;  }$/;"	f	class:TEncCfg
getTMISEINumPivots	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEINumPivots()                                         { return m_numPivots;  }$/;"	f	class:TEncCfg
getTMISEIRefScreenLuminanceWhite	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIRefScreenLuminanceWhite()                           { return m_refScreenLuminanceWhite;  }$/;"	f	class:TEncCfg
getTMISEISigmoidMidpoint	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEISigmoidMidpoint()                                   { return m_sigmoidMidpoint;  }$/;"	f	class:TEncCfg
getTMISEISigmoidWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEISigmoidWidth()                                      { return m_sigmoidWidth;  }$/;"	f	class:TEncCfg
getTMISEIStartOfCodedInterva	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*  getTMISEIStartOfCodedInterva()                               { return m_startOfCodedInterval;  }$/;"	f	class:TEncCfg
getTMISEITargetBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEITargetBitDepth()                                    { return m_targetBitDepth;  }$/;"	f	class:TEncCfg
getTMISEITargetPivotValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*  getTMISEITargetPivotValue()                                  { return m_targetPivotValue;  }$/;"	f	class:TEncCfg
getTMISEIToneMapCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTMISEIToneMapCancelFlag()                                 { return m_toneMapCancelFlag;  }$/;"	f	class:TEncCfg
getTMISEIToneMapId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int   getTMISEIToneMapId()                                         { return m_toneMapId;  }$/;"	f	class:TEncCfg
getTMISEIToneMapPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool   getTMISEIToneMapPersistenceFlag()                           { return m_toneMapPersistenceFlag;  }$/;"	f	class:TEncCfg
getTMVPModeId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getTMVPModeId ()                                      { return m_TMVPModeId; }$/;"	f	class:TEncCfg
getTMctsCheck	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool getTMctsCheck() const { return m_tmctsCheckEnabled;  }$/;"	f	class:TDecConformanceCheck
getTMctsMvpIsValid	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          getTMctsMvpIsValid()          { return m_tMctsMvpIsValid; }$/;"	f	class:TComDataCU
getTUEntropyCodingParameters	source/Lib/TLibCommon/TComChromaFormat.cpp	/^Void getTUEntropyCodingParameters(      TUEntropyCodingParameters &result,$/;"	f
getTargetBitInGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetBitInGOP( Int i ) { return m_picTargetBitInGOP[i]; }$/;"	f	class:TEncRCGOP
getTargetBitrate	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getTargetBitrate       ()                             { return m_RCTargetBitrate;       }$/;"	f	class:TEncCfg
getTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetBits()                                    { return m_targetBits; }$/;"	f	class:TEncRCPic
getTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetBits()            { return m_targetBits; }$/;"	f	class:TEncRCGOP
getTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int64  getTargetBits()                { return m_targetBits; }$/;"	f	class:TEncRCSeq
getTargetRate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getTargetRate()                  { return m_targetRate; }$/;"	f	class:TEncRCSeq
getTemporalIdNestingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getTemporalIdNestingFlag() const                                                { return m_bTemporalIdNestingFlag;                                     }$/;"	f	class:TComSPS
getTemporalLayerNonReferenceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getTemporalLayerNonReferenceFlag()                     { return m_temporalLayerNonReferenceFlag;                       }$/;"	f	class:TComSlice
getTemporalLevel0IndexSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTemporalLevel0IndexSEIEnabled() const                     { return m_temporalLevel0IndexSEIEnabled; }$/;"	f	class:TEncCfg
getTemporalNestingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getTemporalNestingFlag() const                       { return m_bTemporalIdNestingFlag;                                 }$/;"	f	class:TComVPS
getTemporalSubsampleRatio	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      getTemporalSubsampleRatio       ()      { return  m_temporalSubsampleRatio; }$/;"	f	class:TEncCfg
getTestSAODisableAtPictureLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTestSAODisableAtPictureLevel ( ) const                    { return m_bTestSAODisableAtPictureLevel; }$/;"	f	class:TEncCfg
getTickDivisorMinus2	source/Lib/TLibCommon/TComSlice.h	/^  UInt    getTickDivisorMinus2( ) const                                              { return m_tickDivisorMinus2;                                }$/;"	f	class:TComHRD
getTier	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    Level::Tier                getTier() const { return m_tier; }$/;"	f	class:ProfileLevelTierFeatures
getTier	source/Lib/TLibDecoder/TDecConformance.h	/^    Level::Tier                getTier() const { return m_tier; }$/;"	f	class:ProfileLevelTierFeatures
getTierFlag	source/Lib/TLibCommon/TComSlice.h	/^  Level::Tier   getTierFlag() const                         { return m_tierFlag;                    }$/;"	f	class:ProfileTierLevel
getTileColumnWidth	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getTileColumnWidth(UInt columnIdx) const                         { return  m_tileColumnWidth[columnIdx];         }$/;"	f	class:TComPPS
getTileHeightInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      getTileHeightInCtus    () const              { return m_tileHeightInCtus; }$/;"	f	class:TComTile
getTileIdxMap	source/Lib/TLibCommon/TComPicSym.h	/^  UInt               getTileIdxMap( Int ctuRsAddr ) const                  { return *(m_puiTileIdxMap + ctuRsAddr); }$/;"	f	class:TComPicSym
getTileLeftTopPelPosX	source/Lib/TLibCommon/TComPattern.h	/^  Int   getTileLeftTopPelPosX() const { return m_tileLeftTopPelPosX; }$/;"	f	class:TComPattern
getTileLeftTopPelPosY	source/Lib/TLibCommon/TComPattern.h	/^  Int   getTileLeftTopPelPosY() const { return m_tileLeftTopPelPosY; }$/;"	f	class:TComPattern
getTilePosition	source/Lib/TLibCommon/TComPicSym.cpp	/^Void getTilePosition(const TComDataCU* const pcCU, UInt &tileXPosInCtus, UInt &tileYPosInCtus, UInt &tileWidthtInCtus, UInt &tileHeightInCtus)$/;"	f
getTileRightBottomPelPosX	source/Lib/TLibCommon/TComPattern.h	/^  Int   getTileRightBottomPelPosX() const { return m_tileRightBottomPelPosX; }$/;"	f	class:TComPattern
getTileRightBottomPelPosY	source/Lib/TLibCommon/TComPattern.h	/^  Int   getTileRightBottomPelPosY() const { return m_tileRightBottomPelPosY; }$/;"	f	class:TComPattern
getTileRowHeight	source/Lib/TLibCommon/TComSlice.h	/^  UInt                   getTileRowHeight(UInt rowIdx) const                              { return m_tileRowHeight[rowIdx];               }$/;"	f	class:TComPPS
getTileUniformSpacingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getTileUniformSpacingFlag() const                                { return m_uniformSpacingFlag;                  }$/;"	f	class:TComPPS
getTileUniformSpacingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTileUniformSpacingFlag      ()                            { return m_tileUniformSpacingFlag; }$/;"	f	class:TEncCfg
getTileWidthInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      getTileWidthInCtus     () const              { return m_tileWidthInCtus; }$/;"	f	class:TComTile
getTilesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getTilesEnabledFlag() const                                      { return m_tilesEnabledFlag;                    }$/;"	f	class:TComPPS
getTilesFixedStructureFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getTilesFixedStructureFlag() const                     { return m_tilesFixedStructureFlag;              }$/;"	f	class:TComVUI
getTilesFixedStructureFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getTilesFixedStructureFlag()                          { return m_tilesFixedStructureFlag; }$/;"	f	class:TEncCfg
getTimeCodeSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getTimeCodeSEIEnabled()                                      { return m_timeCodeSEIEnabled; }$/;"	f	class:TEncCfg
getTimeScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt getTimeScale( ) const                   { return m_timeScale;                   }$/;"	f	class:TimingInfo
getTimeSet	source/Lib/TLibEncoder/TEncCfg.h	/^  TComSEITimeSet &getTimeSet(Int index)                              { return m_timeSetArray[index]; }$/;"	f	class:TEncCfg
getTimeSet	source/Lib/TLibEncoder/TEncCfg.h	/^  const TComSEITimeSet &getTimeSet(Int index) const                  { return m_timeSetArray[index]; }$/;"	f	class:TEncCfg
getTimingInfo	source/Lib/TLibCommon/TComSlice.h	/^  TimingInfo*       getTimingInfo()                                        { return &m_timingInfo;                          }$/;"	f	class:TComVUI
getTimingInfo	source/Lib/TLibCommon/TComSlice.h	/^  TimingInfo*       getTimingInfo()                                      { return &m_timingInfo;                                            }$/;"	f	class:TComVPS
getTimingInfo	source/Lib/TLibCommon/TComSlice.h	/^  const TimingInfo* getTimingInfo() const                                  { return &m_timingInfo;                          }$/;"	f	class:TComVUI
getTimingInfo	source/Lib/TLibCommon/TComSlice.h	/^  const TimingInfo* getTimingInfo() const                                { return &m_timingInfo;                                            }$/;"	f	class:TComVPS
getTimingInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getTimingInfoPresentFlag( ) const       { return m_timingInfoPresentFlag;       }$/;"	f	class:TimingInfo
getToneMappingInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool  getToneMappingInfoSEIEnabled()                               { return m_toneMappingInfoSEIEnabled;  }$/;"	f	class:TEncCfg
getTotalBins	source/Lib/TLibCommon/TComDataCU.h	/^  UInt&         getTotalBins                  ( )                                                          { return m_uiTotalBins;       }$/;"	f	class:TComDataCU
getTotalBits	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt getTotalBits(const UInt width, const UInt height, const ChromaFormat format, const Int bitDepths[MAX_NUM_CHANNEL_TYPE])$/;"	f
getTotalBits	source/Lib/TLibCommon/TComDataCU.h	/^  UInt&         getTotalBits                  ( )                                                          { return m_uiTotalBits;       }$/;"	f	class:TComDataCU
getTotalCost	source/Lib/TLibCommon/TComDataCU.h	/^  Double&       getTotalCost                  ( )                                                          { return m_dTotalCost;        }$/;"	f	class:TComDataCU
getTotalDistortion	source/Lib/TLibCommon/TComDataCU.h	/^  Distortion&   getTotalDistortion            ( )                                                          { return m_uiTotalDistortion; }$/;"	f	class:TComDataCU
getTotalFrames	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int  getTotalFrames()                 { return m_totalFrames; }$/;"	f	class:TEncRCSeq
getTotalHeight	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getTotalHeight    (const ComponentID id) const { return ((m_picHeight    ) + (m_marginY  <<1)) >> getComponentScaleY(id); }$/;"	f	class:TComPicYuv
getTotalNumPart	source/Lib/TLibCommon/TComDataCU.h	/^  UInt&         getTotalNumPart               ( )                                                          { return m_uiNumPartition;    }$/;"	f	class:TComDataCU
getTotalSamples	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline UInt getTotalSamples(const UInt width, const UInt height, const ChromaFormat format)$/;"	f
getTrQuant	source/Lib/TLibEncoder/TEncTop.h	/^  TComTrQuant*            getTrQuant            () { return  &m_cTrQuant;             }$/;"	f	class:TEncTop
getTransferCharacteristics	source/Lib/TLibCommon/TComSlice.h	/^  Int               getTransferCharacteristics() const                     { return m_transferCharacteristics;              }$/;"	f	class:TComVUI
getTransferCharacteristics	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getTransferCharacteristics()                          { return m_transferCharacteristics; }$/;"	f	class:TEncCfg
getTransformIdx	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getTransformIdx               ( UInt uiIdx ) const                                         { return m_puhTrIdx[uiIdx];                  }$/;"	f	class:TComDataCU
getTransformIdx	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getTransformIdx               ( )                                                          { return m_puhTrIdx;                         }$/;"	f	class:TComDataCU
getTransformShift	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Int getTransformShift(const Int channelBitDepth, const UInt uiLog2TrSize, const Int maxLog2TrDynamicRange)$/;"	f
getTransformSkip	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getTransformSkip              ( UInt uiIdx, ComponentID compID ) const                     { return m_puhTransformSkip[compID][uiIdx];  }$/;"	f	class:TComDataCU
getTransformSkip	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getTransformSkip              ( ComponentID compID )                                       { return m_puhTransformSkip[compID];         }$/;"	f	class:TComDataCU
getTransformSkipContextEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getTransformSkipContextEnabledFlag() const                                      { return m_transformSkipContextEnabledFlag;      }$/;"	f	class:TComSPSRExt
getTransformSkipContextEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getTransformSkipContextEnabledFlag              ()            const { return m_transformSkipContextEnabledFlag;  }$/;"	f	class:TEncCfg
getTransformSkipRotationEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool getTransformSkipRotationEnabledFlag() const                                     { return m_transformSkipRotationEnabledFlag;     }$/;"	f	class:TComSPSRExt
getTransformSkipRotationEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getTransformSkipRotationEnabledFlag             ()            const { return m_transformSkipRotationEnabledFlag;  }$/;"	f	class:TEncCfg
getTransquantBypassEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getTransquantBypassEnabledFlag() const                           { return m_TransquantBypassEnabledFlag;         }$/;"	f	class:TComPPS
getTransquantBypassEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getTransquantBypassEnabledFlag()                      { return m_TransquantBypassEnabledFlag; }$/;"	f	class:TEncCfg
getUseAMP	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUseAMP() const                                                               { return m_useAMP;                                                     }$/;"	f	class:TComSPS
getUseASR	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseASR                       ()      { return m_bUseASR;     }$/;"	f	class:TEncCfg
getUseAdaptQpSelect	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseAdaptQpSelect             ()           { return   m_bUseAdaptQpSelect; }$/;"	f	class:TEncCfg
getUseAdaptiveQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseAdaptiveQP                () const { return  m_bUseAdaptiveQP; }$/;"	f	class:TEncCfg
getUseBLambdaForNonKeyLowDelayPictures	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseBLambdaForNonKeyLowDelayPictures () { return m_bUseBLambdaForNonKeyLowDelayPictures; }$/;"	f	class:TEncCfg
getUseCbfFastMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseCbfFastMode               ()      { return m_bUseCbfFastMode; }$/;"	f	class:TEncCfg
getUseChromaQpAdj	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getUseChromaQpAdj() const                              { return m_ChromaQpAdjEnabled;                                  }$/;"	f	class:TComSlice
getUseConstrainedIntraPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseConstrainedIntraPred      ()      { return m_bUseConstrainedIntraPred; }$/;"	f	class:TEncCfg
getUseDQP	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUseDQP() const                                                { return m_useDQP;                              }$/;"	f	class:TComPPS
getUseEarlyCU	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseEarlyCU                   ()      { return m_bUseEarlyCU; }$/;"	f	class:TEncCfg
getUseEarlySkipDetection	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseEarlySkipDetection        ()      { return m_useEarlySkipDetection; }$/;"	f	class:TEncCfg
getUseFastDecisionForMerge	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseFastDecisionForMerge      ()      { return m_useFastDecisionForMerge; }$/;"	f	class:TEncCfg
getUseHADME	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseHADME                     ()      { return m_bUseHADME;   }$/;"	f	class:TEncCfg
getUseLCUSeparateModel	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getUseLCUSeparateModel ()                             { return m_RCUseLCUSeparateModel; }$/;"	f	class:TEncCfg
getUseLCUSeparateModel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Bool getUseLCUSeparateModel()         { return m_useLCUSeparateModel; }$/;"	f	class:TEncRCSeq
getUsePCM	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUsePCM() const                                                               { return m_usePCM;                                                     }$/;"	f	class:TComSPS
getUsePCM	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUsePCM                       ()      { return m_usePCM;                 }$/;"	f	class:TEncCfg
getUseRDOQ	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseRDOQ                      ()      { return m_useRDOQ;    }$/;"	f	class:TEncCfg
getUseRDOQTS	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseRDOQTS                    ()      { return m_useRDOQTS;  }$/;"	f	class:TEncCfg
getUseRateCtrl	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getUseRateCtrl         ()                             { return m_RCEnableRateControl;   }$/;"	f	class:TEncCfg
getUseRecalculateQPAccordingToLambda	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getUseRecalculateQPAccordingToLambda ()               { return m_recalculateQPAccordingToLambda; }$/;"	f	class:TEncCfg
getUseReconBasedCrossCPredictionEstimate	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseReconBasedCrossCPredictionEstimate ()                const { return m_reconBasedCrossCPredictionEstimate;  }$/;"	f	class:TEncCfg
getUseSAO	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUseSAO() const                                                               { return m_bUseSAO;                                                    }$/;"	f	class:TComSPS
getUseSAO	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseSAO                  ()                            { return m_bUseSAO; }$/;"	f	class:TEncCfg
getUseScalingList	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool getUseScalingList   (const UInt width, const UInt height, const Bool isTransformSkip){ return m_scalingListEnabledFlag && (!isTransformSkip || ((width == 4) && (height == 4))); };$/;"	f	class:TComTrQuant
getUseScalingListId	source/Lib/TLibEncoder/TEncCfg.h	/^  ScalingListMode getUseScalingListId    ()                          { return m_useScalingListId;      }$/;"	f	class:TEncCfg
getUseSelectiveRDOQ	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getUseSelectiveRDOQ             ()      { return m_useSelectiveRDOQ; }$/;"	f	class:TEncCfg
getUseStrongIntraSmoothing	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUseStrongIntraSmoothing() const                                              { return m_useStrongIntraSmoothing;                                    }$/;"	f	class:TComSPS
getUseStrongIntraSmoothing	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getUseStrongIntraSmoothing ()                         { return m_useStrongIntraSmoothing; }$/;"	f	class:TEncCfg
getUseTransformSkip	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUseTransformSkip() const                                      { return m_useTransformSkip;                    }$/;"	f	class:TComPPS
getUseTransformSkip	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getUseTransformSkip                             ()      { return m_useTransformSkip;        }$/;"	f	class:TEncCfg
getUseTransformSkipFast	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool getUseTransformSkipFast                         ()      { return m_useTransformSkipFast;    }$/;"	f	class:TEncCfg
getUseWP	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUseWP() const                                                 { return m_bUseWeightPred;                      }$/;"	f	class:TComPPS
getUseWP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getUseWP               ()                             { return m_useWeightedPred;   }$/;"	f	class:TEncCfg
getUseWeightedPrediction	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        getUseWeightedPrediction() const                       { return( (m_eSliceType==P_SLICE && testWeightPred()) || (m_eSliceType==B_SLICE && testWeightBiPred()) ); }$/;"	f	class:TComSlice
getUsed	source/Lib/TLibCommon/TComSlice.cpp	/^Int TComReferencePictureSet::getUsed(Int bufferNum) const$/;"	f	class:TComReferencePictureSet
getUsedByCurr	source/Lib/TLibCommon/TComPic.h	/^  Bool          getUsedByCurr() const            { return m_bUsedByCurr; }$/;"	f	class:TComPic
getUsedByCurrPicLtSPSFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getUsedByCurrPicLtSPSFlag(Int i) const                                          { assert( i < MAX_NUM_LONG_TERM_REF_PICS ); return m_usedByCurrPicLtSPSFlag[i];    }$/;"	f	class:TComSPS
getVPS	source/Lib/TLibCommon/TComSlice.h	/^  TComVPS*       getVPS(Int vpsId)                                           { return m_vpsMap.getPS(vpsId); };$/;"	f	class:ParameterSetManager
getVPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComVPS*              getVPS() const                                         { return m_pcVPS;                                               }$/;"	f	class:TComSlice
getVPS	source/Lib/TLibEncoder/TEncCfg.h	/^  TComVPS *    getVPS()                                              { return &m_cVPS; }$/;"	f	class:TEncCfg
getVPSChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool           getVPSChangedFlag(Int vpsId) const                          { return m_vpsMap.getChangedFlag(vpsId); }$/;"	f	class:ParameterSetManager
getVPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                    getVPSId() const                                                                { return m_VPSId;                                                      }$/;"	f	class:TComSPS
getVPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int               getVPSId() const                                     { return m_VPSId;                                                  }$/;"	f	class:TComVPS
getVclHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool    getVclHrdParametersPresentFlag( ) const                                    { return m_vclHrdParametersPresentFlag;                      }$/;"	f	class:TComHRD
getVer	source/Lib/TLibCommon/TComMotionInfo.h	/^  Int getVer   () const { return  m_acMv.getVer(); }$/;"	f	class:TComMvField
getVer	source/Lib/TLibCommon/TComMv.h	/^  Int   getVer    () const { return m_iVer;          }$/;"	f	class:TComMv
getVideoFormat	source/Lib/TLibCommon/TComSlice.h	/^  Int               getVideoFormat() const                                 { return m_videoFormat;                          }$/;"	f	class:TComVUI
getVideoFormat	source/Lib/TLibEncoder/TEncCfg.h	/^  Int          getVideoFormat()                                      { return m_videoFormat; }$/;"	f	class:TEncCfg
getVideoFullRangeFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getVideoFullRangeFlag() const                          { return m_videoFullRangeFlag;                   }$/;"	f	class:TComVUI
getVideoFullRangeFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getVideoFullRangeFlag()                               { return m_videoFullRangeFlag; }$/;"	f	class:TEncCfg
getVideoSignalTypePresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              getVideoSignalTypePresentFlag() const                  { return m_videoSignalTypePresentFlag;           }$/;"	f	class:TComVUI
getVideoSignalTypePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getVideoSignalTypePresentFlag()                       { return m_videoSignalTypePresentFlag; }$/;"	f	class:TEncCfg
getVuiParameters	source/Lib/TLibCommon/TComSlice.h	/^  TComVUI*               getVuiParameters()                                                              { return &m_vuiParameters;                                             }$/;"	f	class:TComSPS
getVuiParameters	source/Lib/TLibCommon/TComSlice.h	/^  const TComVUI*         getVuiParameters() const                                                        { return &m_vuiParameters;                                             }$/;"	f	class:TComSPS
getVuiParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getVuiParametersPresentFlag() const                                             { return m_vuiParametersPresentFlag;                                   }$/;"	f	class:TComSPS
getVuiParametersPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getVuiParametersPresentFlag()                         { return m_vuiParametersPresentFlag; }$/;"	f	class:TEncCfg
getWCGChromaQPControl	source/Lib/TLibEncoder/TEncCfg.h	/^  const WCGChromaQPControl &getWCGChromaQPControl () const { return m_wcgChromaQpControl; }$/;"	f	class:TEncCfg
getWPBiPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool                   getWPBiPred() const                                              { return m_useWeightedBiPred;                   }$/;"	f	class:TComPPS
getWPBiPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool         getWPBiPred            ()                             { return m_useWeightedBiPred; }$/;"	f	class:TEncCfg
getWeightedPredictionMethod	source/Lib/TLibEncoder/TEncCfg.h	/^  WeightedPredictionMethod getWeightedPredictionMethod() const       { return m_weightedPredictionMethod; }$/;"	f	class:TEncCfg
getWidth	source/Lib/TLibCommon/TComDataCU.h	/^  UChar         getWidth                      ( UInt uiIdx ) const                                         { return m_puhWidth[uiIdx];                  }$/;"	f	class:TComDataCU
getWidth	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        getWidth                      ( )                                                          { return m_puhWidth;                         }$/;"	f	class:TComDataCU
getWidth	source/Lib/TLibCommon/TComPicYuv.h	/^  Int           getWidth          (const ComponentID id) const { return  m_picWidth >> getComponentScaleX(id);   }$/;"	f	class:TComPicYuv
getWidth	source/Lib/TLibCommon/TComYuv.h	/^  UInt         getWidth                   (const ComponentID id) const { return m_iWidth >> getComponentScaleX(id);   }$/;"	f	class:TComYuv
getWinUnitX	source/Lib/TLibCommon/TComSlice.h	/^  static Int             getWinUnitX (Int chromaFormatIdc)                                               { assert (chromaFormatIdc >= 0 && chromaFormatIdc < NUM_CHROMA_FORMAT); return m_winUnitX[chromaFormatIdc]; }$/;"	f	class:TComSPS
getWinUnitY	source/Lib/TLibCommon/TComSlice.h	/^  static Int             getWinUnitY (Int chromaFormatIdc)                                               { assert (chromaFormatIdc >= 0 && chromaFormatIdc < NUM_CHROMA_FORMAT); return m_winUnitY[chromaFormatIdc]; }$/;"	f	class:TComSPS
getWindowBottomOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  getWindowBottomOffset() const  { return m_enabledFlag ? m_winBottomOffset: 0;   }$/;"	f	class:Window
getWindowEnabledFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool getWindowEnabledFlag() const   { return m_enabledFlag;                          }$/;"	f	class:Window
getWindowLeftOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  getWindowLeftOffset() const    { return m_enabledFlag ? m_winLeftOffset : 0;    }$/;"	f	class:Window
getWindowRightOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  getWindowRightOffset() const   { return m_enabledFlag ? m_winRightOffset : 0;   }$/;"	f	class:Window
getWindowTopOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  getWindowTopOffset() const     { return m_enabledFlag ? m_winTopOffset : 0;     }$/;"	f	class:Window
getWpAcDcParam	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSlice::getWpAcDcParam(WPACDCParam *&wp)$/;"	f	class:TComSlice
getWpScaling	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSlice::getWpScaling( RefPicList e, Int iRefIdx, WPScalingParam *&wp )$/;"	f	class:TComSlice
getWpScaling	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::getWpScaling(       TComDataCU *const pcCU,$/;"	f	class:TComWeightPrediction
getXPSNREnableFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      getXPSNREnableFlag              () const                     { return m_bXPSNREnableFlag;}$/;"	f	class:TEncCfg
getXPSNRWeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    getXPSNRWeight                  (const ComponentID id) const { return m_dXPSNRWeight[id];}$/;"	f	class:TEncCfg
getZScanIndex	source/Lib/TLibCommon/Debug.cpp	/^UInt getZScanIndex(const UInt x, const UInt y)$/;"	f
getZorderIdxInCtu	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          getZorderIdxInCtu             ( ) const                                                    { return m_absZIdxInCtu;                     }$/;"	f	class:TComDataCU
get_api_level	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_api_level(self):$/;"	m	class:Toolset.PlatformInfo
get_api_level_from_platform	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def get_api_level_from_platform(self, platform):$/;"	m	class:NdkFinder
get_boost_build_dir	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def get_boost_build_dir(top_dir):$/;"	f
get_boost_compiler_tag	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_boost_compiler_tag(self):$/;"	m	class:Toolset
get_boost_version_str	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def get_boost_version_str(version_str):$/;"	f
get_branch_url	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_branch_url(self, svn_repo, branch):$/;"	m	class:SvnHelper
get_branches	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_branches(self, svn_repo, with_rev=False):$/;"	m	class:SvnHelper
get_build_dir	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def get_build_dir(self, bld_config, lnk_variant):$/;"	m	class:CMakeBuildTreeInfo
get_cmake_build_version	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def get_cmake_build_version():$/;"	f
get_cmake_version	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def get_cmake_version(self):$/;"	m	class:CMakeFinder
get_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_command_history(self):$/;"	m	class:GitHelper
get_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_command_history(self):$/;"	m	class:SvnHelper
get_command_history	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_command_history(self):$/;"	m	class:VcsCommandTracer
get_commit_hash	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_commit_hash(self, tag=None):$/;"	m	class:GitHelper
get_compiler_command	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_compiler_command(self, version=None):$/;"	m	class:MsvcRegistry.__MsvcRegistry
get_compiler_command	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_compiler_command(self):$/;"	m	class:Toolset
get_compiler_prefix	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_compiler_prefix(self):$/;"	m	class:Toolset
get_compiler_tag	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_compiler_tag(self):$/;"	m	class:Toolset
get_compiler_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_compiler_version(self, version=None):$/;"	m	class:MsvcRegistry.__MsvcRegistry
get_default_proj_home_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_default_proj_home_dir(self):$/;"	m	class:SystemInfo.__SystemInfo
get_default_version_filename	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def get_default_version_filename(src_filename):$/;"	f
get_depends_list	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_depends_list(self, dylib):$/;"	m	class:DyLibInstallNameInfoInspector
get_desktop_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_desktop_dir(self):$/;"	m	class:SystemInfo.__SystemInfo
get_git_executable	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_git_executable(self):$/;"	m	class:GitHelper
get_git_version	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_git_version(self):$/;"	m	class:GitHelper
get_home_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_home_dir(self, native=False):$/;"	m	class:SystemInfo.__SystemInfo
get_hostname	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_hostname(self):$/;"	m	class:VcsUrl
get_install_name	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_install_name(self, dylib):$/;"	m	class:DyLibInstallNameInfoInspector
get_internal_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_internal_version(self):$/;"	m	class:Toolset
get_isysroot	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_isysroot(self):$/;"	m	class:Toolset.PlatformInfo
get_latest_cmakebuild_tag	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_latest_cmakebuild_tag(self, cmakebuild_repo):$/;"	m	class:GitHelper
get_latest_tag	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_latest_tag(self, svn_repo):$/;"	m	class:SvnHelper
get_latest_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_latest_version(self, max_version=None):$/;"	m	class:MsvcRegistry.__MsvcRegistry
get_lib_debug_tag	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_lib_debug_tag(self):$/;"	m	class:Toolset
get_lib_ext_shared	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_lib_ext_shared(self):$/;"	m	class:Toolset
get_lib_ext_static	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_lib_ext_static(self):$/;"	m	class:Toolset
get_lib_prefix_shared	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_lib_prefix_shared(self):$/;"	m	class:Toolset
get_lib_prefix_static	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_lib_prefix_static(self):$/;"	m	class:Toolset
get_local_branches	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_local_branches(self):$/;"	m	class:GitHelper
get_local_tags	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_local_tags(self):$/;"	m	class:GitHelper
get_ndk_platforms	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def get_ndk_platforms(self):$/;"	m	class:NdkFinder
get_ndk_root	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def get_ndk_root(self):$/;"	m	class:NdkFinder
get_ndk_version	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def get_ndk_version(self):$/;"	m	class:NdkFinder
get_ndksa_root	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def get_ndksa_root(self, stl='gnustl'):$/;"	m	class:NdkFinder
get_ndksa_toolchains	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^    def get_ndksa_toolchains(self, stl='gnustl'):$/;"	m	class:NdkFinder
get_number_processors	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_number_processors(self):$/;"	m	class:SystemInfo.__SystemInfo
get_os_arch	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_os_arch(self):$/;"	m	class:SystemInfo.__SystemInfo
get_os_codename	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_os_codename(self):$/;"	m	class:SystemInfo.__SystemInfo
get_os_distro	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_os_distro(self):$/;"	m	class:SystemInfo.__SystemInfo
get_os_distro_short	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_os_distro_short(self):$/;"	m	class:SystemInfo.__SystemInfo
get_os_version	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_os_version(self):$/;"	m	class:SystemInfo.__SystemInfo
get_path	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_path(self):$/;"	m	class:SystemInfo.__SystemInfo
get_pkg_arch	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_pkg_arch(self):$/;"	m	class:SystemInfo.__SystemInfo
get_pkg_fmt	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_pkg_fmt(self):$/;"	m	class:SystemInfo.__SystemInfo
get_platform	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_platform(self):$/;"	m	class:SystemInfo.__SystemInfo
get_platform_info	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_platform_info(self, index=None):$/;"	m	class:Toolset
get_platform_long	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_platform_long(self):$/;"	m	class:SystemInfo.__SystemInfo
get_program_data_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_program_data_dir(self):$/;"	m	class:SystemInfo.__SystemInfo
get_program_dir	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_program_dir(self, target_arch):$/;"	m	class:SystemInfo.__SystemInfo
get_property	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_property(self, prop):$/;"	m	class:SvnProperties
get_property_list	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_property_list(self):$/;"	m	class:SvnProperties
get_protocol	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_protocol(self):$/;"	m	class:VcsUrl
get_python_arch	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_python_arch(self):$/;"	m	class:SystemInfo.__SystemInfo
get_python_executable	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_python_executable(self):$/;"	m	class:SystemInfo.__SystemInfo
get_python_implementation	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_python_implementation(self):$/;"	m	class:SystemInfo.__SystemInfo
get_python_launcher	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_python_launcher(self):$/;"	m	class:SystemInfo.__SystemInfo
get_python_version	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_python_version(self):$/;"	m	class:SystemInfo.__SystemInfo
get_python_version	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def get_python_version(check_version=False):$/;"	f
get_remote_branches	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_remote_branches(self, repo='origin'):$/;"	m	class:GitHelper
get_remote_tags	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_remote_tags(self, repo='origin'):$/;"	m	class:GitHelper
get_repo_uuid	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_repo_uuid(self, svn_repo):$/;"	m	class:SvnHelper
get_resource_path	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_resource_path(self, native=False):$/;"	m	class:VcsUrl
get_script_dir	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def get_script_dir():$/;"	f
get_script_ext	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_script_ext(self):$/;"	m	class:SystemInfo.__SystemInfo
get_sdk_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_sdk_version(self):$/;"	m	class:Toolset.PlatformInfo
get_short_path	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_short_path(self, fpath):$/;"	m	class:SystemInfo.__SystemInfo
get_short_path_win	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_short_path_win(self, fpath):$/;"	m	class:SystemInfo.__SystemInfo
get_submodule_paths	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_submodule_paths(self):$/;"	m	class:GitHelper
get_subprocess_devnull	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_subprocess_devnull(self):$/;"	m	class:SystemInfo.__SystemInfo
get_subprocess_devnull	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_subprocess_devnull(self):$/;"	m	class:VcsUtil
get_svn_executable	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_svn_executable(self):$/;"	m	class:SvnHelper
get_svn_folders	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_svn_folders(self, svn_url, with_rev=False):$/;"	m	class:SvnHelper
get_svn_log_msg	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_svn_log_msg(self, svn_url):$/;"	m	class:SvnHelper
get_svn_rev	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_svn_rev(self, svn_url):$/;"	m	class:SvnHelper
get_svnadmin_executable	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_svnadmin_executable(self):$/;"	m	class:SvnHelper
get_svnmucc_executable	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_svnmucc_executable(self):$/;"	m	class:SvnHelper
get_system_info_full_str	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def get_system_info_full_str(self):$/;"	m	class:SystemInfo.__SystemInfo
get_tag_log	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_tag_log(self, tag, strip_git_svn_id=False, strip_empty_lines=True):$/;"	m	class:GitHelper
get_tag_url	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_tag_url(self, svn_repo, tag):$/;"	m	class:SvnHelper
get_tags	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_tags(self, svn_repo, with_rev=False):$/;"	m	class:SvnHelper
get_target_arch	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_target_arch(self, index=None):$/;"	m	class:Toolset.PlatformInfo
get_target_cflags	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_target_cflags(self, target_arch):$/;"	m	class:Toolset.PlatformInfo
get_target_os	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_target_os(self):$/;"	m	class:Toolset.PlatformInfo
get_target_os_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_target_os_version(self):$/;"	m	class:Toolset.PlatformInfo
get_target_runtime_libs	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def get_target_runtime_libs(self, target_arch):$/;"	m	class:Toolset.PlatformInfo
get_tool_dir	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def get_tool_dir(tool):$/;"	f
get_toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_toolset(self):$/;"	m	class:Toolset
get_toolset_info_short	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_toolset_info_short(self, target_arch=None):$/;"	m	class:Toolset
get_toolset_versioned	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_toolset_versioned(self):$/;"	m	class:Toolset
get_top_dir	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def get_top_dir():$/;"	f
get_username	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_username(self):$/;"	m	class:VcsUrl
get_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def get_version(self):$/;"	m	class:Toolset
get_wc_commit_log	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def get_wc_commit_log(self, strip_git_svn_id=True, strip_empty_lines=True):$/;"	m	class:GitHelper
getdQPFlag	source/Lib/TLibDecoder/TDecCu.h	/^  Bool getdQPFlag               ()                        { return m_bDecodeDQP;        }$/;"	f	class:TDecCu
getdQPFlag	source/Lib/TLibEncoder/TEncCu.h	/^  Bool getdQPFlag           ()                        { return m_bEncodeDQP;        }$/;"	f	class:TEncCu
getdQPs	source/Lib/TLibEncoder/TEncCfg.h	/^  const Int* getdQPs                        () const { return m_aidQP;       }$/;"	f	class:TEncCfg
getxPSNR	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Double  getxPSNR()                  const { return m_runningTotal.xpsnr;}$/;"	f	class:TEncAnalyze
glob	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import glob$/;"	i
golombRiceAdaptationStatistics	source/Lib/TLibCommon/TComTrQuant.h	/^  Int golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	struct:__anon10
grainSynthesizeAndBlend	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::grainSynthesizeAndBlend(TComPicYuv* pGrainBuf, Bool isIdrPic)$/;"	f	class:SEIFilmGrainSynthesizer
grainValidateParams	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^uint8_t SEIFilmGrainSynthesizer::grainValidateParams()$/;"	f	class:SEIFilmGrainSynthesizer
guessLambdaModifier	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^double guessLambdaModifier($/;"	f
guessLambdaModifiers	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^std::vector< double > guessLambdaModifiers($/;"	f
guessLambdaModifiers	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^void guessLambdaModifiers($/;"	f
guessLambdaModifiersExecutable	source/App/utils/BitrateTargeting/makefile	/^guessLambdaModifiersExecutable = guessLambdaModifiers.exe$/;"	m
guessLambdaModifiersObjects	source/App/utils/BitrateTargeting/makefile	/^guessLambdaModifiersObjects = GuessLambdaModifiers.o GuessLambdaModifiersMain.o$/;"	m
hasDPBPerCtuData	source/Lib/TLibCommon/TComPicSym.h	/^  Bool                 hasDPBPerCtuData() const                            { return (m_dpbPerCtuData!=0); };$/;"	f	class:TComPicSym
hasEqualMotion	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::hasEqualMotion( UInt uiAbsPartIdx, const TComDataCU* pcCandCU, UInt uiCandAbsPartIdx ) const$/;"	f	class:TComDataCU
has_property	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def has_property(self, prop):$/;"	m	class:SvnProperties
has_svnmucc	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def has_svnmucc(self):$/;"	m	class:SvnHelper
hash	source/Lib/TLibCommon/TypeDef.h	/^  std::vector<UChar> hash;$/;"	m	struct:TComPictureHash
hashToString	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^std::string hashToString(const TComPictureHash &digest, Int numChar)$/;"	f
hbrFactorEqn	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  HBRFACTOREQN             hbrFactorEqn;$/;"	m	struct:ProfileFeatures
hbrFactorEqn	source/Lib/TLibDecoder/TDecConformance.h	/^  HBRFACTOREQN             hbrFactorEqn;$/;"	m	struct:ProfileFeatures
height	source/Lib/TLibCommon/TComRectangle.h	/^  UInt height;$/;"	m	struct:TComRectangle
heightInGroups	source/Lib/TLibCommon/TypeDef.h	/^        UInt             heightInGroups;$/;"	m	struct:TUEntropyCodingParameters
horFlip	source/Lib/TLibCommon/SEI.h	/^  Bool horFlip;$/;"	m	class:SEIDisplayOrientation
horRange	source/Lib/TLibCommon/SEI.h	/^    UInt horRange;$/;"	m	struct:SEIOmniViewport::OmniViewport
hoursFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool hoursFlag;$/;"	m	struct:TComSEITimeSet
hoursValue	source/Lib/TLibCommon/TypeDef.h	/^  Int  hoursValue;$/;"	m	struct:TComSEITimeSet
iAC	source/Lib/TLibCommon/TComSlice.h	/^  Int64 iAC;$/;"	m	struct:WPACDCParam
iBestX	source/Lib/TLibEncoder/TEncSearch.h	/^    Int         iBestX;$/;"	m	struct:TEncSearch::__anon7
iBestY	source/Lib/TLibEncoder/TEncSearch.h	/^    Int         iBestY;$/;"	m	struct:TEncSearch::__anon7
iCols	source/Lib/TLibCommon/TComRdCost.h	/^  Int                   iCols;$/;"	m	class:DistParam
iDC	source/Lib/TLibCommon/TComSlice.h	/^  Int64 iDC;$/;"	m	struct:WPACDCParam
iN	source/Lib/TLibCommon/TComMotionInfo.h	/^  Int    iN;                                \/\/\/< number of motion vector predictor candidates$/;"	m	struct:_AMVPInfo
iNNZbeforePos0	source/Lib/TLibCommon/TComTrQuant.cpp	/^  Int    iNNZbeforePos0;$/;"	m	struct:__anon8	file:
iOffset	source/Lib/TLibCommon/TComSlice.h	/^  Int  iOffset;$/;"	m	struct:WPScalingParam
iRows	source/Lib/TLibCommon/TComRdCost.h	/^  Int                   iRows;$/;"	m	class:DistParam
iStep	source/Lib/TLibCommon/TComRdCost.h	/^  Int                   iStep;$/;"	m	class:DistParam
iStrideCur	source/Lib/TLibCommon/TComRdCost.h	/^  Int                   iStrideCur;$/;"	m	class:DistParam
iStrideOrg	source/Lib/TLibCommon/TComRdCost.h	/^  Int                   iStrideOrg;$/;"	m	class:DistParam
iSubShift	source/Lib/TLibCommon/TComRdCost.h	/^  Int             iSubShift;$/;"	m	class:DistParam
iWeight	source/Lib/TLibCommon/TComSlice.h	/^  Int  iWeight;$/;"	m	struct:WPScalingParam
iYStride	source/Lib/TLibEncoder/TEncSearch.h	/^    Int         iYStride;$/;"	m	struct:TEncSearch::__anon7
ignoreUpTo	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^  void ignoreUpTo( const std::string& line, std::istream& iLine, char character )$/;"	f	namespace:__anon2
ignoreUpTo	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  void ignoreUpTo( std::istream& i, char character )$/;"	f	namespace:__anon5
in	source/Lib/libmd5/libmd5.h	/^  } in;$/;"	m	struct:_context_md5_t	typeref:union:_context_md5_t::__anon6
incrementLambdaModifier	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  double incrementLambdaModifier($/;"	f	namespace:__anon3
indentNewLines	source/Lib/TLibCommon/Debug.cpp	/^std::string indentNewLines(const std::string &input, const UInt indentBy)$/;"	f
indexSetFromMap	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  std::set< unsigned char > indexSetFromMap( const std::map< unsigned char, double >& in )$/;"	f	namespace:__anon5
info_arch	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
init	source/Lib/TLibCommon/ContextModel.cpp	/^Void ContextModel::init( Int qp, Int initValue )$/;"	f	class:ContextModel
init	source/Lib/TLibCommon/TComRdCost.cpp	/^Void TComRdCost::init()$/;"	f	class:TComRdCost
init	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::init(   UInt  uiMaxTrSize,$/;"	f	class:TComTrQuant
init	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::init( TComInputBitstream* pcTComBitstream )$/;"	f	class:TDecBinCABAC
init	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::init( TDecEntropy* pcEntropyDecoder, TComTrQuant* pcTrQuant, TComPrediction* pcPrediction, TDecConformanceCheck* pConformanceCheck)$/;"	f	class:TDecCu
init	source/Lib/TLibDecoder/TDecEntropy.h	/^    Void init (TComPrediction* p, TDecConformanceCheck* pConformanceCheck) {m_pcPrediction = p; m_pConformanceCheck=pConformanceCheck;}$/;"	f	class:TDecEntropy
init	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void init (TComPrediction* p) {m_pcPrediction = p;}$/;"	f	class:TDecEntropy
init	source/Lib/TLibDecoder/TDecGop.cpp	/^Void TDecGop::init( TDecEntropy*            pcEntropyDecoder,$/;"	f	class:TDecGop
init	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  init                      ( TDecBinIf* p )    { m_pcTDecBinIf = p; }$/;"	f	class:TDecSbac
init	source/Lib/TLibDecoder/TDecSlice.cpp	/^Void TDecSlice::init(TDecEntropy* pcEntropyDecoder, TDecCu* pcCuDecoder, TDecConformanceCheck *pDecConformanceCheck)$/;"	f	class:TDecSlice
init	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::init()$/;"	f	class:TDecTop
init	source/Lib/TLibEncoder/SEIEncoder.h	/^  Void init(TEncCfg* encCfg, TEncTop *encTop, TEncGOP *encGOP) $/;"	f	class:SEIEncoder
init	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::init( TComBitIf* pcTComBitIf )$/;"	f	class:TEncBinCABAC
init	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::init( TEncTop* pcEncTop )$/;"	f	class:TEncCu
init	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::init ( TEncTop* pcTEncTop )$/;"	f	class:TEncGOP
init	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::init( Int totalFrames, Int targetBitrate, Int frameRate, Int GOPSize, Int picWidth, Int picHeight, Int LCUWidth, Int LCUHeight, Int keepHierBits, Bool useLCUSeparateModel, GOPEntry  GOPList[MAX_GOP] )$/;"	f	class:TEncRateCtrl
init	source/Lib/TLibEncoder/TEncSbac.h	/^  Void  init                   ( TEncBinIf* p )  { m_pcBinIf = p; }$/;"	f	class:TEncSbac
init	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::init(TEncCfg*       pcEncCfg,$/;"	f	class:TEncSearch
init	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::init( TEncTop* pcEncTop )$/;"	f	class:TEncSlice
init	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^void TEncTemporalFilter::init(const Int frameSkip,$/;"	f	class:TEncTemporalFilter
init	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::init(Bool isFieldCoding)$/;"	f	class:TEncTop
initBitsRatio	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initBitsRatio( Int bitsRatio[])$/;"	f	class:TEncRCSeq
initBuffer	source/Lib/TLibCommon/ContextModel3DBuffer.cpp	/^Void ContextModel3DBuffer::initBuffer( SliceType sliceType, Int qp, UChar* ctxModel )$/;"	f	class:ContextModel3DBuffer
initColourRemappingInfoLut	source/App/TAppDecoder/TAppDecTop.cpp	/^initColourRemappingInfoLut(const Int                                          bitDepth_in,     \/\/ bit-depth of the input values of the LUT$/;"	f	file:
initCtu	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::initCtu( TComPic* pcPic, UInt ctuRsAddr )$/;"	f	class:TComDataCU
initDecodedPictureHashSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initDecodedPictureHashSEI(SEIDecodedPictureHash *decodedPictureHashSEI, TComPic *pcPic, std::string &rHashString, const BitDepths &bitDepths)$/;"	f	class:SEIEncoder
initEncSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::initEncSlice( TComPic* pcPic, const Int pocLast, const Int pocCurr, const Int iGOPid, TComSlice*& rpcSlice, const Bool isField )$/;"	f	class:TEncSlice
initEqualRef	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::initEqualRef()$/;"	f	class:TComSlice
initEstData	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::initEstData( const UInt uiDepth, const Int qp, const Bool bTransquantBypass )$/;"	f	class:TComDataCU
initGOPID2Level	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initGOPID2Level( Int GOPID2Level[] )$/;"	f	class:TEncRCSeq
initHrdParam	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::initHrdParam(const TComHRD* pcHrd, Int iFrameRate, Double fInitialCpbFullness)$/;"	f	class:TEncRateCtrl
initIntraPatternChType	source/Lib/TLibCommon/TComPattern.cpp	/^Void TComPrediction::initIntraPatternChType( TComTU &rTu, const ComponentID compID, const Bool bFilterRefSamples DEBUG_STRING_FN_DECLARE(sDebug))$/;"	f	class:TComPrediction
initLCUPara	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initLCUPara( TRCParameter** LCUPara )$/;"	f	class:TEncRCSeq
initLumaDeltaQpLUT	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::initLumaDeltaQpLUT()$/;"	f	class:TEncCu
initPattern	source/Lib/TLibCommon/TComPattern.cpp	/^Void TComPattern::initPattern(Pel* piY,$/;"	f	class:TComPattern
initPicPara	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::initPicPara( TRCParameter* picPara )$/;"	f	class:TEncRCSeq
initRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::initRCGOP( Int numberOfPictures )$/;"	f	class:TEncRateCtrl
initRCPic	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRateCtrl::initRCPic( Int frameLevel )$/;"	f	class:TEncRateCtrl
initRDOCabacCoder	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::initRDOCabacCoder(TEncSbac* pcRDGoOnSbacCoder, TComSlice* pcSlice)$/;"	f	class:TEncSampleAdaptiveOffset
initROM	source/Lib/TLibCommon/TComRom.cpp	/^Void initROM()$/;"	f
initRasterToPelXY	source/Lib/TLibCommon/TComRom.cpp	/^Void initRasterToPelXY ( UInt uiMaxCUWidth, UInt uiMaxCUHeight, UInt uiMaxDepth )$/;"	f
initRasterToZscan	source/Lib/TLibCommon/TComRom.cpp	/^Void initRasterToZscan ( UInt uiMaxCUWidth, UInt uiMaxCUHeight, UInt uiMaxDepth )$/;"	f
initSEIActiveParameterSets	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIActiveParameterSets (SEIActiveParameterSets *seiActiveParameterSets, const TComVPS *vps, const TComSPS *sps)$/;"	f	class:SEIEncoder
initSEIAlternativeTransferCharacteristics	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIAlternativeTransferCharacteristics(SEIAlternativeTransferCharacteristics *seiAltTransCharacteristics)$/;"	f	class:SEIEncoder
initSEIAmbientViewingEnvironment	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIAmbientViewingEnvironment(SEIAmbientViewingEnvironment *seiAmbViewEnvironment)$/;"	f	class:SEIEncoder
initSEIAnnotatedRegions	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Bool SEIEncoder::initSEIAnnotatedRegions(SEIAnnotatedRegions* SEIAnnoReg, Int currPOC)$/;"	f	class:SEIEncoder
initSEIBufferingPeriod	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIBufferingPeriod(SEIBufferingPeriod *bufferingPeriodSEI, TComSlice *slice)$/;"	f	class:SEIEncoder
initSEIChromaResamplingFilterHint	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIChromaResamplingFilterHint(SEIChromaResamplingFilterHint *seiChromaResamplingFilterHint, Int iHorFilterIndex, Int iVerFilterIndex)$/;"	f	class:SEIEncoder
initSEIColourRemappingInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Bool SEIEncoder::initSEIColourRemappingInfo(SEIColourRemappingInfo* seiColourRemappingInfo, Int currPOC) \/\/ returns true on success, false on failure.$/;"	f	class:SEIEncoder
initSEIContentColourVolume	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIContentColourVolume(SEIContentColourVolume *seiContentColourVolume)$/;"	f	class:SEIEncoder
initSEIContentLightLevel	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIContentLightLevel(SEIContentLightLevelInfo *seiCLL)$/;"	f	class:SEIEncoder
initSEICubemapProjection	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEICubemapProjection(SEICubemapProjection *seiCubemapProjection)$/;"	f	class:SEIEncoder
initSEIDisplayOrientation	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIDisplayOrientation(SEIDisplayOrientation* seiDisplayOrientation)$/;"	f	class:SEIEncoder
initSEIErp	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIErp(SEIEquirectangularProjection* seiEquirectangularProjection)$/;"	f	class:SEIEncoder
initSEIFilmGrainCharacteristics	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIFilmGrainCharacteristics(SEIFilmGrainCharacteristics *seiFilmGrain)$/;"	f	class:SEIEncoder
initSEIFisheyeVideoInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIFisheyeVideoInfo(SEIFisheyeVideoInfo *seiFisheyeVideoInfo)$/;"	f	class:SEIEncoder
initSEIFramePacking	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIFramePacking(SEIFramePacking *seiFramePacking, Int currPicNum)$/;"	f	class:SEIEncoder
initSEIGreenMetadataInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIGreenMetadataInfo(SEIGreenMetadataInfo *seiGreenMetadataInfo, UInt u)$/;"	f	class:SEIEncoder
initSEIKneeFunctionInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIKneeFunctionInfo(SEIKneeFunctionInfo *seiKneeFunctionInfo)$/;"	f	class:SEIEncoder
initSEIMCTSExtractionInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIMCTSExtractionInfo(SEIMCTSExtractionInfoSet *sei, const TComVPS *vps, const TComSPS *sps, const TComPPS *pps)$/;"	f	class:SEIEncoder
initSEIOmniViewport	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIOmniViewport(SEIOmniViewport* seiOmniViewport)$/;"	f	class:SEIEncoder
initSEIRecoveryPoint	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIRecoveryPoint(SEIRecoveryPoint *recoveryPointSEI, TComSlice *slice)$/;"	f	class:SEIEncoder
initSEIRegionWisePacking	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIRegionWisePacking(SEIRegionWisePacking *seiRegionWisePacking)$/;"	f	class:SEIEncoder
initSEIRegionalNesting	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Bool SEIEncoder::initSEIRegionalNesting(SEIRegionalNesting* seiRegionalNesting, Int currPOC) \/\/ returns true on success, false on failure.$/;"	f	class:SEIEncoder
initSEISOPDescription	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEISOPDescription(SEISOPDescription *sopDescriptionSEI, TComSlice *slice, Int picInGOP, Int lastIdr, Int currGOPSize)$/;"	f	class:SEIEncoder
initSEIScalableNesting	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIScalableNesting(SEIScalableNesting *scalableNestingSEI, SEIMessages &nestedSEIs)$/;"	f	class:SEIEncoder
initSEISegmentedRectFramePacking	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEISegmentedRectFramePacking(SEISegmentedRectFramePacking *seiSegmentedRectFramePacking)$/;"	f	class:SEIEncoder
initSEIShutterIntervalInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIShutterIntervalInfo(SEIShutterIntervalInfo *seiShutterIntervalInfo)$/;"	f	class:SEIEncoder
initSEISphereRotation	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEISphereRotation(SEISphereRotation* seiSphereRotation)$/;"	f	class:SEIEncoder
initSEITempMotionConstrainedTileSets	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEITempMotionConstrainedTileSets (SEITempMotionConstrainedTileSets *sei, const TComPPS *pps)$/;"	f	class:SEIEncoder
initSEITimeCode	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEITimeCode(SEITimeCode *seiTimeCode)$/;"	f	class:SEIEncoder
initSEIToneMappingInfo	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initSEIToneMappingInfo(SEIToneMappingInfo *seiToneMappingInfo)$/;"	f	class:SEIEncoder
initScalingList	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::initScalingList()$/;"	f	class:TComTrQuant
initSlice	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::initSlice()$/;"	f	class:TComSlice
initSliceQpDelta	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::initSliceQpDelta()$/;"	f	class:TComTrQuant
initSubCU	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::initSubCU( TComDataCU* pcCU, UInt uiPartUnitIdx, UInt uiDepth, Int qp )$/;"	f	class:TComDataCU
initTempBuff	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::initTempBuff(ChromaFormat chromaFormatIDC)$/;"	f	class:TComPrediction
initTemporalLevel0IndexSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::initTemporalLevel0IndexSEI(SEITemporalLevel0Index *temporalLevel0IndexSEI, TComSlice *slice)$/;"	f	class:SEIEncoder
initWpAcDcParam	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSlice::initWpAcDcParam()$/;"	f	class:TComSlice
initWpScaling	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSlice::initWpScaling(const TComSPS *sps)$/;"	f	class:TComSlice
initZscanToRaster	source/Lib/TLibCommon/TComRom.cpp	/^Void initZscanToRaster ( Int iMaxDepth, Int iDepth, UInt uiStartVal, UInt*& rpuiCurrIdx )$/;"	f
initialize	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void EfficientFieldIRAPMapping::initialize(const Bool isField, const Int gopSize, const Int POCLast, const Int numPicRcvd, const Int lastIDR, TEncGOP *pEncGop, TEncCfg *pCfg )$/;"	f	class:EfficientFieldIRAPMapping
inputKneePoint	source/Lib/TLibEncoder/TEncCfg.h	/^    Int inputKneePoint;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation::KneePointPair
insertAt	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::insertAt(const TComOutputBitstream& src, UInt pos)$/;"	f	class:TComOutputBitstream
inspect	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import inspect$/;"	i
install_script	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def install_script(self, inst_dir, script, modules):$/;"	m	class:BuildScriptInstaller
instance	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    instance = None$/;"	v	class:MsvcRegistry
instance	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^    instance = None$/;"	v	class:SystemInfo
int16_t	compat/msvc/stdint.h	/^typedef short int int16_t;$/;"	t
int32_t	compat/msvc/stdint.h	/^typedef int int32_t;$/;"	t
int64_t	compat/msvc/stdint.h	/^typedef __int64 int64_t;$/;"	t
int8_t	compat/msvc/stdint.h	/^typedef signed char int8_t;$/;"	t
intensityInterval	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  int16_t intensityInterval[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	struct:GrainSynthesisStruct_t
intensityIntervalLowerBound	source/Lib/TLibCommon/SEI.h	/^    UChar intensityIntervalLowerBound;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModelIntensityValues
intensityIntervalUpperBound	source/Lib/TLibCommon/SEI.h	/^    UChar intensityIntervalUpperBound;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModelIntensityValues
intensityValues	source/Lib/TLibCommon/SEI.h	/^    std::vector<CompModelIntensityValues> intensityValues;$/;"	m	struct:SEIFilmGrainCharacteristics::CompModel
interDampeningFactor	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  double interDampeningFactor( double parameter, double cumulativeDelta )$/;"	f	namespace:__anon4
invRdpcmNxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invRdpcmNxN( TComTU& rTu, const ComponentID compID, Pel* pcResidual, const UInt uiStride )$/;"	f	class:TComTrQuant
invRecurTransformNxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invRecurTransformNxN( const ComponentID compID,$/;"	f	class:TComTrQuant
invTrSkipDeQuantOneSample	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invTrSkipDeQuantOneSample( TComTU &rTu, ComponentID compID, TCoeff inSample, Pel &reconSample, const QpParam &cQP, UInt uiPos )$/;"	f	class:TComTrQuant
invTransformNxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::invTransformNxN(      TComTU        &rTu,$/;"	f	class:TComTrQuant
invertQuantOffsets	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::invertQuantOffsets(ComponentID compIdx, Int typeIdc, Int typeAuxInfo, Int* dstOffsets, Int* srcOffsets)$/;"	f	class:TComSampleAdaptiveOffset
isAboveAvailable	source/Lib/TLibCommon/TComPattern.cpp	/^Int isAboveAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxRT, Bool *bValidFlags )$/;"	f
isAboveLeftAvailable	source/Lib/TLibCommon/TComPattern.cpp	/^Bool isAboveLeftAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT )$/;"	f
isAboveRightAvailable	source/Lib/TLibCommon/TComPattern.cpp	/^Int isAboveRightAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxRT, Bool *bValidFlags )$/;"	f
isAlignedBins	source/Lib/TLibCommon/TComCodingStatistics.h	/^static inline Bool isAlignedBins(TComCodingStatisticsType statT) { return statT==STATS__CABAC_BITS__ALIGNED_SIGN_BIT || statT==STATS__CABAC_BITS__ALIGNED_ESCAPE_BITS; }$/;"	f
isBelowLeftAvailable	source/Lib/TLibCommon/TComPattern.cpp	/^Int isBelowLeftAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxLB, Bool *bValidFlags )$/;"	f
isBipredRestriction	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isBipredRestriction(UInt puIdx) const$/;"	f	class:TComDataCU
isChroma	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool        isChroma                  (const ChannelType id)                         { return (id!=CHANNEL_TYPE_LUMA);                                    }$/;"	f
isChroma	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool        isChroma                  (const ComponentID id)                         { return (id!=COMPONENT_Y);                                          }$/;"	f
isChromaEnabled	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool        isChromaEnabled           (const ChromaFormat fmt)                       { return  fmt!=CHROMA_400;                                           }$/;"	f
isDiffMER	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isDiffMER(Int xN, Int yN, Int xP, Int yP) const$/;"	f	class:TComDataCU
isEnabled	source/Lib/TLibCommon/TypeDef.h	/^  Bool isEnabled() const { return enabled; }$/;"	f	struct:WCGChromaQPControl
isEnabled	source/Lib/TLibCommon/TypeDef.h	/^  Bool isEnabled() const { return mode!=LUMALVL_TO_DQP_DISABLED; }$/;"	f	struct:LumaLevelToDeltaQPMapping
isEof	source/Lib/Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::isEof()$/;"	f	class:TVideoIOYuv
isEqualCol	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool isEqualCol( Int addrA, Int addrB, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isEqualRef	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isEqualRef( RefPicList e, Int iRefIdx1, Int iRefIdx2 )$/;"	f	class:TComSlice
isEqualRow	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool isEqualRow( Int addrA, Int addrB, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isEqualRowOrCol	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool isEqualRowOrCol( Int addrA, Int addrB, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isFail	source/Lib/Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::isFail()$/;"	f	class:TVideoIOYuv
isField	source/Lib/TLibCommon/TComPic.h	/^   Bool              isField() const                      {return m_isField;}$/;"	f	class:TComPic
isFirstAbsZorderIdxInDepth	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isFirstAbsZorderIdxInDepth (UInt uiAbsPartIdx, UInt uiDepth) const$/;"	f	class:TComDataCU
isIRAP	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isIRAP() const                                         { return (getNalUnitType() >= 16) && (getNalUnitType() <= 23);  }$/;"	f	class:TComSlice
isInRange	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function isInRange {$/;"	f
isInter	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          isInter                       ( UInt uiPartIdx ) const                                     { return m_pePredMode[ uiPartIdx ] == MODE_INTER; }$/;"	f	class:TComDataCU
isInter	source/Lib/TLibCommon/TComPicSym.h	/^    Bool isInter(const UInt absPartAddr)                const { return m_pePredMode[absPartAddr] == MODE_INTER; }$/;"	f	struct:TComPicSym::DPBPerCtuData
isInterB	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isInterB() const                                       { return m_eSliceType == B_SLICE;                               }$/;"	f	class:TComSlice
isInterP	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isInterP() const                                       { return m_eSliceType == P_SLICE;                               }$/;"	f	class:TComSlice
isIntra	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          isIntra                       ( UInt uiPartIdx ) const                                     { return m_pePredMode[ uiPartIdx ] == MODE_INTRA; }$/;"	f	class:TComDataCU
isIntra	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isIntra() const                                        { return m_eSliceType == I_SLICE;                               }$/;"	f	class:TComSlice
isLastColumnCTUInTile	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isLastColumnCTUInTile() const$/;"	f	class:TComDataCU
isLastSubCUOfCtu	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isLastSubCUOfCtu(const UInt absPartIdx) const$/;"	f	class:TComDataCU
isLeftAvailable	source/Lib/TLibCommon/TComPattern.cpp	/^Int isLeftAvailable( const TComDataCU* pcCU, UInt uiPartIdxLT, UInt uiPartIdxLB, Bool *bValidFlags )$/;"	f
isLosslessCoded	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isLosslessCoded(UInt absPartIdx) const$/;"	f	class:TComDataCU
isLuma	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool        isLuma                    (const ChannelType id)                         { return (id==CHANNEL_TYPE_LUMA);                                    }$/;"	f
isLuma	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline Bool        isLuma                    (const ComponentID id)                         { return (id==COMPONENT_Y);                                          }$/;"	f
isNaluWithinTargetDecLayerIdSet	source/App/TAppDecoder/TAppDecTop.cpp	/^Bool TAppDecTop::isNaluWithinTargetDecLayerIdSet( InputNALUnit* nalu )$/;"	f	class:TAppDecTop
isNonTransformedResidualRotated	source/Lib/TLibCommon/TComTU.cpp	/^Bool TComTU::isNonTransformedResidualRotated(const ComponentID compID)$/;"	f	class:TComTU
isRDPCMEnabled	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          isRDPCMEnabled                ( UInt uiAbsPartIdx ) const                                  { return getSlice()->getSPS()->getSpsRangeExtension().getRdpcmEnabledFlag(isIntra(uiAbsPartIdx) ? RDPCM_SIGNAL_IMPLICIT : RDPCM_SIGNAL_EXPLICIT); }$/;"	f	class:TComDataCU
isRandomAccessSkipPicture	source/Lib/TLibDecoder/TDecTop.cpp	/^Bool TDecTop::isRandomAccessSkipPicture(Int& iSkipFrame,  Int& iPOCLastDisplay)$/;"	f	class:TDecTop
isReferenceNalu	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isReferenceNalu() const                                { return ((getNalUnitType() <= NAL_UNIT_RESERVED_VCL_R15) && (getNalUnitType()%2 != 0)) || ((getNalUnitType() >= NAL_UNIT_CODED_SLICE_BLA_W_LP) && (getNalUnitType() <= NAL_UNIT_RESERVED_IRAP_VCL23) ); }$/;"	f	class:TComSlice
isReferenced	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        isReferenced() const                                   { return m_bRefenced;                                           }$/;"	f	class:TComSlice
isSei	source/Lib/TLibCommon/NAL.h	/^  Bool isSei()$/;"	f	struct:NALUnit
isSet	source/Lib/TLibCommon/Debug.h	/^  Bool                isSet()       const       { return m_bSet;    }$/;"	f	class:EnvVar
isSkipPictureForBLA	source/Lib/TLibDecoder/TDecTop.cpp	/^Bool TDecTop::isSkipPictureForBLA(Int& iPOCLastDisplay)$/;"	f	class:TDecTop
isSkipped	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::isSkipped( UInt uiPartIdx ) const$/;"	f	class:TComDataCU
isSlice	source/Lib/TLibCommon/NAL.h	/^  Bool isSlice()$/;"	f	struct:NALUnit
isStepwiseTemporalLayerSwitchingPointCandidate	source/Lib/TLibCommon/TComSlice.cpp	/^Bool TComSlice::isStepwiseTemporalLayerSwitchingPointCandidate(TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
isTemporalLayerSwitchingPoint	source/Lib/TLibCommon/TComSlice.cpp	/^Bool TComSlice::isTemporalLayerSwitchingPoint(TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
isTopField	source/Lib/TLibCommon/TComPic.h	/^   Bool              isTopField()                         {return m_isTop;}$/;"	f	class:TComPic
isTrue	source/Lib/TLibCommon/Debug.h	/^  Bool                isTrue()      const       { return m_iVal!=0; }$/;"	f	class:EnvVar
isVcl	source/Lib/TLibCommon/NAL.h	/^  Bool isVcl()$/;"	f	struct:NALUnit
isZeroCol	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool isZeroCol( Int addr, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
isZeroRow	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool isZeroRow( Int addr, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
is_cmake_installed	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def is_cmake_installed(self):$/;"	m	class:CMakeFinder
is_cmake_source_tree	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def is_cmake_source_tree(self):$/;"	m	class:CMakeManualRstUtil
is_cray	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_cray(self):$/;"	m	class:SystemInfo.__SystemInfo
is_cross_compiler	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def is_cross_compiler(self):$/;"	m	class:CMakeCompilerInfo
is_debian	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_debian(self):$/;"	m	class:SystemInfo.__SystemInfo
is_empty	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def is_empty(self):$/;"	m	class:SvnProperties
is_empty_repo	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def is_empty_repo(self, repo_dir=None):$/;"	m	class:GitHelper
is_errored	source/Lib/Utilities/program_options_lite.h	/^      bool is_errored;$/;"	m	struct:df::program_options_lite::ErrorReporter
is_linux	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_linux(self):$/;"	m	class:SystemInfo.__SystemInfo
is_macosx	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_macosx(self):$/;"	m	class:SystemInfo.__SystemInfo
is_mingw	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def is_mingw(self):$/;"	m	class:Toolset
is_multi_configuration_generator	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def is_multi_configuration_generator(self):$/;"	m	class:CMakeBuildTreeInfo
is_python3	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_python3(self):$/;"	m	class:SystemInfo.__SystemInfo
is_redhat	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_redhat(self):$/;"	m	class:SystemInfo.__SystemInfo
is_suse	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_suse(self):$/;"	m	class:SystemInfo.__SystemInfo
is_top_dir	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def is_top_dir(top_dir):$/;"	f
is_version_installed	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def is_version_installed(self, version):$/;"	m	class:MsvcRegistry.__MsvcRegistry
is_vs2017_toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def is_vs2017_toolset(self, version):$/;"	m	class:MsvcRegistry.__MsvcRegistry
is_vs2019_toolset	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def is_vs2019_toolset(self, version):$/;"	m	class:MsvcRegistry.__MsvcRegistry
is_windows	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_windows(self):$/;"	m	class:SystemInfo.__SystemInfo
is_windows8	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_windows8(self):$/;"	m	class:SystemInfo.__SystemInfo
is_windows_msys	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^        def is_windows_msys(self):$/;"	m	class:SystemInfo.__SystemInfo
label	source/Lib/TLibCommon/SEI.h	/^    std::string label;           \/\/ only valid if bLabelValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionLabel
labelValid	source/Lib/TLibCommon/SEI.h	/^    Bool        labelValid;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionLabel
lambdaModifier	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^  double lambdaModifier;$/;"	m	struct:Point
lambdaModifiers	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^  TLambdaModifier lambdaModifiers;$/;"	m	struct:MetaLogEntry
lastXBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int lastXBits[MAX_NUM_CHANNEL_TYPE][LAST_SIGNIFICANT_GROUPS];$/;"	m	struct:__anon10
lastYBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int lastYBits[MAX_NUM_CHANNEL_TYPE][LAST_SIGNIFICANT_GROUPS];$/;"	m	struct:__anon10
launch	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def launch(self, params, cmake_argv):$/;"	m	class:CMakeLauncher
launch_build	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def launch_build(self, params, lnk_variant, cmake_argv_optional):$/;"	m	class:CMakeLauncher
launch_cmake	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def launch_cmake(self, cmake_argv):$/;"	m	class:CMakeLauncher
launch_config	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^    def launch_config(self, compiler_info, generator_alias, build_configs, lnk_variant, cmake_argv_optional):$/;"	m	class:CMakeLauncher
leftOffset	source/Lib/TLibCommon/SEI.h	/^    Int leftOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
leftShift	source/Lib/TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType leftShift       (const ValueType value, const Int shift) { return (shift >= 0) ? ( value                                  << shift) : ( value                                   >> -shift); }$/;"	f
leftShift_round	source/Lib/TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType leftShift_round (const ValueType value, const Int shift) { return (shift >= 0) ? ( value                                  << shift) : ((value + (ValueType(1) << (-shift - 1))) >> -shift); }$/;"	f
lessOrEqual	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function lessOrEqual {$/;"	f
lessThanCol	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool lessThanCol( Int addr, Int val, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
lessThanRow	source/Lib/TLibCommon/TComDataCU.h	/^  static inline Bool lessThanRow( Int addr, Int val, Int numUnitsPerRow )$/;"	f	namespace:RasterAddress
level	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Level::Name level;$/;"	m	struct:LevelTierFeatures
level	source/Lib/TLibDecoder/TDecConformance.h	/^  Level::Name level;$/;"	m	struct:LevelTierFeatures
lineWrap	source/Lib/TLibCommon/Debug.cpp	/^std::string lineWrap(const std::string &input, const UInt maximumLineLength)$/;"	f
linenum	source/Lib/Utilities/program_options_lite.cpp	/^      int linenum;$/;"	m	struct:df::program_options_lite::CfgStreamParser	file:
linkToWithOffset	source/Lib/TLibCommon/TComMotionInfo.h	/^  Void linkToWithOffset( TComCUMvField const * src, Int offset )$/;"	f	class:TComCUMvField
lldb	cmake/CMakeBuild/lldb/CMakeBuildLldbExt.py	/^import lldb$/;"	i
load	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::load ( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
load	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::load ( const TEncSbac* pSrc)$/;"	f	class:TEncSbac
loadContexts	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::loadContexts ( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
loadContexts	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::loadContexts ( const TEncSbac* pSrc)$/;"	f	class:TEncSbac
loadIntraDirMode	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::loadIntraDirMode( const TEncSbac* pSrc, const ChannelType chType )$/;"	f	class:TEncSbac
logging	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import logging$/;"	i
logging	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import logging$/;"	i
loopFilterPic	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::loopFilterPic( TComPic* pcPic )$/;"	f	class:TComLoopFilter
lowDelayHrdFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool lowDelayHrdFlag;$/;"	m	struct:HrdSubLayerInfo
mAbsPartIdxCU	source/Lib/TLibCommon/TComTU.h	/^    UInt          mAbsPartIdxCU;$/;"	m	class:TComTU
mAbsPartIdxStep	source/Lib/TLibCommon/TComTU.h	/^    UInt          mAbsPartIdxStep;$/;"	m	class:TComTU
mAbsPartIdxTURelCU	source/Lib/TLibCommon/TComTU.h	/^    UInt          mAbsPartIdxTURelCU;$/;"	m	class:TComTU
mChromaFormat	source/Lib/TLibCommon/TComTU.h	/^    ChromaFormat  mChromaFormat;$/;"	m	class:TComTU
mCodeAll	source/Lib/TLibCommon/TComTU.h	/^    Bool          mCodeAll[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mCuDepth	source/Lib/TLibCommon/TComTU.h	/^    UInt          mCuDepth;$/;"	m	class:TComTU
mLog2TrLumaSize	source/Lib/TLibCommon/TComTU.h	/^    UInt          mLog2TrLumaSize;$/;"	m	class:TComTU
mOffsets	source/Lib/TLibCommon/TComTU.h	/^    UInt          mOffsets[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mOrigWidth	source/Lib/TLibCommon/TComTU.h	/^    UInt          mOrigWidth[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mRect	source/Lib/TLibCommon/TComTU.h	/^    TComRectangle mRect[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
mSection	source/Lib/TLibCommon/TComTU.h	/^    UInt          mSection;$/;"	m	class:TComTU
mSplitMode	source/Lib/TLibCommon/TComTU.h	/^    TU_SPLIT_MODE mSplitMode;$/;"	m	class:TComTU
mTrDepthRelCU	source/Lib/TLibCommon/TComTU.h	/^    UInt          mTrDepthRelCU[MAX_NUM_COMPONENT];$/;"	m	class:TComTU
m_AccessUnitDelimiter	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_AccessUnitDelimiter;                            \/\/\/< add Access Unit Delimiter NAL units$/;"	m	class:TAppEncCfg
m_AccessUnitDelimiter	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_AccessUnitDelimiter;               \/\/\/< add Access Unit Delimiter NAL units$/;"	m	class:TEncCfg
m_ArlCoeffIsAliasedAllocation	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          m_ArlCoeffIsAliasedAllocation;          \/\/\/< ARL coefficient buffer is an alias of the global buffer and must not be free()'d$/;"	m	class:TComDataCU
m_Bitstream	source/Lib/TLibDecoder/NALread.h	/^    TComInputBitstream m_Bitstream;$/;"	m	class:InputNALUnit
m_Bitstream	source/Lib/TLibEncoder/NALwrite.h	/^  TComOutputBitstream m_Bitstream;$/;"	m	struct:OutputNALUnit
m_CUMvField	source/Lib/TLibCommon/TComPicSym.h	/^    TComCUMvField  m_CUMvField[NUM_REF_PIC_LIST_01];$/;"	m	struct:TComPicSym::DPBPerCtuData
m_CUTransquantBypass	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         m_CUTransquantBypass;                   \/\/\/< array of cu_transquant_bypass flags$/;"	m	class:TComDataCU
m_CUTransquantBypassFlagForce	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_CUTransquantBypassFlagForce;                    \/\/\/< if transquant_bypass_enabled_flag, then, if true, all CU transquant bypass flags will be set to true.$/;"	m	class:TAppEncCfg
m_CUTransquantBypassFlagForce	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_CUTransquantBypassFlagForce;                    \/\/\/< if transquant_bypass_enabled_flag, then, if true, all CU transquant bypass flags will be set to true.$/;"	m	class:TEncCfg
m_CUTransquantBypassFlagSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_CUTransquantBypassFlagSCModel;$/;"	m	class:TDecSbac
m_CUTransquantBypassFlagSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_CUTransquantBypassFlagSCModel;$/;"	m	class:TEncSbac
m_CbQPoffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_CbQPoffset;$/;"	m	struct:GOPEntry
m_ChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_ChromaQpAdj;                          \/\/\/< array of chroma QP adjustments (indexed). when value = 0, cu_chroma_qp_offset_flag=0; when value>0, indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=value-1$/;"	m	class:TComDataCU
m_ChromaQpAdjEnabled	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_ChromaQpAdjEnabled;$/;"	m	class:TComSlice
m_ChromaQpAdjFlagSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjFlagSCModel;$/;"	m	class:TDecSbac
m_ChromaQpAdjFlagSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjFlagSCModel;$/;"	m	class:TEncSbac
m_ChromaQpAdjIdcSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjIdcSCModel;$/;"	m	class:TDecSbac
m_ChromaQpAdjIdcSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjIdcSCModel;$/;"	m	class:TEncSbac
m_ChromaQpAdjTableIncludingNullEntry	source/Lib/TLibCommon/TComSlice.h	/^  ChromaQpAdj      m_ChromaQpAdjTableIncludingNullEntry[1+MAX_QP_OFFSET_LIST_SIZE]; \/\/!< Array includes entry [0] for the null offset used when cu_chroma_qp_offset_flag=0, and entries [cu_chroma_qp_offset_idx+1...] otherwise$/;"	m	class:TComPPSRExt
m_CpbSaturationEnabled	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Bool       m_CpbSaturationEnabled;    \/\/ Enable target bits saturation to avoid CPB overflow and underflow$/;"	m	class:TEncRateCtrl
m_CrQPoffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_CrQPoffset;$/;"	m	struct:GOPEntry
m_DBParam	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_DBParam[MAX_ENCODER_DEBLOCKING_QUALITY_LAYERS][4];   \/\/[layer_id][0: available; 1: bDBDisabled; 2: Beta Offset Div2; 3: Tc Offset Div2;]$/;"	m	class:TEncGOP
m_FrameSkip	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_FrameSkip;                                      \/\/\/< number of skipped frames from the beginning$/;"	m	class:TAppEncCfg
m_FrameSkip	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_FrameSkip;$/;"	m	class:TEncCfg
m_FrameSkip	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_FrameSkip;$/;"	m	class:TEncTemporalFilter
m_FutureBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  uint32_t m_FutureBytes; \/* bytes that have been peeked *\/$/;"	m	class:InputByteStream
m_GOPID2Level	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int* m_GOPID2Level;$/;"	m	class:TEncRCSeq
m_GOPList	source/App/TAppEncoder/TAppEncCfg.h	/^  GOPEntry  m_GOPList[MAX_GOP];                               \/\/\/< the coding structure entries from the config file$/;"	m	class:TAppEncCfg
m_GOPList	source/Lib/TLibEncoder/TEncCfg.h	/^  GOPEntry  m_GOPList[MAX_GOP];$/;"	m	class:TEncCfg
m_GOPSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_GOPSize;$/;"	m	class:TEncRCSeq
m_GOPSize	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_GOPSize;$/;"	m	class:TEncTemporalFilter
m_HRD	source/Lib/TLibCommon/TComSlice.h	/^  HrdSubLayerInfo m_HRD[MAX_TLAYER];$/;"	m	class:TComHRD
m_Input	source/Lib/TLibDecoder/AnnexBread.h	/^  std::istream& m_Input; \/* Input stream to read from *\/$/;"	m	class:InputByteStream
m_InputChromaFormatIDC	source/App/TAppEncoder/TAppEncCfg.h	/^  ChromaFormat m_InputChromaFormatIDC;$/;"	m	class:TAppEncCfg
m_IsChromaQpAdjCoded	source/Lib/TLibDecoder/TDecCu.h	/^  Bool                m_IsChromaQpAdjCoded;$/;"	m	class:TDecCu
m_LCUHeight	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_LCUHeight;$/;"	m	class:TEncRCSeq
m_LCULeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_LCULeft;$/;"	m	class:TEncRCPic
m_LCUPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter** m_LCUPara;$/;"	m	class:TEncRCSeq
m_LCUWidth	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_LCUWidth;$/;"	m	class:TEncRCSeq
m_LCUs	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCLCU* m_LCUs;$/;"	m	class:TEncRCPic
m_LFCrossSliceBoundaryFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_LFCrossSliceBoundaryFlag;$/;"	m	class:TComSlice
m_MCTSExtractionInfoSets	source/Lib/TLibCommon/SEI.h	/^    std::vector<MCTSExtractionInfo> m_MCTSExtractionInfoSets;$/;"	m	class:SEIMCTSExtractionInfoSet
m_MSBExtendedBitDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE];      \/\/\/< bit-depth of input samples after MSB extension$/;"	m	class:TAppEncCfg
m_MSBExtendedBitDepth	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncTemporalFilter
m_MSBExtendedBitDepth	source/Lib/Utilities/TVideoIOYuv.h	/^  Int       m_MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE];  \/\/\/< bitdepth after addition of MSBs (with value 0)$/;"	m	class:TVideoIOYuv
m_NumFutureBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt m_NumFutureBytes; \/* number of valid bytes in m_FutureBytes *\/$/;"	m	class:InputByteStream
m_OutputFlagPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_OutputFlagPresentFlag;             \/\/!< Indicates the presence of output_flag in slice header$/;"	m	class:TComPPS
m_PCMBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_PCMBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncCfg
m_POC	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_POC[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_POC	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_POC;$/;"	m	struct:GOPEntry
m_PPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_PPSId;                    \/\/ pic_parameter_set_id$/;"	m	class:TComPPS
m_PicOutputFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_PicOutputFlag;        \/\/\/< pic_output_flag$/;"	m	class:TComSlice
m_QP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_QP;     \/\/ QP of skip mode is set to g_RCInvalidQPValue$/;"	m	struct:TRCLCU
m_QP	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_QP;$/;"	m	class:TEncTemporalFilter
m_QPFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  Double m_QPFactor;$/;"	m	struct:GOPEntry
m_QPOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_QPOffset;$/;"	m	struct:GOPEntry
m_QPOffsetModelOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Double m_QPOffsetModelOffset;$/;"	m	struct:GOPEntry
m_QPOffsetModelScale	source/Lib/TLibEncoder/TEncCfg.h	/^  Double m_QPOffsetModelScale;$/;"	m	struct:GOPEntry
m_RASPOCforResetEncoder	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_RASPOCforResetEncoder; \/\/ an IDR POC number, after which the next POC (in output order) will be reset. If MAX_INT, then no reset is pending.$/;"	m	class:TEncGOP
m_RCCpbSaturationEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_RCCpbSaturationEnabled;             \/\/\/< enable target bits saturation to avoid CPB overflow and underflow$/;"	m	class:TAppEncCfg
m_RCCpbSaturationEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_RCCpbSaturationEnabled;$/;"	m	class:TEncCfg
m_RCCpbSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_RCCpbSize;                          \/\/\/< CPB size$/;"	m	class:TAppEncCfg
m_RCCpbSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_RCCpbSize;$/;"	m	class:TEncCfg
m_RCEnableRateControl	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_RCEnableRateControl;                \/\/\/< enable rate control or not$/;"	m	class:TAppEncCfg
m_RCEnableRateControl	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_RCEnableRateControl;$/;"	m	class:TEncCfg
m_RCForceIntraQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_RCForceIntraQP;                     \/\/\/< force all intra picture to use initial QP or not$/;"	m	class:TAppEncCfg
m_RCForceIntraQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_RCForceIntraQP;$/;"	m	class:TEncCfg
m_RCInitialCpbFullness	source/App/TAppEncoder/TAppEncCfg.h	/^  Double    m_RCInitialCpbFullness;               \/\/\/< initial CPB fullness $/;"	m	class:TAppEncCfg
m_RCInitialCpbFullness	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_RCInitialCpbFullness;$/;"	m	class:TEncCfg
m_RCInitialQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_RCInitialQP;                        \/\/\/< inital QP for rate control$/;"	m	class:TAppEncCfg
m_RCInitialQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_RCInitialQP;$/;"	m	class:TEncCfg
m_RCKeepHierarchicalBit	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_RCKeepHierarchicalBit;              \/\/\/< 0: equal bit allocation; 1: fixed ratio bit allocation; 2: adaptive ratio bit allocation$/;"	m	class:TAppEncCfg
m_RCKeepHierarchicalBit	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_RCKeepHierarchicalBit;$/;"	m	class:TEncCfg
m_RCLCULevelRC	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_RCLCULevelRC;                       \/\/\/< true: LCU level rate control; false: picture level rate control NOTE: code-tidy - rename to m_RCCtuLevelRC$/;"	m	class:TAppEncCfg
m_RCLCULevelRC	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_RCLCULevelRC;$/;"	m	class:TEncCfg
m_RCQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int        m_RCQP;$/;"	m	class:TEncRateCtrl
m_RCTargetBitrate	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_RCTargetBitrate;                    \/\/\/< target bitrate when rate control is enabled$/;"	m	class:TAppEncCfg
m_RCTargetBitrate	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_RCTargetBitrate;$/;"	m	class:TEncCfg
m_RCUseLCUSeparateModel	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_RCUseLCUSeparateModel;              \/\/\/< use separate R-lambda model at LCU level                        NOTE: code-tidy - rename to m_RCUseCtuSeparateModel$/;"	m	class:TAppEncCfg
m_RCUseLCUSeparateModel	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_RCUseLCUSeparateModel;$/;"	m	class:TEncCfg
m_RPSList	source/Lib/TLibCommon/TComSlice.h	/^  TComRPSList      m_RPSList;$/;"	m	class:TComSPS
m_RefPicListModification	source/Lib/TLibCommon/TComSlice.h	/^  TComRefPicListModification m_RefPicListModification;$/;"	m	class:TComSlice
m_RefPicSetIdxL0	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_RefPicSetIdxL0[REF_PIC_LIST_NUM_IDX];$/;"	m	class:TComRefPicListModification
m_RefPicSetIdxL1	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_RefPicSetIdxL1[REF_PIC_LIST_NUM_IDX];$/;"	m	class:TComRefPicListModification
m_SEIFGSFileName	source/App/TAppDecoder/TAppDecCfg.h	/^  std::string   m_SEIFGSFileName;                     \/\/\/< output reconstruction file name$/;"	m	class:TAppDecCfg
m_SEIs	source/Lib/TLibCommon/TComPic.h	/^  SEIMessages  m_SEIs; \/\/\/< Any SEI messages that have been received.  If !NULL we own the object.$/;"	m	class:TComPic
m_SEIs	source/Lib/TLibDecoder/TDecTop.h	/^  SEIMessages             m_SEIs; \/\/\/< List of SEI messages that have been received before the first slice and between slices, excluding prefix SEIs...$/;"	m	class:TDecTop
m_SOPDescriptionSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_SOPDescriptionSEIEnabled;$/;"	m	class:TAppEncCfg
m_SOPDescriptionSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_SOPDescriptionSEIEnabled;$/;"	m	class:TEncCfg
m_SPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_SPSId;                    \/\/ seq_parameter_set_id$/;"	m	class:TComPPS
m_SPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_SPSId;$/;"	m	class:TComSPS
m_SPSTemporalMVPEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_SPSTemporalMVPEnabledFlag;$/;"	m	class:TComSPS
m_SignDataHidingEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_SignDataHidingEnabledFlag;$/;"	m	class:TEncCfg
m_TMVPModeId	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_TMVPModeId;$/;"	m	class:TAppEncCfg
m_TMVPModeId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_TMVPModeId;$/;"	m	class:TEncCfg
m_TransquantBypassEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_TransquantBypassEnabledFlag;                    \/\/\/< transquant_bypass_enabled_flag setting in PPS.$/;"	m	class:TAppEncCfg
m_TransquantBypassEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_TransquantBypassEnabledFlag;       \/\/!< Indicates presence of cu_transquant_bypass_flag in CUs.$/;"	m	class:TComPPS
m_TransquantBypassEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_TransquantBypassEnabledFlag;                    \/\/\/< transquant_bypass_enabled_flag setting in PPS.$/;"	m	class:TEncCfg
m_VPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                   m_VPSId;$/;"	m	class:TComVPS
m_VPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_VPSId;$/;"	m	class:TComSPS
m_aaiAdaptSR	source/Lib/TLibEncoder/TEncSearch.h	/^  Int             m_aaiAdaptSR[MAX_NUM_REF_LIST_ADAPT_SR][MAX_IDX_ADAPT_SR];$/;"	m	class:TEncSearch
m_aapbEdgeFilter	source/Lib/TLibCommon/TComLoopFilter.h	/^  Bool*     m_aapbEdgeFilter[NUM_EDGE_DIR];$/;"	m	class:TComLoopFilter
m_aapucBS	source/Lib/TLibCommon/TComLoopFilter.h	/^  UChar*    m_aapucBS[NUM_EDGE_DIR];         \/\/\/< Bs for [Ver\/Hor][Y\/U\/V][Blk_Idx]$/;"	m	class:TComLoopFilter
m_abEqualRef	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_abEqualRef  [NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_REF];$/;"	m	class:TComSlice
m_absZIdxInCtu	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_absZIdxInCtu;                         \/\/\/< absolute address in a CTU. It's Z scan order$/;"	m	class:TComDataCU
m_acAQLayer	source/Lib/TLibEncoder/TEncPic.h	/^  TEncPicQPAdaptationLayer* m_acAQLayer;$/;"	m	class:TEncPic
m_acCUMvField	source/Lib/TLibCommon/TComDataCU.h	/^  TComCUMvField m_acCUMvField[NUM_REF_PIC_LIST_01];     \/\/\/< array of motion vectors.$/;"	m	class:TComDataCU
m_acMv	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv    m_acMv;$/;"	m	class:TComMvField
m_acMvCand	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv m_acMvCand[ AMVP_MAX_NUM_CANDS ];  \/\/\/< array of motion vector predictor candidates$/;"	m	struct:_AMVPInfo
m_acMvPredictors	source/Lib/TLibEncoder/TEncSearch.h	/^  TComMv          m_acMvPredictors[NUM_MV_PREDICTORS]; \/\/ Left, Above, AboveRight. enum MVP_DIR first NUM_MV_PREDICTORS entries are suitable for accessing.$/;"	m	class:TEncSearch
m_acTEncAQU	source/Lib/TLibEncoder/TEncPic.h	/^  TEncQPAdaptationUnit* m_acTEncAQU;$/;"	m	class:TEncPicQPAdaptationLayer
m_acYuvPred	source/Lib/TLibCommon/TComPrediction.h	/^  TComYuv   m_acYuvPred[NUM_REF_PIC_LIST_01];$/;"	m	class:TComPrediction
m_activatedFeatures	source/Lib/TLibDecoder/TDecConformance.h	/^  ProfileLevelTierFeatures m_activatedFeatures;$/;"	m	class:TDecConformanceCheck
m_activeParameterSetsSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_activeParameterSetsSEIEnabled;$/;"	m	class:TAppEncCfg
m_activeParameterSetsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_activeParameterSetsSEIEnabled;                  \/\/\/< enable active parameter set SEI message$/;"	m	class:TEncCfg
m_activeSPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int m_activeSPSId; \/\/ -1 for nothing active$/;"	m	class:ParameterSetManager
m_activeVPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int m_activeVPSId; \/\/ -1 for nothing active$/;"	m	class:ParameterSetManager
m_actualBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_actualBits;$/;"	m	struct:TRCLCU
m_actualMSE	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_actualMSE;$/;"	m	struct:TRCLCU
m_actualSSE	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_actualSSE;$/;"	m	struct:TRCLCU
m_adIntraLambdaModifier	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Double> m_adIntraLambdaModifier;                \/\/\/< Lambda modifier for Intra pictures, one for each temporal layer. If size>temporalLayer, then use [temporalLayer], else if size>0, use [size()-1], else use m_adLambdaModifier.$/;"	m	class:TAppEncCfg
m_adIntraLambdaModifier	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Double> m_adIntraLambdaModifier;$/;"	m	class:TEncCfg
m_adLambdaModifier	source/App/TAppEncoder/TAppEncCfg.h	/^  Double    m_adLambdaModifier[ MAX_TLAYER ];                 \/\/\/< Lambda modifier array for each temporal layer$/;"	m	class:TAppEncCfg
m_adLambdaModifier	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_adLambdaModifier[ MAX_TLAYER ];$/;"	m	class:TEncCfg
m_adaptiveBit	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_adaptiveBit;$/;"	m	class:TEncRCSeq
m_afpDistortFunc	source/Lib/TLibCommon/TComRdCost.h	/^  FpDistFunc              m_afpDistortFunc[DF_TOTAL_FUNCTIONS]; \/\/ [eDFunc]$/;"	m	class:TComRdCost
m_aiNumRefIdx	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_aiNumRefIdx   [NUM_REF_PIC_LIST_01];    \/\/  for multiple reference of current slice$/;"	m	class:TComSlice
m_aiPad	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_aiPad[2];                                       \/\/\/< number of padded pixels for width and height$/;"	m	class:TAppEncCfg
m_aiPad	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_aiPad[2];$/;"	m	class:TEncCfg
m_aiPad	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_aiPad[2];$/;"	m	class:TEncTemporalFilter
m_aiRefPOCList	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_aiRefPOCList  [NUM_REF_PIC_LIST_01][MAX_NUM_REF+1];$/;"	m	class:TComSlice
m_aidQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Int*      m_aidQP;                                          \/\/\/< array of slice QP values$/;"	m	class:TAppEncCfg
m_aidQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*      m_aidQP;$/;"	m	class:TEncCfg
m_allLayersFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_allLayersFlag;                             \/\/value valid if m_nestingOpFlag == 0$/;"	m	class:SEIScalableNesting
m_alpha	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_alpha;$/;"	m	struct:TRCParameter
m_alphaUpdate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_alphaUpdate;$/;"	m	class:TEncRCSeq
m_alternativeTransferCharacteristicsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_alternativeTransferCharacteristicsSEIEnabled;$/;"	m	class:TEncCfg
m_ambientIlluminance	source/Lib/TLibCommon/SEI.h	/^  UInt m_ambientIlluminance;$/;"	m	class:SEIAmbientViewingEnvironment
m_ambientLightX	source/Lib/TLibCommon/SEI.h	/^  UShort m_ambientLightX;$/;"	m	class:SEIAmbientViewingEnvironment
m_ambientLightY	source/Lib/TLibCommon/SEI.h	/^  UShort m_ambientLightY;$/;"	m	class:SEIAmbientViewingEnvironment
m_annotatedLabels	source/Lib/TLibCommon/SEI.h	/^  std::vector<std::pair<AnnotatedRegionLabelIndex,  AnnotatedRegionLabel>  > m_annotatedLabels;$/;"	m	class:SEIAnnotatedRegions
m_annotatedRegions	source/Lib/TLibCommon/SEI.h	/^  std::vector<std::pair<AnnotatedRegionObjectIndex, AnnotatedRegionObject> > m_annotatedRegions;$/;"	m	class:SEIAnnotatedRegions
m_annotatedRegionsObjectLabelLang	source/Lib/TLibCommon/SEI.h	/^    std::string m_annotatedRegionsObjectLabelLang;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_annotatedRegionsSEIFileName	source/App/TAppDecoder/TAppDecCfg.h	/^  std::string   m_annotatedRegionsSEIFileName;        \/\/\/< annotated regions file name$/;"	m	class:TAppDecCfg
m_apSlices	source/Lib/TLibCommon/TComPicSym.h	/^  std::deque<TComSlice*> m_apSlices;$/;"	m	class:TComPicSym
m_apcPicYuv	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*           m_apcPicYuv[NUM_PIC_YUV];$/;"	m	class:TComPic
m_apcRefPicList	source/Lib/TLibCommon/TComSlice.h	/^  TComPic*                   m_apcRefPicList [NUM_REF_PIC_LIST_01][MAX_NUM_REF+1];$/;"	m	class:TComSlice
m_apcSlicePilot	source/Lib/TLibDecoder/TDecTop.h	/^  TComSlice*              m_apcSlicePilot;$/;"	m	class:TDecTop
m_apiBuf	source/Lib/TLibCommon/TComYuv.h	/^  Pel*    m_apiBuf[MAX_NUM_COMPONENT];$/;"	m	class:TComYuv
m_apiMVPIdx	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        m_apiMVPIdx[NUM_REF_PIC_LIST_01];       \/\/\/< array of motion vector predictor candidates$/;"	m	class:TComDataCU
m_apiMVPNum	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        m_apiMVPNum[NUM_REF_PIC_LIST_01];       \/\/\/< array of number of possible motion vectors predictors$/;"	m	class:TComDataCU
m_apiPicBuf	source/Lib/TLibCommon/TComPicYuv.h	/^  Pel*  m_apiPicBuf[MAX_NUM_COMPONENT];             \/\/\/< Buffer (including margin)$/;"	m	class:TComPicYuv
m_arHeader	source/App/TAppDecoder/TAppDecTop.h	/^  SEIAnnotatedRegions::AnnotatedRegionHeader                 m_arHeader;$/;"	m	class:TAppDecTop
m_arLabels	source/App/TAppDecoder/TAppDecTop.h	/^  std::map<UInt, std::string>                                m_arLabels;$/;"	m	class:TAppDecTop
m_arObjects	source/App/TAppDecoder/TAppDecTop.h	/^  std::map<UInt, SEIAnnotatedRegions::AnnotatedRegionObject> m_arObjects;$/;"	m	class:TAppDecTop
m_arSEIFileRoot	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string           m_arSEIFileRoot;$/;"	m	class:TAppEncCfg
m_arSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  std::string           m_arSEIFileRoot;  \/\/ Annotated region SEI - initialized from external file$/;"	m	class:TEncCfg
m_arrangementCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_arrangementCancelFlag;$/;"	m	class:SEIFramePacking
m_arrangementCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_arrangementCancelFlag;$/;"	m	class:SEISegmentedRectFramePacking
m_arrangementId	source/Lib/TLibCommon/SEI.h	/^  Int  m_arrangementId;$/;"	m	class:SEIFramePacking
m_arrangementPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_arrangementPersistenceFlag;$/;"	m	class:SEIFramePacking
m_arrangementPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_arrangementPersistenceFlag;$/;"	m	class:SEISegmentedRectFramePacking
m_arrangementReservedByte	source/Lib/TLibCommon/SEI.h	/^  Int  m_arrangementReservedByte;$/;"	m	class:SEIFramePacking
m_arrangementType	source/Lib/TLibCommon/SEI.h	/^  Int  m_arrangementType;$/;"	m	class:SEIFramePacking
m_aspectRatioIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_aspectRatioIdc;                                 \/\/\/< aspect_ratio_idc$/;"	m	class:TAppEncCfg
m_aspectRatioIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_aspectRatioIdc;$/;"	m	class:TComVUI
m_aspectRatioIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_aspectRatioIdc;                                 \/\/\/< aspect_ratio_idc$/;"	m	class:TEncCfg
m_aspectRatioInfoPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_aspectRatioInfoPresentFlag;                     \/\/\/< Signals whether aspect_ratio_idc is present$/;"	m	class:TAppEncCfg
m_aspectRatioInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_aspectRatioInfoPresentFlag;$/;"	m	class:TComVUI
m_aspectRatioInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_aspectRatioInfoPresentFlag;                     \/\/\/< Signals whether aspect_ratio_idc is present$/;"	m	class:TEncCfg
m_associatedIRAPPOC	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_associatedIRAPPOC;$/;"	m	class:TEncGOP
m_associatedIRAPType	source/Lib/TLibDecoder/TDecTop.h	/^  NalUnitType             m_associatedIRAPType; \/\/\/< NAL unit type of the associated IRAP picture$/;"	m	class:TDecTop
m_associatedIRAPType	source/Lib/TLibEncoder/TEncGOP.h	/^  NalUnitType             m_associatedIRAPType;$/;"	m	class:TEncGOP
m_auCpbRemovalDelay	source/Lib/TLibCommon/SEI.h	/^  UInt  m_auCpbRemovalDelay;$/;"	m	class:SEIPictureTiming
m_auCpbRemovalDelayDelta	source/Lib/TLibCommon/SEI.h	/^  UInt m_auCpbRemovalDelayDelta;$/;"	m	class:SEIBufferingPeriod
m_aucIntraFilter	source/Lib/TLibCommon/TComPrediction.cpp	/^const UChar TComPrediction::m_aucIntraFilter[MAX_NUM_CHANNEL_TYPE][MAX_INTRA_FILTER_DEPTHS] =$/;"	m	class:TComPrediction	file:
m_aucIntraFilter	source/Lib/TLibCommon/TComPrediction.h	/^  static const UChar m_aucIntraFilter[MAX_NUM_CHANNEL_TYPE][MAX_INTRA_FILTER_DEPTHS];$/;"	m	class:TComPrediction
m_aucNextStateLPS	source/Lib/TLibCommon/ContextModel.cpp	/^const UChar ContextModel::m_aucNextStateLPS[ ContextModel::m_totalStates ] =$/;"	m	class:ContextModel	file:
m_aucNextStateLPS	source/Lib/TLibCommon/ContextModel.h	/^  static const  UChar m_aucNextStateLPS[m_totalStates];$/;"	m	class:ContextModel
m_aucNextStateMPS	source/Lib/TLibCommon/ContextModel.cpp	/^const UChar ContextModel::m_aucNextStateMPS[ ContextModel::m_totalStates ] =$/;"	m	class:ContextModel	file:
m_aucNextStateMPS	source/Lib/TLibCommon/ContextModel.h	/^  static const  UChar m_aucNextStateMPS[m_totalStates];$/;"	m	class:ContextModel
m_auiMVPIdxCost	source/Lib/TLibEncoder/TEncSearch.h	/^  UInt            m_auiMVPIdxCost[AMVP_MAX_NUM_CANDS+1][AMVP_MAX_NUM_CANDS+1]; \/\/th array bounds$/;"	m	class:TEncSearch
m_aveSEIAmbientIlluminance	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_aveSEIAmbientIlluminance;$/;"	m	class:TAppEncCfg
m_aveSEIAmbientIlluminance	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_aveSEIAmbientIlluminance;$/;"	m	class:TEncCfg
m_aveSEIAmbientLightX	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_aveSEIAmbientLightX;$/;"	m	class:TAppEncCfg
m_aveSEIAmbientLightX	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort    m_aveSEIAmbientLightX;$/;"	m	class:TEncCfg
m_aveSEIAmbientLightY	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_aveSEIAmbientLightY;$/;"	m	class:TAppEncCfg
m_aveSEIAmbientLightY	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort    m_aveSEIAmbientLightY;$/;"	m	class:TEncCfg
m_aveSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_aveSEIEnabled;$/;"	m	class:TAppEncCfg
m_aveSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_aveSEIEnabled;$/;"	m	class:TEncCfg
m_averageBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_averageBits;$/;"	m	class:TEncRCSeq
m_bCheckLDC	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bCheckLDC;$/;"	m	class:TComSlice
m_bCheckLTMSB	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_bCheckLTMSB;$/;"	m	class:TComPic
m_bCheckLTMSB	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_bCheckLTMSB[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_bClipForBiPredMeEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bClipForBiPredMeEnabled;                        \/\/\/< Enables clipping for Bi-Pred ME.$/;"	m	class:TAppEncCfg
m_bClipForBiPredMeEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bClipForBiPredMeEnabled;$/;"	m	class:TEncCfg
m_bClipInputVideoToRec709Range	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bClipInputVideoToRec709Range;$/;"	m	class:TAppEncCfg
m_bClipInputVideoToRec709Range	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Bool m_bClipInputVideoToRec709Range;$/;"	m	class:TEncTemporalFilter
m_bClipOutputVideoToRec709Range	source/App/TAppDecoder/TAppDecCfg.h	/^  Bool          m_bClipOutputVideoToRec709Range;      \/\/\/< If true, clip the output video to the Rec 709 range on saving.$/;"	m	class:TAppDecCfg
m_bClipOutputVideoToRec709Range	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bClipOutputVideoToRec709Range;$/;"	m	class:TAppEncCfg
m_bConstrainedIntraPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bConstrainedIntraPred;    \/\/ constrained_intra_pred_flag$/;"	m	class:TComPPS
m_bDecSubCu	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          m_bDecSubCu;                            \/\/\/< indicates decoder-mode$/;"	m	class:TComDataCU
m_bDecodeDQP	source/Lib/TLibDecoder/TDecCu.h	/^  Bool                m_bDecodeDQP;$/;"	m	class:TDecCu
m_bDisableIntraPUsInInterSlices	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bDisableIntraPUsInInterSlices;                  \/\/\/< Flag for disabling intra predicted PUs in inter slices.$/;"	m	class:TAppEncCfg
m_bDisableIntraPUsInInterSlices	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bDisableIntraPUsInInterSlices;$/;"	m	class:TEncCfg
m_bEfficientFieldIRAPEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bEfficientFieldIRAPEnabled;                     \/\/\/< enable an efficient field IRAP structure.$/;"	m	class:TAppEncCfg
m_bEfficientFieldIRAPEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bEfficientFieldIRAPEnabled;                     \/\/\/< enable to code fields in a specific, potentially more efficient, order.$/;"	m	class:TEncCfg
m_bEnc	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_bEnc;$/;"	m	class:TComTrQuant
m_bEncodeDQP	source/Lib/TLibEncoder/TEncCu.h	/^  Bool                    m_bEncodeDQP;$/;"	m	class:TEncCu
m_bFastDeltaQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bFastDeltaQP;                                   \/\/\/< Fast Delta QP (false:default)$/;"	m	class:TAppEncCfg
m_bFastDeltaQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bFastDeltaQP;$/;"	m	class:TEncCfg
m_bFastDeltaQP	source/Lib/TLibEncoder/TEncCu.h	/^  Bool                    m_bFastDeltaQP;$/;"	m	class:TEncCu
m_bFastMEAssumingSmootherMVEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bFastMEAssumingSmootherMVEnabled;               \/\/\/< Enables fast ME assuming a smoother MV.$/;"	m	class:TAppEncCfg
m_bFastMEAssumingSmootherMVEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bFastMEAssumingSmootherMVEnabled;$/;"	m	class:TEncCfg
m_bFastMEForGenBLowDelayEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bFastMEForGenBLowDelayEnabled;$/;"	m	class:TAppEncCfg
m_bFastMEForGenBLowDelayEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bFastMEForGenBLowDelayEnabled;$/;"	m	class:TEncCfg
m_bFastUDIUseMPMEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bFastUDIUseMPMEnabled;$/;"	m	class:TAppEncCfg
m_bFastUDIUseMPMEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bFastUDIUseMPMEnabled;$/;"	m	class:TEncCfg
m_bFinalized	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bFinalized;$/;"	m	class:TComSlice
m_bFirst	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_bFirst;$/;"	m	class:TEncGOP
m_bFirstPictureInSequence	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstPictureInSequence;$/;"	m	class:TDecTop
m_bFirstSliceInBitstream	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstSliceInBitstream;$/;"	m	class:TDecTop
m_bFirstSliceInPicture	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstSliceInPicture;$/;"	m	class:TDecTop
m_bFirstSliceInSequence	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_bFirstSliceInSequence;$/;"	m	class:TDecTop
m_bHarmonizeGopFirstFieldCoupleEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bHarmonizeGopFirstFieldCoupleEnabled;$/;"	m	class:TAppEncCfg
m_bHarmonizeGopFirstFieldCoupleEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bHarmonizeGopFirstFieldCoupleEnabled;$/;"	m	class:TEncCfg
m_bIsBorderExtended	source/Lib/TLibCommon/TComPicYuv.h	/^  Bool  m_bIsBorderExtended;$/;"	m	class:TComPicYuv
m_bIsLongTerm	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_bIsLongTerm;            \/\/  IS long term picture$/;"	m	class:TComPic
m_bIsMergeAMP	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          m_bIsMergeAMP;$/;"	m	class:TComDataCU
m_bIsMonochrome	source/Lib/TLibCommon/SEI.h	/^  Bool             m_bIsMonochrome;$/;"	m	class:SEIPostFilterHint
m_bIsUsedAsLongTerm	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bIsUsedAsLongTerm[NUM_REF_PIC_LIST_01][MAX_NUM_REF+1];$/;"	m	class:TComSlice
m_bLFCrossSliceBoundaryFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bLFCrossSliceBoundaryFlag;  \/\/\/< 1: filter across slice boundaries 0: do not filter across slice boundaries$/;"	m	class:TAppEncCfg
m_bLFCrossSliceBoundaryFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bLFCrossSliceBoundaryFlag;$/;"	m	class:TEncCfg
m_bLFCrossTileBoundary	source/Lib/TLibCommon/TComLoopFilter.h	/^  Bool      m_bLFCrossTileBoundary;$/;"	m	class:TComLoopFilter
m_bLFCrossTileBoundaryFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bLFCrossTileBoundaryFlag;   \/\/\/< 1: filter across tile boundaries  0: do not filter across tile boundaries$/;"	m	class:TAppEncCfg
m_bLMvdL1Zero	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bLMvdL1Zero;$/;"	m	class:TComSlice
m_bLongTermRefsPresent	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bLongTermRefsPresent;$/;"	m	class:TComSPS
m_bLongtermTestPictureHasBeenCoded	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_bLongtermTestPictureHasBeenCoded;$/;"	m	class:TEncGOP
m_bLongtermTestPictureHasBeenCoded2	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_bLongtermTestPictureHasBeenCoded2;$/;"	m	class:TEncGOP
m_bLoopFilterDisable	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bLoopFilterDisable;                             \/\/\/< flag for using deblocking filter$/;"	m	class:TAppEncCfg
m_bLoopFilterDisable	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bLoopFilterDisable;$/;"	m	class:TEncCfg
m_bNeededForOutput	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_bNeededForOutput;$/;"	m	class:TComPic
m_bPCMFilterDisableFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bPCMFilterDisableFlag;                          \/\/\/< PCM filter disable flag$/;"	m	class:TAppEncCfg
m_bPCMFilterDisableFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bPCMFilterDisableFlag;$/;"	m	class:TComSPS
m_bPCMFilterDisableFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bPCMFilterDisableFlag;$/;"	m	class:TEncCfg
m_bPCMInputBitDepthFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bPCMInputBitDepthFlag;                          \/\/\/< 0: PCM bit-depth is internal bit-depth. 1: PCM bit-depth is input bit-depth.$/;"	m	class:TAppEncCfg
m_bPCMInputBitDepthFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bPCMInputBitDepthFlag;$/;"	m	class:TEncCfg
m_bPrevSceneIdValidFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_bPrevSceneIdValidFlag;$/;"	m	class:SEISceneInfo
m_bReWriteParamSetsFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bReWriteParamSetsFlag;                          \/\/\/< Flag to enable rewriting of parameter sets at random access points$/;"	m	class:TAppEncCfg
m_bReWriteParamSetsFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bReWriteParamSetsFlag;$/;"	m	class:TEncCfg
m_bReconstructed	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_bReconstructed;$/;"	m	class:TComPic
m_bRefenced	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bRefenced;$/;"	m	class:TComSlice
m_bRefreshPending	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_bRefreshPending;$/;"	m	class:TEncGOP
m_bRestrictMESampling	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bRestrictMESampling;                            \/\/\/< Restrict sampling for the Selective ME$/;"	m	class:TAppEncCfg
m_bRestrictMESampling	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bRestrictMESampling;$/;"	m	class:TEncCfg
m_bSceneInfoPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_bSceneInfoPresentFlag;$/;"	m	class:SEISceneInfo
m_bSeqFirst	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_bSeqFirst;$/;"	m	class:TEncGOP
m_bSet	source/Lib/TLibCommon/Debug.h	/^  Bool        m_bSet;$/;"	m	class:EnvVar
m_bSliceChromaQpFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bSliceChromaQpFlag;       \/\/ slicelevel_chroma_qp_flag$/;"	m	class:TComPPS
m_bTLayerSwitchingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bTLayerSwitchingFlag;$/;"	m	class:TComSlice
m_bTemporalIdNestingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                  m_bTemporalIdNestingFlag;$/;"	m	class:TComVPS
m_bTemporalIdNestingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bTemporalIdNestingFlag; \/\/ temporal_id_nesting_flag$/;"	m	class:TComSPS
m_bTestSAODisableAtPictureLevel	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bTestSAODisableAtPictureLevel;$/;"	m	class:TAppEncCfg
m_bTestSAODisableAtPictureLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bTestSAODisableAtPictureLevel;$/;"	m	class:TEncCfg
m_bTestWeightBiPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bTestWeightBiPred;$/;"	m	class:TComSlice
m_bTestWeightPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_bTestWeightPred;$/;"	m	class:TComSlice
m_bUseASR	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseASR;                                        \/\/\/< flag for using adaptive motion search range$/;"	m	class:TAppEncCfg
m_bUseASR	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseASR;$/;"	m	class:TEncCfg
m_bUseAdaptQpSelect	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseAdaptQpSelect;$/;"	m	class:TAppEncCfg
m_bUseAdaptQpSelect	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_bUseAdaptQpSelect;$/;"	m	class:TComTrQuant
m_bUseAdaptQpSelect	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseAdaptQpSelect;$/;"	m	class:TEncCfg
m_bUseAdaptiveQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseAdaptiveQP;                                 \/\/\/< Flag for enabling QP adaptation based on a psycho-visual model$/;"	m	class:TAppEncCfg
m_bUseAdaptiveQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseAdaptiveQP;$/;"	m	class:TEncCfg
m_bUseBLambdaForNonKeyLowDelayPictures	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseBLambdaForNonKeyLowDelayPictures;$/;"	m	class:TAppEncCfg
m_bUseBLambdaForNonKeyLowDelayPictures	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseBLambdaForNonKeyLowDelayPictures;$/;"	m	class:TEncCfg
m_bUseCbfFastMode	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseCbfFastMode;                                \/\/\/< flag for using Cbf Fast PU Mode Decision$/;"	m	class:TAppEncCfg
m_bUseCbfFastMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseCbfFastMode;$/;"	m	class:TEncCfg
m_bUseConstrainedIntraPred	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseConstrainedIntraPred;                       \/\/\/< flag for using constrained intra prediction$/;"	m	class:TAppEncCfg
m_bUseConstrainedIntraPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseConstrainedIntraPred;$/;"	m	class:TEncCfg
m_bUseEarlyCU	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseEarlyCU;                                    \/\/\/< flag for using Early CU setting$/;"	m	class:TAppEncCfg
m_bUseEarlyCU	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseEarlyCU;$/;"	m	class:TEncCfg
m_bUseHADME	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseHADME;                                      \/\/\/< flag for using HAD in sub-pel ME$/;"	m	class:TAppEncCfg
m_bUseHADME	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseHADME;$/;"	m	class:TEncCfg
m_bUseSAO	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bUseSAO;$/;"	m	class:TAppEncCfg
m_bUseSAO	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bUseSAO;$/;"	m	class:TComSPS
m_bUseSAO	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bUseSAO;$/;"	m	class:TEncCfg
m_bUseWeightPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_bUseWeightPred;                    \/\/!< Use of Weighting Prediction (P_SLICE)$/;"	m	class:TComPPS
m_bUsedByCurr	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_bUsedByCurr;            \/\/  Used by current picture$/;"	m	class:TComPic
m_bXPSNREnableFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bXPSNREnableFlag;                              \/\/\/< xPSNR enable flag$/;"	m	class:TAppEncCfg
m_bXPSNREnableFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bXPSNREnableFlag;$/;"	m	class:TEncCfg
m_beta	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_beta;$/;"	m	struct:TRCParameter
m_betaOffsetDiv2	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_betaOffsetDiv2;$/;"	m	struct:GOPEntry
m_betaUpdate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_betaUpdate;$/;"	m	class:TEncRCSeq
m_binCountIncrement	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  Int                 m_binCountIncrement;$/;"	m	class:TEncBinCABAC
m_binsCoded	source/Lib/TLibCommon/ContextModel.h	/^  UInt          m_binsCoded;$/;"	m	class:ContextModel
m_bipredSearchRange	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_bipredSearchRange;                              \/\/\/< ME search range for bipred refinement$/;"	m	class:TAppEncCfg
m_bipredSearchRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_bipredSearchRange;$/;"	m	class:TEncCfg
m_bipredSearchRange	source/Lib/TLibEncoder/TEncSearch.h	/^  Int             m_bipredSearchRange; \/\/ Search range for bi-prediction$/;"	m	class:TEncSearch
m_bitDepth	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint8_t                      m_bitDepth;$/;"	m	class:SEIFilmGrainSynthesizer
m_bitDepth	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_bitDepth;$/;"	m	class:TComPattern
m_bitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_bitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncCfg
m_bitDepthConstraint	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt          m_bitDepthConstraint;$/;"	m	class:TAppEncCfg
m_bitDepthConstraintValue	source/Lib/TLibCommon/TComSlice.h	/^  UInt              m_bitDepthConstraintValue;$/;"	m	class:ProfileTierLevel
m_bitDepthConstraintValue	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt              m_bitDepthConstraintValue;$/;"	m	class:TEncCfg
m_bitDepths	source/Lib/TLibCommon/TComSlice.h	/^  BitDepths        m_bitDepths;$/;"	m	class:TComSPS
m_bitRateScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_bitRateScale;$/;"	m	class:TComHRD
m_bitStreamSubsetFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_bitStreamSubsetFlag;$/;"	m	class:SEIScalableNesting
m_bitWeight	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_bitWeight;$/;"	m	struct:TRCLCU
m_bitdepthShift	source/Lib/Utilities/TVideoIOYuv.h	/^  Int       m_bitdepthShift[MAX_NUM_CHANNEL_TYPE];  \/\/\/< number of bits to increase or decrease image by before\/after write\/read$/;"	m	class:TVideoIOYuv
m_bitsLeft	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  Int                 m_bitsLeft;$/;"	m	class:TEncBinCABAC
m_bitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_bitsLeft;$/;"	m	class:TEncRCGOP
m_bitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_bitsLeft;$/;"	m	class:TEncRCPic
m_bitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int64 m_bitsLeft;$/;"	m	class:TEncRCSeq
m_bitsNeeded	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^  Int                 m_bitsNeeded;$/;"	m	class:TDecBinCABAC
m_bitsRatio	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int* m_bitsRatio;$/;"	m	class:TEncRCSeq
m_bitstreamFileName	source/App/TAppDecoder/TAppDecCfg.h	/^  std::string   m_bitstreamFileName;                    \/\/\/< input bitstream file name$/;"	m	class:TAppDecCfg
m_bitstreamFileName	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_bitstreamFileName;                            \/\/\/< output bitstream file$/;"	m	class:TAppEncCfg
m_bitstreamFileNameIn	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^  std::string   m_bitstreamFileNameIn;                \/\/\/< output bitstream file name$/;"	m	class:SEIRemovalAppCfg
m_bitstreamFileNameOut	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^  std::string   m_bitstreamFileNameOut;               \/\/\/< input bitstream file name$/;"	m	class:SEIRemovalAppCfg
m_bitstreamRestrictionFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bitstreamRestrictionFlag;                       \/\/\/< Signals whether bitstream restriction parameters are present$/;"	m	class:TAppEncCfg
m_bitstreamRestrictionFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_bitstreamRestrictionFlag;$/;"	m	class:TComVUI
m_bitstreamRestrictionFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bitstreamRestrictionFlag;                       \/\/\/< Signals whether bitstream restriction parameters are present$/;"	m	class:TEncCfg
m_blendingModeId	source/Lib/TLibCommon/SEI.h	/^  UChar     m_blendingModeId;$/;"	m	class:SEIFilmGrainCharacteristics
m_blockHeight	source/Lib/TLibCommon/TComRom.cpp	/^  const UInt m_blockWidth, m_blockHeight;$/;"	m	class:ScanGenerator	file:
m_blockWidth	source/Lib/TLibCommon/TComRom.cpp	/^  const UInt m_blockWidth, m_blockHeight;$/;"	m	class:ScanGenerator	file:
m_bottomEdgePosInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      m_bottomEdgePosInCtus;$/;"	m	class:TComTile
m_bottom_right_tile_index	source/Lib/TLibCommon/SEI.h	/^      std::vector<Int> m_bottom_right_tile_index;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_bpSeqParameterSetId	source/Lib/TLibCommon/SEI.h	/^  UInt m_bpSeqParameterSetId;$/;"	m	class:SEIBufferingPeriod
m_brokenLinkFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_brokenLinkFlag;$/;"	m	class:SEIRecoveryPoint
m_bufferedByte	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_bufferedByte;$/;"	m	class:TEncBinCABAC
m_bufferingPeriodSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_bufferingPeriodSEIEnabled;$/;"	m	class:TAppEncCfg
m_bufferingPeriodSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_bufferingPeriodSEIEnabled;$/;"	m	class:TEncCfg
m_bufferingPeriodSEIPresentInAU	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_bufferingPeriodSEIPresentInAU;$/;"	m	class:TEncGOP
m_bufferingRate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  UInt       m_bufferingRate;           \/\/ Buffering rate$/;"	m	class:TEncRateCtrl
m_bytesInPicture	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt64 m_bytesInPicture;$/;"	m	class:TDecConformanceCheck
m_cAMVPInfo	source/Lib/TLibCommon/TComMotionInfo.h	/^  AMVPInfo  m_cAMVPInfo;$/;"	m	class:TComCUMvField
m_cBinCABAC	source/Lib/TLibDecoder/TDecTop.h	/^  TDecBinCABAC            m_cBinCABAC;$/;"	m	class:TDecTop
m_cBinCoderCABAC	source/Lib/TLibEncoder/TEncTop.h	/^  TEncBinCABAC            m_cBinCoderCABAC;               \/\/\/< bin coder CABAC$/;"	m	class:TEncTop
m_cCUAbsSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUAbsSCModel;$/;"	m	class:TDecSbac
m_cCUAbsSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUAbsSCModel;$/;"	m	class:TEncSbac
m_cCUChromaPredSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUChromaPredSCModel;$/;"	m	class:TDecSbac
m_cCUChromaPredSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUChromaPredSCModel;$/;"	m	class:TEncSbac
m_cCUDeltaQpSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUDeltaQpSCModel;$/;"	m	class:TDecSbac
m_cCUDeltaQpSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUDeltaQpSCModel;$/;"	m	class:TEncSbac
m_cCUInterDirSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUInterDirSCModel;$/;"	m	class:TDecSbac
m_cCUInterDirSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUInterDirSCModel;$/;"	m	class:TEncSbac
m_cCUIntraPredSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUIntraPredSCModel;$/;"	m	class:TDecSbac
m_cCUIntraPredSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUIntraPredSCModel;$/;"	m	class:TEncSbac
m_cCUMergeFlagExtSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUMergeFlagExtSCModel;$/;"	m	class:TDecSbac
m_cCUMergeFlagExtSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUMergeFlagExtSCModel;$/;"	m	class:TEncSbac
m_cCUMergeIdxExtSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUMergeIdxExtSCModel;$/;"	m	class:TDecSbac
m_cCUMergeIdxExtSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUMergeIdxExtSCModel;$/;"	m	class:TEncSbac
m_cCUMvdSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUMvdSCModel;$/;"	m	class:TDecSbac
m_cCUMvdSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUMvdSCModel;$/;"	m	class:TEncSbac
m_cCUOneSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUOneSCModel;$/;"	m	class:TDecSbac
m_cCUOneSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUOneSCModel;$/;"	m	class:TEncSbac
m_cCUPartSizeSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUPartSizeSCModel;$/;"	m	class:TDecSbac
m_cCUPartSizeSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUPartSizeSCModel;$/;"	m	class:TEncSbac
m_cCUPredModeSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUPredModeSCModel;$/;"	m	class:TDecSbac
m_cCUPredModeSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUPredModeSCModel;$/;"	m	class:TEncSbac
m_cCUQtCbfSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUQtCbfSCModel;$/;"	m	class:TDecSbac
m_cCUQtCbfSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUQtCbfSCModel;$/;"	m	class:TEncSbac
m_cCUQtRootCbfSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUQtRootCbfSCModel;$/;"	m	class:TDecSbac
m_cCUQtRootCbfSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUQtRootCbfSCModel;$/;"	m	class:TEncSbac
m_cCURefPicSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCURefPicSCModel;$/;"	m	class:TDecSbac
m_cCURefPicSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCURefPicSCModel;$/;"	m	class:TEncSbac
m_cCUSigCoeffGroupSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSigCoeffGroupSCModel;$/;"	m	class:TDecSbac
m_cCUSigCoeffGroupSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSigCoeffGroupSCModel;$/;"	m	class:TEncSbac
m_cCUSigSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSigSCModel;$/;"	m	class:TDecSbac
m_cCUSigSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSigSCModel;$/;"	m	class:TEncSbac
m_cCUSkipFlagSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSkipFlagSCModel;$/;"	m	class:TDecSbac
m_cCUSkipFlagSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSkipFlagSCModel;$/;"	m	class:TEncSbac
m_cCUSplitFlagSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUSplitFlagSCModel;$/;"	m	class:TDecSbac
m_cCUSplitFlagSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUSplitFlagSCModel;$/;"	m	class:TEncSbac
m_cCUTransSubdivFlagSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCUTransSubdivFlagSCModel;$/;"	m	class:TDecSbac
m_cCUTransSubdivFlagSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCUTransSubdivFlagSCModel;$/;"	m	class:TEncSbac
m_cCavlcCoder	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  TEncCavlc                       m_cCavlcCoder;                  \/\/\/< CAVLC encoder class$/;"	m	class:TAppMctsExtTop
m_cCavlcCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncCavlc               m_cCavlcCoder;                  \/\/\/< CAVLC encoder$/;"	m	class:TEncTop
m_cCavlcDecoder	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  TDecCavlc                       m_cCavlcDecoder;                \/\/\/< CAVLC decoder class$/;"	m	class:TAppMctsExtTop
m_cCavlcDecoder	source/Lib/TLibDecoder/TDecTop.h	/^  TDecCavlc               m_cCavlcDecoder;$/;"	m	class:TDecTop
m_cCrossComponentPredictionSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCrossComponentPredictionSCModel;$/;"	m	class:TDecSbac
m_cCrossComponentPredictionSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCrossComponentPredictionSCModel;$/;"	m	class:TEncSbac
m_cCuCtxLastX	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastX;$/;"	m	class:TDecSbac
m_cCuCtxLastX	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastX;$/;"	m	class:TEncSbac
m_cCuCtxLastY	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastY;$/;"	m	class:TDecSbac
m_cCuCtxLastY	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastY;$/;"	m	class:TEncSbac
m_cCuDecoder	source/Lib/TLibDecoder/TDecTop.h	/^  TDecCu                  m_cCuDecoder;$/;"	m	class:TDecTop
m_cCuEncoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncCu                  m_cCuEncoder;                   \/\/\/< CU encoder$/;"	m	class:TEncTop
m_cDistParam	source/Lib/TLibEncoder/TEncSearch.h	/^  DistParam       m_cDistParam;$/;"	m	class:TEncSearch
m_cEncSAO	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSampleAdaptiveOffset m_cEncSAO;                     \/\/\/< sample adaptive offset class$/;"	m	class:TEncTop
m_cEntropyCoder	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  TEncEntropy                     m_cEntropyCoder;                \/\/\/< entropy encoder class$/;"	m	class:TAppMctsExtTop
m_cEntropyCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncEntropy             m_cEntropyCoder;                \/\/\/< entropy encoder$/;"	m	class:TEncTop
m_cEntropyDecoder	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  TDecEntropy                     m_cEntropyDecoder;              \/\/\/< entropy decoder class$/;"	m	class:TAppMctsExtTop
m_cEntropyDecoder	source/Lib/TLibDecoder/TDecTop.h	/^  TDecEntropy             m_cEntropyDecoder;$/;"	m	class:TDecTop
m_cGOPEncoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncGOP                 m_cGOPEncoder;                  \/\/\/< GOP encoder$/;"	m	class:TEncTop
m_cGopDecoder	source/Lib/TLibDecoder/TDecTop.h	/^  TDecGop                 m_cGopDecoder;$/;"	m	class:TDecTop
m_cHandle	source/Lib/Utilities/TVideoIOYuv.h	/^  fstream   m_cHandle;                                      \/\/\/< file handle$/;"	m	class:TVideoIOYuv
m_cListPic	source/Lib/TLibDecoder/TDecGop.h	/^  TComList<TComPic*>    m_cListPic;         \/\/  Dynamic buffer$/;"	m	class:TDecGop
m_cListPic	source/Lib/TLibDecoder/TDecTop.h	/^  TComList<TComPic*>      m_cListPic;         \/\/  Dynamic buffer$/;"	m	class:TDecTop
m_cListPic	source/Lib/TLibEncoder/TEncTop.h	/^  TComList<TComPic*>      m_cListPic;                     \/\/\/< dynamic list of pictures$/;"	m	class:TEncTop
m_cListPicYuvRec	source/App/TAppEncoder/TAppEncTop.h	/^  TComList<TComPicYuv*>      m_cListPicYuvRec;              \/\/\/< list of reconstruction YUV files$/;"	m	class:TAppEncTop
m_cLoopFilter	source/Lib/TLibDecoder/TDecTop.h	/^  TComLoopFilter          m_cLoopFilter;$/;"	m	class:TDecTop
m_cLoopFilter	source/Lib/TLibEncoder/TEncTop.h	/^  TComLoopFilter          m_cLoopFilter;                  \/\/\/< deblocking filter class$/;"	m	class:TEncTop
m_cMVPIdxSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cMVPIdxSCModel;$/;"	m	class:TDecSbac
m_cMVPIdxSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cMVPIdxSCModel;$/;"	m	class:TEncSbac
m_cMvFieldA	source/Lib/TLibCommon/TComDataCU.h	/^  TComMvField   m_cMvFieldA;                            \/\/\/< motion vector of position A$/;"	m	class:TComDataCU
m_cMvFieldB	source/Lib/TLibCommon/TComDataCU.h	/^  TComMvField   m_cMvFieldB;                            \/\/\/< motion vector of position B$/;"	m	class:TComDataCU
m_cMvFieldC	source/Lib/TLibCommon/TComDataCU.h	/^  TComMvField   m_cMvFieldC;                            \/\/\/< motion vector of position C$/;"	m	class:TComDataCU
m_cMvPred	source/Lib/TLibCommon/TComDataCU.h	/^  TComMv        m_cMvPred;                              \/\/\/< motion vector predictor$/;"	m	class:TComDataCU
m_cPreanalyzer	source/Lib/TLibEncoder/TEncTop.h	/^  TEncPreanalyzer         m_cPreanalyzer;                 \/\/\/< image characteristics analyzer for TM5-step3-like adaptive QP$/;"	m	class:TEncTop
m_cPrediction	source/Lib/TLibDecoder/TDecTop.h	/^  TComPrediction          m_cPrediction;$/;"	m	class:TDecTop
m_cRDGoOnBinCoderCABAC	source/Lib/TLibEncoder/TEncTop.h	/^  TEncBinCABAC            m_cRDGoOnBinCoderCABAC;         \/\/\/< going on bin coder CABAC for RD stage$/;"	m	class:TEncTop
m_cRDGoOnBinCoderCABAC	source/Lib/TLibEncoder/TEncTop.h	/^  TEncBinCABACCounter     m_cRDGoOnBinCoderCABAC;         \/\/\/< going on bin coder CABAC for RD stage$/;"	m	class:TEncTop
m_cRDGoOnSbacCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSbac                m_cRDGoOnSbacCoder;             \/\/\/< going on SBAC model for RD stage$/;"	m	class:TEncTop
m_cRateCtrl	source/Lib/TLibEncoder/TEncTop.h	/^  TEncRateCtrl            m_cRateCtrl;                    \/\/\/< Rate control class$/;"	m	class:TEncTop
m_cRdCost	source/Lib/TLibEncoder/TEncTop.h	/^  TComRdCost              m_cRdCost;                      \/\/\/< RD cost computation class$/;"	m	class:TEncTop
m_cSAO	source/Lib/TLibDecoder/TDecTop.h	/^  TComSampleAdaptiveOffset m_cSAO;$/;"	m	class:TDecTop
m_cSaoMergeSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cSaoMergeSCModel;$/;"	m	class:TDecSbac
m_cSaoMergeSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cSaoMergeSCModel;$/;"	m	class:TEncSbac
m_cSaoTypeIdxSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cSaoTypeIdxSCModel;$/;"	m	class:TDecSbac
m_cSaoTypeIdxSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cSaoTypeIdxSCModel;$/;"	m	class:TEncSbac
m_cSbacCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSbac                m_cSbacCoder;                   \/\/\/< SBAC encoder$/;"	m	class:TEncTop
m_cSbacDecoder	source/Lib/TLibDecoder/TDecTop.h	/^  TDecSbac                m_cSbacDecoder;$/;"	m	class:TDecTop
m_cSearch	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSearch              m_cSearch;                      \/\/\/< encoder search class$/;"	m	class:TEncTop
m_cSliceDecoder	source/Lib/TLibDecoder/TDecTop.h	/^  TDecSlice               m_cSliceDecoder;$/;"	m	class:TDecTop
m_cSliceEncoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSlice               m_cSliceEncoder;                \/\/\/< slice encoder$/;"	m	class:TEncTop
m_cSlicePicSym	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  MctsExtractorTComPicSym         m_cSlicePicSym;$/;"	m	class:TAppMctsExtTop
m_cTDecTop	source/App/TAppDecoder/TAppDecTop.h	/^  TDecTop                         m_cTDecTop;                     \/\/\/< decoder class$/;"	m	class:TAppDecTop
m_cTDecTop	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  TDecTop                         m_cTDecTop;                     \/\/\/< decoder class$/;"	m	class:TAppMctsExtTop
m_cTEncTop	source/App/TAppEncoder/TAppEncTop.h	/^  TEncTop                    m_cTEncTop;                    \/\/\/< encoder class$/;"	m	class:TAppEncTop
m_cTVideoIOYuvInputFile	source/App/TAppEncoder/TAppEncTop.h	/^  TVideoIOYuv                m_cTVideoIOYuvInputFile;       \/\/\/< input YUV file$/;"	m	class:TAppEncTop
m_cTVideoIOYuvReconFile	source/App/TAppDecoder/TAppDecTop.h	/^  TVideoIOYuv                     m_cTVideoIOYuvReconFile;        \/\/\/< reconstruction YUV class$/;"	m	class:TAppDecTop
m_cTVideoIOYuvReconFile	source/App/TAppEncoder/TAppEncTop.h	/^  TVideoIOYuv                m_cTVideoIOYuvReconFile;       \/\/\/< output reconstruction file$/;"	m	class:TAppEncTop
m_cTVideoIOYuvSEIFGSFile	source/App/TAppDecoder/TAppDecTop.h	/^  TVideoIOYuv                     m_cTVideoIOYuvSEIFGSFile;       \/\/\/< reconstruction YUV class$/;"	m	class:TAppDecTop
m_cTrQuant	source/Lib/TLibDecoder/TDecTop.h	/^  TComTrQuant             m_cTrQuant;$/;"	m	class:TDecTop
m_cTrQuant	source/Lib/TLibEncoder/TEncTop.h	/^  TComTrQuant             m_cTrQuant;                     \/\/\/< transform & quantization class$/;"	m	class:TEncTop
m_cTransformSkipSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_cTransformSkipSCModel;$/;"	m	class:TDecSbac
m_cTransformSkipSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_cTransformSkipSCModel;$/;"	m	class:TEncSbac
m_cVPS	source/Lib/TLibEncoder/TEncCfg.h	/^  TComVPS   m_cVPS;$/;"	m	class:TEncCfg
m_cYuvPredTemp	source/Lib/TLibCommon/TComPrediction.h	/^  TComYuv   m_cYuvPredTemp;$/;"	m	class:TComPrediction
m_cabacBypassAlignmentEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_cabacBypassAlignmentEnabledFlag;$/;"	m	class:TAppEncCfg
m_cabacBypassAlignmentEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_cabacBypassAlignmentEnabledFlag;$/;"	m	class:TComSPSRExt
m_cabacBypassAlignmentEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_cabacBypassAlignmentEnabledFlag;$/;"	m	class:TEncCfg
m_cabacInitFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_cabacInitFlag;$/;"	m	class:TComSlice
m_cabacInitPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_cabacInitPresentFlag;$/;"	m	class:TComPPS
m_cabacZeroWordPaddingEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_cabacZeroWordPaddingEnabled;$/;"	m	class:TAppEncCfg
m_cabacZeroWordPaddingEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_cabacZeroWordPaddingEnabled;$/;"	m	class:TEncCfg
m_cameraIsoSpeedIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_cameraIsoSpeedIdc;$/;"	m	class:TAppEncCfg
m_cameraIsoSpeedIdc	source/Lib/TLibCommon/SEI.h	/^  Int    m_cameraIsoSpeedIdc;$/;"	m	class:SEIToneMappingInfo
m_cameraIsoSpeedIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_cameraIsoSpeedIdc;$/;"	m	class:TEncCfg
m_cameraIsoSpeedValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_cameraIsoSpeedValue;$/;"	m	class:TAppEncCfg
m_cameraIsoSpeedValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_cameraIsoSpeedValue;$/;"	m	class:SEIToneMappingInfo
m_cameraIsoSpeedValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_cameraIsoSpeedValue;$/;"	m	class:TEncCfg
m_cancelFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_cancelFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_cbQpOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_cbQpOffset;                                     \/\/\/< Chroma Cb QP Offset (0:default)$/;"	m	class:TAppEncCfg
m_ccvAvgLuminanceValue	source/Lib/TLibCommon/SEI.h	/^  UInt    m_ccvAvgLuminanceValue;$/;"	m	class:SEIContentColourVolume
m_ccvAvgLuminanceValuePresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_ccvAvgLuminanceValuePresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_ccvCancelFlag;$/;"	m	class:SEIContentColourVolume
m_ccvMaxLuminanceValue	source/Lib/TLibCommon/SEI.h	/^  UInt    m_ccvMaxLuminanceValue;$/;"	m	class:SEIContentColourVolume
m_ccvMaxLuminanceValuePresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_ccvMaxLuminanceValuePresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvMinLuminanceValue	source/Lib/TLibCommon/SEI.h	/^  UInt    m_ccvMinLuminanceValue;$/;"	m	class:SEIContentColourVolume
m_ccvMinLuminanceValuePresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_ccvMinLuminanceValuePresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_ccvPersistenceFlag;$/;"	m	class:SEIContentColourVolume
m_ccvPrimariesPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_ccvPrimariesPresentFlag;$/;"	m	class:SEIContentColourVolume
m_ccvPrimariesX	source/Lib/TLibCommon/SEI.h	/^  Int     m_ccvPrimariesX[MAX_NUM_COMPONENT];$/;"	m	class:SEIContentColourVolume
m_ccvPrimariesY	source/Lib/TLibCommon/SEI.h	/^  Int     m_ccvPrimariesY[MAX_NUM_COMPONENT];$/;"	m	class:SEIContentColourVolume
m_ccvSEIAvgLuminanceValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Double  m_ccvSEIAvgLuminanceValue;             \/\/ UInt(32)$/;"	m	class:TAppEncCfg
m_ccvSEIAvgLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIAvgLuminanceValue;$/;"	m	class:TEncCfg
m_ccvSEIAvgLuminanceValuePresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEIAvgLuminanceValuePresentFlag;$/;"	m	class:TAppEncCfg
m_ccvSEIAvgLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIAvgLuminanceValuePresentFlag;$/;"	m	class:TEncCfg
m_ccvSEICancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEICancelFlag;$/;"	m	class:TAppEncCfg
m_ccvSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEICancelFlag;$/;"	m	class:TEncCfg
m_ccvSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEIEnabled;$/;"	m	class:TAppEncCfg
m_ccvSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIEnabled;$/;"	m	class:TEncCfg
m_ccvSEIMaxLuminanceValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Double  m_ccvSEIMaxLuminanceValue;             \/\/ UInt(32)$/;"	m	class:TAppEncCfg
m_ccvSEIMaxLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIMaxLuminanceValue;$/;"	m	class:TEncCfg
m_ccvSEIMaxLuminanceValuePresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEIMaxLuminanceValuePresentFlag;$/;"	m	class:TAppEncCfg
m_ccvSEIMaxLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIMaxLuminanceValuePresentFlag;$/;"	m	class:TEncCfg
m_ccvSEIMinLuminanceValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Double  m_ccvSEIMinLuminanceValue;             \/\/ UInt(32)$/;"	m	class:TAppEncCfg
m_ccvSEIMinLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIMinLuminanceValue;$/;"	m	class:TEncCfg
m_ccvSEIMinLuminanceValuePresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEIMinLuminanceValuePresentFlag;$/;"	m	class:TAppEncCfg
m_ccvSEIMinLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIMinLuminanceValuePresentFlag;$/;"	m	class:TEncCfg
m_ccvSEIPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEIPersistenceFlag;$/;"	m	class:TAppEncCfg
m_ccvSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_ccvSEIPrimariesPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool    m_ccvSEIPrimariesPresentFlag;$/;"	m	class:TAppEncCfg
m_ccvSEIPrimariesPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_ccvSEIPrimariesPresentFlag;$/;"	m	class:TEncCfg
m_ccvSEIPrimariesX	source/App/TAppEncoder/TAppEncCfg.h	/^  Double  m_ccvSEIPrimariesX[MAX_NUM_COMPONENT]; \/\/ Int(32)$/;"	m	class:TAppEncCfg
m_ccvSEIPrimariesX	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIPrimariesX[MAX_NUM_COMPONENT]; $/;"	m	class:TEncCfg
m_ccvSEIPrimariesY	source/App/TAppEncoder/TAppEncCfg.h	/^  Double  m_ccvSEIPrimariesY[MAX_NUM_COMPONENT]; \/\/ Int(32)$/;"	m	class:TAppEncCfg
m_ccvSEIPrimariesY	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_ccvSEIPrimariesY[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_chromaCbQpOffset	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_chromaCbQpOffset;$/;"	m	class:TComPPS
m_chromaCbQpOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_chromaCbQpOffset;                 \/\/  Chroma Cb QP Offset (0:default)$/;"	m	class:TEncCfg
m_chromaCrQpOffset	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_chromaCrQpOffset;$/;"	m	class:TComPPS
m_chromaCrQpOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_chromaCrQpOffset;                 \/\/  Chroma Cr Qp Offset (0:default)$/;"	m	class:TEncCfg
m_chromaFilter	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^const TFilterCoeff TComInterpolationFilter::m_chromaFilter[CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_CHROMA] =$/;"	m	class:TComInterpolationFilter	file:
m_chromaFilter	source/Lib/TLibCommon/TComInterpolationFilter.h	/^  static const TFilterCoeff m_chromaFilter[CHROMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_CHROMA]; \/\/\/< Chroma filter taps$/;"	m	class:TComInterpolationFilter
m_chromaFormat	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  ChromaFormat                 m_chromaFormat;$/;"	m	class:SEIFilmGrainSynthesizer
m_chromaFormatConstraint	source/App/TAppEncoder/TAppEncCfg.h	/^  ChromaFormat  m_chromaFormatConstraint;$/;"	m	class:TAppEncCfg
m_chromaFormatConstraintValue	source/Lib/TLibCommon/TComSlice.h	/^  ChromaFormat      m_chromaFormatConstraintValue;$/;"	m	class:ProfileTierLevel
m_chromaFormatConstraintValue	source/Lib/TLibEncoder/TEncCfg.h	/^  ChromaFormat      m_chromaFormatConstraintValue;$/;"	m	class:TEncCfg
m_chromaFormatIDC	source/App/TAppEncoder/TAppEncCfg.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TAppEncCfg
m_chromaFormatIDC	source/Lib/TLibCommon/TComPicYuv.h	/^  ChromaFormat m_chromaFormatIDC;                   \/\/\/< Chroma Format$/;"	m	class:TComPicYuv
m_chromaFormatIDC	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TComSampleAdaptiveOffset
m_chromaFormatIDC	source/Lib/TLibCommon/TComYuv.h	/^  ChromaFormat m_chromaFormatIDC; \/\/\/\/< Chroma Format$/;"	m	class:TComYuv
m_chromaFormatIDC	source/Lib/TLibEncoder/TEncCfg.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TEncCfg
m_chromaFormatIDC	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  ChromaFormat m_chromaFormatIDC;$/;"	m	class:TEncTemporalFilter
m_chromaFormatIdc	source/Lib/TLibCommon/TComSlice.h	/^  ChromaFormat     m_chromaFormatIdc;$/;"	m	class:TComSPS
m_chromaLocInfoPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_chromaLocInfoPresentFlag;                       \/\/\/< Signals whether chroma_sample_loc_type_top_field and chroma_sample_loc_type_bottom_field are present$/;"	m	class:TAppEncCfg
m_chromaLocInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_chromaLocInfoPresentFlag;$/;"	m	class:TComVUI
m_chromaLocInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_chromaLocInfoPresentFlag;                       \/\/\/< Signals whether chroma_sample_loc_type_top_field and chroma_sample_loc_type_bottom_field are present$/;"	m	class:TEncCfg
m_chromaQpOffsetListLen	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_chromaQpOffsetListLen; \/\/ size (excludes the null entry used in the following array).$/;"	m	class:TComPPSRExt
m_chromaResamplingFilterHintEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_chromaResamplingFilterHintEnabled;              \/\/\/< Signals whether chroma sampling filter hint data is present$/;"	m	class:TEncCfg
m_chromaResamplingFilterSEIenabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_chromaResamplingFilterSEIenabled;$/;"	m	class:TAppEncCfg
m_chromaResamplingHorFilterIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_chromaResamplingHorFilterIdc;$/;"	m	class:TAppEncCfg
m_chromaResamplingHorFilterIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_chromaResamplingHorFilterIdc;                   \/\/\/< Specifies the Index of filter to use$/;"	m	class:TEncCfg
m_chromaResamplingVerFilterIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_chromaResamplingVerFilterIdc;$/;"	m	class:TAppEncCfg
m_chromaResamplingVerFilterIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_chromaResamplingVerFilterIdc;                   \/\/\/< Specifies the Index of filter to use$/;"	m	class:TEncCfg
m_chromaSampleLocTypeBottomField	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_chromaSampleLocTypeBottomField;                 \/\/\/< Specifies the location of chroma samples for bottom field$/;"	m	class:TAppEncCfg
m_chromaSampleLocTypeBottomField	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_chromaSampleLocTypeBottomField;$/;"	m	class:TComVUI
m_chromaSampleLocTypeBottomField	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_chromaSampleLocTypeBottomField;                 \/\/\/< Specifies the location of chroma samples for bottom field$/;"	m	class:TEncCfg
m_chromaSampleLocTypeTopField	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_chromaSampleLocTypeTopField;                    \/\/\/< Specifies the location of chroma samples for top field$/;"	m	class:TAppEncCfg
m_chromaSampleLocTypeTopField	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_chromaSampleLocTypeTopField;$/;"	m	class:TComVUI
m_chromaSampleLocTypeTopField	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_chromaSampleLocTypeTopField;                    \/\/\/< Specifies the location of chroma samples for top field$/;"	m	class:TEncCfg
m_cllSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_cllSEIEnabled;$/;"	m	class:TAppEncCfg
m_cllSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_cllSEIEnabled;$/;"	m	class:TEncCfg
m_cllSEIMaxContentLevel	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_cllSEIMaxContentLevel;$/;"	m	class:TAppEncCfg
m_cllSEIMaxContentLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort    m_cllSEIMaxContentLevel;$/;"	m	class:TEncCfg
m_cllSEIMaxPicAvgLevel	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_cllSEIMaxPicAvgLevel;$/;"	m	class:TAppEncCfg
m_cllSEIMaxPicAvgLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  UShort    m_cllSEIMaxPicAvgLevel;$/;"	m	class:TEncCfg
m_cmpCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_cmpCancelFlag;$/;"	m	class:SEICubemapProjection
m_cmpPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_cmpPersistenceFlag;$/;"	m	class:SEICubemapProjection
m_cmpSEICmpCancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_cmpSEICmpCancelFlag;$/;"	m	class:TAppEncCfg
m_cmpSEICmpCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_cmpSEICmpCancelFlag;$/;"	m	class:TEncCfg
m_cmpSEICmpPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_cmpSEICmpPersistenceFlag;$/;"	m	class:TAppEncCfg
m_cmpSEICmpPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_cmpSEICmpPersistenceFlag;$/;"	m	class:TEncCfg
m_cmpSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_cmpSEIEnabled;$/;"	m	class:TAppEncCfg
m_cmpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_cmpSEIEnabled;$/;"	m	class:TEncCfg
m_codedChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_codedChromaQpAdj;$/;"	m	class:TComDataCU
m_codedDataBitDepth	source/Lib/TLibCommon/SEI.h	/^  Int    m_codedDataBitDepth;$/;"	m	class:SEIToneMappingInfo
m_codedDataBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_codedDataBitDepth;$/;"	m	class:TEncCfg
m_codedPivotValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int*      m_codedPivotValue;$/;"	m	class:TAppEncCfg
m_codedPivotValue	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> m_codedPivotValue;$/;"	m	class:SEIToneMappingInfo
m_codedPivotValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*      m_codedPivotValue;$/;"	m	class:TEncCfg
m_codedQP	source/Lib/TLibCommon/TComDataCU.h	/^  SChar         m_codedQP;$/;"	m	class:TComDataCU
m_colFromL0Flag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_colFromL0Flag;  \/\/ collocated picture from List0 flag$/;"	m	class:TComSlice
m_colRefIdx	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_colRefIdx;$/;"	m	class:TComSlice
m_colourDescriptionPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_colourDescriptionPresentFlag;                   \/\/\/< Signals whether colour_primaries, transfer_characteristics and matrix_coefficients are present$/;"	m	class:TAppEncCfg
m_colourDescriptionPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_colourDescriptionPresentFlag;$/;"	m	class:TComVUI
m_colourDescriptionPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_colourDescriptionPresentFlag;                   \/\/\/< Signals whether colour_primaries, transfer_characteristics and matrix_coefficients are present$/;"	m	class:TEncCfg
m_colourPrimaries	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_colourPrimaries;                                \/\/\/< Indicates chromaticity coordinates of the source primaries$/;"	m	class:TAppEncCfg
m_colourPrimaries	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_colourPrimaries;$/;"	m	class:TComVUI
m_colourPrimaries	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_colourPrimaries;                                \/\/\/< Indicates chromaticity coordinates of the source primaries$/;"	m	class:TEncCfg
m_colourRemapBitDepth	source/Lib/TLibCommon/SEI.h	/^  Int                 m_colourRemapBitDepth;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                m_colourRemapCancelFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapCoeffs	source/Lib/TLibCommon/SEI.h	/^  Int                 m_colourRemapCoeffs[3][3];$/;"	m	class:SEIColourRemappingInfo
m_colourRemapFullRangeFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                m_colourRemapFullRangeFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapId	source/Lib/TLibCommon/SEI.h	/^  UInt                m_colourRemapId;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapInputBitDepth	source/Lib/TLibCommon/SEI.h	/^  Int                 m_colourRemapInputBitDepth;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapMatrixCoefficients	source/Lib/TLibCommon/SEI.h	/^  Int                 m_colourRemapMatrixCoefficients;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapMatrixPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                m_colourRemapMatrixPresentFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                m_colourRemapPersistenceFlag;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapPrimaries	source/Lib/TLibCommon/SEI.h	/^  Int                 m_colourRemapPrimaries;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapSEIFileName	source/App/TAppDecoder/TAppDecCfg.h	/^  std::string   m_colourRemapSEIFileName;             \/\/\/< output Colour Remapping file name$/;"	m	class:TAppDecCfg
m_colourRemapSEIFileRoot	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_colourRemapSEIFileRoot;$/;"	m	class:TAppEncCfg
m_colourRemapSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  std::string m_colourRemapSEIFileRoot;          \/\/\/< SEI Colour Remapping File (initialized from external file)$/;"	m	class:TEncCfg
m_colourRemapTransferFunction	source/Lib/TLibCommon/SEI.h	/^  Int                 m_colourRemapTransferFunction;$/;"	m	class:SEIColourRemappingInfo
m_colourRemapVideoSignalInfoPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                m_colourRemapVideoSignalInfoPresentFlag;$/;"	m	class:SEIColourRemappingInfo
m_column	source/Lib/TLibCommon/TComRom.cpp	/^  UInt m_line, m_column;$/;"	m	class:ScanGenerator	file:
m_compModel	source/Lib/TLibCommon/SEI.h	/^  CompModel m_compModel[MAX_NUM_COMPONENT];$/;"	m	class:SEIFilmGrainCharacteristics
m_concatenationFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_concatenationFlag;$/;"	m	class:SEIBufferingPeriod
m_confWinBottom	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_confWinBottom;$/;"	m	class:TAppEncCfg
m_confWinLeft	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_confWinLeft;$/;"	m	class:TAppEncCfg
m_confWinRight	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_confWinRight;$/;"	m	class:TAppEncCfg
m_confWinTop	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_confWinTop;$/;"	m	class:TAppEncCfg
m_conformanceCheck	source/Lib/TLibDecoder/TDecTop.h	/^  TDecConformanceCheck    m_conformanceCheck;$/;"	m	class:TDecTop
m_conformanceWindow	source/Lib/TLibCommon/TComSlice.h	/^  Window           m_conformanceWindow;$/;"	m	class:TComSPS
m_conformanceWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Window    m_conformanceWindow;$/;"	m	class:TEncCfg
m_conformanceWindowMode	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_conformanceWindowMode;$/;"	m	class:TAppEncCfg
m_constituentPictureMatchingFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_constituentPictureMatchingFlag;$/;"	m	class:SEIRegionWisePacking
m_contentInterpretationType	source/Lib/TLibCommon/SEI.h	/^  Int  m_contentInterpretationType;$/;"	m	class:SEIFramePacking
m_contentInterpretationType	source/Lib/TLibCommon/SEI.h	/^  Int  m_contentInterpretationType;$/;"	m	class:SEISegmentedRectFramePacking
m_contextModel	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  ContextModel* m_contextModel; \/\/\/< array of context models$/;"	m	class:ContextModel3DBuffer
m_contextModels	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel         m_contextModels[MAX_NUM_CTX_MOD];$/;"	m	class:TDecSbac
m_contextModels	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel         m_contextModels[MAX_NUM_CTX_MOD];$/;"	m	class:TEncSbac
m_costIntra	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_costIntra;$/;"	m	struct:TRCLCU
m_costMode	source/App/TAppEncoder/TAppEncCfg.h	/^  CostMode  m_costMode;                                       \/\/\/< Cost mode to use$/;"	m	class:TAppEncCfg
m_costMode	source/Lib/TLibCommon/TComRdCost.h	/^  CostMode                m_costMode;$/;"	m	class:TComRdCost
m_costMode	source/Lib/TLibEncoder/TEncCfg.h	/^  CostMode  m_costMode;                                       \/\/\/< The cost function to use, primarily when considering lossless coding.$/;"	m	class:TEncCfg
m_cpbDelayOffset	source/Lib/TLibCommon/SEI.h	/^  UInt m_cpbDelayOffset;$/;"	m	class:SEIBufferingPeriod
m_cpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_cpbRemovalDelayLengthMinus1;$/;"	m	class:TComHRD
m_cpbSize	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  UInt       m_cpbSize;                 \/\/ CPB size$/;"	m	class:TEncRateCtrl
m_cpbSizeScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_cpbSizeScale;$/;"	m	class:TComHRD
m_cpbState	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int        m_cpbState;                \/\/ CPB State $/;"	m	class:TEncRateCtrl
m_cprmsPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<Bool>     m_cprmsPresentFlag;$/;"	m	class:TComVPS
m_crQpOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_crQpOffset;                                     \/\/\/< Chroma Cr QP Offset (0:default)$/;"	m	class:TAppEncCfg
m_craNoRaslOutputFlag	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_craNoRaslOutputFlag;    \/\/value of variable NoRaslOutputFlag of the last CRA pic$/;"	m	class:TDecTop
m_crossComponentPredictionAlpha	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        m_crossComponentPredictionAlpha[MAX_NUM_COMPONENT]; \/\/\/< array of cross-component prediction alpha values$/;"	m	class:TComDataCU
m_crossComponentPredictionEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_crossComponentPredictionEnabledFlag;            \/\/\/< flag enabling the use of cross-component prediction$/;"	m	class:TAppEncCfg
m_crossComponentPredictionEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_crossComponentPredictionEnabledFlag;$/;"	m	class:TComPPSRExt
m_crossComponentPredictionEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_crossComponentPredictionEnabledFlag;$/;"	m	class:TEncCfg
m_ctuOffsetInBuffer	source/Lib/TLibCommon/TComPicYuv.h	/^  Int*  m_ctuOffsetInBuffer[MAX_NUM_CHANNEL_TYPE];  \/\/\/< Gives an offset in the buffer for a given CTU (and channel)$/;"	m	class:TComPicYuv
m_ctuRsAddr	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_ctuRsAddr;                            \/\/\/< CTU (also known as LCU) address in a slice (Raster-scan address, as opposed to tile-scan\/encoding order).$/;"	m	class:TComDataCU
m_ctuRsToTsAddrMap	source/Lib/TLibCommon/TComPicSym.h	/^  UInt*         m_ctuRsToTsAddrMap;    \/\/\/< for a given RS (Raster-Scan) address, returns the TS (Tile-Scan; coding order) address. cf CtbAddrRsToTs in specification.$/;"	m	class:TComPicSym
m_ctuTsToRsAddrMap	source/Lib/TLibCommon/TComPicSym.h	/^  UInt*         m_ctuTsToRsAddrMap;    \/\/\/< for a given TS (Tile-Scan; coding order) address, returns the RS (Raster-Scan) address. cf CtbAddrTsToRs in specification.$/;"	m	class:TComPicSym
m_cuChromaQpOffsetIdxPlus1	source/Lib/TLibEncoder/TEncCu.h	/^  Int                     m_cuChromaQpOffsetIdxPlus1; \/\/ if 0, then cu_chroma_qp_offset_flag will be 0, otherwise cu_chroma_qp_offset_flag will be 1.$/;"	m	class:TEncCu
m_currentFrameIsFrame0Flag	source/Lib/TLibCommon/SEI.h	/^  Bool m_currentFrameIsFrame0Flag;$/;"	m	class:SEIFramePacking
m_dActivity	source/Lib/TLibEncoder/TEncPic.h	/^  Double m_dActivity;$/;"	m	class:TEncQPAdaptationUnit
m_dAvgActivity	source/Lib/TLibEncoder/TEncPic.h	/^  Double                m_dAvgActivity;$/;"	m	class:TEncPicQPAdaptationLayer
m_dDecTime	source/Lib/TLibDecoder/TDecGop.h	/^  Double                m_dDecTime;$/;"	m	class:TDecGop
m_dFrameLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_dFrameLambda;$/;"	m	class:TComRdCost
m_dFrmRate	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Double    m_dFrmRate; \/\/--CFG_KDY$/;"	m	class:TEncAnalyze
m_dIntraQpFactor	source/App/TAppEncoder/TAppEncCfg.h	/^  Double    m_dIntraQpFactor;                                 \/\/\/< Intra Q Factor. If negative, use a default equation: 0.57*(1.0 - Clip3( 0.0, 0.5, 0.05*(Double)(isField ? (GopSize-1)\/2 : GopSize-1) ))$/;"	m	class:TAppEncCfg
m_dIntraQpFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_dIntraQpFactor;                                 \/\/\/< Intra Q Factor. If negative, use a default equation: 0.57*(1.0 - Clip3( 0.0, 0.5, 0.05*(Double)(isField ? (GopSize-1)\/2 : GopSize-1) ))$/;"	m	class:TEncCfg
m_dLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_dLambda;$/;"	m	class:TComRdCost
m_dLambda	source/Lib/TLibCommon/TComTrQuant.h	/^  Double   m_dLambda;$/;"	m	class:TComTrQuant
m_dLambdaMotionSAD	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_dLambdaMotionSAD[2 \/* 0=standard, 1=for transquant bypass when mixed-lossless cost evaluation enabled*\/];$/;"	m	class:TComRdCost
m_dLambdaMotionSSE	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_dLambdaMotionSSE[2 \/* 0=standard, 1=for transquant bypass when mixed-lossless cost evaluation enabled*\/];$/;"	m	class:TComRdCost
m_dPicRdCost	source/Lib/TLibEncoder/TEncSlice.h	/^  Double                  m_dPicRdCost;                         \/\/\/< picture-level RD cost$/;"	m	class:TEncSlice
m_dQPFileName	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_dQPFileName;                                  \/\/\/< QP offset for each slice (initialized from external file)$/;"	m	class:TAppEncCfg
m_dTotalCost	source/Lib/TLibCommon/TComDataCU.h	/^  Double        m_dTotalCost;                           \/\/\/< sum of partition RD costs$/;"	m	class:TComDataCU
m_dVal	source/Lib/TLibCommon/Debug.h	/^  Double      m_dVal;$/;"	m	class:EnvVar
m_dXPSNRWeight	source/App/TAppEncoder/TAppEncCfg.h	/^  Double    m_dXPSNRWeight[MAX_NUM_COMPONENT];               \/\/\/< xPSNR per component weights$/;"	m	class:TAppEncCfg
m_dXPSNRWeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_dXPSNRWeight[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_deblockingFilterBetaOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_deblockingFilterBetaOffsetDiv2;    \/\/< beta offset for deblocking filter$/;"	m	class:TComSlice
m_deblockingFilterBetaOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_deblockingFilterBetaOffsetDiv2;    \/\/< beta offset for deblocking filter$/;"	m	class:TComPPS
m_deblockingFilterControlPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_deblockingFilterControlPresentFlag;$/;"	m	class:TComPPS
m_deblockingFilterDisable	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_deblockingFilterDisable;$/;"	m	class:TComSlice
m_deblockingFilterMetric	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_deblockingFilterMetric;                         \/\/\/< blockiness metric in encoder$/;"	m	class:TAppEncCfg
m_deblockingFilterMetric	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_deblockingFilterMetric;$/;"	m	class:TEncCfg
m_deblockingFilterOverrideEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_deblockingFilterOverrideEnabledFlag;$/;"	m	class:TComPPS
m_deblockingFilterOverrideFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_deblockingFilterOverrideFlag;      \/\/< offsets for deblocking filter inherit from PPS$/;"	m	class:TComSlice
m_deblockingFilterTcOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_deblockingFilterTcOffsetDiv2;      \/\/< tc offset for deblocking filter$/;"	m	class:TComSlice
m_deblockingFilterTcOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_deblockingFilterTcOffsetDiv2;      \/\/< tc offset for deblocking filter$/;"	m	class:TComPPS
m_decodedNoDisplaySEIEnabled	source/App/TAppDecoder/TAppDecCfg.h	/^  Bool          m_decodedNoDisplaySEIEnabled;         \/\/\/< Enable(true)\/disable(false) writing only pictures that get displayed based on the no display SEI message$/;"	m	class:TAppDecCfg
m_decodedPictureHashSEIEnabled	source/App/TAppDecoder/TAppDecCfg.h	/^  Int           m_decodedPictureHashSEIEnabled;       \/\/\/< Checksum(3)\/CRC(2)\/MD5(1)\/disable(0) acting on decoded picture hash SEI message$/;"	m	class:TAppDecCfg
m_decodedPictureHashSEIEnabled	source/Lib/TLibDecoder/TDecGop.h	/^  Int                   m_decodedPictureHashSEIEnabled;  \/\/\/< Checksum(3)\/CRC(2)\/MD5(1)\/disable(0) acting on decoded picture hash SEI message$/;"	m	class:TDecGop
m_decodedPictureHashSEIType	source/App/TAppEncoder/TAppEncCfg.h	/^  HashType  m_decodedPictureHashSEIType;                      \/\/\/< Checksum mode for decoded picture hash SEI message$/;"	m	class:TAppEncCfg
m_decodedPictureHashSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  HashType  m_decodedPictureHashSEIType;$/;"	m	class:TEncCfg
m_decodingUnitIdx	source/Lib/TLibCommon/SEI.h	/^  Int m_decodingUnitIdx;$/;"	m	class:SEIDecodingUnitInfo
m_decodingUnitInfoSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_decodingUnitInfoSEIEnabled;$/;"	m	class:TAppEncCfg
m_decodingUnitInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_decodingUnitInfoSEIEnabled;$/;"	m	class:TEncCfg
m_defDispWinBottomOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_defDispWinBottomOffset;                         \/\/\/< Specifies the bottom offset from the conformance window of the default window$/;"	m	class:TAppEncCfg
m_defDispWinLeftOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_defDispWinLeftOffset;                           \/\/\/< Specifies the left offset from the conformance window of the default window$/;"	m	class:TAppEncCfg
m_defDispWinRightOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_defDispWinRightOffset;                          \/\/\/< Specifies the right offset from the conformance window of the default window$/;"	m	class:TAppEncCfg
m_defDispWinTopOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_defDispWinTopOffset;                            \/\/\/< Specifies the top offset from the conformance window of the default window$/;"	m	class:TAppEncCfg
m_defaultDisplayWindow	source/Lib/TLibCommon/TComSlice.h	/^  Window     m_defaultDisplayWindow;$/;"	m	class:TComVUI
m_defaultDisplayWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Window    m_defaultDisplayWindow;                           \/\/\/< Represents the default display window parameters$/;"	m	class:TEncCfg
m_defaultDisplayWindowFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_defaultDisplayWindowFlag;                       \/\/\/< Indicates the presence of the default window parameters$/;"	m	class:TAppEncCfg
m_defaultOpFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_defaultOpFlag;                             \/\/value valid if m_nestingOpFlag != 0$/;"	m	class:SEIScalableNesting
m_deinterlacedPictureSourceParityFlag	source/Lib/TLibCommon/SEI.h	/^    Bool m_deinterlacedPictureSourceParityFlag;$/;"	m	class:SEIDeinterlaceFieldIdentification
m_deltaPOC	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_deltaPOC[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_deltaPOCMSBCycleLT	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_deltaPOCMSBCycleLT[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_deltaPocMSBPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_deltaPocMSBPresentFlag[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_deltaRIdxMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_deltaRIdxMinus1;$/;"	m	class:TComReferencePictureSet
m_deltaRPS	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_deltaRPS;$/;"	m	class:TComReferencePictureSet
m_deltaRPS	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_deltaRPS;$/;"	m	struct:GOPEntry
m_dependentSliceSegmentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_dependentSliceSegmentFlag;$/;"	m	class:TComSlice
m_dependentSliceSegmentsEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_dependentSliceSegmentsEnabledFlag; \/\/!< Indicates the presence of dependent slices$/;"	m	class:TComPPS
m_dequantCoef	source/Lib/TLibCommon/TComTrQuant.h	/^  Int      *m_dequantCoef          [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of dequantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_diffCuChromaQpOffsetDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_diffCuChromaQpOffsetDepth;                      \/\/\/< If negative, then do not apply chroma qp offsets.$/;"	m	class:TAppEncCfg
m_diffCuChromaQpOffsetDepth	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_diffCuChromaQpOffsetDepth;$/;"	m	class:TComPPSRExt
m_diffCuChromaQpOffsetDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_diffCuChromaQpOffsetDepth;        \/\/\/< If negative, then do not apply chroma qp offsets.$/;"	m	class:TEncCfg
m_discardPrefixSEIs	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^  bool          m_discardPrefixSEIs;$/;"	m	class:SEIRemovalAppCfg
m_discardSuffixSEIs	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^  bool          m_discardSuffixSEIs;$/;"	m	class:SEIRemovalAppCfg
m_displayOrientationSEIAngle	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_displayOrientationSEIAngle;$/;"	m	class:TAppEncCfg
m_displayOrientationSEIAngle	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_displayOrientationSEIAngle;$/;"	m	class:TEncCfg
m_display_tile_set_flag	source/Lib/TLibCommon/SEI.h	/^      Bool    m_display_tile_set_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_distortionWeight	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_distortionWeight[MAX_NUM_COMPONENT]; \/\/ only chroma values are used.$/;"	m	class:TComRdCost
m_dpbDelayOffset	source/Lib/TLibCommon/SEI.h	/^  UInt m_dpbDelayOffset;$/;"	m	class:SEIBufferingPeriod
m_dpbOutputDelayDuLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_dpbOutputDelayDuLengthMinus1;$/;"	m	class:TComHRD
m_dpbOutputDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_dpbOutputDelayLengthMinus1;$/;"	m	class:TComHRD
m_dpbOutputDuDelayPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_dpbOutputDuDelayPresentFlag;$/;"	m	class:SEIDecodingUnitInfo
m_dpbPerCtuData	source/Lib/TLibCommon/TComPicSym.h	/^  DPBPerCtuData *m_dpbPerCtuData;$/;"	m	class:TComPicSym
m_duCommonCpbRemovalDelayFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_duCommonCpbRemovalDelayFlag;$/;"	m	class:SEIPictureTiming
m_duCommonCpbRemovalDelayMinus1	source/Lib/TLibCommon/SEI.h	/^  UInt  m_duCommonCpbRemovalDelayMinus1;$/;"	m	class:SEIPictureTiming
m_duCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_duCpbRemovalDelayLengthMinus1;$/;"	m	class:TComHRD
m_duCpbRemovalDelayMinus1	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt> m_duCpbRemovalDelayMinus1;$/;"	m	class:SEIPictureTiming
m_duSptCpbRemovalDelay	source/Lib/TLibCommon/SEI.h	/^  Int m_duSptCpbRemovalDelay;$/;"	m	class:SEIDecodingUnitInfo
m_ducpbSizeScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_ducpbSizeScale;$/;"	m	class:TComHRD
m_duplicateFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_duplicateFlag;$/;"	m	class:SEIPictureTiming
m_eNalUnitType	source/Lib/TLibCommon/TComSlice.h	/^  NalUnitType                m_eNalUnitType;         \/\/\/< Nal unit type for the slice$/;"	m	class:TComSlice
m_eSliceType	source/Lib/TLibCommon/TComSlice.h	/^  SliceType                  m_eSliceType;$/;"	m	class:TComSlice
m_each_tile_one_tile_set_flag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_each_tile_one_tile_set_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_emulationPreventionByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  std::vector<UInt>    m_emulationPreventionByteLocation;$/;"	m	class:TComInputBitstream
m_enableAMP	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_enableAMP;$/;"	m	class:TAppEncCfg
m_enableDeblocking	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint8_t                      m_enableDeblocking;$/;"	m	class:SEIFilmGrainSynthesizer
m_enableIntraReferenceSmoothing	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_enableIntraReferenceSmoothing;                  \/\/\/< flag for enabling(default)\/disabling intra reference smoothing\/filtering$/;"	m	class:TAppEncCfg
m_enableTMVPFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_enableTMVPFlag;$/;"	m	class:TComSlice
m_enabledFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool m_enabledFlag;$/;"	m	class:Window
m_encCABACTableIdx	source/Lib/TLibCommon/TComSlice.h	/^  SliceType                  m_encCABACTableIdx;           \/\/ Used to transmit table selection across slices.$/;"	m	class:TComSlice
m_encCABACTableIdx	source/Lib/TLibEncoder/TEncSlice.h	/^  SliceType               m_encCABACTableIdx;$/;"	m	class:TEncSlice
m_encRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP* m_encRCGOP;$/;"	m	class:TEncRCPic
m_encRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCGOP* m_encRCGOP;$/;"	m	class:TEncRateCtrl
m_encRCPic	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCPic* m_encRCPic;$/;"	m	class:TEncRateCtrl
m_encRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* m_encRCSeq;$/;"	m	class:TEncRCGOP
m_encRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* m_encRCSeq;$/;"	m	class:TEncRCPic
m_encRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TEncRCSeq* m_encRCSeq;$/;"	m	class:TEncRateCtrl
m_entropyBits	source/Lib/TLibCommon/ContextModel.cpp	/^const Int ContextModel::m_entropyBits[ ContextModel::m_totalStates ] =$/;"	m	class:ContextModel	file:
m_entropyBits	source/Lib/TLibCommon/ContextModel.h	/^  static const  Int   m_entropyBits    [m_totalStates];$/;"	m	class:ContextModel
m_entropyCodingSyncContextState	source/Lib/TLibDecoder/TDecSlice.h	/^  TDecSbac        m_entropyCodingSyncContextState;      \/\/\/< context storate for state of contexts at the wavefront\/WPP\/entropy-coding-sync second CTU of tile-row$/;"	m	class:TDecSlice
m_entropyCodingSyncContextState	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncSbac                m_entropyCodingSyncContextState;      \/\/\/< context storate for state of contexts at the wavefront\/WPP\/entropy-coding-sync second CTU of tile-row$/;"	m	class:TEncSlice
m_entropyCodingSyncEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_entropyCodingSyncEnabledFlag;$/;"	m	class:TAppEncCfg
m_entropyCodingSyncEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_entropyCodingSyncEnabledFlag;      \/\/!< Indicates the presence of wavefronts$/;"	m	class:TComPPS
m_entropyCodingSyncEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_entropyCodingSyncEnabledFlag;$/;"	m	class:TEncCfg
m_erpCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool   m_erpCancelFlag;$/;"	m	class:SEIEquirectangularProjection
m_erpGuardBandFlag	source/Lib/TLibCommon/SEI.h	/^  Bool   m_erpGuardBandFlag;$/;"	m	class:SEIEquirectangularProjection
m_erpGuardBandType	source/Lib/TLibCommon/SEI.h	/^  UChar  m_erpGuardBandType;$/;"	m	class:SEIEquirectangularProjection
m_erpLeftGuardBandWidth	source/Lib/TLibCommon/SEI.h	/^  UChar  m_erpLeftGuardBandWidth;$/;"	m	class:SEIEquirectangularProjection
m_erpPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool   m_erpPersistenceFlag;$/;"	m	class:SEIEquirectangularProjection
m_erpRightGuardBandWidth	source/Lib/TLibCommon/SEI.h	/^  UChar  m_erpRightGuardBandWidth;$/;"	m	class:SEIEquirectangularProjection
m_erpSEICancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_erpSEICancelFlag;$/;"	m	class:TAppEncCfg
m_erpSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEICancelFlag;$/;"	m	class:TEncCfg
m_erpSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_erpSEIEnabled;          $/;"	m	class:TAppEncCfg
m_erpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEIEnabled;          $/;"	m	class:TEncCfg
m_erpSEIGuardBandFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_erpSEIGuardBandFlag;$/;"	m	class:TAppEncCfg
m_erpSEIGuardBandFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEIGuardBandFlag;$/;"	m	class:TEncCfg
m_erpSEIGuardBandType	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_erpSEIGuardBandType;$/;"	m	class:TAppEncCfg
m_erpSEIGuardBandType	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_erpSEIGuardBandType;$/;"	m	class:TEncCfg
m_erpSEILeftGuardBandWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_erpSEILeftGuardBandWidth;$/;"	m	class:TAppEncCfg
m_erpSEILeftGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_erpSEILeftGuardBandWidth;$/;"	m	class:TEncCfg
m_erpSEIPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_erpSEIPersistenceFlag;$/;"	m	class:TAppEncCfg
m_erpSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_erpSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_erpSEIRightGuardBandWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_erpSEIRightGuardBandWidth;$/;"	m	class:TAppEncCfg
m_erpSEIRightGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_erpSEIRightGuardBandWidth;$/;"	m	class:TEncCfg
m_errScale	source/Lib/TLibCommon/TComTrQuant.h	/^  Double   *m_errScale             [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of quantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_errScaleNoScalingList	source/Lib/TLibCommon/TComTrQuant.h	/^  Double    m_errScaleNoScalingList[SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of quantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_errorCode	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_errorCode;$/;"	m	class:SEIFilmGrainSynthesizer
m_essentialBytes	source/App/TAppEncoder/TAppEncTop.h	/^  UInt m_essentialBytes;$/;"	m	class:TAppEncTop
m_estHeaderBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_estHeaderBits;$/;"	m	class:TEncRCPic
m_estPicLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_estPicLambda;$/;"	m	class:TEncRCPic
m_estPicQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_estPicQP;$/;"	m	class:TEncRCPic
m_exactMatchingFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_exactMatchingFlag;$/;"	m	class:SEIRecoveryPoint
m_exact_sample_value_match_flag	source/Lib/TLibCommon/SEI.h	/^      Bool    m_exact_sample_value_match_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_explicitRdpcmDirSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmDirSCModel;$/;"	m	class:TDecSbac
m_explicitRdpcmDirSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmDirSCModel;$/;"	m	class:TEncSbac
m_explicitRdpcmFlagSCModel	source/Lib/TLibDecoder/TDecSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmFlagSCModel;$/;"	m	class:TDecSbac
m_explicitRdpcmFlagSCModel	source/Lib/TLibEncoder/TEncSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmFlagSCModel;$/;"	m	class:TEncSbac
m_explicitRdpcmMode	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_explicitRdpcmMode[MAX_NUM_COMPONENT]; \/\/\/< Stores the explicit RDPCM mode for all TUs belonging to this CU$/;"	m	class:TComDataCU
m_exposureCompensationValueDenomIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_exposureCompensationValueDenomIdc;$/;"	m	class:TAppEncCfg
m_exposureCompensationValueDenomIdc	source/Lib/TLibCommon/SEI.h	/^  Int    m_exposureCompensationValueDenomIdc;$/;"	m	class:SEIToneMappingInfo
m_exposureCompensationValueDenomIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_exposureCompensationValueDenomIdc;$/;"	m	class:TEncCfg
m_exposureCompensationValueNumerator	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_exposureCompensationValueNumerator;$/;"	m	class:TAppEncCfg
m_exposureCompensationValueNumerator	source/Lib/TLibCommon/SEI.h	/^  Int    m_exposureCompensationValueNumerator;$/;"	m	class:SEIToneMappingInfo
m_exposureCompensationValueNumerator	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_exposureCompensationValueNumerator;$/;"	m	class:TEncCfg
m_exposureCompensationValueSignFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_exposureCompensationValueSignFlag;$/;"	m	class:TAppEncCfg
m_exposureCompensationValueSignFlag	source/Lib/TLibCommon/SEI.h	/^  Bool   m_exposureCompensationValueSignFlag;$/;"	m	class:SEIToneMappingInfo
m_exposureCompensationValueSignFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_exposureCompensationValueSignFlag;$/;"	m	class:TEncCfg
m_exposureIndexIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_exposureIndexIdc;$/;"	m	class:TAppEncCfg
m_exposureIndexIdc	source/Lib/TLibCommon/SEI.h	/^  Int    m_exposureIndexIdc;$/;"	m	class:SEIToneMappingInfo
m_exposureIndexIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_exposureIndexIdc;$/;"	m	class:TEncCfg
m_exposureIndexValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_exposureIndexValue;$/;"	m	class:TAppEncCfg
m_exposureIndexValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_exposureIndexValue;$/;"	m	class:SEIToneMappingInfo
m_exposureIndexValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_exposureIndexValue;$/;"	m	class:TEncCfg
m_ext360	source/App/TAppEncoder/TAppEncCfg.h	/^  TExt360AppEncCfg m_ext360;$/;"	m	class:TAppEncCfg
m_ext360	source/Lib/TLibEncoder/TEncAnalyze.h	/^  TExt360EncAnalyze m_ext360;$/;"	m	class:TEncAnalyze
m_ext360	source/Lib/TLibEncoder/TEncGOP.h	/^  TExt360EncGop           m_ext360;$/;"	m	class:TEncGOP
m_extendedPrecisionProcessingFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_extendedPrecisionProcessingFlag;$/;"	m	class:TAppEncCfg
m_extendedPrecisionProcessingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_extendedPrecisionProcessingFlag;$/;"	m	class:TComSPSRExt
m_extendedPrecisionProcessingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_extendedPrecisionProcessingFlag;$/;"	m	class:TEncCfg
m_extendedRangeWhiteLevel	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_extendedRangeWhiteLevel;$/;"	m	class:TAppEncCfg
m_extendedRangeWhiteLevel	source/Lib/TLibCommon/SEI.h	/^  Int    m_extendedRangeWhiteLevel;$/;"	m	class:SEIToneMappingInfo
m_extendedRangeWhiteLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_extendedRangeWhiteLevel;$/;"	m	class:TEncCfg
m_extendedWhiteLevelLumaCodeValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_extendedWhiteLevelLumaCodeValue;$/;"	m	class:TAppEncCfg
m_extendedWhiteLevelLumaCodeValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_extendedWhiteLevelLumaCodeValue;$/;"	m	class:SEIToneMappingInfo
m_extendedWhiteLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_extendedWhiteLevelLumaCodeValue;$/;"	m	class:TEncCfg
m_extraRPSs	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_extraRPSs;                                      \/\/\/< extra RPSs added to handle CRA$/;"	m	class:TAppEncCfg
m_extraRPSs	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_extraRPSs;$/;"	m	class:TEncCfg
m_fastInterSearchMode	source/App/TAppEncoder/TAppEncCfg.h	/^  FastInterSearchMode m_fastInterSearchMode;                  \/\/\/< Parameter that controls fast encoder settings$/;"	m	class:TAppEncCfg
m_fastInterSearchMode	source/Lib/TLibEncoder/TEncCfg.h	/^  FastInterSearchMode m_fastInterSearchMode;$/;"	m	class:TEncCfg
m_fgcSEIBlendingModeID	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEIBlendingModeID;$/;"	m	class:TAppEncCfg
m_fgcSEIBlendingModeID	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIBlendingModeID;$/;"	m	class:TEncCfg
m_fgcSEICancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_fgcSEICancelFlag;$/;"	m	class:TAppEncCfg
m_fgcSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEICancelFlag;$/;"	m	class:TEncCfg
m_fgcSEICompModelPresent	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_fgcSEICompModelPresent[MAX_NUM_COMPONENT];$/;"	m	class:TAppEncCfg
m_fgcSEICompModelPresent	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEICompModelPresent[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_fgcSEICompModelValue	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEICompModelValue[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES][MAX_NUM_MODEL_VALUES];$/;"	m	class:TAppEncCfg
m_fgcSEICompModelValue	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_fgcSEICompModelValue[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES][MAX_NUM_MODEL_VALUES];$/;"	m	class:TEncCfg
m_fgcSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_fgcSEIEnabled;$/;"	m	class:TAppEncCfg
m_fgcSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEIEnabled;$/;"	m	class:TEncCfg
m_fgcSEIIntensityIntervalLowerBound	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEIIntensityIntervalLowerBound[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	class:TAppEncCfg
m_fgcSEIIntensityIntervalLowerBound	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIIntensityIntervalLowerBound[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	class:TEncCfg
m_fgcSEIIntensityIntervalUpperBound	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEIIntensityIntervalUpperBound[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	class:TAppEncCfg
m_fgcSEIIntensityIntervalUpperBound	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIIntensityIntervalUpperBound[MAX_NUM_COMPONENT][MAX_NUM_INTENSITIES];$/;"	m	class:TEncCfg
m_fgcSEILog2ScaleFactor	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEILog2ScaleFactor;$/;"	m	class:TAppEncCfg
m_fgcSEILog2ScaleFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEILog2ScaleFactor;$/;"	m	class:TEncCfg
m_fgcSEIModelID	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEIModelID;$/;"	m	class:TAppEncCfg
m_fgcSEIModelID	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEIModelID;$/;"	m	class:TEncCfg
m_fgcSEINumIntensityIntervalMinus1	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEINumIntensityIntervalMinus1[MAX_NUM_COMPONENT];$/;"	m	class:TAppEncCfg
m_fgcSEINumIntensityIntervalMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEINumIntensityIntervalMinus1[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_fgcSEINumModelValuesMinus1	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_fgcSEINumModelValuesMinus1[MAX_NUM_COMPONENT];$/;"	m	class:TAppEncCfg
m_fgcSEINumModelValuesMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_fgcSEINumModelValuesMinus1[MAX_NUM_COMPONENT];$/;"	m	class:TEncCfg
m_fgcSEIPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_fgcSEIPersistenceFlag;$/;"	m	class:TAppEncCfg
m_fgcSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_fgcSEISepColourDescPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_fgcSEISepColourDescPresentFlag;$/;"	m	class:TAppEncCfg
m_fgcSEISepColourDescPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_fgcSEISepColourDescPresentFlag;$/;"	m	class:TEncCfg
m_fieldSeqFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_fieldSeqFlag;$/;"	m	class:TComVUI
m_fieldViewsFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_fieldViewsFlag;$/;"	m	class:SEIFramePacking
m_fifo	source/Lib/TLibCommon/TComBitStream.h	/^  std::vector<uint8_t> m_fifo; \/\/\/ FIFO for storage of complete bytes$/;"	m	class:TComInputBitstream
m_fifo	source/Lib/TLibCommon/TComBitStream.h	/^  std::vector<uint8_t> m_fifo;$/;"	m	class:TComOutputBitstream
m_fifo_idx	source/Lib/TLibCommon/TComBitStream.h	/^  UInt m_fifo_idx; \/\/\/ Read index into m_fifo$/;"	m	class:TComInputBitstream
m_fileBitdepth	source/Lib/Utilities/TVideoIOYuv.h	/^  Int       m_fileBitdepth[MAX_NUM_CHANNEL_TYPE]; \/\/\/< bitdepth of input\/output video file$/;"	m	class:TVideoIOYuv
m_filmGrainBitDepthChromaMinus8	source/Lib/TLibCommon/SEI.h	/^  UChar     m_filmGrainBitDepthChromaMinus8;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainBitDepthLumaMinus8	source/Lib/TLibCommon/SEI.h	/^  UChar     m_filmGrainBitDepthLumaMinus8;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainCharacteristicsCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool      m_filmGrainCharacteristicsCancelFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainCharacteristicsPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool      m_filmGrainCharacteristicsPersistenceFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainColourPrimaries	source/Lib/TLibCommon/SEI.h	/^  UChar     m_filmGrainColourPrimaries;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainFullRangeFlag	source/Lib/TLibCommon/SEI.h	/^  Bool      m_filmGrainFullRangeFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainMatrixCoeffs	source/Lib/TLibCommon/SEI.h	/^  UChar     m_filmGrainMatrixCoeffs;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainModelId	source/Lib/TLibCommon/SEI.h	/^  UChar     m_filmGrainModelId;$/;"	m	class:SEIFilmGrainCharacteristics
m_filmGrainTransferCharacteristics	source/Lib/TLibCommon/SEI.h	/^  UChar     m_filmGrainTransferCharacteristics;$/;"	m	class:SEIFilmGrainCharacteristics
m_filterHintSizeX	source/Lib/TLibCommon/SEI.h	/^  UInt             m_filterHintSizeX;$/;"	m	class:SEIPostFilterHint
m_filterHintSizeY	source/Lib/TLibCommon/SEI.h	/^  UInt             m_filterHintSizeY;$/;"	m	class:SEIPostFilterHint
m_filterHintType	source/Lib/TLibCommon/SEI.h	/^  UInt             m_filterHintType;$/;"	m	class:SEIPostFilterHint
m_filterHintValues	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> m_filterHintValues; \/\/ values stored in linear array, [ ( ( component * sizeY + y ) * SizeX ) + x ]$/;"	m	class:SEIPostFilterHint
m_filteredBlock	source/Lib/TLibCommon/TComPrediction.h	/^  TComYuv m_filteredBlock[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS];$/;"	m	class:TComPrediction
m_filteredBlockTmp	source/Lib/TLibCommon/TComPrediction.h	/^  TComYuv m_filteredBlockTmp[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS];$/;"	m	class:TComPrediction
m_firstCtuRsAddr	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      m_firstCtuRsAddr;$/;"	m	class:TComTile
m_firstWhat	source/App/utils/BitrateTargeting/RuntimeError.h	/^    mutable bool m_firstWhat;  \/\/\/< True i.f.f. the what method has not yet been called$/;"	m	class:RuntimeError
m_fisheyeActiveAreas	source/Lib/TLibCommon/TypeDef.h	/^  std::vector<ActiveAreaInfo> m_fisheyeActiveAreas;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_fisheyeCameraCentreAzimuth	source/Lib/TLibCommon/TypeDef.h	/^    Int  m_fisheyeCameraCentreAzimuth;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreElevation	source/Lib/TLibCommon/TypeDef.h	/^    Int  m_fisheyeCameraCentreElevation;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreOffsetX	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeCameraCentreOffsetX;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreOffsetY	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeCameraCentreOffsetY;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreOffsetZ	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeCameraCentreOffsetZ;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCameraCentreTilt	source/Lib/TLibCommon/TypeDef.h	/^    Int  m_fisheyeCameraCentreTilt;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCancelFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool  m_fisheyeCancelFlag;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_fisheyeCircularRegionCentreX	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeCircularRegionCentreX;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCircularRegionCentreY	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeCircularRegionCentreY;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeCircularRegionRadius	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeCircularRegionRadius;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeFieldOfView	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeFieldOfView;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyePersistenceFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool  m_fisheyePersistenceFlag;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_fisheyePolynomialCoeff	source/Lib/TLibCommon/TypeDef.h	/^    std::vector<Int> m_fisheyePolynomialCoeff;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionHeight	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionHeight;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionLeft	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionLeft;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionTop	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionTop;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeRectRegionWidth	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeRectRegionWidth;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeSceneRadius	source/Lib/TLibCommon/TypeDef.h	/^    UInt m_fisheyeSceneRadius;$/;"	m	struct:TComSEIFisheyeVideoInfo::ActiveAreaInfo
m_fisheyeVIdeoInfoSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                    m_fisheyeVIdeoInfoSEIEnabled;$/;"	m	class:TAppEncCfg
m_fisheyeVideoInfo	source/Lib/TLibEncoder/TEncCfg.h	/^  TComSEIFisheyeVideoInfo m_fisheyeVideoInfo;$/;"	m	class:TEncCfg
m_fisheyeVideoInfoSEI	source/App/TAppEncoder/TAppEncCfg.h	/^  TComSEIFisheyeVideoInfo m_fisheyeVideoInfoSEI;$/;"	m	class:TAppEncCfg
m_fisheyeViewDimensionIdc	source/Lib/TLibCommon/TypeDef.h	/^  UInt  m_fisheyeViewDimensionIdc;$/;"	m	struct:TComSEIFisheyeVideoInfo
m_forceDecodeBitDepth	source/App/TAppDecoder/TAppDecCfg.h	/^  UInt          m_forceDecodeBitDepth;                \/\/\/< if non-zero, force the bit depth at the decoder (best effort decoding)$/;"	m	class:TAppDecCfg
m_forceDecodeBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_forceDecodeBitDepth; \/\/ 0 = do not force the decoder's bit depth, other = force the decoder's bit depth to this value (best effort decoding)$/;"	m	class:TComSPS
m_forceDecodeBitDepth	source/Lib/TLibDecoder/TDecTop.h	/^  UInt                    m_forceDecodeBitDepth;$/;"	m	class:TDecTop
m_fracBits	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  UInt64 m_fracBits;$/;"	m	class:TEncBinCABAC
m_frame0FlippedFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_frame0FlippedFlag;$/;"	m	class:SEIFramePacking
m_frame0GridPositionX	source/Lib/TLibCommon/SEI.h	/^  Int  m_frame0GridPositionX;$/;"	m	class:SEIFramePacking
m_frame0GridPositionY	source/Lib/TLibCommon/SEI.h	/^  Int  m_frame0GridPositionY;$/;"	m	class:SEIFramePacking
m_frame0SelfContainedFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_frame0SelfContainedFlag;$/;"	m	class:SEIFramePacking
m_frame1GridPositionX	source/Lib/TLibCommon/SEI.h	/^  Int  m_frame1GridPositionX;$/;"	m	class:SEIFramePacking
m_frame1GridPositionY	source/Lib/TLibCommon/SEI.h	/^  Int  m_frame1GridPositionY;$/;"	m	class:SEIFramePacking
m_frame1SelfContainedFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_frame1SelfContainedFlag;$/;"	m	class:SEIFramePacking
m_frameFieldInfoPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_frameFieldInfoPresentFlag;                      \/\/\/< Indicates that pic_struct values are present in picture timing SEI messages$/;"	m	class:TAppEncCfg
m_frameFieldInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_frameFieldInfoPresentFlag;$/;"	m	class:TComVUI
m_frameFieldInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_frameFieldInfoPresentFlag;                      \/\/\/< Indicates that pic_struct and other field coding related values are present in picture timing SEI messages$/;"	m	class:TEncCfg
m_frameHeightInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_frameHeightInCtus;$/;"	m	class:TComPicSym
m_frameLevel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_frameLevel;$/;"	m	class:TEncRCPic
m_frameOnlyConstraintFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool m_frameOnlyConstraintFlag;$/;"	m	class:TAppEncCfg
m_frameOnlyConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_frameOnlyConstraintFlag;$/;"	m	class:ProfileTierLevel
m_frameOnlyConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool m_frameOnlyConstraintFlag;$/;"	m	class:TEncCfg
m_framePackingSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_framePackingSEIEnabled;$/;"	m	class:TAppEncCfg
m_framePackingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_framePackingSEIEnabled;$/;"	m	class:TEncCfg
m_framePackingSEIId	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_framePackingSEIId;$/;"	m	class:TAppEncCfg
m_framePackingSEIId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIId;$/;"	m	class:TEncCfg
m_framePackingSEIInterpretation	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_framePackingSEIInterpretation;$/;"	m	class:TAppEncCfg
m_framePackingSEIInterpretation	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIInterpretation;$/;"	m	class:TEncCfg
m_framePackingSEIQuincunx	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_framePackingSEIQuincunx;$/;"	m	class:TAppEncCfg
m_framePackingSEIQuincunx	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIQuincunx;$/;"	m	class:TEncCfg
m_framePackingSEIType	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_framePackingSEIType;$/;"	m	class:TAppEncCfg
m_framePackingSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_framePackingSEIType;$/;"	m	class:TEncCfg
m_frameRate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_frameRate;$/;"	m	class:TEncRCSeq
m_frameWidthInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_frameWidthInCtus;$/;"	m	class:TComPicSym
m_framesLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_framesLeft;$/;"	m	class:TEncRCSeq
m_framesToBeEncoded	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_framesToBeEncoded;                              \/\/\/< number of encoded frames$/;"	m	class:TAppEncCfg
m_framesToBeEncoded	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_framesToBeEncoded;$/;"	m	class:TEncCfg
m_framesToBeEncoded	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_framesToBeEncoded;$/;"	m	class:TEncTemporalFilter
m_fviSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                    m_fviSEIEnabled;$/;"	m	class:TEncCfg
m_gcAnalyzeAll	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeAll;$/;"	m	class:TEncGOP
m_gcAnalyzeAll_in	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeAll_in;$/;"	m	class:TEncGOP
m_gcAnalyzeB	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeB;$/;"	m	class:TEncGOP
m_gcAnalyzeI	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeI;$/;"	m	class:TEncGOP
m_gcAnalyzeP	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncAnalyze             m_gcAnalyzeP;$/;"	m	class:TEncGOP
m_gdrForegroundFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_gdrForegroundFlag;$/;"	m	class:SEIRegionRefreshInfo
m_generalPTL	source/Lib/TLibCommon/TComSlice.h	/^  ProfileTierLevel m_generalPTL;$/;"	m	class:TComPTL
m_golombRiceAdaptationStatistics	source/Lib/TLibDecoder/TDecSbac.h	/^  UInt m_golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	class:TDecSbac
m_golombRiceAdaptationStatistics	source/Lib/TLibEncoder/TEncSbac.h	/^  UInt m_golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	class:TEncSbac
m_gopBasedTemporalFilterEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_gopBasedTemporalFilterEnabled;               \/\/\/< GOP-based Temporal Filter enable\/disable$/;"	m	class:TAppEncCfg
m_gopBasedTemporalFilterEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_gopBasedTemporalFilterEnabled;$/;"	m	class:TEncCfg
m_gopBasedTemporalFilterFutureReference	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_gopBasedTemporalFilterFutureReference;       \/\/\/< Enable\/disable future frame references in the GOP-based Temporal Filter$/;"	m	class:TAppEncCfg
m_gopBasedTemporalFilterFutureReference	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Bool m_gopBasedTemporalFilterFutureReference;$/;"	m	class:TEncTemporalFilter
m_gopBasedTemporalFilterStrengths	source/App/TAppEncoder/TAppEncCfg.h	/^  std::map<Int, Double> m_gopBasedTemporalFilterStrengths;             \/\/\/< Filter strength per frame for the GOP-based Temporal Filter$/;"	m	class:TAppEncCfg
m_gopID	source/Lib/TLibEncoder/TEncSlice.h	/^  Int                     m_gopID;$/;"	m	class:TEncSlice
m_gradualDecodingRefreshInfoEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_gradualDecodingRefreshInfoEnabled;$/;"	m	class:TAppEncCfg
m_gradualDecodingRefreshInfoEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_gradualDecodingRefreshInfoEnabled;$/;"	m	class:TEncCfg
m_grainBuf	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv              *m_grainBuf;$/;"	m	class:TComPic
m_grainBuf	source/Lib/TLibDecoder/TDecTop.h	/^  TComPicYuv              m_grainBuf;$/;"	m	class:TDecTop
m_grainCharacteristic	source/Lib/TLibCommon/TComPic.h	/^  SEIFilmGrainSynthesizer *m_grainCharacteristic;$/;"	m	class:TComPic
m_grainCharacteristic	source/Lib/TLibDecoder/TDecTop.h	/^  SEIFilmGrainSynthesizer m_grainCharacteristic;$/;"	m	class:TDecTop
m_greaterOneBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int m_greaterOneBits[NUM_ONE_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon10
m_greenMetadataInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_greenMetadataInfoSEIEnabled;$/;"	m	class:TEncCfg
m_greenMetadataType	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_greenMetadataType;$/;"	m	class:TAppEncCfg
m_greenMetadataType	source/Lib/TLibCommon/SEI.h	/^    UInt m_greenMetadataType;$/;"	m	class:SEIGreenMetadataInfo
m_greenMetadataType	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_greenMetadataType;$/;"	m	class:TEncCfg
m_handleCraAsBlaFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_handleCraAsBlaFlag;$/;"	m	class:TComSlice
m_hbrFactor	source/Lib/TLibDecoder/TDecConformance.h	/^    UInt                     m_hbrFactor;               \/\/ currently not used for checking$/;"	m	class:ProfileLevelTierFeatures
m_hdr	source/Lib/TLibCommon/SEI.h	/^  AnnotatedRegionHeader m_hdr;$/;"	m	class:SEIAnnotatedRegions
m_height	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_height;$/;"	m	class:SEIFilmGrainSynthesizer
m_height	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  UInt m_width, m_height;$/;"	m	struct:Array2D
m_held_bits	source/Lib/TLibCommon/TComBitStream.h	/^  UChar m_held_bits; \/\/\/ the bits held and not flushed to bytestream.$/;"	m	class:TComOutputBitstream
m_held_bits	source/Lib/TLibCommon/TComBitStream.h	/^  UChar m_held_bits;$/;"	m	class:TComInputBitstream
m_highPrecisionOffsetsEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_highPrecisionOffsetsEnabledFlag;$/;"	m	class:TAppEncCfg
m_highPrecisionOffsetsEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_highPrecisionOffsetsEnabledFlag;$/;"	m	class:TComSPSRExt
m_highPrecisionOffsetsEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_highPrecisionOffsetsEnabledFlag;$/;"	m	class:TEncCfg
m_horChromaFilterIdc	source/Lib/TLibCommon/SEI.h	/^  Int                            m_horChromaFilterIdc;$/;"	m	class:SEIChromaResamplingFilterHint
m_horFilterCoeff	source/Lib/TLibCommon/SEI.h	/^  std::vector<std::vector<Int> > m_horFilterCoeff;$/;"	m	class:SEIChromaResamplingFilterHint
m_hrdOpSetIdx	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<UInt>     m_hrdOpSetIdx;$/;"	m	class:TComVPS
m_hrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  TComHRD    m_hrdParameters;$/;"	m	class:TComVUI
m_hrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<TComHRD>  m_hrdParameters;$/;"	m	class:TComVPS
m_hrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_hrdParametersPresentFlag;$/;"	m	class:TComVUI
m_iAssociatedIRAP	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iAssociatedIRAP;$/;"	m	class:TComSlice
m_iAssociatedIRAPType	source/Lib/TLibCommon/TComSlice.h	/^  NalUnitType                m_iAssociatedIRAPType;$/;"	m	class:TComSlice
m_iCostScale	source/Lib/TLibCommon/TComRdCost.h	/^  Int                     m_iCostScale;$/;"	m	class:TComRdCost
m_iDecodingRefreshType	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iDecodingRefreshType;                           \/\/\/< random access type$/;"	m	class:TAppEncCfg
m_iDepth	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iDepth;$/;"	m	class:TComSlice
m_iFrameRate	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iFrameRate;                                     \/\/\/< source frame-rates (Hz)$/;"	m	class:TAppEncCfg
m_iFrameRate	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iFrameRate;$/;"	m	class:TEncCfg
m_iFrameRcvd	source/App/TAppEncoder/TAppEncTop.h	/^  Int                        m_iFrameRcvd;                  \/\/\/< number of received frames$/;"	m	class:TAppEncTop
m_iGOPSize	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iGOPSize;                                       \/\/\/< GOP size of hierarchical structure$/;"	m	class:TAppEncCfg
m_iGOPSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iGOPSize;$/;"	m	class:TEncCfg
m_iGopSize	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_iGopSize;$/;"	m	class:TEncGOP
m_iHeight	source/Lib/TLibCommon/TComYuv.h	/^  UInt     m_iHeight;$/;"	m	class:TComYuv
m_iHor	source/Lib/TLibCommon/TComMv.h	/^  Short m_iHor;     \/\/\/< horizontal component of motion vector$/;"	m	class:TComMv
m_iIntraPeriod	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iIntraPeriod;                                   \/\/\/< period of I-slice (random access period)$/;"	m	class:TAppEncCfg
m_iLastIDR	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iLastIDR;$/;"	m	class:TComSlice
m_iLastIDR	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_iLastIDR;$/;"	m	class:TEncGOP
m_iLastRecoveryPicPOC	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_iLastRecoveryPicPOC;$/;"	m	class:TEncGOP
m_iLumaRecStride	source/Lib/TLibCommon/TComPrediction.h	/^  Int    m_iLumaRecStride;       \/\/\/< stride of #m_pLumaRecBuffer array$/;"	m	class:TComPrediction
m_iMaxCuDQPDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iMaxCuDQPDepth;                                 \/\/\/< Max. depth for a minimum CuDQPSize (0:default)$/;"	m	class:TAppEncCfg
m_iMaxCuDQPDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iMaxCuDQPDepth;                   \/\/  Max. depth for a minimum CuDQP (0:default)$/;"	m	class:TEncCfg
m_iMaxDeltaQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iMaxDeltaQP;                                    \/\/\/< max. |delta QP|$/;"	m	class:TAppEncCfg
m_iMaxDeltaQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iMaxDeltaQP;                      \/\/  Max. absolute delta QP (1:default)$/;"	m	class:TEncCfg
m_iMaxRefPicNum	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_iMaxRefPicNum;$/;"	m	class:TDecTop
m_iMaxRefPicNum	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iMaxRefPicNum;                     \/\/\/< this is used to mimic the sliding mechanism used by the decoder$/;"	m	class:TEncCfg
m_iMaxTemporalLayer	source/App/TAppDecoder/TAppDecCfg.h	/^  Int           m_iMaxTemporalLayer;                  \/\/\/< maximum temporal layer to be decoded$/;"	m	class:TAppDecCfg
m_iNumColumnsMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iNumColumnsMinus1;$/;"	m	class:TEncCfg
m_iNumPicCoded	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_iNumPicCoded;$/;"	m	class:TEncGOP
m_iNumPicRcvd	source/Lib/TLibEncoder/TEncTop.h	/^  Int                     m_iNumPicRcvd;                  \/\/\/< number of received pictures$/;"	m	class:TEncTop
m_iNumRowsMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iNumRowsMinus1;$/;"	m	class:TEncCfg
m_iPOC	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iPOC;$/;"	m	class:TComSlice
m_iPOCLast	source/Lib/TLibEncoder/TEncTop.h	/^  Int                     m_iPOCLast;                     \/\/\/< time index (POC)$/;"	m	class:TEncTop
m_iPOCLastDisplay	source/App/TAppDecoder/TAppDecTop.h	/^  Int                             m_iPOCLastDisplay;              \/\/\/< last POC in display order$/;"	m	class:TAppDecTop
m_iPPSId	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iPPSId;               \/\/\/< picture parameter set ID$/;"	m	class:TComSlice
m_iQP	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iQP;                                            \/\/\/< QP value of key-picture (integer)$/;"	m	class:TAppEncCfg
m_iQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iQP;                              \/\/  if (AdaptiveQP == OFF)$/;"	m	class:TEncCfg
m_iQPAdaptationRange	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iQPAdaptationRange;                             \/\/\/< dQP range by QP adaptation$/;"	m	class:TAppEncCfg
m_iQPAdaptationRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iQPAdaptationRange;$/;"	m	class:TEncCfg
m_iRefIdx	source/Lib/TLibCommon/TComMotionInfo.h	/^  Int       m_iRefIdx;$/;"	m	class:TComMvField
m_iSearchRange	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iSearchRange;                                   \/\/\/< ME search range$/;"	m	class:TAppEncCfg
m_iSearchRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iSearchRange;                     \/\/  0:Full frame$/;"	m	class:TEncCfg
m_iSearchRange	source/Lib/TLibEncoder/TEncSearch.h	/^  Int             m_iSearchRange;$/;"	m	class:TEncSearch
m_iSkipFrame	source/App/TAppDecoder/TAppDecCfg.h	/^  Int           m_iSkipFrame;                           \/\/\/< counter for frames prior to the random access point to skip$/;"	m	class:TAppDecCfg
m_iSliceChromaQpDelta	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iSliceChromaQpDelta[MAX_NUM_COMPONENT];$/;"	m	class:TComSlice
m_iSliceQp	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iSliceQp;$/;"	m	class:TComSlice
m_iSliceQpBase	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iSliceQpBase;$/;"	m	class:TComSlice
m_iSliceQpDelta	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_iSliceQpDelta;$/;"	m	class:TComSlice
m_iSourceHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iSourceHeight;                                  \/\/\/< source height in pixel (when interlaced = field height)$/;"	m	class:TAppEncCfg
m_iSourceHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iSourceHeight;$/;"	m	class:TEncCfg
m_iSourceHeightOrg	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iSourceHeightOrg;                               \/\/\/< original source height in pixel (when interlaced = frame height)$/;"	m	class:TAppEncCfg
m_iSourceWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_iSourceWidth;                                   \/\/\/< source width in pixel$/;"	m	class:TAppEncCfg
m_iSourceWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_iSourceWidth;$/;"	m	class:TEncCfg
m_iVal	source/Lib/TLibCommon/Debug.h	/^  Int         m_iVal;$/;"	m	class:EnvVar
m_iVer	source/Lib/TLibCommon/TComMv.h	/^  Short m_iVer;     \/\/\/< vertical component of motion vector$/;"	m	class:TComMv
m_iWidth	source/Lib/TLibCommon/TComYuv.h	/^  UInt     m_iWidth;$/;"	m	class:TComYuv
m_iYuvExtSize	source/Lib/TLibCommon/TComPrediction.h	/^  Int       m_iYuvExtSize;$/;"	m	class:TComPrediction
m_idrPicId	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_idrPicId;$/;"	m	class:SEIFilmGrainSynthesizer
m_idxOfMctsInSet	source/Lib/TLibCommon/SEI.h	/^    std::vector< std::vector<UInt> > m_idxOfMctsInSet;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_if	source/Lib/TLibCommon/TComPrediction.h	/^  TComInterpolationFilter m_if;$/;"	m	class:TComPrediction
m_independentSliceSegmentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_independentSliceSegmentFlag;$/;"	m	class:SEICodedRegionCompletion
m_initialAltCpbRemovalDelay	source/Lib/TLibCommon/SEI.h	/^  UInt m_initialAltCpbRemovalDelay      [MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_initialAltCpbRemovalDelayOffset	source/Lib/TLibCommon/SEI.h	/^  UInt m_initialAltCpbRemovalDelayOffset[MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_initialCpbRemovalDelay	source/Lib/TLibCommon/SEI.h	/^  UInt m_initialCpbRemovalDelay         [MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_initialCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_initialCpbRemovalDelayLengthMinus1;$/;"	m	class:TComHRD
m_initialCpbRemovalDelayOffset	source/Lib/TLibCommon/SEI.h	/^  UInt m_initialCpbRemovalDelayOffset   [MAX_CPB_CNT][2];$/;"	m	class:SEIBufferingPeriod
m_inputBitDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_inputBitDepth   [MAX_NUM_CHANNEL_TYPE];         \/\/\/< bit-depth of input file$/;"	m	class:TAppEncCfg
m_inputBitDepth	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_inputBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncTemporalFilter
m_inputBitstreamFileName	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	/^  std::string   m_inputBitstreamFileName;             \/\/\/< input bitstream file name$/;"	m	class:TAppMctsExtCfg
m_inputColourSpaceConvert	source/App/TAppEncoder/TAppEncCfg.h	/^  InputColourSpaceConversion m_inputColourSpaceConvert;       \/\/\/< colour space conversion to apply to input video$/;"	m	class:TAppEncCfg
m_inputColourSpaceConvert	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  InputColourSpaceConversion m_inputColourSpaceConvert;$/;"	m	class:TEncTemporalFilter
m_inputDRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_inputDRange;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_inputDispLuminance	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_inputDispLuminance;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_inputFileHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_inputFileHeight;                                \/\/\/< height of image in input file (this is equivalent to sourceHeight, if sourceHeight is not subsequently altered due to padding)$/;"	m	class:TAppEncCfg
m_inputFileName	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_inputFileName;                                \/\/\/< source file name$/;"	m	class:TAppEncCfg
m_inputFileName	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  std::string m_inputFileName;$/;"	m	class:TEncTemporalFilter
m_inputFileWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_inputFileWidth;                                 \/\/\/< width of image in input file  (this is equivalent to sourceWidth,  if sourceWidth  is not subsequently altered due to padding)$/;"	m	class:TAppEncCfg
m_integerMv2Nx2N	source/Lib/TLibEncoder/TEncSearch.h	/^  TComMv          m_integerMv2Nx2N[NUM_REF_PIC_LIST_01][MAX_NUM_REF];$/;"	m	class:TEncSearch
m_interRPSPrediction	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_interRPSPrediction;$/;"	m	class:TComReferencePictureSet
m_interRPSPrediction	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_interRPSPrediction;$/;"	m	struct:GOPEntry
m_interlacedSourceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool m_interlacedSourceFlag;$/;"	m	class:TAppEncCfg
m_interlacedSourceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_interlacedSourceFlag;$/;"	m	class:ProfileTierLevel
m_interlacedSourceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool m_interlacedSourceFlag;$/;"	m	class:TEncCfg
m_internalBitDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_internalBitDepth[MAX_NUM_CHANNEL_TYPE];         \/\/\/< bit-depth codec operates at (input\/output files will be converted)$/;"	m	class:TAppEncCfg
m_internalBitDepth	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_internalBitDepth[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncTemporalFilter
m_intraConstraintFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool          m_intraConstraintFlag;$/;"	m	class:TAppEncCfg
m_intraConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_intraConstraintFlag;$/;"	m	class:ProfileTierLevel
m_intraConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool              m_intraConstraintFlag;$/;"	m	class:TEncCfg
m_intraQPOffset	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_intraQPOffset;                                  \/\/\/< QP offset for intra slice (integer)$/;"	m	class:TAppEncCfg
m_intraQPOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_intraQPOffset;                    \/\/\/< QP offset for intra slice (integer)$/;"	m	class:TEncCfg
m_intraSmoothingDisabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_intraSmoothingDisabledFlag;$/;"	m	class:TComSPSRExt
m_intraSmoothingDisabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_intraSmoothingDisabledFlag;$/;"	m	class:TEncCfg
m_isEncoded	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool m_isEncoded;$/;"	m	struct:GOPEntry
m_isField	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_isField;                                        \/\/\/< enable field coding$/;"	m	class:TAppEncCfg
m_isField	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_isField;$/;"	m	class:TComPic
m_isInitialized	source/Lib/TLibEncoder/SEIEncoder.h	/^  Bool m_isInitialized;$/;"	m	class:SEIEncoder
m_isInitialized	source/Lib/TLibEncoder/TEncSearch.h	/^  Bool            m_isInitialized;$/;"	m	class:TEncSearch
m_isNoOutputPriorPics	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_isNoOutputPriorPics;$/;"	m	class:TDecTop
m_isTop	source/Lib/TLibCommon/TComPic.h	/^  Bool                  m_isTop;$/;"	m	class:TComPic
m_isTopFieldFirst	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_isTopFieldFirst;$/;"	m	class:TAppEncCfg
m_ituCountryCode	source/Lib/TLibCommon/SEI.h	/^  UShort m_ituCountryCode;$/;"	m	class:SEIUserDataRegistered
m_kneeCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_kneeCancelFlag;$/;"	m	class:SEIKneeFunctionInfo
m_kneeFunctionCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_kneeFunctionCancelFlag;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_kneeFunctionId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_kneeFunctionId;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_kneeFunctionInformationSEI	source/App/TAppEncoder/TAppEncCfg.h	/^  TEncCfg::TEncSEIKneeFunctionInformation m_kneeFunctionInformationSEI;$/;"	m	class:TAppEncCfg
m_kneeFunctionInformationSEI	source/Lib/TLibEncoder/TEncCfg.h	/^  TEncSEIKneeFunctionInformation m_kneeFunctionInformationSEI;$/;"	m	class:TEncCfg
m_kneeFunctionPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_kneeFunctionPersistenceFlag;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_kneeId	source/Lib/TLibCommon/SEI.h	/^  Int   m_kneeId;$/;"	m	class:SEIKneeFunctionInfo
m_kneeInputDispLuminance	source/Lib/TLibCommon/SEI.h	/^  Int   m_kneeInputDispLuminance;$/;"	m	class:SEIKneeFunctionInfo
m_kneeInputDrange	source/Lib/TLibCommon/SEI.h	/^  Int   m_kneeInputDrange;$/;"	m	class:SEIKneeFunctionInfo
m_kneeInputKneePoint	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> m_kneeInputKneePoint;$/;"	m	class:SEIKneeFunctionInfo
m_kneeNumKneePointsMinus1	source/Lib/TLibCommon/SEI.h	/^  Int   m_kneeNumKneePointsMinus1;$/;"	m	class:SEIKneeFunctionInfo
m_kneeOutputDispLuminance	source/Lib/TLibCommon/SEI.h	/^  Int   m_kneeOutputDispLuminance;$/;"	m	class:SEIKneeFunctionInfo
m_kneeOutputDrange	source/Lib/TLibCommon/SEI.h	/^  Int   m_kneeOutputDrange;$/;"	m	class:SEIKneeFunctionInfo
m_kneeOutputKneePoint	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> m_kneeOutputKneePoint;$/;"	m	class:SEIKneeFunctionInfo
m_kneePersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_kneePersistenceFlag;$/;"	m	class:SEIKneeFunctionInfo
m_kneeSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_kneeSEIEnabled;$/;"	m	class:TAppEncCfg
m_kneeSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_kneeSEIEnabled;$/;"	m	class:TEncCfg
m_kneeSEIKneePointPairs	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<KneePointPair> m_kneeSEIKneePointPairs;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_lambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_lambda;$/;"	m	struct:TRCLCU
m_lambda	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Double                 m_lambda[MAX_NUM_COMPONENT];$/;"	m	class:TEncSampleAdaptiveOffset
m_lambdaFromQPEnable	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_lambdaFromQPEnable;                             \/\/\/< enable flag for QP:lambda fix$/;"	m	class:TAppEncCfg
m_lambdaFromQPEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_lambdaFromQPEnable;               \/\/\/< enable lambda derivation from QP$/;"	m	class:TEncCfg
m_lambdas	source/Lib/TLibCommon/TComSlice.h	/^  Double                     m_lambdas[MAX_NUM_COMPONENT];$/;"	m	class:TComSlice
m_lambdas	source/Lib/TLibCommon/TComTrQuant.h	/^  Double   m_lambdas[MAX_NUM_COMPONENT];$/;"	m	class:TComTrQuant
m_lastBPSEI	source/Lib/TLibEncoder/TEncGOP.h	/^  UInt                    m_lastBPSEI;$/;"	m	class:TEncGOP
m_lastLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_lastLambda;$/;"	m	class:TEncRCSeq
m_lastPOCNoOutputPriorPics	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_lastPOCNoOutputPriorPics;$/;"	m	class:TDecTop
m_lastSliceSegmentEndContextState	source/Lib/TLibDecoder/TDecSlice.h	/^  TDecSbac        m_lastSliceSegmentEndContextState;    \/\/\/< context storage for state at the end of the previous slice-segment (used for dependent slices only).$/;"	m	class:TDecSlice
m_lastSliceSegmentEndContextState	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncSbac                m_lastSliceSegmentEndContextState;    \/\/\/< context storage for state at the end of the previous slice-segment (used for dependent slices only).$/;"	m	class:TEncSlice
m_layerIdIncludedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                  m_layerIdIncludedFlag[MAX_VPS_OP_SETS_PLUS1][MAX_VPS_NUH_RESERVED_ZERO_LAYER_ID_PLUS1];$/;"	m	class:TComVPS
m_level	source/App/TAppEncoder/TAppEncCfg.h	/^  Level::Name   m_level;$/;"	m	class:TAppEncCfg
m_level	source/Lib/TLibEncoder/TEncCfg.h	/^  Level::Name   m_level;$/;"	m	class:TEncCfg
m_levelAbsBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int m_levelAbsBits[NUM_ABS_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon10
m_levelIdc	source/Lib/TLibCommon/TComSlice.h	/^  Level::Name       m_levelIdc;$/;"	m	class:ProfileTierLevel
m_levelTier	source/App/TAppEncoder/TAppEncCfg.h	/^  Level::Tier   m_levelTier;$/;"	m	class:TAppEncCfg
m_levelTier	source/Lib/TLibEncoder/TEncCfg.h	/^  Level::Tier   m_levelTier;$/;"	m	class:TEncCfg
m_limited_tile_set_display_flag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_limited_tile_set_display_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_line	source/Lib/TLibCommon/TComRom.cpp	/^  UInt m_line, m_column;$/;"	m	class:ScanGenerator	file:
m_lineBufWidth	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_lineBufWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_list1IdxToList0Idx	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_list1IdxToList0Idx[MAX_NUM_REF];$/;"	m	class:TComSlice
m_listOfIndices	source/Lib/TLibCommon/SEI.h	/^    std::vector<UInt> m_listOfIndices;$/;"	m	struct:SEIRegionalNesting::SEIListOfIndices
m_listRCPictures	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  list<TEncRCPic*> m_listRCPictures;$/;"	m	class:TEncRateCtrl
m_listsModificationPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_listsModificationPresentFlag;$/;"	m	class:TComPPS
m_localRPS	source/Lib/TLibCommon/TComSlice.h	/^  TComReferencePictureSet    m_localRPS;             \/\/< RPS when present in slice header$/;"	m	class:TComSlice
m_log2DiffMaxMinCodingBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_log2DiffMaxMinCodingBlockSize;$/;"	m	class:TComSPS
m_log2DiffMaxMinCodingBlockSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_log2DiffMaxMinCodingBlockSize;$/;"	m	class:TEncCfg
m_log2MatrixDenom	source/Lib/TLibCommon/SEI.h	/^  Int                 m_log2MatrixDenom;$/;"	m	class:SEIColourRemappingInfo
m_log2MaxMvLengthHorizontal	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_log2MaxMvLengthHorizontal;                      \/\/\/< Indicate the maximum absolute value of a decoded horizontal MV component in quarter-pel luma units$/;"	m	class:TAppEncCfg
m_log2MaxMvLengthHorizontal	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_log2MaxMvLengthHorizontal;$/;"	m	class:TComVUI
m_log2MaxMvLengthHorizontal	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_log2MaxMvLengthHorizontal;                      \/\/\/< Indicate the maximum absolute value of a decoded horizontal MV component in quarter-pel luma units$/;"	m	class:TEncCfg
m_log2MaxMvLengthVertical	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_log2MaxMvLengthVertical;                        \/\/\/< Indicate the maximum absolute value of a decoded vertical MV component in quarter-pel luma units$/;"	m	class:TAppEncCfg
m_log2MaxMvLengthVertical	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_log2MaxMvLengthVertical;$/;"	m	class:TComVUI
m_log2MaxMvLengthVertical	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_log2MaxMvLengthVertical;                        \/\/\/< Indicate the maximum absolute value of a decoded vertical MV component in quarter-pel luma units$/;"	m	class:TEncCfg
m_log2MaxTransformSkipBlockSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_log2MaxTransformSkipBlockSize;                  \/\/\/< transform-skip maximum size (minimum of 2)$/;"	m	class:TAppEncCfg
m_log2MaxTransformSkipBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_log2MaxTransformSkipBlockSize;$/;"	m	class:TComPPSRExt
m_log2MaxTransformSkipBlockSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_log2MaxTransformSkipBlockSize;$/;"	m	class:TEncCfg
m_log2MinCodingBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_log2MinCodingBlockSize;$/;"	m	class:TComSPS
m_log2ParallelMergeLevel	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_log2ParallelMergeLevel;                         \/\/\/< Parallel merge estimation region$/;"	m	class:TAppEncCfg
m_log2ParallelMergeLevelMinus2	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_log2ParallelMergeLevelMinus2;$/;"	m	class:TComPPS
m_log2ParallelMergeLevelMinus2	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_log2ParallelMergeLevelMinus2;       \/\/\/< Parallel merge estimation region$/;"	m	class:TEncCfg
m_log2SaoOffsetScale	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_log2SaoOffsetScale[MAX_NUM_CHANNEL_TYPE];       \/\/\/< number of bits for the upward bit shift operation on the decoded SAO offsets$/;"	m	class:TAppEncCfg
m_log2SaoOffsetScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_log2SaoOffsetScale[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComPPSRExt
m_log2SaoOffsetScale	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_log2SaoOffsetScale[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TEncCfg
m_log2ScaleFactor	source/Lib/TLibCommon/SEI.h	/^  UChar     m_log2ScaleFactor;$/;"	m	class:SEIFilmGrainCharacteristics
m_loopFilterAcrossSlicesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_loopFilterAcrossSlicesEnabledFlag;$/;"	m	class:TComPPS
m_loopFilterAcrossTilesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_loopFilterAcrossTilesEnabledFlag;$/;"	m	class:TComPPS
m_loopFilterAcrossTilesEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_loopFilterAcrossTilesEnabledFlag;$/;"	m	class:TEncCfg
m_loopFilterBetaOffsetDiv2	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_loopFilterBetaOffsetDiv2;                       \/\/\/< beta offset for deblocking filter$/;"	m	class:TAppEncCfg
m_loopFilterBetaOffsetDiv2	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_loopFilterBetaOffsetDiv2;$/;"	m	class:TEncCfg
m_loopFilterOffsetInPPS	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_loopFilterOffsetInPPS;                          \/\/\/< offset for deblocking filter in 0 = slice header, 1 = PPS$/;"	m	class:TAppEncCfg
m_loopFilterOffsetInPPS	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_loopFilterOffsetInPPS;$/;"	m	class:TEncCfg
m_loopFilterTcOffsetDiv2	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_loopFilterTcOffsetDiv2;                         \/\/\/< tc offset for deblocking filter$/;"	m	class:TAppEncCfg
m_loopFilterTcOffsetDiv2	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_loopFilterTcOffsetDiv2;$/;"	m	class:TEncCfg
m_lowerBitRateConstraintFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool          m_lowerBitRateConstraintFlag;$/;"	m	class:TAppEncCfg
m_lowerBitRateConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_lowerBitRateConstraintFlag;$/;"	m	class:ProfileTierLevel
m_lowerBitRateConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool              m_lowerBitRateConstraintFlag;$/;"	m	class:TEncCfg
m_lowerBound	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_lowerBound;$/;"	m	class:TEncRCPic
m_ltRefPicPocLsbSps	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_ltRefPicPocLsbSps[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TComSPS
m_ltRefPicPocLsbSps	source/Lib/TLibEncoder/TEncGOP.h	/^  UInt                    m_ltRefPicPocLsbSps[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TEncGOP
m_ltRefPicUsedByCurrPicFlag	source/Lib/TLibEncoder/TEncGOP.h	/^  Bool                    m_ltRefPicUsedByCurrPicFlag[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TEncGOP
m_lumaFilter	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^const TFilterCoeff TComInterpolationFilter::m_lumaFilter[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_LUMA] =$/;"	m	class:TComInterpolationFilter	file:
m_lumaFilter	source/Lib/TLibCommon/TComInterpolationFilter.h	/^  static const TFilterCoeff m_lumaFilter[LUMA_INTERPOLATION_FILTER_SUB_SAMPLE_POSITIONS][NTAPS_LUMA];     \/\/\/< Luma filter taps$/;"	m	class:TComInterpolationFilter
m_lumaLevelToDeltaQPLUT	source/Lib/TLibEncoder/TEncCu.h	/^  Int                     m_lumaLevelToDeltaQPLUT[LUMA_LEVEL_TO_DQP_LUT_MAXSIZE];$/;"	m	class:TEncCu
m_lumaLevelToDeltaQPMapping	source/App/TAppEncoder/TAppEncCfg.h	/^  LumaLevelToDeltaQPMapping m_lumaLevelToDeltaQPMapping;      \/\/\/< mapping from luma level to Delta QP.$/;"	m	class:TAppEncCfg
m_lumaLevelToDeltaQPMapping	source/Lib/TLibEncoder/TEncCfg.h	/^  LumaLevelToDeltaQPMapping m_lumaLevelToDeltaQPMapping; \/\/\/< mapping from luma level to delta QP.$/;"	m	class:TEncCfg
m_lumaQPOffset	source/Lib/TLibEncoder/TEncCu.h	/^  Int                     m_lumaQPOffset;$/;"	m	class:TEncCu
m_marginX	source/Lib/TLibCommon/TComPicYuv.h	/^  Int   m_marginX;                                  \/\/\/< margin of Luma channel (chroma's may be smaller, depending on ratio)$/;"	m	class:TComPicYuv
m_marginY	source/Lib/TLibCommon/TComPicYuv.h	/^  Int   m_marginY;                                  \/\/\/< margin of Luma channel (chroma's may be smaller, depending on ratio)$/;"	m	class:TComPicYuv
m_masteringDisplay	source/App/TAppEncoder/TAppEncCfg.h	/^  TComSEIMasteringDisplay m_masteringDisplay;$/;"	m	class:TAppEncCfg
m_masteringDisplay	source/Lib/TLibEncoder/TEncCfg.h	/^  TComSEIMasteringDisplay m_masteringDisplay;$/;"	m	class:TEncCfg
m_matrixCoefficients	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_matrixCoefficients;                             \/\/\/< Describes the matrix coefficients used in deriving luma and chroma from RGB primaries$/;"	m	class:TAppEncCfg
m_matrixCoefficients	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_matrixCoefficients;$/;"	m	class:TComVUI
m_matrixCoefficients	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_matrixCoefficients;                             \/\/\/< Describes the matrix coefficients used in deriving luma and chroma from RGB primaries$/;"	m	class:TEncCfg
m_maxBitsPerMinCuDenom	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_maxBitsPerMinCuDenom;                           \/\/\/< Indicates an upper bound for the number of bits of coding_unit() data$/;"	m	class:TAppEncCfg
m_maxBitsPerMinCuDenom	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_maxBitsPerMinCuDenom;$/;"	m	class:TComVUI
m_maxBitsPerMinCuDenom	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_maxBitsPerMinCuDenom;                           \/\/\/< Indicates an upper bound for the number of bits of coding_unit() data$/;"	m	class:TEncCfg
m_maxBytesPerPicDenom	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_maxBytesPerPicDenom;                            \/\/\/< Indicates a number of bytes not exceeded by the sum of the sizes of the VCL NAL units associated with any coded picture$/;"	m	class:TAppEncCfg
m_maxBytesPerPicDenom	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_maxBytesPerPicDenom;$/;"	m	class:TComVUI
m_maxBytesPerPicDenom	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_maxBytesPerPicDenom;                            \/\/\/< Indicates a number of bytes not exceeded by the sum of the sizes of the VCL NAL units associated with any coded picture$/;"	m	class:TEncCfg
m_maxCUHeight	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_maxCUHeight;$/;"	m	class:TComSampleAdaptiveOffset
m_maxCUHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_maxCUHeight;$/;"	m	class:TEncCfg
m_maxCUWidth	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_maxCUWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_maxCUWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_maxCUWidth;$/;"	m	class:TEncCfg
m_maxContentLightLevel	source/Lib/TLibCommon/SEI.h	/^    UInt m_maxContentLightLevel;$/;"	m	class:SEIContentLightLevelInfo
m_maxDecPicBuffering	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_maxDecPicBuffering[MAX_TLAYER];                 \/\/\/< total number of pictures in the decoded picture buffer$/;"	m	class:TAppEncCfg
m_maxDecPicBuffering	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_maxDecPicBuffering[MAX_TLAYER];$/;"	m	class:TEncCfg
m_maxId	source/Lib/TLibCommon/TComSlice.h	/^  Int                       m_maxId;$/;"	m	class:ParameterSetMap
m_maxNuhReservedZeroLayerId	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_maxNuhReservedZeroLayerId;$/;"	m	class:TComVPS
m_maxNumMergeCand	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_maxNumMergeCand;                                \/\/\/< Max number of merge candidates$/;"	m	class:TAppEncCfg
m_maxNumMergeCand	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_maxNumMergeCand;$/;"	m	class:TComSlice
m_maxNumMergeCand	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_maxNumMergeCand;                    \/\/\/< Maximum number of merge candidates$/;"	m	class:TEncCfg
m_maxNumOffsetsPerPic	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_maxNumOffsetsPerPic;                            \/\/\/< SAO maximun number of offset per picture$/;"	m	class:TAppEncCfg
m_maxNumOffsetsPerPic	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_maxNumOffsetsPerPic;$/;"	m	class:TEncCfg
m_maxPicAverageLightLevel	source/Lib/TLibCommon/SEI.h	/^    UInt m_maxPicAverageLightLevel;$/;"	m	class:SEIContentLightLevelInfo
m_maxRawCtuBits	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    UInt                     m_maxRawCtuBits;$/;"	m	class:ProfileLevelTierFeatures
m_maxRawCtuBits	source/Lib/TLibDecoder/TDecConformance.h	/^    UInt                     m_maxRawCtuBits;$/;"	m	class:ProfileLevelTierFeatures
m_maxTempLayer	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_maxTempLayer;                                  \/\/\/< Max temporal layer$/;"	m	class:TAppEncCfg
m_maxTempLayer	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_maxTempLayer;                      \/\/\/< Max temporal layer$/;"	m	class:TEncCfg
m_maxTotalCUDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_maxTotalCUDepth;$/;"	m	class:TEncCfg
m_maxValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_maxValue;$/;"	m	class:SEIToneMappingInfo
m_maxValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_maxValue;$/;"	m	class:TEncCfg
m_max_mcs_tier_level_idc_present_flag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_max_mcs_tier_level_idc_present_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_max_mcts_level_idc	source/Lib/TLibCommon/SEI.h	/^  Int     m_max_mcts_level_idc;$/;"	m	class:SEITempMotionConstrainedTileSets
m_max_mcts_tier_flag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_max_mcts_tier_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_maximumDistortionForEarlyExit	source/Lib/TLibCommon/TComRdCost.h	/^  Distortion            m_maximumDistortionForEarlyExit; \/\/\/ During cost calculations, if distortion exceeds this value, cost calculations may early-terminate.$/;"	m	class:DistParam
m_mc_all_tiles_exact_sample_value_match_flag	source/Lib/TLibCommon/SEI.h	/^  Bool    m_mc_all_tiles_exact_sample_value_match_flag;$/;"	m	class:SEITempMotionConstrainedTileSets
m_mctsExtractionInfoPresent	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  Bool                            m_mctsExtractionInfoPresent;    \/\/\/< indicates whether MCTS extraction info for the traget mcts idx has been found in the bitstream$/;"	m	class:TAppMctsExtTop
m_mcts_id	source/Lib/TLibCommon/SEI.h	/^      Int     m_mcts_id;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_mcts_level_idc	source/Lib/TLibCommon/SEI.h	/^      Int     m_mcts_level_idc;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_mcts_tier_flag	source/Lib/TLibCommon/SEI.h	/^      Bool    m_mcts_tier_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_mcts_tier_level_idc_present_flag	source/Lib/TLibCommon/SEI.h	/^      Bool    m_mcts_tier_level_idc_present_flag;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_minSearchWindow	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_minSearchWindow;                                \/\/\/< ME minimum search window size for the Adaptive Window ME$/;"	m	class:TAppEncCfg
m_minSearchWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_minSearchWindow;$/;"	m	class:TEncCfg
m_minSpatialSegmentationIdc	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_minSpatialSegmentationIdc;                      \/\/\/< Indicates the maximum size of the spatial segments in the pictures in the coded video sequence$/;"	m	class:TAppEncCfg
m_minSpatialSegmentationIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_minSpatialSegmentationIdc;$/;"	m	class:TComVUI
m_minSpatialSegmentationIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_minSpatialSegmentationIdc;                      \/\/\/< Indicates the maximum size of the spatial segments in the pictures in the coded video sequence$/;"	m	class:TEncCfg
m_minValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_minValue;$/;"	m	class:SEIToneMappingInfo
m_minValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_minValue;$/;"	m	class:TEncCfg
m_modelId	source/Lib/TLibCommon/SEI.h	/^  Int    m_modelId;$/;"	m	class:SEIToneMappingInfo
m_modelId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_modelId;$/;"	m	class:TEncCfg
m_motionEstimationSearchMethod	source/App/TAppEncoder/TAppEncCfg.h	/^  MESearchMethod m_motionEstimationSearchMethod;$/;"	m	class:TAppEncCfg
m_motionEstimationSearchMethod	source/Lib/TLibEncoder/TEncCfg.h	/^  MESearchMethod m_motionEstimationSearchMethod;$/;"	m	class:TEncCfg
m_motionEstimationSearchMethod	source/Lib/TLibEncoder/TEncSearch.h	/^  MESearchMethod  m_motionEstimationSearchMethod;$/;"	m	class:TEncSearch
m_motionLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_motionLambda;$/;"	m	class:TComRdCost
m_motionVectorsOverPicBoundariesFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_motionVectorsOverPicBoundariesFlag;             \/\/\/< Indicates that no samples outside the picture boundaries are used for inter prediction$/;"	m	class:TAppEncCfg
m_motionVectorsOverPicBoundariesFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_motionVectorsOverPicBoundariesFlag;$/;"	m	class:TComVUI
m_motionVectorsOverPicBoundariesFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_motionVectorsOverPicBoundariesFlag;             \/\/\/< Indicates that no samples outside the picture boundaries are used for inter prediction$/;"	m	class:TEncCfg
m_mvPredictor	source/Lib/TLibCommon/TComRdCost.h	/^  TComMv                  m_mvPredictor;$/;"	m	class:TComRdCost
m_nalHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_nalHrdParametersPresentFlag;$/;"	m	class:TComHRD
m_nalUnitData	source/Lib/TLibCommon/NAL.h	/^  std::ostringstream m_nalUnitData;$/;"	m	struct:NALUnitEBSP
m_nalUnitType	source/Lib/TLibCommon/NAL.h	/^  NalUnitType m_nalUnitType; \/\/\/< nal_unit_type$/;"	m	struct:NALUnit
m_nestedSEIs	source/Lib/TLibCommon/SEI.h	/^  SEIMessages m_nestedSEIs;$/;"	m	class:SEIScalableNesting
m_nestingLayerId	source/Lib/TLibCommon/SEI.h	/^  UChar m_nestingLayerId[MAX_NESTING_NUM_LAYER];     \/\/value valid if m_nestingOpFlag == 0 and m_allLayersFlag == 0. This can e.g. be a static array of 64 UChar values$/;"	m	class:SEIScalableNesting
m_nestingMaxTemporalIdPlus1	source/Lib/TLibCommon/SEI.h	/^  UInt  m_nestingMaxTemporalIdPlus1[MAX_TLAYER];     \/\/ -"-$/;"	m	class:SEIScalableNesting
m_nestingNoOpMaxTemporalIdPlus1	source/Lib/TLibCommon/SEI.h	/^  UInt  m_nestingNoOpMaxTemporalIdPlus1;             \/\/value valid if m_nestingOpFlag == 0 and m_allLayersFlag == 0$/;"	m	class:SEIScalableNesting
m_nestingNumLayersMinus1	source/Lib/TLibCommon/SEI.h	/^  UInt  m_nestingNumLayersMinus1;                    \/\/value valid if m_nestingOpFlag == 0 and m_allLayersFlag == 0$/;"	m	class:SEIScalableNesting
m_nestingNumOpsMinus1	source/Lib/TLibCommon/SEI.h	/^  UInt  m_nestingNumOpsMinus1;                       \/\/ -"-$/;"	m	class:SEIScalableNesting
m_nestingOpFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_nestingOpFlag;$/;"	m	class:SEIScalableNesting
m_nestingOpIdx	source/Lib/TLibCommon/SEI.h	/^  UInt  m_nestingOpIdx[MAX_NESTING_NUM_OPS];         \/\/ -"-$/;"	m	class:SEIScalableNesting
m_neutralChromaIndicationFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_neutralChromaIndicationFlag;                    \/\/\/< Indicates that the value of all decoded chroma samples is equal to 1<<(BitDepthCr-1)$/;"	m	class:TAppEncCfg
m_neutralChromaIndicationFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_neutralChromaIndicationFlag;$/;"	m	class:TComVUI
m_neutralChromaIndicationFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_neutralChromaIndicationFlag;                    \/\/\/< Indicates that the value of all decoded chroma samples is equal to 1<<(BitDepthCr-1)$/;"	m	class:TEncCfg
m_nextSegmentAddress	source/Lib/TLibCommon/SEI.h	/^  UInt m_nextSegmentAddress;$/;"	m	class:SEICodedRegionCompletion
m_nextSlice	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_nextSlice;$/;"	m	class:TComSlice
m_nextSliceSegment	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_nextSliceSegment;$/;"	m	class:TComSlice
m_nextState	source/Lib/TLibCommon/ContextModel.cpp	/^UChar ContextModel::m_nextState[ ContextModel::m_totalStates ][2 \/*MPS = [0|1]*\/];$/;"	m	class:ContextModel	file:
m_nextState	source/Lib/TLibCommon/ContextModel.h	/^  static UChar m_nextState[m_totalStates][2 \/*MPS = [0|1]*\/];$/;"	m	class:ContextModel
m_noDisplay	source/Lib/TLibCommon/SEI.h	/^  Bool m_noDisplay;$/;"	m	class:SEINoDisplay
m_noDisplaySEITLayer	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_noDisplaySEITLayer;$/;"	m	class:TAppEncCfg
m_noDisplaySEITLayer	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_noDisplaySEITLayer;$/;"	m	class:TEncCfg
m_noOutputPriorPicsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_noOutputPriorPicsFlag;$/;"	m	class:TComSlice
m_noParameterSetUpdateFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_noParameterSetUpdateFlag;$/;"	m	class:SEIActiveParameterSets
m_noRaslOutputFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_noRaslOutputFlag;$/;"	m	class:TComSlice
m_nominalBlackLevelLumaCodeValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_nominalBlackLevelLumaCodeValue;$/;"	m	class:TAppEncCfg
m_nominalBlackLevelLumaCodeValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_nominalBlackLevelLumaCodeValue;$/;"	m	class:SEIToneMappingInfo
m_nominalBlackLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_nominalBlackLevelLumaCodeValue;$/;"	m	class:TEncCfg
m_nominalWhiteLevelLumaCodeValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_nominalWhiteLevelLumaCodeValue;$/;"	m	class:TAppEncCfg
m_nominalWhiteLevelLumaCodeValue	source/Lib/TLibCommon/SEI.h	/^  Int    m_nominalWhiteLevelLumaCodeValue;$/;"	m	class:SEIToneMappingInfo
m_nominalWhiteLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_nominalWhiteLevelLumaCodeValue;$/;"	m	class:TEncCfg
m_nonPackedConstraintFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool m_nonPackedConstraintFlag;$/;"	m	class:TAppEncCfg
m_nonPackedConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_nonPackedConstraintFlag;$/;"	m	class:ProfileTierLevel
m_nonPackedConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool m_nonPackedConstraintFlag;$/;"	m	class:TEncCfg
m_notOptimizedForViewingFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_notOptimizedForViewingFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_nuhLayerId	source/Lib/TLibCommon/NAL.h	/^  UInt        m_nuhLayerId;  \/\/\/< nuh_layer_id$/;"	m	struct:NALUnit
m_numBitsRead	source/Lib/TLibCommon/TComBitStream.h	/^  UInt  m_numBitsRead;$/;"	m	class:TComInputBitstream
m_numBufferedBytes	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  Int                 m_numBufferedBytes;$/;"	m	class:TEncBinCABAC
m_numBytesInNALUnit	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt m_numBytesInNALUnit;$/;"	m	struct:AnnexBStats
m_numCTUInHeight	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_numCTUInHeight;$/;"	m	class:TComSampleAdaptiveOffset
m_numCTUInWidth	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_numCTUInWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_numCTUsPic	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_numCTUsPic;$/;"	m	class:TComSampleAdaptiveOffset
m_numContextModels	source/Lib/TLibDecoder/TDecSbac.h	/^  Int                  m_numContextModels;$/;"	m	class:TDecSbac
m_numContextModels	source/Lib/TLibEncoder/TEncSbac.h	/^  Int                  m_numContextModels;$/;"	m	class:TEncSbac
m_numCtusInFrame	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_numCtusInFrame;$/;"	m	class:TComPicSym
m_numDecodingUnitsMinus1	source/Lib/TLibCommon/SEI.h	/^  UInt  m_numDecodingUnitsMinus1;$/;"	m	class:SEIPictureTiming
m_numExtraSliceHeaderBits	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_numExtraSliceHeaderBits;$/;"	m	class:TComPPS
m_numFillerFFBytes	source/Lib/TLibCommon/SEI.h	/^  UInt m_numFillerFFBytes;$/;"	m	class:SEIFillerPayload
m_numHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_numHrdParameters;$/;"	m	class:TComVPS
m_numLeadingZero8BitsBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt m_numLeadingZero8BitsBytes;$/;"	m	struct:AnnexBStats
m_numLongTermRefPicSPS	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_numLongTermRefPicSPS;$/;"	m	class:TComSPS
m_numLongTermRefPicSPS	source/Lib/TLibEncoder/TEncGOP.h	/^  UInt                    m_numLongTermRefPicSPS;$/;"	m	class:TEncGOP
m_numNALUnitsToSkip	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^  int           m_numNALUnitsToSkip;$/;"	m	class:SEIRemovalAppCfg
m_numNALUnitsToWrite	source/App/SEIRemovalApp/SEIRemovalAppCfg.h	/^  int           m_numNALUnitsToWrite;$/;"	m	class:SEIRemovalAppCfg
m_numNalusInDuMinus1	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt> m_numNalusInDuMinus1;$/;"	m	class:SEIPictureTiming
m_numOpSets	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_numOpSets;$/;"	m	class:TComVPS
m_numPackedRegions	source/Lib/TLibCommon/SEI.h	/^  Int                   m_numPackedRegions;$/;"	m	class:SEIRegionWisePacking
m_numPartInCtuHeight	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_numPartInCtuHeight;$/;"	m	class:TComPicSym
m_numPartInCtuWidth	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_numPartInCtuWidth;$/;"	m	class:TComPicSym
m_numPartitionsInCtu	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_numPartitionsInCtu;$/;"	m	class:TComPicSym
m_numPic	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numPic;$/;"	m	class:TEncRCGOP
m_numPicsInSopMinus1	source/Lib/TLibCommon/SEI.h	/^  UInt m_numPicsInSopMinus1;$/;"	m	class:SEISOPDescription
m_numPivots	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_numPivots;$/;"	m	class:TAppEncCfg
m_numPivots	source/Lib/TLibCommon/SEI.h	/^  Int    m_numPivots;$/;"	m	class:SEIToneMappingInfo
m_numPivots	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_numPivots;$/;"	m	class:TEncCfg
m_numRefIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_numRefIdc;$/;"	m	class:TComReferencePictureSet
m_numRefIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_numRefIdc;$/;"	m	struct:GOPEntry
m_numRefIdxL0DefaultActive	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_numRefIdxL0DefaultActive;$/;"	m	class:TComPPS
m_numRefIdxL1DefaultActive	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_numRefIdxL1DefaultActive;$/;"	m	class:TComPPS
m_numRefPics	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_numRefPics;$/;"	m	struct:GOPEntry
m_numRefPicsActive	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_numRefPicsActive;$/;"	m	struct:GOPEntry
m_numReorderPics	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_numReorderPics[MAX_TLAYER];                     \/\/\/< total number of reorder pictures$/;"	m	class:TAppEncCfg
m_numReorderPics	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_numReorderPics[MAX_TLAYER];$/;"	m	class:TComSPS
m_numReorderPics	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_numReorderPics[MAX_TLAYER];$/;"	m	class:TComVPS
m_numReorderPics	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_numReorderPics[MAX_TLAYER];$/;"	m	class:TEncCfg
m_numSlices	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^      unsigned long m_numSlices;$/;"	m	class:__anon2::Tally	file:
m_numStartCodePrefixBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt m_numStartCodePrefixBytes;$/;"	m	struct:AnnexBStats
m_numTicksPocDiffOneMinus1	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_numTicksPocDiffOneMinus1;                       \/\/\/< Number of ticks minus 1 that for a POC difference of one$/;"	m	class:TAppEncCfg
m_numTicksPocDiffOneMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_numTicksPocDiffOneMinus1;$/;"	m	class:TimingInfo
m_numTicksPocDiffOneMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_numTicksPocDiffOneMinus1;                       \/\/\/< Number of ticks minus 1 that for a POC difference of one$/;"	m	class:TEncCfg
m_numTileColumnsMinus1	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_numTileColumnsMinus1;$/;"	m	class:TAppEncCfg
m_numTileColumnsMinus1	source/Lib/TLibCommon/TComPicSym.h	/^  Int           m_numTileColumnsMinus1;$/;"	m	class:TComPicSym
m_numTileColumnsMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_numTileColumnsMinus1;$/;"	m	class:TComPPS
m_numTileRowsMinus1	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_numTileRowsMinus1;$/;"	m	class:TAppEncCfg
m_numTileRowsMinus1	source/Lib/TLibCommon/TComPicSym.h	/^  Int           m_numTileRowsMinus1;$/;"	m	class:TComPicSym
m_numTileRowsMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_numTileRowsMinus1;$/;"	m	class:TComPPS
m_numTrailingZero8BitsBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt m_numTrailingZero8BitsBytes;$/;"	m	struct:AnnexBStats
m_numUnitsInTick	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_numUnitsInTick;$/;"	m	class:TimingInfo
m_numZeroByteBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  UInt m_numZeroByteBytes;$/;"	m	struct:AnnexBStats
m_num_held_bits	source/Lib/TLibCommon/TComBitStream.h	/^  UInt m_num_held_bits; \/\/\/ number of bits not flushed to bytestream.$/;"	m	class:TComOutputBitstream
m_num_held_bits	source/Lib/TLibCommon/TComBitStream.h	/^  UInt m_num_held_bits;$/;"	m	class:TComInputBitstream
m_num_tile_rects_in_set	source/Lib/TLibCommon/SEI.h	/^      Int     m_num_tile_rects_in_set; \/\/_minus1;$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_numberOfChecksumErrorsDetected	source/Lib/TLibDecoder/TDecGop.h	/^  UInt                  m_numberOfChecksumErrorsDetected;$/;"	m	class:TDecGop
m_numberOfLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfLCU;$/;"	m	class:TEncRCPic
m_numberOfLCU	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfLCU;$/;"	m	class:TEncRCSeq
m_numberOfLevel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfLevel;$/;"	m	class:TEncRCSeq
m_numberOfLongtermPictures	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_numberOfLongtermPictures;$/;"	m	class:TComReferencePictureSet
m_numberOfNegativePictures	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_numberOfNegativePictures;$/;"	m	class:TComReferencePictureSet
m_numberOfPictures	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_numberOfPictures;$/;"	m	class:TComReferencePictureSet
m_numberOfPixel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfPixel;$/;"	m	class:TEncRCPic
m_numberOfPixel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfPixel;$/;"	m	class:TEncRCSeq
m_numberOfPixel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_numberOfPixel;$/;"	m	struct:TRCLCU
m_numberOfPositivePictures	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_numberOfPositivePictures;$/;"	m	class:TComReferencePictureSet
m_numberOfSlicesInPicture	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt  m_numberOfSlicesInPicture;$/;"	m	class:TDecConformanceCheck
m_objectConfidenceInfoPresentFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_objectConfidenceInfoPresentFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_objectConfidenceLength	source/Lib/TLibCommon/SEI.h	/^    UInt      m_objectConfidenceLength;         \/\/ Only valid if m_objectConfidenceInfoPresentFlag$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_objectLabelLanguagePresentFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_objectLabelLanguagePresentFlag; \/\/ Only valid if m_objectLabelPresentFlag$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_objectLabelPresentFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_objectLabelPresentFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_occludedObjectFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_occludedObjectFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_offsetStepLog2	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  UInt m_offsetStepLog2[MAX_NUM_COMPONENT]; \/\/offset step$/;"	m	class:TComSampleAdaptiveOffset
m_omniViewportCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_omniViewportCancelFlag;$/;"	m	class:SEIOmniViewport
m_omniViewportCntMinus1	source/Lib/TLibCommon/SEI.h	/^  UChar m_omniViewportCntMinus1;$/;"	m	class:SEIOmniViewport
m_omniViewportId	source/Lib/TLibCommon/SEI.h	/^  UInt  m_omniViewportId;$/;"	m	class:SEIOmniViewport
m_omniViewportPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_omniViewportPersistenceFlag;$/;"	m	class:SEIOmniViewport
m_omniViewportRegions	source/Lib/TLibCommon/SEI.h	/^  std::vector<OmniViewport> m_omniViewportRegions;  $/;"	m	class:SEIOmniViewport
m_omniViewportSEIAzimuthCentre	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Int>  m_omniViewportSEIAzimuthCentre;$/;"	m	class:TAppEncCfg
m_omniViewportSEIAzimuthCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Int>  m_omniViewportSEIAzimuthCentre;$/;"	m	class:TEncCfg
m_omniViewportSEICancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_omniViewportSEICancelFlag;$/;"	m	class:TAppEncCfg
m_omniViewportSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_omniViewportSEICancelFlag;$/;"	m	class:TEncCfg
m_omniViewportSEICntMinus1	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_omniViewportSEICntMinus1;$/;"	m	class:TAppEncCfg
m_omniViewportSEICntMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_omniViewportSEICntMinus1;$/;"	m	class:TEncCfg
m_omniViewportSEIElevationCentre	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Int>  m_omniViewportSEIElevationCentre;$/;"	m	class:TAppEncCfg
m_omniViewportSEIElevationCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Int>  m_omniViewportSEIElevationCentre;$/;"	m	class:TEncCfg
m_omniViewportSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_omniViewportSEIEnabled;          $/;"	m	class:TAppEncCfg
m_omniViewportSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_omniViewportSEIEnabled;          $/;"	m	class:TEncCfg
m_omniViewportSEIHorRange	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt> m_omniViewportSEIHorRange;$/;"	m	class:TAppEncCfg
m_omniViewportSEIHorRange	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt> m_omniViewportSEIHorRange;$/;"	m	class:TEncCfg
m_omniViewportSEIId	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_omniViewportSEIId;$/;"	m	class:TAppEncCfg
m_omniViewportSEIId	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_omniViewportSEIId;$/;"	m	class:TEncCfg
m_omniViewportSEIPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_omniViewportSEIPersistenceFlag;$/;"	m	class:TAppEncCfg
m_omniViewportSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_omniViewportSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_omniViewportSEITiltCentre	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Int>  m_omniViewportSEITiltCentre;$/;"	m	class:TAppEncCfg
m_omniViewportSEITiltCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Int>  m_omniViewportSEITiltCentre;$/;"	m	class:TEncCfg
m_omniViewportSEIVerRange	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt> m_omniViewportSEIVerRange;  $/;"	m	class:TAppEncCfg
m_omniViewportSEIVerRange	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt> m_omniViewportSEIVerRange; $/;"	m	class:TEncCfg
m_onePictureOnlyConstraintFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool          m_onePictureOnlyConstraintFlag;$/;"	m	class:TAppEncCfg
m_onePictureOnlyConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_onePictureOnlyConstraintFlag;$/;"	m	class:ProfileTierLevel
m_onePictureOnlyConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool              m_onePictureOnlyConstraintFlag;$/;"	m	class:TEncCfg
m_outputBitDepth	source/App/TAppDecoder/TAppDecCfg.h	/^  Int           m_outputBitDepth[MAX_NUM_CHANNEL_TYPE]; \/\/\/< bit depth used for writing output$/;"	m	class:TAppDecCfg
m_outputBitDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_outputBitDepth  [MAX_NUM_CHANNEL_TYPE];         \/\/\/< bit-depth of output file$/;"	m	class:TAppEncCfg
m_outputBitstreamFileName	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	/^  std::string   m_outputBitstreamFileName;            \/\/\/< output subbitstream filename$/;"	m	class:TAppMctsExtCfg
m_outputColourSpaceConvert	source/App/TAppDecoder/TAppDecCfg.h	/^  InputColourSpaceConversion m_outputColourSpaceConvert;$/;"	m	class:TAppDecCfg
m_outputDRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_outputDRange;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_outputDecodedSEIMessagesFilename	source/App/TAppDecoder/TAppDecCfg.h	/^  std::string   m_outputDecodedSEIMessagesFilename;   \/\/\/< filename to output decoded SEI messages to. If '-', then use stdout. If empty, do not output details.$/;"	m	class:TAppDecCfg
m_outputDispLuminance	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_outputDispLuminance;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation
m_outputInternalColourSpace	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_outputInternalColourSpace;                    \/\/\/< if true, then no colour space conversion is applied for reconstructed video, otherwise inverse of input is applied.$/;"	m	class:TAppEncCfg
m_outputSliceSegmentAddress	source/Lib/TLibCommon/SEI.h	/^    std::vector<UInt> m_outputSliceSegmentAddress;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_overscanAppropriateFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_overscanAppropriateFlag;                        \/\/\/< Indicates whether conformant decoded pictures are suitable for display using overscan$/;"	m	class:TAppEncCfg
m_overscanAppropriateFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_overscanAppropriateFlag;$/;"	m	class:TComVUI
m_overscanAppropriateFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_overscanAppropriateFlag;                        \/\/\/< Indicates whether conformant decoded pictures are suitable for display using overscan$/;"	m	class:TEncCfg
m_overscanInfoPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_overscanInfoPresentFlag;                        \/\/\/< Signals whether overscan_appropriate_flag is present$/;"	m	class:TAppEncCfg
m_overscanInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_overscanInfoPresentFlag;$/;"	m	class:TComVUI
m_overscanInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_overscanInfoPresentFlag;                        \/\/\/< Signals whether overscan_appropriate_flag is present$/;"	m	class:TEncCfg
m_pConformanceCheck	source/Lib/TLibDecoder/TDecCu.h	/^  TDecConformanceCheck* m_pConformanceCheck;$/;"	m	class:TDecCu
m_pConformanceCheck	source/Lib/TLibDecoder/TDecEntropy.h	/^  TDecConformanceCheck* m_pConformanceCheck;$/;"	m	class:TDecEntropy
m_pCtuAbove	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuAbove;                            \/\/\/< pointer of above CTU.$/;"	m	class:TComDataCU
m_pCtuAboveLeft	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuAboveLeft;                        \/\/\/< pointer of above-left CTU.$/;"	m	class:TComDataCU
m_pCtuAboveRight	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuAboveRight;                       \/\/\/< pointer of above-right CTU.$/;"	m	class:TComDataCU
m_pCtuLeft	source/Lib/TLibCommon/TComDataCU.h	/^  TComDataCU*   m_pCtuLeft;                             \/\/\/< pointer of left CTU$/;"	m	class:TComDataCU
m_pDecConformanceCheck	source/Lib/TLibDecoder/TDecSlice.h	/^  TDecConformanceCheck *m_pDecConformanceCheck;$/;"	m	class:TDecSlice
m_pDecodedSEIOutputStream	source/Lib/TLibDecoder/TDecTop.h	/^  std::ostream           *m_pDecodedSEIOutputStream;$/;"	m	class:TDecTop
m_pFgcParameters	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  SEIFilmGrainCharacteristics *m_pFgcParameters;$/;"	m	class:SEIFilmGrainSynthesizer
m_pGrainSynt	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  GrainSynthesisStruct        *m_pGrainSynt;$/;"	m	class:SEIFilmGrainSynthesizer
m_pLevelTier	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    const LevelTierFeatures *m_pLevelTier;$/;"	m	class:ProfileLevelTierFeatures
m_pLevelTier	source/Lib/TLibDecoder/TDecConformance.h	/^    const LevelTierFeatures *m_pLevelTier;$/;"	m	class:ProfileLevelTierFeatures
m_pLumaRecBuffer	source/Lib/TLibCommon/TComPrediction.h	/^  Pel*   m_pLumaRecBuffer;       \/\/\/< array for downsampled reconstructed luma sample$/;"	m	class:TComPrediction
m_pParentARLBuffer	source/Lib/TLibCommon/TComPicSym.h	/^  TCoeff*       m_pParentARLBuffer;$/;"	m	class:TComPicSym
m_pProfile	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    const ProfileFeatures   *m_pProfile;$/;"	m	class:ProfileLevelTierFeatures
m_pProfile	source/Lib/TLibDecoder/TDecConformance.h	/^    const ProfileFeatures   *m_pProfile;$/;"	m	class:ProfileLevelTierFeatures
m_pRPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComReferencePictureSet* m_pRPS;             \/\/< pointer to RPS, either in the SPS or the local RPS in the same slice header$/;"	m	class:TComSlice
m_pSharedPredTransformSkip	source/Lib/TLibEncoder/TEncSearch.h	/^  Pel*            m_pSharedPredTransformSkip[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_pSlice	source/Lib/TLibCommon/TComPicSym.h	/^    TComSlice    * m_pSlice;$/;"	m	struct:TComPicSym::DPBPerCtuData
m_pTempPel	source/Lib/TLibEncoder/TEncSearch.h	/^  Pel*            m_pTempPel;$/;"	m	class:TEncSearch
m_packedPictureHeight	source/Lib/TLibCommon/SEI.h	/^  Int                   m_packedPictureHeight;$/;"	m	class:SEIRegionWisePacking
m_packedPictureWidth	source/Lib/TLibCommon/SEI.h	/^  Int                   m_packedPictureWidth;$/;"	m	class:SEIRegionWisePacking
m_packedRegionHeight	source/Lib/TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionHeight;$/;"	m	class:SEIRegionWisePacking
m_packedRegionLeft	source/Lib/TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionLeft;$/;"	m	class:SEIRegionWisePacking
m_packedRegionTop	source/Lib/TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionTop;$/;"	m	class:SEIRegionWisePacking
m_packedRegionWidth	source/Lib/TLibCommon/SEI.h	/^  std::vector<UShort>   m_packedRegionWidth;$/;"	m	class:SEIRegionWisePacking
m_panScanRectCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_panScanRectCancelFlag;$/;"	m	class:SEIPanScanRect
m_panScanRectId	source/Lib/TLibCommon/SEI.h	/^  UInt m_panScanRectId;$/;"	m	class:SEIPanScanRect
m_panScanRectPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_panScanRectPersistenceFlag;$/;"	m	class:SEIPanScanRect
m_panScanRectRegions	source/Lib/TLibCommon/SEI.h	/^  std::vector<PanScanRect> m_panScanRectRegions;$/;"	m	class:SEIPanScanRect
m_parameterSetManager	source/Lib/TLibDecoder/TDecTop.h	/^  ParameterSetManager     m_parameterSetManager;  \/\/ storage for parameter sets$/;"	m	class:TDecTop
m_paramsetMap	source/Lib/TLibCommon/TComSlice.h	/^  std::map<Int,MapData<T> > m_paramsetMap;$/;"	m	class:ParameterSetMap
m_partialObjectFlagPresentFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_partialObjectFlagPresentFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_patternStride	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_patternStride;$/;"	m	class:TComPattern
m_pbIPCMFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         m_pbIPCMFlag;                           \/\/\/< array of intra_pcm flags$/;"	m	class:TComDataCU
m_pbMergeFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         m_pbMergeFlag;                          \/\/\/< array of merge flags$/;"	m	class:TComDataCU
m_pcArlCoeff	source/Lib/TLibCommon/TComDataCU.h	/^  TCoeff*       m_pcArlCoeff[MAX_NUM_COMPONENT];        \/\/\/< ARL coefficient buffer (0->Y, 1->Cb, 2->Cr)$/;"	m	class:TComDataCU
m_pcBinCABAC	source/Lib/TLibDecoder/TDecGop.h	/^  TDecBinCABAC*         m_pcBinCABAC;$/;"	m	class:TDecGop
m_pcBinCABAC	source/Lib/TLibEncoder/TEncCu.h	/^  TEncBinCABAC*           m_pcBinCABAC;$/;"	m	class:TEncCu
m_pcBinCABAC	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncBinCABAC*           m_pcBinCABAC;$/;"	m	class:TEncGOP
m_pcBinCABAC	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncBinCABAC*           m_pcBinCABAC;                         \/\/\/< Bin encoder CABAC$/;"	m	class:TEncSlice
m_pcBinIf	source/Lib/TLibEncoder/TEncSbac.h	/^  TEncBinIf*    m_pcBinIf;$/;"	m	class:TEncSbac
m_pcBitIf	source/Lib/TLibEncoder/SyntaxElementWriter.h	/^  TComBitIf*    m_pcBitIf;$/;"	m	class:SyntaxElementWriter
m_pcBitIf	source/Lib/TLibEncoder/TEncSbac.h	/^  TComBitIf*    m_pcBitIf;$/;"	m	class:TEncSbac
m_pcBitstream	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  TComInputBitstream*   m_pcBitstream;$/;"	m	class:SyntaxElementParser
m_pcBitstream	source/Lib/TLibDecoder/TDecSbac.h	/^  TComInputBitstream* m_pcBitstream;$/;"	m	class:TDecSbac
m_pcCavlcCoder	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncCavlc*              m_pcCavlcCoder;$/;"	m	class:TEncGOP
m_pcCavlcCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncCavlc*              m_pcCavlcCoder;                       \/\/\/< CAVLC encoder$/;"	m	class:TEncTop
m_pcCavlcDecoder	source/Lib/TLibDecoder/TDecGop.h	/^  TDecCavlc*            m_pcCavlcDecoder;$/;"	m	class:TDecGop
m_pcCfg	source/Lib/TLibEncoder/SEIEncoder.h	/^  TEncCfg* m_pcCfg;$/;"	m	class:SEIEncoder
m_pcCfg	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncCfg*                m_pcCfg;$/;"	m	class:TEncGOP
m_pcCfg	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncCfg*                m_pcCfg;                              \/\/\/< encoder configuration class$/;"	m	class:TEncSlice
m_pcCuDecoder	source/Lib/TLibDecoder/TDecSlice.h	/^  TDecCu*         m_pcCuDecoder;$/;"	m	class:TDecSlice
m_pcCuEncoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncCu*                 m_pcCuEncoder;                        \/\/\/< CU encoder$/;"	m	class:TEncSlice
m_pcDeblockingTempPicYuv	source/Lib/TLibEncoder/TEncGOP.h	/^  TComPicYuv*             m_pcDeblockingTempPicYuv;$/;"	m	class:TEncGOP
m_pcEncCfg	source/Lib/TLibEncoder/TEncCu.h	/^  TEncCfg*                m_pcEncCfg;$/;"	m	class:TEncCu
m_pcEncCfg	source/Lib/TLibEncoder/TEncSearch.h	/^  TEncCfg*        m_pcEncCfg;$/;"	m	class:TEncSearch
m_pcEncGOP	source/Lib/TLibEncoder/SEIEncoder.h	/^  TEncGOP* m_pcEncGOP;$/;"	m	class:SEIEncoder
m_pcEncTop	source/Lib/TLibEncoder/SEIEncoder.h	/^  TEncTop* m_pcEncTop;$/;"	m	class:SEIEncoder
m_pcEncTop	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncTop*                m_pcEncTop;$/;"	m	class:TEncGOP
m_pcEntropyCoder	source/Lib/TLibEncoder/TEncCu.h	/^  TEncEntropy*            m_pcEntropyCoder;$/;"	m	class:TEncCu
m_pcEntropyCoder	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncEntropy*            m_pcEntropyCoder;$/;"	m	class:TEncGOP
m_pcEntropyCoder	source/Lib/TLibEncoder/TEncSearch.h	/^  TEncEntropy*    m_pcEntropyCoder;$/;"	m	class:TEncSearch
m_pcEntropyCoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncEntropy*            m_pcEntropyCoder;                     \/\/\/< entropy encoder$/;"	m	class:TEncSlice
m_pcEntropyCoderIf	source/Lib/TLibEncoder/TEncEntropy.h	/^  TEncEntropyIf*      m_pcEntropyCoderIf;$/;"	m	class:TEncEntropy
m_pcEntropyDecoder	source/Lib/TLibDecoder/TDecCu.h	/^  TDecEntropy*        m_pcEntropyDecoder;$/;"	m	class:TDecCu
m_pcEntropyDecoder	source/Lib/TLibDecoder/TDecGop.h	/^  TDecEntropy*          m_pcEntropyDecoder;$/;"	m	class:TDecGop
m_pcEntropyDecoder	source/Lib/TLibDecoder/TDecSlice.h	/^  TDecEntropy*    m_pcEntropyDecoder;$/;"	m	class:TDecSlice
m_pcEntropyDecoderIf	source/Lib/TLibDecoder/TDecEntropy.h	/^  TDecEntropyIf*  m_pcEntropyDecoderIf;$/;"	m	class:TDecEntropy
m_pcEstBitsSbac	source/Lib/TLibCommon/TComTrQuant.h	/^  estBitsSbacStruct* m_pcEstBitsSbac;$/;"	m	class:TComTrQuant
m_pcGOPEncoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncGOP*                m_pcGOPEncoder;                       \/\/\/< GOP encoder$/;"	m	class:TEncSlice
m_pcIPCMSample	source/Lib/TLibCommon/TComDataCU.h	/^  Pel*          m_pcIPCMSample[MAX_NUM_COMPONENT];      \/\/\/< PCM sample buffer (0->Y, 1->Cb, 2->Cr)$/;"	m	class:TComDataCU
m_pcListPic	source/Lib/TLibEncoder/TEncGOP.h	/^  TComList<TComPic*>*     m_pcListPic;$/;"	m	class:TEncGOP
m_pcListPic	source/Lib/TLibEncoder/TEncSlice.h	/^  TComList<TComPic*>*     m_pcListPic;                          \/\/\/< list of pictures$/;"	m	class:TEncSlice
m_pcLoopFilter	source/Lib/TLibDecoder/TDecGop.h	/^  TComLoopFilter*       m_pcLoopFilter;$/;"	m	class:TDecGop
m_pcLoopFilter	source/Lib/TLibEncoder/TEncGOP.h	/^  TComLoopFilter*         m_pcLoopFilter;$/;"	m	class:TEncGOP
m_pcMv	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv*   m_pcMv;$/;"	m	class:TComCUMvField
m_pcMvd	source/Lib/TLibCommon/TComMotionInfo.h	/^  TComMv*   m_pcMvd;$/;"	m	class:TComCUMvField
m_pcPPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComPPS*             m_pcPPS;$/;"	m	class:TComSlice
m_pcPTL	source/Lib/TLibCommon/TComSlice.h	/^  TComPTL               m_pcPTL;$/;"	m	class:TComVPS
m_pcPTL	source/Lib/TLibCommon/TComSlice.h	/^  TComPTL          m_pcPTL;$/;"	m	class:TComSPS
m_pcPic	source/Lib/TLibCommon/TComDataCU.h	/^  TComPic*      m_pcPic;                                \/\/\/< picture class pointer$/;"	m	class:TComDataCU
m_pcPic	source/Lib/TLibCommon/TComSlice.h	/^  TComPic*                   m_pcPic;$/;"	m	class:TComSlice
m_pcPic	source/Lib/TLibDecoder/TDecTop.h	/^  TComPic*                m_pcPic;$/;"	m	class:TDecTop
m_pcPicYuvPred	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*           m_pcPicYuvPred;           \/\/  Prediction$/;"	m	class:TComPic
m_pcPicYuvResi	source/Lib/TLibCommon/TComPic.h	/^  TComPicYuv*           m_pcPicYuvResi;           \/\/  Residual$/;"	m	class:TComPic
m_pcPredSearch	source/Lib/TLibEncoder/TEncCu.h	/^  TEncSearch*             m_pcPredSearch;$/;"	m	class:TEncCu
m_pcPredSearch	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncSearch*             m_pcPredSearch;                       \/\/\/< encoder search class$/;"	m	class:TEncSlice
m_pcPrediction	source/Lib/TLibDecoder/TDecCu.h	/^  TComPrediction*     m_pcPrediction;$/;"	m	class:TDecCu
m_pcPrediction	source/Lib/TLibDecoder/TDecEntropy.h	/^  TComPrediction* m_pcPrediction;$/;"	m	class:TDecEntropy
m_pcQTTempTComYuv	source/Lib/TLibEncoder/TEncSearch.h	/^  TComYuv*        m_pcQTTempTComYuv;$/;"	m	class:TEncSearch
m_pcQTTempTUCoeff	source/Lib/TLibEncoder/TEncSearch.h	/^  TCoeff*         m_pcQTTempTUCoeff[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_pcQTTempTransformSkipTComYuv	source/Lib/TLibEncoder/TEncSearch.h	/^  TComYuv         m_pcQTTempTransformSkipTComYuv;$/;"	m	class:TEncSearch
m_pcRDGoOnSbacCoder	source/Lib/TLibEncoder/TEncCu.h	/^  TEncSbac*               m_pcRDGoOnSbacCoder;$/;"	m	class:TEncCu
m_pcRDGoOnSbacCoder	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncSbac*              m_pcRDGoOnSbacCoder;$/;"	m	class:TEncSampleAdaptiveOffset
m_pcRDGoOnSbacCoder	source/Lib/TLibEncoder/TEncSearch.h	/^  TEncSbac*       m_pcRDGoOnSbacCoder;$/;"	m	class:TEncSearch
m_pcRDGoOnSbacCoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncSbac*               m_pcRDGoOnSbacCoder;                  \/\/\/< go-on SBAC encoder$/;"	m	class:TEncSlice
m_pcRateCtrl	source/Lib/TLibEncoder/TEncCu.h	/^  TEncRateCtrl*           m_pcRateCtrl;$/;"	m	class:TEncCu
m_pcRateCtrl	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncRateCtrl*           m_pcRateCtrl;$/;"	m	class:TEncGOP
m_pcRateCtrl	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncRateCtrl*           m_pcRateCtrl;                         \/\/\/< Rate control manager$/;"	m	class:TEncSlice
m_pcRdCost	source/Lib/TLibEncoder/TEncCu.h	/^  TComRdCost*             m_pcRdCost;$/;"	m	class:TEncCu
m_pcRdCost	source/Lib/TLibEncoder/TEncSearch.h	/^  TComRdCost*     m_pcRdCost;$/;"	m	class:TEncSearch
m_pcRdCost	source/Lib/TLibEncoder/TEncSlice.h	/^  TComRdCost*             m_pcRdCost;                           \/\/\/< RD cost computation$/;"	m	class:TEncSlice
m_pcSAO	source/Lib/TLibDecoder/TDecGop.h	/^  TComSampleAdaptiveOffset*     m_pcSAO;$/;"	m	class:TDecGop
m_pcSAO	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncSampleAdaptiveOffset*  m_pcSAO;$/;"	m	class:TEncGOP
m_pcSPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComSPS*             m_pcSPS;$/;"	m	class:TComSlice
m_pcSbacCoder	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncSbac*               m_pcSbacCoder;$/;"	m	class:TEncGOP
m_pcSbacCoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncSbac*               m_pcSbacCoder;                        \/\/\/< SBAC encoder$/;"	m	class:TEncSlice
m_pcSbacDecoder	source/Lib/TLibDecoder/TDecGop.h	/^  TDecSbac*             m_pcSbacDecoder;$/;"	m	class:TDecGop
m_pcSeiColourRemappingInfoPrevious	source/App/TAppDecoder/TAppDecTop.h	/^  SEIColourRemappingInfo*         m_pcSeiColourRemappingInfoPrevious;$/;"	m	class:TAppDecTop
m_pcSlice	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  TComSlice*                      m_pcSlice;                      \/\/\/< slice header class$/;"	m	class:TAppMctsExtTop
m_pcSlice	source/Lib/TLibCommon/TComDataCU.h	/^  TComSlice*    m_pcSlice;                              \/\/\/< slice header pointer$/;"	m	class:TComDataCU
m_pcSliceDecoder	source/Lib/TLibDecoder/TDecGop.h	/^  TDecSlice*            m_pcSliceDecoder;$/;"	m	class:TDecGop
m_pcSliceEncoder	source/Lib/TLibEncoder/TEncCu.h	/^  TEncSlice*              m_pcSliceEncoder;$/;"	m	class:TEncCu
m_pcSliceEncoder	source/Lib/TLibEncoder/TEncGOP.h	/^  TEncSlice*              m_pcSliceEncoder;$/;"	m	class:TEncGOP
m_pcTComBitIf	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  TComBitIf*          m_pcTComBitIf;$/;"	m	class:TEncBinCABAC
m_pcTComBitstream	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^  TComInputBitstream* m_pcTComBitstream;$/;"	m	class:TDecBinCABAC
m_pcTDecBinIf	source/Lib/TLibDecoder/TDecSbac.h	/^  TDecBinIf*        m_pcTDecBinIf;$/;"	m	class:TDecSbac
m_pcTrCoeff	source/Lib/TLibCommon/TComDataCU.h	/^  TCoeff*       m_pcTrCoeff[MAX_NUM_COMPONENT];         \/\/\/< array of transform coefficient buffers (0->Y, 1->Cb, 2->Cr)$/;"	m	class:TComDataCU
m_pcTrQuant	source/Lib/TLibDecoder/TDecCu.h	/^  TComTrQuant*        m_pcTrQuant;$/;"	m	class:TDecCu
m_pcTrQuant	source/Lib/TLibEncoder/TEncCu.h	/^  TComTrQuant*            m_pcTrQuant;$/;"	m	class:TEncCu
m_pcTrQuant	source/Lib/TLibEncoder/TEncSearch.h	/^  TComTrQuant*    m_pcTrQuant;$/;"	m	class:TEncSearch
m_pcTrQuant	source/Lib/TLibEncoder/TEncSlice.h	/^  TComTrQuant*            m_pcTrQuant;                          \/\/\/< transform & quantization$/;"	m	class:TEncSlice
m_pcVPS	source/Lib/TLibCommon/TComSlice.h	/^  const TComVPS*             m_pcVPS;$/;"	m	class:TComSlice
m_pcmBitDepths	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_pcmBitDepths[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComSPS
m_pcmLog2MaxSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_pcmLog2MaxSize;                                 \/\/\/< log2 of maximum PCM block size$/;"	m	class:TAppEncCfg
m_pcmLog2MaxSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_pcmLog2MaxSize;$/;"	m	class:TComSPS
m_pcmLog2MaxSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_pcmLog2MaxSize;$/;"	m	class:TEncCfg
m_pePartSize	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        m_pePartSize;                           \/\/\/< array of partition sizes$/;"	m	class:TComDataCU
m_pePartSize	source/Lib/TLibCommon/TComPicSym.h	/^    SChar        * m_pePartSize;$/;"	m	struct:TComPicSym::DPBPerCtuData
m_pePredMode	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        m_pePredMode;                           \/\/\/< array of prediction modes$/;"	m	class:TComDataCU
m_pePredMode	source/Lib/TLibCommon/TComPicSym.h	/^    SChar        * m_pePredMode;$/;"	m	struct:TComPicSym::DPBPerCtuData
m_perfectReconstructionFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                           m_perfectReconstructionFlag;$/;"	m	class:SEIChromaResamplingFilterHint
m_persistentRiceAdaptationEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_persistentRiceAdaptationEnabledFlag;            \/\/\/< control flag for Golomb-Rice parameter adaptation over each slice$/;"	m	class:TAppEncCfg
m_persistentRiceAdaptationEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_persistentRiceAdaptationEnabledFlag;$/;"	m	class:TComSPSRExt
m_persistentRiceAdaptationEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_persistentRiceAdaptationEnabledFlag;$/;"	m	class:TEncCfg
m_phQP	source/Lib/TLibCommon/TComDataCU.h	/^  SChar*        m_phQP;                                 \/\/\/< array of QP values$/;"	m	class:TComDataCU
m_phQTTempCrossComponentPredictionAlpha	source/Lib/TLibEncoder/TEncSearch.h	/^  SChar*          m_phQTTempCrossComponentPredictionAlpha[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_piPicOrg	source/Lib/TLibCommon/TComPicYuv.h	/^  Pel*  m_piPicOrg[MAX_NUM_COMPONENT];              \/\/\/< m_apiPicBufY + m_iMarginLuma*getStride() + m_iMarginLuma$/;"	m	class:TComPicYuv
m_piROIOrigin	source/Lib/TLibCommon/TComPattern.h	/^  Pel*  m_piROIOrigin;$/;"	m	class:TComPattern
m_piRefIdx	source/Lib/TLibCommon/TComMotionInfo.h	/^  SChar*    m_piRefIdx;$/;"	m	class:TComCUMvField
m_piYuvExt	source/Lib/TLibCommon/TComPrediction.h	/^  Pel*      m_piYuvExt[MAX_NUM_COMPONENT][NUM_PRED_BUF];$/;"	m	class:TComPrediction
m_picActualBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_picActualBits;          \/\/ the whole picture, including header$/;"	m	class:TEncRCPic
m_picActualHeaderBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_picActualHeaderBits;    \/\/ only SH and potential APS$/;"	m	class:TEncRCPic
m_picDpbOutputDelay	source/Lib/TLibCommon/SEI.h	/^  UInt  m_picDpbOutputDelay;$/;"	m	class:SEIPictureTiming
m_picDpbOutputDuDelay	source/Lib/TLibCommon/SEI.h	/^  UInt  m_picDpbOutputDuDelay;$/;"	m	class:SEIPictureTiming
m_picHeight	source/Lib/TLibCommon/TComPicYuv.h	/^  Int   m_picHeight;                                \/\/\/< Height of picture in pixels$/;"	m	class:TComPicYuv
m_picHeight	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_picHeight;$/;"	m	class:TComSampleAdaptiveOffset
m_picHeight	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_picHeight;$/;"	m	class:TEncRCSeq
m_picHeightInLumaSamples	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_picHeightInLumaSamples;$/;"	m	class:TComSPS
m_picInitQPMinus26	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_picInitQPMinus26;$/;"	m	class:TComPPS
m_picLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_picLambda;$/;"	m	class:TEncRCPic
m_picLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_picLeft;$/;"	m	class:TEncRCGOP
m_picMSE	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_picMSE;$/;"	m	class:TEncRCPic
m_picOrderCntDelta	source/Lib/TLibCommon/SEI.h	/^  UInt m_picOrderCntDelta;$/;"	m	class:SEIProgressiveRefinementSegmentStart
m_picPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  TRCParameter*  m_picPara;$/;"	m	class:TEncRCSeq
m_picQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_picQP;                  \/\/ in integer form$/;"	m	class:TEncRCPic
m_picSAOEnabled	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Bool m_picSAOEnabled[MAX_NUM_COMPONENT];$/;"	m	class:TComSampleAdaptiveOffset
m_picSptDpbOutputDuDelay	source/Lib/TLibCommon/SEI.h	/^  Int m_picSptDpbOutputDuDelay;$/;"	m	class:SEIDecodingUnitInfo
m_picStruct	source/Lib/TLibCommon/SEI.h	/^  UInt  m_picStruct;$/;"	m	class:SEIPictureTiming
m_picSym	source/Lib/TLibCommon/TComPic.h	/^  TComPicSym            m_picSym;                 \/\/  Symbol$/;"	m	class:TComPic
m_picTargetBitInGOP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int* m_picTargetBitInGOP;$/;"	m	class:TEncRCGOP
m_picWidth	source/Lib/TLibCommon/TComPicYuv.h	/^  Int   m_picWidth;                                 \/\/\/< Width of picture in pixels$/;"	m	class:TComPicYuv
m_picWidth	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  Int m_picWidth;$/;"	m	class:TComSampleAdaptiveOffset
m_picWidth	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_picWidth;$/;"	m	class:TEncRCSeq
m_picWidthInLumaSamples	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_picWidthInLumaSamples;$/;"	m	class:TComSPS
m_picYuvPred	source/Lib/TLibEncoder/TEncSlice.h	/^  TComPicYuv              m_picYuvPred;                         \/\/\/< prediction picture buffer$/;"	m	class:TEncSlice
m_picYuvResi	source/Lib/TLibEncoder/TEncSlice.h	/^  TComPicYuv              m_picYuvResi;                         \/\/\/< residual picture buffer$/;"	m	class:TEncSlice
m_pictureCtuArray	source/Lib/TLibCommon/TComPicSym.h	/^  TComDataCU**  m_pictureCtuArray;        \/\/\/< array of CU data.$/;"	m	class:TComPicSym
m_pictureHash	source/Lib/TLibCommon/SEI.h	/^  TComPictureHash m_pictureHash;$/;"	m	class:SEIDecodedPictureHash
m_pictureTimingSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_pictureTimingSEIEnabled;$/;"	m	class:TAppEncCfg
m_pictureTimingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_pictureTimingSEIEnabled;$/;"	m	class:TEncCfg
m_pixelsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_pixelsLeft;$/;"	m	class:TEncRCPic
m_plTempCoeff	source/Lib/TLibCommon/TComTrQuant.h	/^  TCoeff* m_plTempCoeff;$/;"	m	class:TComTrQuant
m_poc	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_poc;$/;"	m	class:SEIFilmGrainSynthesizer
m_pocCRA	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_pocCRA;            \/\/\/< POC number of the latest CRA picture$/;"	m	class:TDecTop
m_pocCRA	source/Lib/TLibEncoder/TEncGOP.h	/^  Int                     m_pocCRA;$/;"	m	class:TEncGOP
m_pocLSBLT	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_pocLSBLT[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_pocLine	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^    std::string m_pocLine;$/;"	m	class:POCParseException
m_pocProportionalToTimingFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_pocProportionalToTimingFlag;                    \/\/\/< Indicates that the POC value is proportional to the output time w.r.t. first picture in CVS$/;"	m	class:TAppEncCfg
m_pocProportionalToTimingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_pocProportionalToTimingFlag;$/;"	m	class:TimingInfo
m_pocProportionalToTimingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_pocProportionalToTimingFlag;                    \/\/\/< Indicates that the POC value is proportional to the output time w.r.t. first picture in CVS$/;"	m	class:TEncCfg
m_pocRandomAccess	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_pocRandomAccess;   \/\/\/< POC number of the random access point (the first IDR or CRA picture)$/;"	m	class:TDecTop
m_postLut	source/Lib/TLibCommon/SEI.h	/^  std::vector<CRIlut> m_postLut[3];$/;"	m	class:SEIColourRemappingInfo
m_postLutNumValMinus1	source/Lib/TLibCommon/SEI.h	/^  Int                 m_postLutNumValMinus1[3];$/;"	m	class:SEIColourRemappingInfo
m_ppcBestCU	source/Lib/TLibEncoder/TEncCu.h	/^  TComDataCU**            m_ppcBestCU;      \/\/\/< Best CUs in each depth$/;"	m	class:TEncCu
m_ppcCU	source/Lib/TLibDecoder/TDecCu.h	/^  TComDataCU**        m_ppcCU;            \/\/\/< CU data array$/;"	m	class:TDecCu
m_ppcOrigYuv	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcOrigYuv;     \/\/\/< Original Yuv for each depth$/;"	m	class:TEncCu
m_ppcPredYuvBest	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcPredYuvBest; \/\/\/< Best Prediction Yuv for each depth$/;"	m	class:TEncCu
m_ppcPredYuvTemp	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcPredYuvTemp; \/\/\/< Temporary Prediction Yuv for each depth$/;"	m	class:TEncCu
m_ppcQTTempArlCoeff	source/Lib/TLibEncoder/TEncSearch.h	/^  TCoeff**        m_ppcQTTempArlCoeff[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_ppcQTTempCoeff	source/Lib/TLibEncoder/TEncSearch.h	/^  TCoeff**        m_ppcQTTempCoeff[MAX_NUM_COMPONENT \/* 0->Y, 1->Cb, 2->Cr*\/];$/;"	m	class:TEncSearch
m_ppcQTTempTUArlCoeff	source/Lib/TLibEncoder/TEncSearch.h	/^  TCoeff*         m_ppcQTTempTUArlCoeff[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_ppcRecoYuvBest	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcRecoYuvBest; \/\/\/< Best Reconstruction Yuv for each depth$/;"	m	class:TEncCu
m_ppcRecoYuvTemp	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcRecoYuvTemp; \/\/\/< Temporary Reconstruction Yuv for each depth$/;"	m	class:TEncCu
m_ppcResiYuvBest	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcResiYuvBest; \/\/\/< Best Residual Yuv for each depth$/;"	m	class:TEncCu
m_ppcResiYuvTemp	source/Lib/TLibEncoder/TEncCu.h	/^  TComYuv**               m_ppcResiYuvTemp; \/\/\/< Temporary Residual Yuv for each depth$/;"	m	class:TEncCu
m_ppcTempCU	source/Lib/TLibEncoder/TEncCu.h	/^  TComDataCU**            m_ppcTempCU;      \/\/\/< Temporary CUs in each depth$/;"	m	class:TEncCu
m_ppcYuvReco	source/Lib/TLibDecoder/TDecCu.h	/^  TComYuv**           m_ppcYuvReco;       \/\/\/< array of prediction & reconstruction buffer$/;"	m	class:TDecCu
m_ppcYuvResi	source/Lib/TLibDecoder/TDecCu.h	/^  TComYuv**           m_ppcYuvResi;       \/\/\/< array of residual buffer$/;"	m	class:TDecCu
m_pppcBinCoderCABAC	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncBinCABAC**         m_pppcBinCoderCABAC;$/;"	m	class:TEncSampleAdaptiveOffset
m_pppcBinCoderCABAC	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncBinCABACCounter**  m_pppcBinCoderCABAC;$/;"	m	class:TEncSampleAdaptiveOffset
m_pppcBinCoderCABAC	source/Lib/TLibEncoder/TEncTop.h	/^  TEncBinCABAC***         m_pppcBinCoderCABAC;            \/\/\/< temporal CABAC state storage for RD computation$/;"	m	class:TEncTop
m_pppcBinCoderCABAC	source/Lib/TLibEncoder/TEncTop.h	/^  TEncBinCABACCounter***  m_pppcBinCoderCABAC;            \/\/\/< temporal CABAC state storage for RD computation$/;"	m	class:TEncTop
m_pppcRDSbacCoder	source/Lib/TLibEncoder/TEncCu.h	/^  TEncSbac***             m_pppcRDSbacCoder;$/;"	m	class:TEncCu
m_pppcRDSbacCoder	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  TEncSbac**             m_pppcRDSbacCoder;$/;"	m	class:TEncSampleAdaptiveOffset
m_pppcRDSbacCoder	source/Lib/TLibEncoder/TEncSearch.h	/^  TEncSbac***     m_pppcRDSbacCoder;$/;"	m	class:TEncSearch
m_pppcRDSbacCoder	source/Lib/TLibEncoder/TEncSlice.h	/^  TEncSbac***             m_pppcRDSbacCoder;                    \/\/\/< storage for SBAC-based RD optimization$/;"	m	class:TEncSlice
m_pppcRDSbacCoder	source/Lib/TLibEncoder/TEncTop.h	/^  TEncSbac***             m_pppcRDSbacCoder;              \/\/\/< temporal storage for RD computation$/;"	m	class:TEncTop
m_pps	source/Lib/TLibCommon/TComPicSym.h	/^  TComPPS       m_pps;$/;"	m	class:TComPicSym
m_ppsDeblockingFilterDisabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_ppsDeblockingFilterDisabledFlag;$/;"	m	class:TComPPS
m_ppsMap	source/Lib/TLibCommon/TComSlice.h	/^  ParameterSetMap<TComPPS> m_ppsMap;$/;"	m	class:ParameterSetManager
m_ppsMap	source/Lib/TLibEncoder/TEncTop.h	/^  ParameterSetMap<TComPPS> m_ppsMap;                      \/\/\/< PPS. This is the base value. This is copied to TComPicSym$/;"	m	class:TEncTop
m_ppsNuhTemporalIdPlus1	source/Lib/TLibCommon/SEI.h	/^    std::vector<UInt> m_ppsNuhTemporalIdPlus1;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_ppsRangeExtension	source/Lib/TLibCommon/TComSlice.h	/^  TComPPSRExt      m_ppsRangeExtension;$/;"	m	class:TComPPS
m_ppsRbspData	source/Lib/TLibCommon/SEI.h	/^    std::vector< std::vector<uint8_t> > m_ppsRbspData;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_ppsRbspDataLength	source/Lib/TLibCommon/SEI.h	/^    std::vector<UInt> m_ppsRbspDataLength;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_preDBFstatData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAOStatData***         m_preDBFstatData;$/;"	m	class:TEncSampleAdaptiveOffset
m_preLut	source/Lib/TLibCommon/SEI.h	/^  std::vector<CRIlut> m_preLut[3];$/;"	m	class:SEIColourRemappingInfo
m_preLutNumValMinus1	source/Lib/TLibCommon/SEI.h	/^  Int                 m_preLutNumValMinus1[3];$/;"	m	class:SEIColourRemappingInfo
m_preferredTransferCharacteristics	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_preferredTransferCharacteristics;$/;"	m	class:TAppEncCfg
m_preferredTransferCharacteristics	source/Lib/TLibCommon/SEI.h	/^  UInt m_preferredTransferCharacteristics;$/;"	m	class:SEIAlternativeTransferCharacteristics
m_preferredTransferCharacteristics	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_preferredTransferCharacteristics;$/;"	m	class:TEncCfg
m_prefixSEINALUs	source/Lib/TLibDecoder/TDecTop.h	/^  std::list<InputNALUnit*> m_prefixSEINALUs; \/\/\/ Buffered up prefix SEI NAL Units.$/;"	m	class:TDecTop
m_prevPOC	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_prevPOC;$/;"	m	class:TDecTop
m_prevSliceSkipped	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_prevSliceSkipped;$/;"	m	class:TDecTop
m_prevTid0POC	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_prevTid0POC;$/;"	m	class:TDecTop
m_printFrameMSE	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_printFrameMSE;$/;"	m	class:TAppEncCfg
m_printFrameMSE	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_printFrameMSE;$/;"	m	class:TEncCfg
m_printHexPsnr	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_printHexPsnr;$/;"	m	class:TAppEncCfg
m_printHexPsnr	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_printHexPsnr;$/;"	m	class:TEncCfg
m_printMSEBasedSequencePSNR	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_printMSEBasedSequencePSNR;$/;"	m	class:TAppEncCfg
m_printMSEBasedSequencePSNR	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_printMSEBasedSequencePSNR;$/;"	m	class:TEncCfg
m_printMSSSIM	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_printMSSSIM;$/;"	m	class:TAppEncCfg
m_printMSSSIM	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_printMSSSIM;$/;"	m	class:TEncCfg
m_printSequenceMSE	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_printSequenceMSE;$/;"	m	class:TAppEncCfg
m_printSequenceMSE	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_printSequenceMSE;$/;"	m	class:TEncCfg
m_profile	source/App/TAppEncoder/TAppEncCfg.h	/^  Profile::Name m_profile;$/;"	m	class:TAppEncCfg
m_profile	source/Lib/TLibEncoder/TEncCfg.h	/^  Profile::Name m_profile;$/;"	m	class:TEncCfg
m_profileCompatibilityFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_profileCompatibilityFlag[32];$/;"	m	class:ProfileTierLevel
m_profileIdc	source/Lib/TLibCommon/TComSlice.h	/^  Profile::Name     m_profileIdc;$/;"	m	class:ProfileTierLevel
m_profileSpace	source/Lib/TLibCommon/TComSlice.h	/^  Int               m_profileSpace;$/;"	m	class:ProfileTierLevel
m_progressiveRefinementId	source/Lib/TLibCommon/SEI.h	/^  UInt m_progressiveRefinementId;$/;"	m	class:SEIProgressiveRefinementSegmentEnd
m_progressiveRefinementId	source/Lib/TLibCommon/SEI.h	/^  UInt m_progressiveRefinementId;$/;"	m	class:SEIProgressiveRefinementSegmentStart
m_progressiveSourceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool m_progressiveSourceFlag;$/;"	m	class:TAppEncCfg
m_progressiveSourceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool              m_progressiveSourceFlag;$/;"	m	class:ProfileTierLevel
m_progressiveSourceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool m_progressiveSourceFlag;$/;"	m	class:TEncCfg
m_projPictureHeight	source/Lib/TLibCommon/SEI.h	/^  Int                   m_projPictureHeight;$/;"	m	class:SEIRegionWisePacking
m_projPictureWidth	source/Lib/TLibCommon/SEI.h	/^  Int                   m_projPictureWidth;$/;"	m	class:SEIRegionWisePacking
m_projRegionHeight	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt>     m_projRegionHeight;$/;"	m	class:SEIRegionWisePacking
m_projRegionLeft	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt>     m_projRegionLeft;$/;"	m	class:SEIRegionWisePacking
m_projRegionWidth	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt>     m_projRegionWidth;$/;"	m	class:SEIRegionWisePacking
m_puhCbf	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhCbf[MAX_NUM_COMPONENT];            \/\/\/< array of coded block flags (CBF)$/;"	m	class:TComDataCU
m_puhDepth	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhDepth;                             \/\/\/< array of depths$/;"	m	class:TComDataCU
m_puhHeight	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhHeight;                            \/\/\/< array of heights$/;"	m	class:TComDataCU
m_puhInterDir	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhInterDir;                          \/\/\/< array of inter directions$/;"	m	class:TComDataCU
m_puhIntraDir	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhIntraDir[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComDataCU
m_puhMergeIndex	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhMergeIndex;                        \/\/\/< array of merge candidate indices$/;"	m	class:TComDataCU
m_puhQTTempCbf	source/Lib/TLibEncoder/TEncSearch.h	/^  UChar*          m_puhQTTempCbf[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_puhQTTempTrIdx	source/Lib/TLibEncoder/TEncSearch.h	/^  UChar*          m_puhQTTempTrIdx;$/;"	m	class:TEncSearch
m_puhQTTempTransformSkipFlag	source/Lib/TLibEncoder/TEncSearch.h	/^  UChar*          m_puhQTTempTransformSkipFlag[MAX_NUM_COMPONENT];$/;"	m	class:TEncSearch
m_puhTrIdx	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhTrIdx;                             \/\/\/< array of transform indices$/;"	m	class:TComDataCU
m_puhTransformSkip	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhTransformSkip[MAX_NUM_COMPONENT];  \/\/\/< array of transform skipping flags$/;"	m	class:TComDataCU
m_puhWidth	source/Lib/TLibCommon/TComDataCU.h	/^  UChar*        m_puhWidth;                             \/\/\/< array of widths$/;"	m	class:TComDataCU
m_puiTileIdxMap	source/Lib/TLibCommon/TComPicSym.h	/^  UInt*         m_puiTileIdxMap;       \/\/\/< the map of the tile index relative to CTU raster scan address$/;"	m	class:TComPicSym
m_qpBDOffset	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_qpBDOffset[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComSPS
m_qpDelta	source/Lib/TLibCommon/TComTrQuant.h	/^  Int     m_qpDelta[MAX_QP+1];$/;"	m	class:TComTrQuant
m_qpIncrementAtSourceFrame	source/App/TAppEncoder/TAppEncCfg.h	/^  OptionalValue<UInt> m_qpIncrementAtSourceFrame;             \/\/\/< Optional source frame number at which all subsequent frames are to use an increased internal QP.$/;"	m	class:TAppEncCfg
m_quantCoef	source/Lib/TLibCommon/TComTrQuant.h	/^  Int      *m_quantCoef            [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM][SCALING_LIST_REM_NUM]; \/\/\/< array of quantization matrix coefficient 4x4$/;"	m	class:TComTrQuant
m_quincunxSamplingFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_quincunxSamplingFlag;$/;"	m	class:SEIFramePacking
m_rapCpbParamsPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_rapCpbParamsPresentFlag;$/;"	m	class:SEIBufferingPeriod
m_rapIdx	source/Lib/TLibEncoder/SEIEncoder.h	/^  UInt m_rapIdx;$/;"	m	class:SEIEncoder
m_rdPenalty	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_rdPenalty;                                      \/\/\/< RD-penalty for 32x32 TU for intra in non-intra slices (0: no RD-penalty, 1: RD-penalty, 2: maximum RD-penalty)$/;"	m	class:TAppEncCfg
m_rdPenalty	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_rdPenalty;$/;"	m	class:TEncCfg
m_rdpcmEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_rdpcmEnabledFlag[NUMBER_OF_RDPCM_SIGNALLING_MODES];\/\/\/< control flags for residual DPCM$/;"	m	class:TAppEncCfg
m_rdpcmEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_rdpcmEnabledFlag[NUMBER_OF_RDPCM_SIGNALLING_MODES];$/;"	m	class:TComSPSRExt
m_rdpcmEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_rdpcmEnabledFlag[NUMBER_OF_RDPCM_SIGNALLING_MODES];$/;"	m	class:TEncCfg
m_recalculateQPAccordingToLambda	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_recalculateQPAccordingToLambda;                 \/\/\/< recalculate QP value according to the lambda value$/;"	m	class:TAppEncCfg
m_recalculateQPAccordingToLambda	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_recalculateQPAccordingToLambda;                 \/\/\/< recalculate QP value according to the lambda value$/;"	m	class:TEncCfg
m_receivedSettingsOnce	source/Lib/TLibCommon/SEI.h	/^    Bool      m_receivedSettingsOnce; \/\/ used for decoder conformance checking. Other confidence flags must be unchanged once this flag is set.$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_reconBasedCrossCPredictionEstimate	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_reconBasedCrossCPredictionEstimate;             \/\/\/< causes the alpha calculation in encoder search to be based on the decoded residual rather than the pre-transform encoder-side residual$/;"	m	class:TAppEncCfg
m_reconBasedCrossCPredictionEstimate	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_reconBasedCrossCPredictionEstimate;$/;"	m	class:TEncCfg
m_reconFileName	source/App/TAppDecoder/TAppDecCfg.h	/^  std::string   m_reconFileName;                        \/\/\/< output reconstruction file name$/;"	m	class:TAppDecCfg
m_reconFileName	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_reconFileName;                                \/\/\/< output reconstruction file$/;"	m	class:TAppEncCfg
m_recoveryPocCnt	source/Lib/TLibCommon/SEI.h	/^  Int  m_recoveryPocCnt;$/;"	m	class:SEIRecoveryPoint
m_recoveryPointSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_recoveryPointSEIEnabled;$/;"	m	class:TAppEncCfg
m_recoveryPointSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_recoveryPointSEIEnabled;$/;"	m	class:TEncCfg
m_refIdc	source/Lib/TLibCommon/TComSlice.h	/^  Int  m_refIdc[MAX_NUM_REF_PICS+1];$/;"	m	class:TComReferencePictureSet
m_refIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_refIdc[MAX_NUM_REF_PICS+1];$/;"	m	struct:GOPEntry
m_refMatrixId	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_refMatrixId                   [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< RefMatrixID$/;"	m	class:TComScalingList
m_refPic	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool m_refPic;$/;"	m	struct:GOPEntry
m_refPicListModificationFlagL0	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_refPicListModificationFlagL0;$/;"	m	class:TComRefPicListModification
m_refPicListModificationFlagL1	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_refPicListModificationFlagL1;$/;"	m	class:TComRefPicListModification
m_refScreenLuminanceWhite	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_refScreenLuminanceWhite;$/;"	m	class:TAppEncCfg
m_refScreenLuminanceWhite	source/Lib/TLibCommon/SEI.h	/^  Int    m_refScreenLuminanceWhite;$/;"	m	class:SEIToneMappingInfo
m_refScreenLuminanceWhite	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_refScreenLuminanceWhite;$/;"	m	class:TEncCfg
m_referencePics	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_referencePics[MAX_NUM_REF_PICS];$/;"	m	struct:GOPEntry
m_referencePictureSets	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<TComReferencePictureSet> m_referencePictureSets;$/;"	m	class:TComRPSList
m_regionId	source/Lib/TLibCommon/TypeDef.h	/^  UInt m_regionId;$/;"	m	class:RNSEIWindow
m_regionalNestingSEIFileRoot	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_regionalNestingSEIFileRoot;$/;"	m	class:TAppEncCfg
m_regionalNestingSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  std::string m_regionalNestingSEIFileRoot;  \/\/ Regional nesting SEI - initialized from external file$/;"	m	class:TEncCfg
m_regions	source/Lib/TLibCommon/SEI.h	/^  RNSEIWindowVec m_regions; $/;"	m	class:RegionalSEI
m_regions	source/Lib/TLibCommon/SEI.h	/^  RNSEIWindowVec m_regions;$/;"	m	class:SEIRegionalNesting
m_remainingCostIntra	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_remainingCostIntra;$/;"	m	class:TEncRCPic
m_resetEncoderStateAfterIRAP	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_resetEncoderStateAfterIRAP;                     \/\/\/< When true, encoder state will be reset following an IRAP.$/;"	m	class:TAppEncCfg
m_resetEncoderStateAfterIRAP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_resetEncoderStateAfterIRAP;$/;"	m	class:TEncCfg
m_respectDefDispWindow	source/App/TAppDecoder/TAppDecCfg.h	/^  Int           m_respectDefDispWindow;               \/\/\/< Only output content inside the default display window$/;"	m	class:TAppDecCfg
m_restrictedRefPicListsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_restrictedRefPicListsFlag;$/;"	m	class:TComVUI
m_rightEdgePosInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      m_rightEdgePosInCtus;$/;"	m	class:TComTile
m_rnId	source/Lib/TLibCommon/SEI.h	/^  UInt m_rnId;$/;"	m	class:SEIRegionalNesting
m_rnSeiMessages	source/Lib/TLibCommon/SEI.h	/^  std::vector< SEIListOfIndices > m_rnSeiMessages;$/;"	m	class:SEIRegionalNesting
m_roiHeight	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_roiHeight;$/;"	m	class:TComPattern
m_roiPosX	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_roiPosX;$/;"	m	class:TComPattern
m_roiPosY	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_roiPosY;$/;"	m	class:TComPattern
m_roiWidth	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_roiWidth;$/;"	m	class:TComPattern
m_rpsIdx	source/Lib/TLibCommon/TComSlice.h	/^  Int                        m_rpsIdx;               \/\/< index of used RPS in the SPS or -1 for local RPS in the slice header$/;"	m	class:TComSlice
m_runningTotal	source/Lib/TLibEncoder/TEncAnalyze.h	/^  ResultData m_runningTotal;$/;"	m	class:TEncAnalyze
m_rwpBottomGuardBandHeight	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpBottomGuardBandHeight;$/;"	m	class:SEIRegionWisePacking
m_rwpCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_rwpCancelFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpGuardBandFlag	source/Lib/TLibCommon/SEI.h	/^  std::vector<Bool>     m_rwpGuardBandFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpGuardBandNotUsedForPredFlag	source/Lib/TLibCommon/SEI.h	/^  std::vector<Bool>     m_rwpGuardBandNotUsedForPredFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpGuardBandType	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpGuardBandType;$/;"	m	class:SEIRegionWisePacking
m_rwpLeftGuardBandWidth	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpLeftGuardBandWidth;$/;"	m	class:SEIRegionWisePacking
m_rwpPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_rwpPersistenceFlag;$/;"	m	class:SEIRegionWisePacking
m_rwpProjRegionTop	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt>     m_rwpProjRegionTop;$/;"	m	class:SEIRegionWisePacking
m_rwpRightGuardBandWidth	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpRightGuardBandWidth;$/;"	m	class:SEIRegionWisePacking
m_rwpSEIConstituentPictureMatchingFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_rwpSEIConstituentPictureMatchingFlag;$/;"	m	class:TAppEncCfg
m_rwpSEIConstituentPictureMatchingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIConstituentPictureMatchingFlag;$/;"	m	class:TEncCfg
m_rwpSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_rwpSEIEnabled;$/;"	m	class:TAppEncCfg
m_rwpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIEnabled;$/;"	m	class:TEncCfg
m_rwpSEINumPackedRegions	source/App/TAppEncoder/TAppEncCfg.h	/^  Int                   m_rwpSEINumPackedRegions;$/;"	m	class:TAppEncCfg
m_rwpSEINumPackedRegions	source/Lib/TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEINumPackedRegions;$/;"	m	class:TEncCfg
m_rwpSEIPackedPictureHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  Int                   m_rwpSEIPackedPictureHeight;$/;"	m	class:TAppEncCfg
m_rwpSEIPackedPictureHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIPackedPictureHeight;$/;"	m	class:TEncCfg
m_rwpSEIPackedPictureWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int                   m_rwpSEIPackedPictureWidth;$/;"	m	class:TAppEncCfg
m_rwpSEIPackedPictureWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIPackedPictureWidth;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionHeight;$/;"	m	class:TAppEncCfg
m_rwpSEIPackedRegionHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionHeight;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionLeft	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionLeft;$/;"	m	class:TAppEncCfg
m_rwpSEIPackedRegionLeft	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionLeft;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionTop	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionTop;$/;"	m	class:TAppEncCfg
m_rwpSEIPackedRegionTop	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionTop;$/;"	m	class:TEncCfg
m_rwpSEIPackedRegionWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionWidth;$/;"	m	class:TAppEncCfg
m_rwpSEIPackedRegionWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UShort>   m_rwpSEIPackedRegionWidth;$/;"	m	class:TEncCfg
m_rwpSEIProjPictureHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  Int                   m_rwpSEIProjPictureHeight;$/;"	m	class:TAppEncCfg
m_rwpSEIProjPictureHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIProjPictureHeight;$/;"	m	class:TEncCfg
m_rwpSEIProjPictureWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int                   m_rwpSEIProjPictureWidth;$/;"	m	class:TAppEncCfg
m_rwpSEIProjPictureWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int                   m_rwpSEIProjPictureWidth;$/;"	m	class:TEncCfg
m_rwpSEIProjRegionHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionHeight;$/;"	m	class:TAppEncCfg
m_rwpSEIProjRegionHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionHeight;$/;"	m	class:TEncCfg
m_rwpSEIProjRegionLeft	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionLeft;$/;"	m	class:TAppEncCfg
m_rwpSEIProjRegionLeft	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionLeft;$/;"	m	class:TEncCfg
m_rwpSEIProjRegionWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionWidth;$/;"	m	class:TAppEncCfg
m_rwpSEIProjRegionWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIProjRegionWidth;$/;"	m	class:TEncCfg
m_rwpSEIRwpBottomGuardBandHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpBottomGuardBandHeight;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpBottomGuardBandHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpBottomGuardBandHeight;$/;"	m	class:TEncCfg
m_rwpSEIRwpCancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_rwpSEIRwpCancelFlag;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIRwpCancelFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpGuardBandFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Bool>     m_rwpSEIRwpGuardBandFlag;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpGuardBandFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Bool>     m_rwpSEIRwpGuardBandFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpGuardBandNotUsedForPredFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Bool>     m_rwpSEIRwpGuardBandNotUsedForPredFlag;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpGuardBandNotUsedForPredFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Bool>     m_rwpSEIRwpGuardBandNotUsedForPredFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpGuardBandType	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpGuardBandType;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpGuardBandType	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpGuardBandType;$/;"	m	class:TEncCfg
m_rwpSEIRwpLeftGuardBandWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpLeftGuardBandWidth;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpLeftGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpLeftGuardBandWidth;$/;"	m	class:TEncCfg
m_rwpSEIRwpPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool                  m_rwpSEIRwpPersistenceFlag;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                  m_rwpSEIRwpPersistenceFlag;$/;"	m	class:TEncCfg
m_rwpSEIRwpRightGuardBandWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpRightGuardBandWidth;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpRightGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpRightGuardBandWidth;$/;"	m	class:TEncCfg
m_rwpSEIRwpSEIProjRegionTop	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt>     m_rwpSEIRwpSEIProjRegionTop;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpSEIProjRegionTop	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt>     m_rwpSEIRwpSEIProjRegionTop;$/;"	m	class:TEncCfg
m_rwpSEIRwpTopGuardBandHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpTopGuardBandHeight;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpTopGuardBandHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpTopGuardBandHeight;$/;"	m	class:TEncCfg
m_rwpSEIRwpTransformType	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpTransformType;$/;"	m	class:TAppEncCfg
m_rwpSEIRwpTransformType	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UChar>    m_rwpSEIRwpTransformType;$/;"	m	class:TEncCfg
m_rwpTopGuardBandHeight	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpTopGuardBandHeight;$/;"	m	class:SEIRegionWisePacking
m_rwpTransformType	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar>    m_rwpTransformType;$/;"	m	class:SEIRegionWisePacking
m_sHelp	source/Lib/TLibCommon/Debug.h	/^  std::string m_sHelp;$/;"	m	class:EnvVar
m_sName	source/Lib/TLibCommon/Debug.h	/^  std::string m_sName;$/;"	m	class:EnvVar
m_sVal	source/Lib/TLibCommon/Debug.h	/^  std::string m_sVal;$/;"	m	class:EnvVar
m_saoBlkParams	source/Lib/TLibCommon/TComPicSym.h	/^  SAOBlkParam  *m_saoBlkParams;$/;"	m	class:TComPicSym
m_saoCtuBoundary	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_saoCtuBoundary;                                 \/\/\/< SAO parameter estimation using non-deblocked pixels for CTU bottom and right boundary areas$/;"	m	class:TAppEncCfg
m_saoCtuBoundary	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_saoCtuBoundary;$/;"	m	class:TEncCfg
m_saoDisabledRate	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Double                 m_saoDisabledRate[MAX_NUM_COMPONENT][MAX_TLAYER];$/;"	m	class:TEncSampleAdaptiveOffset
m_saoEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_saoEnabledFlag[MAX_NUM_CHANNEL_TYPE];$/;"	m	class:TComSlice
m_saoEncodingRate	source/App/TAppEncoder/TAppEncCfg.h	/^  Double    m_saoEncodingRate;                                \/\/\/< When >0 SAO early picture termination is enabled for luma and chroma$/;"	m	class:TAppEncCfg
m_saoEncodingRate	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_saoEncodingRate;       \/\/ When non-0 SAO early picture termination is enabled for luma and chroma$/;"	m	class:TEncCfg
m_saoEncodingRateChroma	source/App/TAppEncoder/TAppEncCfg.h	/^  Double    m_saoEncodingRateChroma;                          \/\/\/< The SAO early picture termination rate to use for chroma (when m_SaoEncodingRate is >0). If <=0, use results for luma.$/;"	m	class:TAppEncCfg
m_saoEncodingRateChroma	source/Lib/TLibEncoder/TEncCfg.h	/^  Double    m_saoEncodingRateChroma; \/\/ The SAO early picture termination rate to use for chroma (when m_SaoEncodingRate is >0). If <=0, use results for luma.$/;"	m	class:TEncCfg
m_sarHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sarHeight;                                      \/\/\/< vertical size of the sample aspect ratio$/;"	m	class:TAppEncCfg
m_sarHeight	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_sarHeight;$/;"	m	class:TComVUI
m_sarHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sarHeight;                                      \/\/\/< vertical size of the sample aspect ratio$/;"	m	class:TEncCfg
m_sarWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sarWidth;                                       \/\/\/< horizontal size of the sample aspect ratio$/;"	m	class:TAppEncCfg
m_sarWidth	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_sarWidth;$/;"	m	class:TComVUI
m_sarWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sarWidth;                                       \/\/\/< horizontal size of the sample aspect ratio$/;"	m	class:TEncCfg
m_scalableNestingSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_scalableNestingSEIEnabled;$/;"	m	class:TAppEncCfg
m_scalableNestingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_scalableNestingSEIEnabled;$/;"	m	class:TEncCfg
m_scalingList	source/Lib/TLibCommon/TComSlice.h	/^  TComScalingList  m_scalingList;                       \/\/!< ScalingList class$/;"	m	class:TComPPS
m_scalingList	source/Lib/TLibCommon/TComSlice.h	/^  TComScalingList  m_scalingList;$/;"	m	class:TComSPS
m_scalingListCoef	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<Int> m_scalingListCoef               [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< quantization matrix$/;"	m	class:TComScalingList
m_scalingListDC	source/Lib/TLibCommon/TComSlice.h	/^  Int              m_scalingListDC                 [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< the DC value of the matrix coefficient for 16x16$/;"	m	class:TComScalingList
m_scalingListEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_scalingListEnabledFlag;$/;"	m	class:TComSPS
m_scalingListEnabledFlag	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_scalingListEnabledFlag;$/;"	m	class:TComTrQuant
m_scalingListFileName	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_scalingListFileName;                          \/\/\/< quantization matrix file name$/;"	m	class:TAppEncCfg
m_scalingListFileName	source/Lib/TLibEncoder/TEncCfg.h	/^  std::string m_scalingListFileName;              \/\/\/< quantization matrix file name$/;"	m	class:TEncCfg
m_scalingListPredModeFlagIsDPCM	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_scalingListPredModeFlagIsDPCM [SCALING_LIST_SIZE_NUM][SCALING_LIST_NUM]; \/\/!< reference list index$/;"	m	class:TComScalingList
m_scalingListPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_scalingListPresentFlag;$/;"	m	class:TComPPS
m_scalingListPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_scalingListPresentFlag;$/;"	m	class:TComSPS
m_scanType	source/Lib/TLibCommon/TComRom.cpp	/^  const COEFF_SCAN_TYPE m_scanType;$/;"	m	class:ScanGenerator	file:
m_sceneId	source/Lib/TLibCommon/SEI.h	/^  UInt m_sceneId;$/;"	m	class:SEISceneInfo
m_sceneTransitionType	source/Lib/TLibCommon/SEI.h	/^  UInt m_sceneTransitionType;$/;"	m	class:SEISceneInfo
m_secondSceneId	source/Lib/TLibCommon/SEI.h	/^  UInt m_secondSceneId;$/;"	m	class:SEISceneInfo
m_segmentedRectFramePackingSEICancel	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEICancel;$/;"	m	class:TAppEncCfg
m_segmentedRectFramePackingSEICancel	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEICancel;$/;"	m	class:TEncCfg
m_segmentedRectFramePackingSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEIEnabled;$/;"	m	class:TAppEncCfg
m_segmentedRectFramePackingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEIEnabled;$/;"	m	class:TEncCfg
m_segmentedRectFramePackingSEIPersistence	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEIPersistence;$/;"	m	class:TAppEncCfg
m_segmentedRectFramePackingSEIPersistence	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_segmentedRectFramePackingSEIPersistence;$/;"	m	class:TEncCfg
m_segmentedRectFramePackingSEIType	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_segmentedRectFramePackingSEIType;$/;"	m	class:TAppEncCfg
m_segmentedRectFramePackingSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_segmentedRectFramePackingSEIType;$/;"	m	class:TEncCfg
m_seiEncoder	source/Lib/TLibEncoder/TEncGOP.h	/^  SEIEncoder              m_seiEncoder;$/;"	m	class:TEncGOP
m_seiMessage	source/Lib/TLibCommon/SEI.h	/^    SEI *m_seiMessage;$/;"	m	struct:SEIRegionalNesting::SEIListOfIndices
m_seiMessage	source/Lib/TLibCommon/SEI.h	/^  SEI *m_seiMessage;$/;"	m	class:RegionalSEI
m_seiMessageFileStream	source/App/TAppDecoder/TAppDecTop.h	/^  std::ofstream                   m_seiMessageFileStream;         \/\/\/< Used for outputing SEI messages.$/;"	m	class:TAppDecTop
m_seiReader	source/Lib/TLibDecoder/TDecTop.h	/^  SEIReader               m_seiReader;$/;"	m	class:TDecTop
m_seiWriter	source/Lib/TLibEncoder/TEncGOP.h	/^  SEIWriter               m_seiWriter;$/;"	m	class:TEncGOP
m_selfContainedCvsFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_selfContainedCvsFlag;$/;"	m	class:SEIActiveParameterSets
m_separateColourDescriptionPresentFlag	source/Lib/TLibCommon/SEI.h	/^  Bool      m_separateColourDescriptionPresentFlag;$/;"	m	class:SEIFilmGrainCharacteristics
m_seqTargetBpp	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_seqTargetBpp;$/;"	m	class:TEncRCSeq
m_sigmoidMidpoint	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sigmoidMidpoint;$/;"	m	class:TAppEncCfg
m_sigmoidMidpoint	source/Lib/TLibCommon/SEI.h	/^  Int    m_sigmoidMidpoint;$/;"	m	class:SEIToneMappingInfo
m_sigmoidMidpoint	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sigmoidMidpoint;$/;"	m	class:TEncCfg
m_sigmoidWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sigmoidWidth;$/;"	m	class:TAppEncCfg
m_sigmoidWidth	source/Lib/TLibCommon/SEI.h	/^  Int    m_sigmoidWidth;$/;"	m	class:SEIToneMappingInfo
m_sigmoidWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sigmoidWidth;$/;"	m	class:TEncCfg
m_signDataHidingEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_signDataHidingEnabledFlag;$/;"	m	class:TAppEncCfg
m_signDataHidingEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_signDataHidingEnabledFlag;$/;"	m	class:TComPPS
m_signLineBuf1	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  SChar* m_signLineBuf1;$/;"	m	class:TComSampleAdaptiveOffset
m_signLineBuf2	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  SChar* m_signLineBuf2;$/;"	m	class:TComSampleAdaptiveOffset
m_siiEnabled	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_siiEnabled;$/;"	m	class:SEIShutterIntervalInfo
m_siiFixedSIwithinCLVS	source/Lib/TLibCommon/SEI.h	/^  Bool                  m_siiFixedSIwithinCLVS;$/;"	m	class:SEIShutterIntervalInfo
m_siiMaxSubLayersMinus1	source/Lib/TLibCommon/SEI.h	/^  UInt                  m_siiMaxSubLayersMinus1;$/;"	m	class:SEIShutterIntervalInfo
m_siiNumUnitsInShutterInterval	source/Lib/TLibCommon/SEI.h	/^  UInt                  m_siiNumUnitsInShutterInterval;$/;"	m	class:SEIShutterIntervalInfo
m_siiSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_siiSEIEnabled;$/;"	m	class:TAppEncCfg
m_siiSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool                    m_siiSEIEnabled;$/;"	m	class:TEncCfg
m_siiSEINumUnitsInShutterInterval	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_siiSEINumUnitsInShutterInterval;$/;"	m	class:TAppEncCfg
m_siiSEINumUnitsInShutterInterval	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt                    m_siiSEINumUnitsInShutterInterval;$/;"	m	class:TEncCfg
m_siiSEISubLayerNumUnitsInSI	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<UInt>     m_siiSEISubLayerNumUnitsInSI;$/;"	m	class:TAppEncCfg
m_siiSEISubLayerNumUnitsInSI	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<UInt>       m_siiSEISubLayerNumUnitsInSI;$/;"	m	class:TEncCfg
m_siiSEITimeScale	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_siiSEITimeScale;$/;"	m	class:TAppEncCfg
m_siiSEITimeScale	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt                    m_siiSEITimeScale;$/;"	m	class:TEncCfg
m_siiSubLayerNumUnitsInSI	source/Lib/TLibCommon/SEI.h	/^  std::vector<UInt>     m_siiSubLayerNumUnitsInSI;$/;"	m	class:SEIShutterIntervalInfo
m_siiTimeScale	source/Lib/TLibCommon/SEI.h	/^  UInt                  m_siiTimeScale;$/;"	m	class:SEIShutterIntervalInfo
m_sizeX	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  const UInt    m_sizeX;        \/\/\/< X size of 3D buffer$/;"	m	class:ContextModel3DBuffer
m_sizeXY	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  const UInt    m_sizeXY;       \/\/\/< X times Y size of 3D buffer$/;"	m	class:ContextModel3DBuffer
m_sizeXYZ	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  const UInt    m_sizeXYZ;      \/\/\/< total size of 3D buffer$/;"	m	class:ContextModel3DBuffer
m_skipFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Bool*         m_skipFlag;                             \/\/\/< array of skip flags$/;"	m	class:TComDataCU
m_skipLinesB	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int                    m_skipLinesB[MAX_NUM_COMPONENT][NUM_SAO_NEW_TYPES];$/;"	m	class:TEncSampleAdaptiveOffset
m_skipLinesR	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Int                    m_skipLinesR[MAX_NUM_COMPONENT][NUM_SAO_NEW_TYPES];$/;"	m	class:TEncSampleAdaptiveOffset
m_skipRatio	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_skipRatio;$/;"	m	struct:TRCParameter
m_skippedPOC	source/Lib/TLibDecoder/TDecTop.h	/^  Int                     m_skippedPOC;$/;"	m	class:TDecTop
m_sliceArgument	source/App/TAppEncoder/TAppEncCfg.h	/^  Int             m_sliceArgument;                            \/\/\/< argument according to selected slice mode$/;"	m	class:TAppEncCfg
m_sliceArgument	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceArgument;$/;"	m	class:TComSlice
m_sliceArgument	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sliceArgument;$/;"	m	class:TEncCfg
m_sliceBits	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceBits;$/;"	m	class:TComSlice
m_sliceChromaQpOffsetIntraOrPeriodic	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sliceChromaQpOffsetIntraOrPeriodic[2\/*Cb,Cr*\/]; \/\/\/< Chroma Cb QP Offset at slice level for I slice or for periodic inter slices as defined by SliceChromaQPOffsetPeriodicity. Replaces offset in the GOP table.$/;"	m	class:TAppEncCfg
m_sliceChromaQpOffsetIntraOrPeriodic	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sliceChromaQpOffsetIntraOrPeriodic[2\/*Cb,Cr*\/]; \/\/\/< Chroma Cb QP Offset at slice level for I slice or for periodic inter slices as defined by SliceChromaQPOffsetPeriodicity. Replaces offset in the GOP table.$/;"	m	class:TEncCfg
m_sliceChromaQpOffsetPeriodicity	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_sliceChromaQpOffsetPeriodicity;                 \/\/\/< Used in conjunction with Slice Cb\/Cr QpOffsetIntraOrPeriodic. Use 0 (default) to disable periodic nature.$/;"	m	class:TAppEncCfg
m_sliceChromaQpOffsetPeriodicity	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_sliceChromaQpOffsetPeriodicity;                 \/\/\/< Used in conjunction with Slice Cb\/Cr QpOffsetIntraOrPeriodic. Use 0 (default) to disable periodic nature.$/;"	m	class:TEncCfg
m_sliceCurEndCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceCurEndCtuTsAddr;$/;"	m	class:TComSlice
m_sliceCurStartCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceCurStartCtuTsAddr;$/;"	m	class:TComSlice
m_sliceHeaderExtensionPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_sliceHeaderExtensionPresentFlag;$/;"	m	class:TComPPS
m_sliceIdx	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceIdx;$/;"	m	class:TComSlice
m_sliceMode	source/App/TAppEncoder/TAppEncCfg.h	/^  SliceConstraint m_sliceMode;$/;"	m	class:TAppEncCfg
m_sliceMode	source/Lib/TLibCommon/TComSlice.h	/^  SliceConstraint            m_sliceMode;$/;"	m	class:TComSlice
m_sliceMode	source/Lib/TLibEncoder/TEncCfg.h	/^  SliceConstraint m_sliceMode;$/;"	m	class:TEncCfg
m_sliceNsamples	source/Lib/TLibCommon/TComTrQuant.h	/^  Int     m_sliceNsamples[LEVEL_RANGE+1];$/;"	m	class:TComTrQuant
m_sliceReorderingEnabledFlag	source/Lib/TLibCommon/SEI.h	/^    Bool m_sliceReorderingEnabledFlag;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_sliceSegmentArgument	source/App/TAppEncoder/TAppEncCfg.h	/^  Int             m_sliceSegmentArgument;                     \/\/\/< argument according to selected slice segment mode$/;"	m	class:TAppEncCfg
m_sliceSegmentArgument	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentArgument;$/;"	m	class:TComSlice
m_sliceSegmentArgument	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sliceSegmentArgument;$/;"	m	class:TEncCfg
m_sliceSegmentBits	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentBits;$/;"	m	class:TComSlice
m_sliceSegmentCurEndCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentCurEndCtuTsAddr;$/;"	m	class:TComSlice
m_sliceSegmentCurStartCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_sliceSegmentCurStartCtuTsAddr;$/;"	m	class:TComSlice
m_sliceSegmentMode	source/App/TAppEncoder/TAppEncCfg.h	/^  SliceConstraint m_sliceSegmentMode;$/;"	m	class:TAppEncCfg
m_sliceSegmentMode	source/Lib/TLibCommon/TComSlice.h	/^  SliceConstraint            m_sliceSegmentMode;$/;"	m	class:TComSlice
m_sliceSegmentMode	source/Lib/TLibEncoder/TEncCfg.h	/^  SliceConstraint m_sliceSegmentMode;$/;"	m	class:TEncCfg
m_sliceSumC	source/Lib/TLibCommon/TComTrQuant.h	/^  Double  m_sliceSumC[LEVEL_RANGE+1] ;$/;"	m	class:TComTrQuant
m_sliceType	source/Lib/TLibEncoder/TEncCfg.h	/^  SChar m_sliceType;$/;"	m	struct:GOPEntry
m_snapshotId	source/Lib/TLibCommon/SEI.h	/^  UInt m_snapshotId;$/;"	m	class:SEIPictureSnapshot
m_snrInternalColourSpace	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_snrInternalColourSpace;                       \/\/\/< if true, then no colour space conversion is applied for snr calculation, otherwise inverse of input is applied.$/;"	m	class:TAppEncCfg
m_sopDescPocDelta	source/Lib/TLibCommon/SEI.h	/^  Int m_sopDescPocDelta[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopDescStRpsIdx	source/Lib/TLibCommon/SEI.h	/^  UInt m_sopDescStRpsIdx[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopDescTemporalId	source/Lib/TLibCommon/SEI.h	/^  UInt m_sopDescTemporalId[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopDescVclNaluType	source/Lib/TLibCommon/SEI.h	/^  UInt m_sopDescVclNaluType[MAX_NUM_PICS_IN_SOP];$/;"	m	class:SEISOPDescription
m_sopSeqParameterSetId	source/Lib/TLibCommon/SEI.h	/^  UInt m_sopSeqParameterSetId;$/;"	m	class:SEISOPDescription
m_sourceHeight	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_sourceHeight;$/;"	m	class:TEncTemporalFilter
m_sourceScanType	source/Lib/TLibCommon/SEI.h	/^  UInt  m_sourceScanType;$/;"	m	class:SEIPictureTiming
m_sourceWidth	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int m_sourceWidth;$/;"	m	class:TEncTemporalFilter
m_spatialFlippingFlag	source/Lib/TLibCommon/SEI.h	/^  Bool m_spatialFlippingFlag;$/;"	m	class:SEIFramePacking
m_sphereRotationCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_sphereRotationCancelFlag;$/;"	m	class:SEISphereRotation
m_sphereRotationPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool  m_sphereRotationPersistenceFlag;$/;"	m	class:SEISphereRotation
m_sphereRotationPitch	source/Lib/TLibCommon/SEI.h	/^  Int   m_sphereRotationPitch;$/;"	m	class:SEISphereRotation
m_sphereRotationRoll	source/Lib/TLibCommon/SEI.h	/^  Int   m_sphereRotationRoll;$/;"	m	class:SEISphereRotation
m_sphereRotationSEICancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_sphereRotationSEICancelFlag;$/;"	m	class:TAppEncCfg
m_sphereRotationSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_sphereRotationSEICancelFlag;$/;"	m	class:TEncCfg
m_sphereRotationSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_sphereRotationSEIEnabled;          $/;"	m	class:TAppEncCfg
m_sphereRotationSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_sphereRotationSEIEnabled;          $/;"	m	class:TEncCfg
m_sphereRotationSEIPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_sphereRotationSEIPersistenceFlag;$/;"	m	class:TAppEncCfg
m_sphereRotationSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_sphereRotationSEIPersistenceFlag;$/;"	m	class:TEncCfg
m_sphereRotationSEIPitch	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sphereRotationSEIPitch;$/;"	m	class:TAppEncCfg
m_sphereRotationSEIPitch	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sphereRotationSEIPitch;$/;"	m	class:TEncCfg
m_sphereRotationSEIRoll	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sphereRotationSEIRoll;$/;"	m	class:TAppEncCfg
m_sphereRotationSEIRoll	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sphereRotationSEIRoll;$/;"	m	class:TEncCfg
m_sphereRotationSEIYaw	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_sphereRotationSEIYaw;$/;"	m	class:TAppEncCfg
m_sphereRotationSEIYaw	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_sphereRotationSEIYaw;$/;"	m	class:TEncCfg
m_sphereRotationYaw	source/Lib/TLibCommon/SEI.h	/^  Int   m_sphereRotationYaw;$/;"	m	class:SEISphereRotation
m_sps	source/Lib/TLibCommon/TComPicSym.h	/^  TComSPS       m_sps;$/;"	m	class:TComPicSym
m_spsMap	source/Lib/TLibCommon/TComSlice.h	/^  ParameterSetMap<TComSPS> m_spsMap;$/;"	m	class:ParameterSetManager
m_spsMap	source/Lib/TLibEncoder/TEncTop.h	/^  ParameterSetMap<TComSPS> m_spsMap;                      \/\/\/< SPS. This is the base value. This is copied to TComPicSym$/;"	m	class:TEncTop
m_spsRangeExtension	source/Lib/TLibCommon/TComSlice.h	/^  TComSPSRExt      m_spsRangeExtension;$/;"	m	class:TComSPS
m_spsRbspData	source/Lib/TLibCommon/SEI.h	/^    std::vector< std::vector<uint8_t> > m_spsRbspData;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_spsRbspDataLength	source/Lib/TLibCommon/SEI.h	/^    std::vector<UInt> m_spsRbspDataLength;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_sqrtLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Double                  m_sqrtLambda;$/;"	m	class:TComRdCost
m_stLFCUParam	source/Lib/TLibCommon/TComLoopFilter.h	/^  LFCUParam m_stLFCUParam;                   \/\/\/< status structure$/;"	m	class:TComLoopFilter
m_startOfCodedInterval	source/App/TAppEncoder/TAppEncCfg.h	/^  Int*      m_startOfCodedInterval;$/;"	m	class:TAppEncCfg
m_startOfCodedInterval	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> m_startOfCodedInterval;$/;"	m	class:SEIToneMappingInfo
m_startOfCodedInterval	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*      m_startOfCodedInterval;$/;"	m	class:TEncCfg
m_statData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  SAOStatData***         m_statData; \/\/[ctu][comp][classes]$/;"	m	class:TEncSampleAdaptiveOffset
m_state	source/Lib/libmd5/MD5.h	/^  context_md5_t m_state;$/;"	m	class:MD5
m_stillToCodeChromaQpOffsetFlag	source/Lib/TLibEncoder/TEncCu.h	/^  Bool                    m_stillToCodeChromaQpOffsetFlag; \/\/indicates whether chroma QP offset flag needs to coded at this particular CU granularity.$/;"	m	class:TEncCu
m_stride	source/Lib/TLibCommon/TComRom.cpp	/^  const UInt m_stride;$/;"	m	class:ScanGenerator	file:
m_subCuOffsetInBuffer	source/Lib/TLibCommon/TComPicYuv.h	/^  Int*  m_subCuOffsetInBuffer[MAX_NUM_CHANNEL_TYPE];\/\/\/< Gives an offset in the buffer for a given sub-CU (and channel), relative to start of CTU$/;"	m	class:TComPicYuv
m_subLayerLevelPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_subLayerLevelPresentFlag   [MAX_TLAYER-1];$/;"	m	class:TComPTL
m_subLayerPTL	source/Lib/TLibCommon/TComSlice.h	/^  ProfileTierLevel m_subLayerPTL    [MAX_TLAYER-1];      \/\/ max. value of max_sub_layers_minus1 is MAX_TLAYER-1 (= 6)$/;"	m	class:TComPTL
m_subLayerProfilePresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_subLayerProfilePresentFlag [MAX_TLAYER-1];$/;"	m	class:TComPTL
m_subPicCpbParamsInPicTimingSEIFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_subPicCpbParamsInPicTimingSEIFlag;$/;"	m	class:TComHRD
m_subPicCpbParamsPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_subPicCpbParamsPresentFlag;$/;"	m	class:TComHRD
m_substreamSizes	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<UInt>          m_substreamSizes;$/;"	m	class:TComSlice
m_sum	source/App/utils/BitrateTargeting/ExtractBitrates.cpp	/^      double m_sum;$/;"	m	class:__anon2::Tally	file:
m_summaryOutFilename	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_summaryOutFilename;                           \/\/\/< filename to use for producing summary output file.$/;"	m	class:TAppEncCfg
m_summaryOutFilename	source/Lib/TLibEncoder/TEncCfg.h	/^  std::string m_summaryOutFilename;                           \/\/\/< filename to use for producing summary output file.$/;"	m	class:TEncCfg
m_summaryPicFilenameBase	source/App/TAppEncoder/TAppEncCfg.h	/^  std::string m_summaryPicFilenameBase;                       \/\/\/< Base filename to use for producing summary picture output files. The actual filenames used will have I.txt, P.txt and B.txt appended.$/;"	m	class:TAppEncCfg
m_summaryPicFilenameBase	source/Lib/TLibEncoder/TEncCfg.h	/^  std::string m_summaryPicFilenameBase;                       \/\/\/< Base filename to use for producing summary picture output files. The actual filenames used will have I.txt, P.txt and B.txt appended.$/;"	m	class:TEncCfg
m_summaryVerboseness	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt        m_summaryVerboseness;                           \/\/\/< Specifies the level of the verboseness of the text output.$/;"	m	class:TAppEncCfg
m_summaryVerboseness	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt        m_summaryVerboseness;                           \/\/\/< Specifies the level of the verboseness of the text output.$/;"	m	class:TEncCfg
m_tMctsMvpIsValid	source/Lib/TLibCommon/TComDataCU.h	/^  Bool          m_tMctsMvpIsValid;$/;"	m	class:TComDataCU
m_targetBitDepth	source/Lib/TLibCommon/SEI.h	/^  Int    m_targetBitDepth;$/;"	m	class:SEIToneMappingInfo
m_targetBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_targetBitDepth;$/;"	m	class:TEncCfg
m_targetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBits;$/;"	m	class:TEncRCGOP
m_targetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBits;$/;"	m	class:TEncRCPic
m_targetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBits;$/;"	m	struct:TRCLCU
m_targetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int64 m_targetBits;$/;"	m	class:TEncRCSeq
m_targetBitsLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_targetBitsLeft;$/;"	m	struct:TRCLCU
m_targetDecLayerIdSet	source/App/TAppDecoder/TAppDecCfg.h	/^  std::vector<Int> m_targetDecLayerIdSet;             \/\/\/< set of LayerIds to be included in the sub-bitstream extraction process.$/;"	m	class:TAppDecCfg
m_targetFormatIdc	source/Lib/TLibCommon/SEI.h	/^  Int                            m_targetFormatIdc;$/;"	m	class:SEIChromaResamplingFilterHint
m_targetMctsIdx	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	/^  Int           m_targetMctsIdx;                      \/\/\/< MCTS Id extracted$/;"	m	class:TAppMctsExtCfg
m_targetPivotValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int*      m_targetPivotValue;$/;"	m	class:TAppEncCfg
m_targetPivotValue	source/Lib/TLibCommon/SEI.h	/^  std::vector<Int> m_targetPivotValue;$/;"	m	class:SEIToneMappingInfo
m_targetPivotValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Int*      m_targetPivotValue;$/;"	m	class:TEncCfg
m_targetRate	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_targetRate;$/;"	m	class:TEncRCSeq
m_tcOffsetDiv2	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_tcOffsetDiv2;$/;"	m	struct:GOPEntry
m_tempPicYuv	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^  TComPicYuv*   m_tempPicYuv; \/\/temporary buffer$/;"	m	class:TComSampleAdaptiveOffset
m_temporalFilterStrengths	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  std::map<Int, Double> m_temporalFilterStrengths;$/;"	m	class:TEncTemporalFilter
m_temporalId	source/Lib/TLibCommon/NAL.h	/^  UInt        m_temporalId;  \/\/\/< temporal_id$/;"	m	struct:NALUnit
m_temporalId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_temporalId;$/;"	m	struct:GOPEntry
m_temporalLayerNonReferenceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool                       m_temporalLayerNonReferenceFlag;$/;"	m	class:TComSlice
m_temporalLevel0IndexSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_temporalLevel0IndexSEIEnabled;$/;"	m	class:TAppEncCfg
m_temporalLevel0IndexSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_temporalLevel0IndexSEIEnabled;$/;"	m	class:TEncCfg
m_temporalSubsampleRatio	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_temporalSubsampleRatio;                         \/\/\/< temporal subsample ratio, 2 means code every two frames$/;"	m	class:TAppEncCfg
m_temporalSubsampleRatio	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_temporalSubsampleRatio;$/;"	m	class:TEncCfg
m_tickDivisorMinus2	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_tickDivisorMinus2;$/;"	m	class:TComHRD
m_tier	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^    Level::Tier              m_tier;$/;"	m	class:ProfileLevelTierFeatures
m_tier	source/Lib/TLibDecoder/TDecConformance.h	/^    Level::Tier              m_tier;$/;"	m	class:ProfileLevelTierFeatures
m_tierFlag	source/Lib/TLibCommon/TComSlice.h	/^  Level::Tier       m_tierFlag;$/;"	m	class:ProfileTierLevel
m_tileColumnWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Int> m_tileColumnWidth;$/;"	m	class:TAppEncCfg
m_tileColumnWidth	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<Int> m_tileColumnWidth;$/;"	m	class:TComPPS
m_tileColumnWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Int> m_tileColumnWidth;$/;"	m	class:TEncCfg
m_tileHeightInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      m_tileHeightInCtus;$/;"	m	class:TComTile
m_tileLeftTopPelPosX	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_tileLeftTopPelPosX;$/;"	m	class:TComPattern
m_tileLeftTopPelPosY	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_tileLeftTopPelPosY;$/;"	m	class:TComPattern
m_tileParameters	source/Lib/TLibCommon/TComPicSym.h	/^  std::vector<TComTile> m_tileParameters;$/;"	m	class:TComPicSym
m_tileRightBottomPelPosX	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_tileRightBottomPelPosX;$/;"	m	class:TComPattern
m_tileRightBottomPelPosY	source/Lib/TLibCommon/TComPattern.h	/^  Int   m_tileRightBottomPelPosY;$/;"	m	class:TComPattern
m_tileRowHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  std::vector<Int> m_tileRowHeight;$/;"	m	class:TAppEncCfg
m_tileRowHeight	source/Lib/TLibCommon/TComSlice.h	/^  std::vector<Int> m_tileRowHeight;$/;"	m	class:TComPPS
m_tileRowHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  std::vector<Int> m_tileRowHeight;$/;"	m	class:TEncCfg
m_tileUniformSpacingFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_tileUniformSpacingFlag;$/;"	m	class:TAppEncCfg
m_tileUniformSpacingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_tileUniformSpacingFlag;$/;"	m	class:TEncCfg
m_tileWidthInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  UInt      m_tileWidthInCtus;$/;"	m	class:TComTile
m_tile_set_data	source/Lib/TLibCommon/SEI.h	/^  std::vector<TileSetData> m_tile_set_data;$/;"	m	class:SEITempMotionConstrainedTileSets
m_tilesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_tilesEnabledFlag;                  \/\/!< Indicates the presence of tiles$/;"	m	class:TComPPS
m_tilesFixedStructureFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_tilesFixedStructureFlag;                        \/\/\/< Indicates that each active picture parameter set has the same values of the syntax elements related to tiles$/;"	m	class:TAppEncCfg
m_tilesFixedStructureFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_tilesFixedStructureFlag;$/;"	m	class:TComVUI
m_tilesFixedStructureFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_tilesFixedStructureFlag;                        \/\/\/< Indicates that each active picture parameter set has the same values of the syntax elements related to tiles$/;"	m	class:TEncCfg
m_timeCodeSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_timeCodeSEIEnabled;$/;"	m	class:TAppEncCfg
m_timeCodeSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_timeCodeSEIEnabled;$/;"	m	class:TEncCfg
m_timeCodeSEINumTs	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_timeCodeSEINumTs;$/;"	m	class:TAppEncCfg
m_timeCodeSEINumTs	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_timeCodeSEINumTs;$/;"	m	class:TEncCfg
m_timeScale	source/Lib/TLibCommon/TComSlice.h	/^  UInt m_timeScale;$/;"	m	class:TimingInfo
m_timeSetArray	source/App/TAppEncoder/TAppEncCfg.h	/^  TComSEITimeSet m_timeSetArray[MAX_TIMECODE_SEI_SETS];$/;"	m	class:TAppEncCfg
m_timeSetArray	source/Lib/TLibEncoder/TEncCfg.h	/^  TComSEITimeSet   m_timeSetArray[MAX_TIMECODE_SEI_SETS];$/;"	m	class:TEncCfg
m_timingInfo	source/Lib/TLibCommon/TComSlice.h	/^  TimingInfo            m_timingInfo;$/;"	m	class:TComVPS
m_timingInfo	source/Lib/TLibCommon/TComSlice.h	/^  TimingInfo m_timingInfo;$/;"	m	class:TComVUI
m_timingInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_timingInfoPresentFlag;$/;"	m	class:TimingInfo
m_tl0Idx	source/Lib/TLibEncoder/SEIEncoder.h	/^  UInt m_tl0Idx;$/;"	m	class:SEIEncoder
m_tmctsCheck	source/App/TAppDecoder/TAppDecCfg.h	/^  Bool          m_tmctsCheck;$/;"	m	class:TAppDecCfg
m_tmctsCheckEnabled	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool m_tmctsCheckEnabled;$/;"	m	class:TDecConformanceCheck
m_tmctsCheckEnabled	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_tmctsCheckEnabled;$/;"	m	class:TDecTop
m_tmctsExtractionSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_tmctsExtractionSEIEnabled;$/;"	m	class:TAppEncCfg
m_tmctsExtractionSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_tmctsExtractionSEIEnabled;$/;"	m	class:TEncCfg
m_tmctsSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_tmctsSEIEnabled;$/;"	m	class:TAppEncCfg
m_tmctsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_tmctsSEIEnabled;$/;"	m	class:TEncCfg
m_tmctsSEITileConstraint	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_tmctsSEITileConstraint;$/;"	m	class:TAppEncCfg
m_tmctsSEITileConstraint	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_tmctsSEITileConstraint;$/;"	m	class:TEncCfg
m_tmpYuvPred	source/Lib/TLibEncoder/TEncSearch.h	/^  TComYuv         m_tmpYuvPred; \/\/ To be used in xGetInterPredictionError() to avoid constant memory allocation\/deallocation$/;"	m	class:TEncSearch
m_toneMapCancelFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_toneMapCancelFlag;$/;"	m	class:TAppEncCfg
m_toneMapCancelFlag	source/Lib/TLibCommon/SEI.h	/^  Bool   m_toneMapCancelFlag;$/;"	m	class:SEIToneMappingInfo
m_toneMapCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_toneMapCancelFlag;$/;"	m	class:TEncCfg
m_toneMapCodedDataBitDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_toneMapCodedDataBitDepth;$/;"	m	class:TAppEncCfg
m_toneMapId	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_toneMapId;$/;"	m	class:TAppEncCfg
m_toneMapId	source/Lib/TLibCommon/SEI.h	/^  Int    m_toneMapId;$/;"	m	class:SEIToneMappingInfo
m_toneMapId	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_toneMapId;$/;"	m	class:TEncCfg
m_toneMapMaxValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_toneMapMaxValue;$/;"	m	class:TAppEncCfg
m_toneMapMinValue	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_toneMapMinValue;$/;"	m	class:TAppEncCfg
m_toneMapModelId	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_toneMapModelId;$/;"	m	class:TAppEncCfg
m_toneMapPersistenceFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_toneMapPersistenceFlag;$/;"	m	class:TAppEncCfg
m_toneMapPersistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool   m_toneMapPersistenceFlag;$/;"	m	class:SEIToneMappingInfo
m_toneMapPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_toneMapPersistenceFlag;$/;"	m	class:TEncCfg
m_toneMapTargetBitDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_toneMapTargetBitDepth;$/;"	m	class:TAppEncCfg
m_toneMappingInfoSEIEnabled	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_toneMappingInfoSEIEnabled;$/;"	m	class:TAppEncCfg
m_toneMappingInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_toneMappingInfoSEIEnabled;$/;"	m	class:TEncCfg
m_top_left_tile_index	source/Lib/TLibCommon/SEI.h	/^      std::vector<Int> m_top_left_tile_index;  \/\/[tileSetIdx][tileIdx];$/;"	m	class:SEITempMotionConstrainedTileSets::TileSetData
m_totalBytes	source/App/TAppEncoder/TAppEncTop.h	/^  UInt m_totalBytes;$/;"	m	class:TAppEncTop
m_totalCoded	source/Lib/TLibEncoder/TEncGOP.h	/^  UInt                    m_totalCoded;$/;"	m	class:TEncGOP
m_totalCostIntra	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Double m_totalCostIntra;$/;"	m	class:TEncRCPic
m_totalFrames	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_totalFrames;$/;"	m	class:TEncRCSeq
m_totalStates	source/Lib/TLibCommon/ContextModel.h	/^  static const  UInt  m_totalStates = (1 << CONTEXT_STATE_BITS) * 2; \/\/*2 for MPS = [0|1]$/;"	m	class:ContextModel
m_transferCharacteristics	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_transferCharacteristics;                        \/\/\/< Indicates the opto-electronic transfer characteristics of the source$/;"	m	class:TAppEncCfg
m_transferCharacteristics	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_transferCharacteristics;$/;"	m	class:TComVUI
m_transferCharacteristics	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_transferCharacteristics;                        \/\/\/< Indicates the opto-electronic transfer characteristics of the source$/;"	m	class:TEncCfg
m_transformSkipContextEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_transformSkipContextEnabledFlag;                \/\/\/< control flag for transform-skip\/transquant-bypass single significance map context$/;"	m	class:TAppEncCfg
m_transformSkipContextEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_transformSkipContextEnabledFlag;$/;"	m	class:TComSPSRExt
m_transformSkipContextEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_transformSkipContextEnabledFlag;$/;"	m	class:TEncCfg
m_transformSkipRotationEnabledFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_transformSkipRotationEnabledFlag;               \/\/\/< control flag for transform-skip\/transquant-bypass residual rotation$/;"	m	class:TAppEncCfg
m_transformSkipRotationEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_transformSkipRotationEnabledFlag;$/;"	m	class:TComSPSRExt
m_transformSkipRotationEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_transformSkipRotationEnabledFlag;$/;"	m	class:TEncCfg
m_trueMotionFlag	source/Lib/TLibCommon/SEI.h	/^    Bool      m_trueMotionFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionHeader
m_ucState	source/Lib/TLibCommon/ContextModel.h	/^  UChar         m_ucState;                                                                  \/\/\/< internal state variable$/;"	m	class:ContextModel
m_uhTotalDepth	source/Lib/TLibCommon/TComPicSym.h	/^  UChar         m_uhTotalDepth;       \/\/\/< max. depth$/;"	m	class:TComPicSym
m_uhTotalDepth	source/Lib/TLibEncoder/TEncCu.h	/^  UChar                   m_uhTotalDepth;$/;"	m	class:TEncCu
m_uiAQPartHeight	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                  m_uiAQPartHeight;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiAQPartWidth	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                  m_uiAQPartWidth;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiBinsCoded	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_uiBinsCoded;$/;"	m	class:TEncBinCABAC
m_uiBitCounter	source/Lib/TLibCommon/TComBitCounter.h	/^  UInt  m_uiBitCounter;$/;"	m	class:TComBitCounter
m_uiBitsForPOC	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiBitsForPOC;$/;"	m	class:TComSPS
m_uiCUPelX	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_uiCUPelX;                             \/\/\/< CU position in a pixel (X)$/;"	m	class:TComDataCU
m_uiCUPelY	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_uiCUPelY;                             \/\/\/< CU position in a pixel (Y)$/;"	m	class:TComDataCU
m_uiCurrSliceIdx	source/Lib/TLibCommon/TComPic.h	/^  UInt                  m_uiCurrSliceIdx;         \/\/ Index of current slice$/;"	m	class:TComPic
m_uiDecodingRefreshType	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiDecodingRefreshType;            \/\/\/< the type of decoding refresh employed for the random access.$/;"	m	class:TEncCfg
m_uiDeltaQpRD	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiDeltaQpRD;                                    \/\/\/< dQP range for multi-pass slice QP optimization$/;"	m	class:TAppEncCfg
m_uiDeltaQpRD	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiDeltaQpRD;$/;"	m	class:TEncCfg
m_uiIntraPeriod	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiIntraPeriod;                    \/\/ TODO: make this an Int - it can be -1!$/;"	m	class:TEncCfg
m_uiLog2DiffMaxMinCodingBlockSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiLog2DiffMaxMinCodingBlockSize;                \/\/\/< difference between largest and smallest CU depth$/;"	m	class:TAppEncCfg
m_uiLow	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_uiLow;$/;"	m	class:TEncBinCABAC
m_uiMaxAQDepth	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                      m_uiMaxAQDepth;$/;"	m	class:TEncPic
m_uiMaxCUDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiMaxCUDepth;                                   \/\/\/< max. CU depth (as specified by command line)$/;"	m	class:TAppEncCfg
m_uiMaxCUHeight	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiMaxCUHeight;                                  \/\/\/< max. CU height in pixel$/;"	m	class:TAppEncCfg
m_uiMaxCUHeight	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxCUHeight;$/;"	m	class:TComSPS
m_uiMaxCUWidth	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiMaxCUWidth;                                   \/\/\/< max. CU width in pixel$/;"	m	class:TAppEncCfg
m_uiMaxCUWidth	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxCUWidth;$/;"	m	class:TComSPS
m_uiMaxCuDQPDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxCuDQPDepth;$/;"	m	class:TComPPS
m_uiMaxDecPicBuffering	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxDecPicBuffering[MAX_TLAYER];$/;"	m	class:TComVPS
m_uiMaxDecPicBuffering	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxDecPicBuffering[MAX_TLAYER];$/;"	m	class:TComSPS
m_uiMaxDepth	source/Lib/TLibDecoder/TDecCu.h	/^  UInt                m_uiMaxDepth;       \/\/\/< max. number of depth$/;"	m	class:TDecCu
m_uiMaxLatencyIncrease	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxLatencyIncrease[MAX_TLAYER]; \/\/ Really max latency increase plus 1 (value 0 expresses no limit)$/;"	m	class:TComVPS
m_uiMaxLatencyIncreasePlus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxLatencyIncreasePlus1[MAX_TLAYER];$/;"	m	class:TComSPS
m_uiMaxLayers	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxLayers;$/;"	m	class:TComVPS
m_uiMaxTLayers	source/Lib/TLibCommon/TComSlice.h	/^  UInt                  m_uiMaxTLayers;$/;"	m	class:TComVPS
m_uiMaxTLayers	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxTLayers;           \/\/ maximum number of temporal layers$/;"	m	class:TComSPS
m_uiMaxTotalCUDepth	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiMaxTotalCUDepth;                              \/\/\/< max. total CU depth - includes depth of transform-block structure$/;"	m	class:TAppEncCfg
m_uiMaxTotalCUDepth	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxTotalCUDepth; \/\/\/< Total CU depth, relative to the smallest possible transform block size.$/;"	m	class:TComSPS
m_uiMaxTrSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiMaxTrSize;$/;"	m	class:TComSPS
m_uiMaxTrSize	source/Lib/TLibCommon/TComTrQuant.h	/^  UInt     m_uiMaxTrSize;$/;"	m	class:TComTrQuant
m_uiMinCUHeight	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_uiMinCUHeight;$/;"	m	class:TComPicSym
m_uiMinCUWidth	source/Lib/TLibCommon/TComPicSym.h	/^  UInt          m_uiMinCUWidth;$/;"	m	class:TComPicSym
m_uiNumAQPartInHeight	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                  m_uiNumAQPartInHeight;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiNumAQPartInWidth	source/Lib/TLibEncoder/TEncPic.h	/^  UInt                  m_uiNumAQPartInWidth;$/;"	m	class:TEncPicQPAdaptationLayer
m_uiNumAllPicCoded	source/Lib/TLibEncoder/TEncTop.h	/^  UInt                    m_uiNumAllPicCoded;             \/\/\/< number of coded pictures$/;"	m	class:TEncTop
m_uiNumPartition	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_uiNumPartition;                       \/\/\/< total number of minimum partitions in a CU$/;"	m	class:TComDataCU
m_uiNumPartition	source/Lib/TLibCommon/TComMotionInfo.h	/^  UInt      m_uiNumPartition;$/;"	m	class:TComCUMvField
m_uiNumPartitions	source/Lib/TLibCommon/TComLoopFilter.h	/^  UInt      m_uiNumPartitions;$/;"	m	class:TComLoopFilter
m_uiNumPic	source/Lib/TLibEncoder/TEncAnalyze.h	/^  UInt      m_uiNumPic;$/;"	m	class:TEncAnalyze
m_uiPCMLog2MinSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiPCMLog2MinSize;                               \/\/\/< log2 of minimum PCM block size$/;"	m	class:TAppEncCfg
m_uiPCMLog2MinSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiPCMLog2MinSize;$/;"	m	class:TComSPS
m_uiPCMLog2MinSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiPCMLog2MinSize;$/;"	m	class:TEncCfg
m_uiPicDist	source/Lib/TLibEncoder/TEncSlice.h	/^  UInt64                  m_uiPicDist;                          \/\/\/< total distortion for the picture$/;"	m	class:TEncSlice
m_uiPicTotalBits	source/Lib/TLibEncoder/TEncSlice.h	/^  UInt64                  m_uiPicTotalBits;                     \/\/\/< total bits for the picture$/;"	m	class:TEncSlice
m_uiQuadtreeTULog2MaxSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiQuadtreeTULog2MaxSize;$/;"	m	class:TAppEncCfg
m_uiQuadtreeTULog2MaxSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTULog2MaxSize;$/;"	m	class:TComSPS
m_uiQuadtreeTULog2MaxSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTULog2MaxSize;$/;"	m	class:TEncCfg
m_uiQuadtreeTULog2MinSize	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiQuadtreeTULog2MinSize;$/;"	m	class:TAppEncCfg
m_uiQuadtreeTULog2MinSize	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTULog2MinSize;$/;"	m	class:TComSPS
m_uiQuadtreeTULog2MinSize	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTULog2MinSize;$/;"	m	class:TEncCfg
m_uiQuadtreeTUMaxDepthInter	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiQuadtreeTUMaxDepthInter;$/;"	m	class:TAppEncCfg
m_uiQuadtreeTUMaxDepthInter	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTUMaxDepthInter;$/;"	m	class:TComSPS
m_uiQuadtreeTUMaxDepthInter	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTUMaxDepthInter;$/;"	m	class:TEncCfg
m_uiQuadtreeTUMaxDepthIntra	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_uiQuadtreeTUMaxDepthIntra;$/;"	m	class:TAppEncCfg
m_uiQuadtreeTUMaxDepthIntra	source/Lib/TLibCommon/TComSlice.h	/^  UInt             m_uiQuadtreeTUMaxDepthIntra;$/;"	m	class:TComSPS
m_uiQuadtreeTUMaxDepthIntra	source/Lib/TLibEncoder/TEncCfg.h	/^  UInt      m_uiQuadtreeTUMaxDepthIntra;$/;"	m	class:TEncCfg
m_uiRDOQOffset	source/Lib/TLibCommon/TComTrQuant.h	/^  UInt     m_uiRDOQOffset;$/;"	m	class:TComTrQuant
m_uiRange	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^  UInt                m_uiRange;$/;"	m	class:TDecBinCABAC
m_uiRange	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  UInt                m_uiRange;$/;"	m	class:TEncBinCABAC
m_uiSliceIdx	source/Lib/TLibDecoder/TDecTop.h	/^  UInt                    m_uiSliceIdx;$/;"	m	class:TDecTop
m_uiSliceIdx	source/Lib/TLibEncoder/TEncSlice.h	/^  UInt                    m_uiSliceIdx;$/;"	m	class:TEncSlice
m_uiTLayer	source/Lib/TLibCommon/TComPic.h	/^  UInt                  m_uiTLayer;               \/\/  Temporal layer$/;"	m	class:TComPic
m_uiTLayer	source/Lib/TLibCommon/TComSlice.h	/^  UInt                       m_uiTLayer;$/;"	m	class:TComSlice
m_uiTotalBins	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_uiTotalBins;                          \/\/\/< sum of partition bins$/;"	m	class:TComDataCU
m_uiTotalBits	source/Lib/TLibCommon/TComDataCU.h	/^  UInt          m_uiTotalBits;                          \/\/\/< sum of partition bits$/;"	m	class:TComDataCU
m_uiTotalDistortion	source/Lib/TLibCommon/TComDataCU.h	/^  Distortion    m_uiTotalDistortion;                    \/\/\/< sum of partition distortion$/;"	m	class:TComDataCU
m_uiValue	source/Lib/TLibDecoder/TDecBinCoderCABAC.h	/^  UInt                m_uiValue;$/;"	m	class:TDecBinCABAC
m_uniformSpacingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_uniformSpacingFlag;$/;"	m	class:TComPPS
m_unitSize	source/Lib/TLibCommon/TComDataCU.h	/^  Int           m_unitSize;                             \/\/\/< size of a "minimum partition"$/;"	m	class:TComDataCU
m_upsampledAspectRatio	source/Lib/TLibCommon/SEI.h	/^  Bool m_upsampledAspectRatio;$/;"	m	class:SEIFramePacking
m_useAMP	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_useAMP;$/;"	m	class:TComSPS
m_useAMP	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useAMP;$/;"	m	class:TEncCfg
m_useDQP	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_useDQP;$/;"	m	class:TComPPS
m_useEarlySkipDetection	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useEarlySkipDetection;                          \/\/\/< flag for using Early SKIP Detection$/;"	m	class:TAppEncCfg
m_useEarlySkipDetection	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useEarlySkipDetection;$/;"	m	class:TEncCfg
m_useFastDecisionForMerge	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useFastDecisionForMerge;                        \/\/\/< flag for using Fast Decision Merge RD-Cost$/;"	m	class:TAppEncCfg
m_useFastDecisionForMerge	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useFastDecisionForMerge;$/;"	m	class:TEncCfg
m_useLCUSeparateModel	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Bool m_useLCUSeparateModel;$/;"	m	class:TEncRCSeq
m_usePCM	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_usePCM;                                         \/\/\/< flag for using IPCM$/;"	m	class:TAppEncCfg
m_usePCM	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_usePCM;$/;"	m	class:TComSPS
m_usePCM	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_usePCM;$/;"	m	class:TEncCfg
m_useRDOQ	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useRDOQ;                                        \/\/\/< flag for using RD optimized quantization$/;"	m	class:TAppEncCfg
m_useRDOQ	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_useRDOQ;$/;"	m	class:TComTrQuant
m_useRDOQ	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useRDOQ;$/;"	m	class:TEncCfg
m_useRDOQTS	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useRDOQTS;                                      \/\/\/< flag for using RD optimized quantization for transform skip$/;"	m	class:TAppEncCfg
m_useRDOQTS	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_useRDOQTS;$/;"	m	class:TComTrQuant
m_useRDOQTS	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useRDOQTS;$/;"	m	class:TEncCfg
m_useScalingListId	source/App/TAppEncoder/TAppEncCfg.h	/^  ScalingListMode m_useScalingListId;                         \/\/\/< using quantization matrix$/;"	m	class:TAppEncCfg
m_useScalingListId	source/Lib/TLibEncoder/TEncCfg.h	/^  ScalingListMode m_useScalingListId;             \/\/\/< Using quantization matrix i.e. 0=off, 1=default, 2=file.$/;"	m	class:TEncCfg
m_useSelectiveRDOQ	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useSelectiveRDOQ;                               \/\/\/< flag for using selective RDOQ$/;"	m	class:TAppEncCfg
m_useSelectiveRDOQ	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_useSelectiveRDOQ;$/;"	m	class:TComTrQuant
m_useSelectiveRDOQ	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useSelectiveRDOQ;$/;"	m	class:TEncCfg
m_useStrongIntraSmoothing	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useStrongIntraSmoothing;                        \/\/\/< enable strong intra smoothing for 32x32 blocks where the reference samples are flat$/;"	m	class:TAppEncCfg
m_useStrongIntraSmoothing	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_useStrongIntraSmoothing;$/;"	m	class:TComSPS
m_useStrongIntraSmoothing	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useStrongIntraSmoothing;                        \/\/\/< enable the use of strong intra smoothing (bi_linear interpolation) for 32x32 blocks when reference samples are flat.$/;"	m	class:TEncCfg
m_useTransformSkip	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useTransformSkip;                               \/\/\/< flag for enabling intra transform skipping$/;"	m	class:TAppEncCfg
m_useTransformSkip	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_useTransformSkip;$/;"	m	class:TComPPS
m_useTransformSkip	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useTransformSkip;$/;"	m	class:TEncCfg
m_useTransformSkipFast	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useTransformSkipFast;                           \/\/\/< flag for enabling fast intra transform skipping$/;"	m	class:TAppEncCfg
m_useTransformSkipFast	source/Lib/TLibCommon/TComTrQuant.h	/^  Bool     m_useTransformSkipFast;$/;"	m	class:TComTrQuant
m_useTransformSkipFast	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useTransformSkipFast;$/;"	m	class:TEncCfg
m_useWeightedBiPred	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useWeightedBiPred;                  \/\/\/< Use of bi-directional weighted prediction in B slices$/;"	m	class:TAppEncCfg
m_useWeightedBiPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_useWeightedBiPred;                 \/\/!< Use of Weighting Bi-Prediction (B_SLICE)$/;"	m	class:TComPPS
m_useWeightedBiPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useWeightedBiPred;    \/\/< Use of Bi-directional Weighting Prediction (B_SLICE)$/;"	m	class:TEncCfg
m_useWeightedPred	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_useWeightedPred;                    \/\/\/< Use of weighted prediction in P slices$/;"	m	class:TAppEncCfg
m_useWeightedPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_useWeightedPred;       \/\/< Use of Weighting Prediction (P_SLICE)$/;"	m	class:TEncCfg
m_used	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_used[MAX_NUM_REF_PICS];$/;"	m	class:TComReferencePictureSet
m_usedByCurrPic	source/Lib/TLibEncoder/TEncCfg.h	/^  Int m_usedByCurrPic[MAX_NUM_REF_PICS];$/;"	m	struct:GOPEntry
m_usedByCurrPicLtSPSFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_usedByCurrPicLtSPSFlag[MAX_NUM_LONG_TERM_REF_PICS];$/;"	m	class:TComSPS
m_userData	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar> m_userData;$/;"	m	class:SEIUserDataRegistered
m_userData	source/Lib/TLibCommon/SEI.h	/^  std::vector<UChar> m_userData;$/;"	m	class:SEIUserDataUnregistered
m_uuid_iso_iec_11578	source/Lib/TLibCommon/SEI.h	/^  UChar m_uuid_iso_iec_11578[ISO_IEC_11578_LEN];$/;"	m	class:SEIUserDataUnregistered
m_vRVM_RP	source/Lib/TLibEncoder/TEncGOP.h	/^  std::vector<Int> m_vRVM_RP;$/;"	m	class:TEncGOP
m_vSliceCUDataLink	source/Lib/TLibCommon/TComPic.h	/^  std::vector<std::vector<TComDataCU*> > m_vSliceCUDataLink;$/;"	m	class:TComPic
m_validPix	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int    m_validPix;$/;"	m	struct:TRCParameter
m_validPixelsInPic	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Int m_validPixelsInPic;$/;"	m	class:TEncRCPic
m_vclHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool m_vclHrdParametersPresentFlag;$/;"	m	class:TComHRD
m_vdRdPicLambda	source/Lib/TLibEncoder/TEncSlice.h	/^  std::vector<Double>     m_vdRdPicLambda;                      \/\/\/< array of lambda candidates$/;"	m	class:TEncSlice
m_vdRdPicQp	source/Lib/TLibEncoder/TEncSlice.h	/^  std::vector<Double>     m_vdRdPicQp;                          \/\/\/< array of picture QP candidates (double-type for lambda)$/;"	m	class:TEncSlice
m_verChromaFilterIdc	source/Lib/TLibCommon/SEI.h	/^  Int                            m_verChromaFilterIdc;$/;"	m	class:SEIChromaResamplingFilterHint
m_verFilterCoeff	source/Lib/TLibCommon/SEI.h	/^  std::vector<std::vector<Int> > m_verFilterCoeff;$/;"	m	class:SEIChromaResamplingFilterHint
m_verFilteringFieldProcessingFlag	source/Lib/TLibCommon/SEI.h	/^  Bool                           m_verFilteringFieldProcessingFlag;$/;"	m	class:SEIChromaResamplingFilterHint
m_viRdPicQp	source/Lib/TLibEncoder/TEncSlice.h	/^  std::vector<Int>        m_viRdPicQp;                          \/\/\/< array of picture QP candidates (Int-type)$/;"	m	class:TEncSlice
m_videoFormat	source/App/TAppEncoder/TAppEncCfg.h	/^  Int       m_videoFormat;                                    \/\/\/< Indicates representation of pictures$/;"	m	class:TAppEncCfg
m_videoFormat	source/Lib/TLibCommon/TComSlice.h	/^  Int        m_videoFormat;$/;"	m	class:TComVUI
m_videoFormat	source/Lib/TLibEncoder/TEncCfg.h	/^  Int       m_videoFormat;                                    \/\/\/< Indicates representation of pictures$/;"	m	class:TEncCfg
m_videoFullRangeFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_videoFullRangeFlag;                             \/\/\/< Indicates the black level and range of luma and chroma signals$/;"	m	class:TAppEncCfg
m_videoFullRangeFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_videoFullRangeFlag;$/;"	m	class:TComVUI
m_videoFullRangeFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_videoFullRangeFlag;                             \/\/\/< Indicates the black level and range of luma and chroma signals$/;"	m	class:TEncCfg
m_videoSignalTypePresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_videoSignalTypePresentFlag;                     \/\/\/< Signals whether video_format, video_full_range_flag, and colour_description_present_flag are present$/;"	m	class:TAppEncCfg
m_videoSignalTypePresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool       m_videoSignalTypePresentFlag;$/;"	m	class:TComVUI
m_videoSignalTypePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_videoSignalTypePresentFlag;                     \/\/\/< Signals whether video_format, video_full_range_flag, and colour_description_present_flag are present$/;"	m	class:TEncCfg
m_vpsMap	source/Lib/TLibCommon/TComSlice.h	/^  ParameterSetMap<TComVPS> m_vpsMap;$/;"	m	class:ParameterSetManager
m_vpsRbspData	source/Lib/TLibCommon/SEI.h	/^    std::vector< std::vector<uint8_t> > m_vpsRbspData;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_vpsRbspDataLength	source/Lib/TLibCommon/SEI.h	/^    std::vector<UInt> m_vpsRbspDataLength;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
m_vuiParameters	source/Lib/TLibCommon/TComSlice.h	/^  TComVUI          m_vuiParameters;$/;"	m	class:TComSPS
m_vuiParametersPresentFlag	source/App/TAppEncoder/TAppEncCfg.h	/^  Bool      m_vuiParametersPresentFlag;                       \/\/\/< enable generation of VUI parameters$/;"	m	class:TAppEncCfg
m_vuiParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Bool             m_vuiParametersPresentFlag;$/;"	m	class:TComSPS
m_vuiParametersPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Bool      m_vuiParametersPresentFlag;                       \/\/\/< enable generation of VUI parameters$/;"	m	class:TEncCfg
m_warningMessageSkipPicture	source/Lib/TLibDecoder/TDecTop.h	/^  Bool                    m_warningMessageSkipPicture;$/;"	m	class:TDecTop
m_wcgChromaQpControl	source/App/TAppEncoder/TAppEncCfg.h	/^  WCGChromaQPControl m_wcgChromaQpControl;                    \/\/\/< Wide-colour-gamut chroma QP control.$/;"	m	class:TAppEncCfg
m_wcgChromaQpControl	source/Lib/TLibEncoder/TEncCfg.h	/^  WCGChromaQPControl m_wcgChromaQpControl;                    \/\/\/< Wide-colour-gamut chroma QP control.$/;"	m	class:TEncCfg
m_weightACDCParam	source/Lib/TLibCommon/TComSlice.h	/^  WPACDCParam                m_weightACDCParam[MAX_NUM_COMPONENT];$/;"	m	class:TComSlice
m_weightPredTable	source/Lib/TLibCommon/TComSlice.h	/^  WPScalingParam             m_weightPredTable[NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_COMPONENT]; \/\/ [REF_PIC_LIST_0 or REF_PIC_LIST_1][refIdx][0:Y, 1:U, 2:V]$/;"	m	class:TComSlice
m_weightedPredictionMethod	source/App/TAppEncoder/TAppEncCfg.h	/^  WeightedPredictionMethod m_weightedPredictionMethod;$/;"	m	class:TAppEncCfg
m_weightedPredictionMethod	source/Lib/TLibEncoder/TEncCfg.h	/^  WeightedPredictionMethod m_weightedPredictionMethod;$/;"	m	class:TEncCfg
m_what	source/App/utils/BitrateTargeting/RuntimeError.h	/^    mutable std::string m_what;  \/\/\/< Contains the what string.  Populated by the first call to the what method.$/;"	m	class:RuntimeError
m_width	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.h	/^  uint32_t                     m_width;$/;"	m	class:SEIFilmGrainSynthesizer
m_width	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  UInt m_width, m_height;$/;"	m	struct:Array2D
m_winBottomOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  m_winBottomOffset;$/;"	m	class:Window
m_winLeftOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  m_winLeftOffset;$/;"	m	class:Window
m_winRightOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  m_winRightOffset;$/;"	m	class:Window
m_winTopOffset	source/Lib/TLibCommon/TypeDef.h	/^  Int  m_winTopOffset;$/;"	m	class:Window
m_winUnitX	source/Lib/TLibCommon/TComSlice.cpp	/^const Int TComSPS::m_winUnitX[]={1,2,2,1};$/;"	m	class:TComSPS	file:
m_winUnitX	source/Lib/TLibCommon/TComSlice.h	/^  static const Int m_winUnitX[NUM_CHROMA_FORMAT];$/;"	m	class:TComSPS
m_winUnitY	source/Lib/TLibCommon/TComSlice.cpp	/^const Int TComSPS::m_winUnitY[]={1,2,1,1};$/;"	m	class:TComSPS	file:
m_winUnitY	source/Lib/TLibCommon/TComSlice.h	/^  static const Int m_winUnitY[NUM_CHROMA_FORMAT];$/;"	m	class:TComSPS
m_wp	source/Lib/TLibEncoder/WeightPredAnalysis.h	/^  WPScalingParam  m_wp[NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_COMPONENT];$/;"	m	class:WeightPredAnalysis
m_xsdMetricType	source/App/TAppEncoder/TAppEncCfg.h	/^  UInt      m_xsdMetricType;$/;"	m	class:TAppEncCfg
m_xsdMetricType	source/Lib/TLibCommon/SEI.h	/^    UInt m_xsdMetricType;$/;"	m	class:SEIGreenMetadataInfo
m_xsdMetricType	source/Lib/TLibEncoder/TEncCfg.h	/^  UChar     m_xsdMetricType;$/;"	m	class:TEncCfg
m_xsdMetricValue	source/Lib/TLibCommon/SEI.h	/^    UInt m_xsdMetricValue;$/;"	m	class:SEIGreenMetadataInfo
main	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.c	/^int main(void)$/;"	f
main	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.cpp	/^int main(void)$/;"	f
main	build/CMakeFiles/FindOpenMP/OpenMPTryFlag.c	/^int main(void) {$/;"	f
main	build/CMakeFiles/FindOpenMP/OpenMPTryFlag.cpp	/^int main(void) {$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^    def main(self, argv):$/;"	f
main	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^    def main(self, argv):$/;"	m	class:CMakeLauncherApp
main	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^    def main(self, argv):$/;"	m	class:CMakeDocUtilApp
main	source/App/Parcat/parcat.cpp	/^int main(int argc, char * argv[])$/;"	f
main	source/App/SEIRemovalApp/seiremovalmain.cpp	/^int main(int argc, char* argv[])$/;"	f
main	source/App/TAppDecoder/decmain.cpp	/^int main(int argc, char* argv[])$/;"	f
main	source/App/TAppEncoder/encmain.cpp	/^int main(int argc, char* argv[])$/;"	f
main	source/App/TAppMCTSExtractor/mctsExtmain.cpp	/^int main(int argc, char* argv[])$/;"	f
main	source/App/utils/BitrateTargeting/ExtractBitratesMain.cpp	/^int main( int, char** )$/;"	f
main	source/App/utils/BitrateTargeting/GuessLambdaModifiersMain.cpp	/^int main( int argc, char** ppArgv )$/;"	f
main	source/App/utils/annexBbytecount.cpp	/^int main(int argc, char*argv[])$/;"	f
main	source/App/utils/convert_NtoMbit_YCbCr.cpp	/^Int main(Int argc, const char** argv)$/;"	f
mainLevelTierInfo	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^static const LevelTierFeatures mainLevelTierInfo[] =$/;"	v	file:
mainLevelTierInfo	source/Lib/TLibDecoder/TDecConformance.cpp	/^static const LevelTierFeatures mainLevelTierInfo[] =$/;"	v	file:
mapping	source/Lib/TLibCommon/TypeDef.h	/^  std::vector< std::pair<Int, Int> > mapping;          \/\/\/< first=luma level, second=delta QP.$/;"	m	struct:LumaLevelToDeltaQPMapping
mappings_ep	source/Lib/TLibCommon/TComCodingStatistics.h	/^        std::map<std::string, SStat> mappings_ep;$/;"	m	class:TComCodingStatistics::TComCodingStatisticsData
matrixOutputOffset	source/App/TAppDecoder/TAppDecTop.cpp	/^                                          Int  (&matrixOutputOffset)[3],$/;"	v	file:
maxBitDepth	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     maxBitDepth;$/;"	m	struct:ProfileFeatures
maxBitDepth	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     maxBitDepth;$/;"	m	struct:ProfileFeatures
maxBr	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxBr[Level::NUMBER_OF_TIERS];     \/\/ in units of BrVclFactor or BrNalFactor bits\/s$/;"	m	struct:LevelTierFeatures
maxBr	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        maxBr[Level::NUMBER_OF_TIERS];     \/\/ in units of BrVclFactor or BrNalFactor bits\/s$/;"	m	struct:LevelTierFeatures
maxChromaFormat	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  ChromaFormat             maxChromaFormat;$/;"	m	struct:ProfileFeatures
maxChromaFormat	source/Lib/TLibDecoder/TDecConformance.h	/^  ChromaFormat             maxChromaFormat;$/;"	m	struct:ProfileFeatures
maxCpb	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxCpb[Level::NUMBER_OF_TIERS];    \/\/ in units of CpbVclFactor or CpbNalFactor bits$/;"	m	struct:LevelTierFeatures
maxCpb	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        maxCpb[Level::NUMBER_OF_TIERS];    \/\/ in units of CpbVclFactor or CpbNalFactor bits$/;"	m	struct:LevelTierFeatures
maxLumaPs	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxLumaPs;$/;"	m	struct:LevelTierFeatures
maxLumaPs	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        maxLumaPs;$/;"	m	struct:LevelTierFeatures
maxLumaSr	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt64      maxLumaSr;$/;"	m	struct:LevelTierFeatures
maxLumaSr	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt64      maxLumaSr;$/;"	m	struct:LevelTierFeatures
maxLuminance	source/Lib/TLibCommon/TypeDef.h	/^  UInt      maxLuminance;$/;"	m	struct:TComSEIMasteringDisplay
maxMethodWeight	source/Lib/TLibCommon/TypeDef.h	/^  Double                             maxMethodWeight;  \/\/\/< weight of max luma value when mode = 2$/;"	m	struct:LumaLevelToDeltaQPMapping
maxNumValuesIncl	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const std::size_t    maxNumValuesIncl; \/\/ Use 0 for unlimited$/;"	m	struct:SMultiValueInput	file:
maxSliceSegmentsPerPicture	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxSliceSegmentsPerPicture;$/;"	m	struct:LevelTierFeatures
maxSliceSegmentsPerPicture	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        maxSliceSegmentsPerPicture;$/;"	m	struct:LevelTierFeatures
maxTileCols	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxTileCols;$/;"	m	struct:LevelTierFeatures
maxTileCols	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        maxTileCols;$/;"	m	struct:LevelTierFeatures
maxTileRows	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        maxTileRows;$/;"	m	struct:LevelTierFeatures
maxTileRows	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        maxTileRows;$/;"	m	struct:LevelTierFeatures
maxValIncl	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const T              maxValIncl;$/;"	m	struct:SMultiValueInput	file:
mbProcessLastOfLevel	source/Lib/TLibCommon/TComTU.h	/^    Bool          mbProcessLastOfLevel; \/\/ if true, then if size n\/2 x n\/2 is invalid, the nxn block for a channel is processed only for the last block, not the first.$/;"	m	class:TComTU
mctsHeight	source/Lib/TLibCommon/SEI.h	/^    UInt mctsHeight;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
mctsWidth	source/Lib/TLibCommon/SEI.h	/^    UInt mctsWidth;$/;"	m	struct:SEIMCTSExtractionInfoSet::MCTSExtractionInfo
md5_block	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^static Void md5_block(MD5& md5, const Pel* plane, UInt n)$/;"	f	file:
md5_plane	source/Lib/TLibCommon/TComPicYuvMD5.cpp	/^static Void md5_plane(MD5& md5, const Pel* plane, UInt width, UInt height, UInt stride)$/;"	f	file:
method	source/Lib/TLibCommon/SEI.h	/^  HashType method;$/;"	m	class:SEIDecodedPictureHash
minCrBase	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt        minCrBase[Level::NUMBER_OF_TIERS];$/;"	m	struct:LevelTierFeatures
minCrBase	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt        minCrBase[Level::NUMBER_OF_TIERS];$/;"	m	struct:LevelTierFeatures
minCrScaleFactorx10	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     minCrScaleFactorx10;         \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
minCrScaleFactorx10	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     minCrScaleFactorx10;         \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
minLuminance	source/Lib/TLibCommon/TypeDef.h	/^  UInt      minLuminance;$/;"	m	struct:TComSEIMasteringDisplay
minNumValuesIncl	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const std::size_t    minNumValuesIncl;$/;"	m	struct:SMultiValueInput	file:
minTileColumnWidthInLumaSamples	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     minTileColumnWidthInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileColumnWidthInLumaSamples	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     minTileColumnWidthInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileRowHeightInLumaSamples	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  UInt                     minTileRowHeightInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileRowHeightInLumaSamples	source/Lib/TLibDecoder/TDecConformance.h	/^  UInt                     minTileRowHeightInLumaSamples;$/;"	m	struct:ProfileFeatures
minValIncl	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const T              minValIncl;$/;"	m	struct:SMultiValueInput	file:
minutesFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool minutesFlag;$/;"	m	struct:TComSEITimeSet
minutesValue	source/Lib/TLibCommon/TypeDef.h	/^  Int  minutesValue;$/;"	m	struct:TComSEITimeSet
mode	source/Lib/TLibCommon/TypeDef.h	/^  LumaLevelToDQPMode                 mode;             \/\/\/< use deltaQP determined by block luma level$/;"	m	struct:LumaLevelToDeltaQPMapping
modeIdc	source/Lib/TLibCommon/TypeDef.h	/^  SAOMode modeIdc; \/\/ NEW, MERGE, OFF$/;"	m	struct:SAOOffset
modify_depends	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def modify_depends(self, dylib, depends_dict):$/;"	m	class:DyLibInstallNameInfoInspector
modify_install_name	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def modify_install_name(self, dylib, install_name):$/;"	m	class:DyLibInstallNameInfoInspector
motionCompensation	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::motionCompensation ( TComDataCU* pcCU, TComYuv* pcYuvPred, RefPicList eRefPicList, Int iPartIdx )$/;"	f	class:TComPrediction
motionErrorLuma	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Int TEncTemporalFilter::motionErrorLuma(const TComPicYuv &orig,$/;"	f	class:TEncTemporalFilter
motionEstimation	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::motionEstimation(Array2D<MotionVector> &mv, const TComPicYuv &orgPic, const TComPicYuv &buffer, const TComPicYuv &origSubsampled2, const TComPicYuv &origSubsampled4) const$/;"	f	class:TEncTemporalFilter
motionEstimationLuma	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::motionEstimationLuma(Array2D<MotionVector> &mvs, const TComPicYuv &orig, const TComPicYuv &buffer, const Int blockSize,$/;"	f	class:TEncTemporalFilter
mpParent	source/Lib/TLibCommon/TComTU.h	/^    TComTU       *mpParent;$/;"	m	class:TComTU
mpcCU	source/Lib/TLibCommon/TComTU.h	/^    TComDataCU   *mpcCU;$/;"	m	class:TComTU
multiply	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function multiply {$/;"	f
multiprocessing	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import multiprocessing$/;"	i
mvs	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Array2D<MotionVector> mvs;$/;"	m	struct:TemporalFilterSourcePicInfo
n	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^                tmp_file.write("from __future__ import print_function\\n")$/;"	i
n	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^            tmp_file.write("import sys\\n")$/;"	i
nalUnitTypeToString	source/Lib/TLibCommon/TComRom.cpp	/^const TChar* nalUnitTypeToString(NalUnitType type)$/;"	f
name	source/Lib/Utilities/program_options_lite.cpp	/^      const string name;$/;"	m	struct:df::program_options_lite::CfgStreamParser	file:
nextSection	source/Lib/TLibCommon/TComTU.cpp	/^Bool TComTURecurse::nextSection(const TComTU &parent)$/;"	f	class:TComTURecurse
noWeightOffsetUnidir	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^static inline Pel noWeightOffsetUnidir( Pel P0, Int round, Int shift, Int clipBD)$/;"	f	file:
noWeightUnidir	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^static inline Pel noWeightUnidir( Pel P0, Int round, Int shift, Int offset, Int clipBD)$/;"	f	file:
nonDiagonalScan8x8ContextOffset	source/Lib/TLibCommon/ContextTables.h	/^static const UInt nonDiagonalScan8x8ContextOffset        [MAX_NUM_CHANNEL_TYPE]                          = {  6,               0              };$/;"	v
normalize_path	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def normalize_path(fpath):$/;"	f
notFirstGroupNeighbourhoodContextOffset	source/Lib/TLibCommon/ContextTables.h	/^static const UInt notFirstGroupNeighbourhoodContextOffset[MAX_NUM_CHANNEL_TYPE]                          = {  3,               0              };$/;"	v
numClockTs	source/Lib/TLibCommon/SEI.h	/^  UInt numClockTs;$/;"	m	class:SEITimeCode
numEmulationPreventionBytesRead	source/Lib/TLibCommon/TComBitStream.h	/^  UInt      numEmulationPreventionBytesRead     ()                                   { return (UInt) m_emulationPreventionByteLocation.size();    }$/;"	f	class:TComInputBitstream
numModelValues	source/Lib/TLibCommon/SEI.h	/^    UChar numModelValues; \/\/ this must be the same as intensityValues[*].compModelValue.size()$/;"	m	struct:SEIFilmGrainCharacteristics::CompModel
numSpatialMVPCandidates	source/Lib/TLibCommon/TComMotionInfo.h	/^  UInt   numSpatialMVPCandidates;$/;"	m	struct:_AMVPInfo
numSpsIdsMinus1	source/Lib/TLibCommon/SEI.h	/^  Int numSpsIdsMinus1;$/;"	m	class:SEIActiveParameterSets
numUnitFieldBasedFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool numUnitFieldBasedFlag;$/;"	m	struct:TComSEITimeSet
numberOfFrames	source/Lib/TLibCommon/TypeDef.h	/^  Int  numberOfFrames;$/;"	m	struct:TComSEITimeSet
numberToChromaFormat	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline ChromaFormat numberToChromaFormat(const Int val)$/;"	f	file:
o	source/Lib/TLibCommon/TComSlice.h	/^  Int  o;$/;"	m	struct:WPScalingParam
objLabelIdx	source/Lib/TLibCommon/SEI.h	/^    UInt objLabelIdx;            \/\/ only valid if bObjectLabelValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
objectCancelFlag	source/Lib/TLibCommon/SEI.h	/^    Bool objectCancelFlag;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
objectConfidence	source/Lib/TLibCommon/SEI.h	/^    UInt objectConfidence;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
objectLabelValid	source/Lib/TLibCommon/SEI.h	/^    Bool objectLabelValid;$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
offset	source/Lib/TLibCommon/TComSlice.h	/^    Int offset[2]; \/* two chroma components *\/$/;"	m	union:ChromaQpAdj::__anon12
offset	source/Lib/TLibCommon/TComSlice.h	/^  Int  offset;$/;"	m	struct:WPScalingParam
offset	source/Lib/TLibCommon/TypeDef.h	/^  Int offset[MAX_NUM_SAO_CLASSES];$/;"	m	struct:SAOOffset
offset0	source/App/TAppDecoder/TAppDecTop.cpp	/^setColourRemappingInfoMatrixOffset(Int (&matrixOffset)[3], Int offset0, Int offset1, Int offset2)$/;"	v	file:
offset1	source/App/TAppDecoder/TAppDecTop.cpp	/^setColourRemappingInfoMatrixOffset(Int (&matrixOffset)[3], Int offset0, Int offset1, Int offset2)$/;"	v	file:
offsetBlock	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::offsetBlock(const Int channelBitDepth, Int typeIdx, Int* offset$/;"	f	class:TComSampleAdaptiveOffset
offsetCTU	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::offsetCTU(Int ctuRsAddr, TComPicYuv* srcYuv, TComPicYuv* resYuv, SAOBlkParam& saoblkParam, TComPic* pPic)$/;"	f	class:TComSampleAdaptiveOffset
offsetParam	source/Lib/TLibCommon/TypeDef.h	/^  SAOOffset offsetParam[MAX_NUM_COMPONENT];$/;"	m	struct:SAOBlkParam
offsetSubTUCBFs	source/Lib/TLibEncoder/TEncSearch.cpp	/^static Void offsetSubTUCBFs(TComTU &rTu, const ComponentID compID)$/;"	f	file:
ompver_str	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.c	/^const char ompver_str[] = { 'I', 'N', 'F', 'O', ':', 'O', 'p', 'e', 'n', 'M',$/;"	v
ompver_str	build/CMakeFiles/FindOpenMP/OpenMPCheckVersion.cpp	/^const char ompver_str[] = { 'I', 'N', 'F', 'O', ':', 'O', 'p', 'e', 'n', 'M',$/;"	v
onlyIRAPPictures	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Bool onlyIRAPPictures()                    const { return generalIntraConstraintFlag; }$/;"	f	struct:ProfileFeatures
onlyIRAPPictures	source/Lib/TLibDecoder/TDecConformance.h	/^  Bool onlyIRAPPictures()                    const { return generalIntraConstraintFlag; }$/;"	f	struct:ProfileFeatures
open	source/Lib/Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::open( const std::string &fileName, Bool bWriteMode, const Int fileBitDepth[MAX_NUM_CHANNEL_TYPE], const Int MSBExtendedBitDepth[MAX_NUM_CHANNEL_TYPE], const Int internalBitDepth[MAX_NUM_CHANNEL_TYPE] )$/;"	f	class:TVideoIOYuv
operator !=	source/Lib/TLibCommon/TComMv.h	/^  Bool operator!= ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator !=	source/Lib/TLibCommon/TypeDef.h	/^  Bool operator!=(const TComPictureHash &other) const$/;"	f	struct:TComPictureHash
operator ()	source/Lib/Utilities/program_options_lite.h	/^      operator()(const std::string& name, OptionFunc::Func *func, const std::string& desc = "")$/;"	f	class:df::program_options_lite::OptionSpecific
operator ()	source/Lib/Utilities/program_options_lite.h	/^      operator()(const std::string& name, T& storage, T default_val, const std::string& desc = "")$/;"	f	class:df::program_options_lite::OptionSpecific
operator +	source/Lib/TLibCommon/TComMv.h	/^  const TComMv operator + ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator +=	source/Lib/TLibCommon/TComCodingStatistics.h	/^      SStat &operator+=(const SStat &src)$/;"	f	struct:TComCodingStatistics::SStat
operator +=	source/Lib/TLibCommon/TComList.h	/^  TComList& operator += ( const TComList& rcTComList)$/;"	f	class:TComList
operator +=	source/Lib/TLibCommon/TComMv.h	/^  const TComMv& operator += (const TComMv& rcMv)$/;"	f	class:TComMv
operator +=	source/Lib/TLibDecoder/AnnexBread.h	/^  AnnexBStats& operator+=(const AnnexBStats& rhs)$/;"	f	struct:AnnexBStats
operator +=	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  const SAOStatData& operator+= (const SAOStatData& src)$/;"	f	struct:SAOStatData
operator -	source/Lib/TLibCommon/TComMv.h	/^  const TComMv operator - ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator -=	source/Lib/TLibCommon/TComMv.h	/^  const TComMv& operator-= (const TComMv& rcMv)$/;"	f	class:TComMv
operator <	source/Lib/TLibCommon/SEI.h	/^    bool operator < (const CRIlut& a) const$/;"	f	struct:SEIColourRemappingInfo::CRIlut
operator <<	source/App/utils/BitrateTargeting/RuntimeError.h	/^inline std::ostream& operator<<( std::ostream& left, const RuntimeError& right )$/;"	f
operator <<	source/Lib/TLibCommon/SEI.cpp	/^std::ostream& operator<<(std::ostream  &os, RNSEIWindow const &region)$/;"	f
operator <<=	source/Lib/TLibCommon/TComMv.h	/^  const TComMv& operator<<= (const Int i)$/;"	f	class:TComMv
operator =	source/App/TAppEncoder/TAppEncCfg.cpp	/^  SMultiValueInput<T> &operator=(const SMultiValueInput<T> &userValues) { values=userValues.values; return *this; }$/;"	f	struct:SMultiValueInput
operator =	source/App/TAppEncoder/TAppEncCfg.cpp	/^  SMultiValueInput<T> &operator=(const std::vector<T> &userValues) { values=userValues; return *this; }$/;"	f	struct:SMultiValueInput
operator =	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^const SAOBlkParam& SAOBlkParam::operator= (const SAOBlkParam& src)$/;"	f	class:SAOBlkParam
operator =	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^const SAOOffset& SAOOffset::operator= (const SAOOffset& src)$/;"	f	class:SAOOffset
operator =	source/Lib/TLibEncoder/NALwrite.h	/^  OutputNALUnit& operator=(const NALUnit& src)$/;"	f	struct:OutputNALUnit
operator =	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  const SAOStatData& operator=(const SAOStatData& src)$/;"	f	struct:SAOStatData
operator ==	source/Lib/TLibCommon/TComMv.h	/^  Bool operator== ( const TComMv& rcMv ) const$/;"	f	class:TComMv
operator ==	source/Lib/TLibCommon/TypeDef.h	/^  Bool operator == (RNSEIWindow const &rhs) const$/;"	f	class:RNSEIWindow
operator ==	source/Lib/TLibCommon/TypeDef.h	/^  Bool operator == (const Window &rhs) const$/;"	f	class:Window
operator ==	source/Lib/TLibCommon/TypeDef.h	/^  Bool operator==(const TComPictureHash &other) const$/;"	f	struct:TComPictureHash
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^  static inline istream& operator >> (istream &in, Name &level)$/;"	f	namespace:Level
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^  static inline istream& operator >> (istream &in, Tier &tier)$/;"	f	namespace:Level
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline istream& operator >> (istream &in, CostMode &mode)$/;"	f	file:
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline istream& operator >> (istream &in, ScalingListMode &mode)$/;"	f	file:
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline istream& operator >> (istream &in, UIProfileName &profile)$/;"	f	file:
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline istream& operator >> (std::istream &in, SMultiValueInput<T> &values)$/;"	f	file:
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline istream& operator >> (std::istream &in, TAppEncCfg::OptionalValue<T> &value)$/;"	f	file:
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^static inline istream& operator >> (std::istream &in, std::map<T1, T2> &map)$/;"	f	file:
operator >>	source/App/TAppEncoder/TAppEncCfg.cpp	/^std::istringstream &operator>>(std::istringstream &in, GOPEntry &entry)     \/\/input$/;"	f
operator >>=	source/Lib/TLibCommon/TComMv.h	/^  const TComMv& operator>>= (const Int i)$/;"	f	class:TComMv
operator []	source/Lib/TLibCommon/TypeDef.h	/^  SAOOffset& operator[](Int compIdx){ return offsetParam[compIdx];}$/;"	f	struct:SAOBlkParam
opt	source/Lib/Utilities/program_options_lite.h	/^        OptionBase* opt;$/;"	m	struct:df::program_options_lite::Options::Names
opt_default_val	source/Lib/Utilities/program_options_lite.h	/^      T opt_default_val;$/;"	m	struct:df::program_options_lite::Option
opt_desc	source/Lib/Utilities/program_options_lite.h	/^      std::string opt_desc;$/;"	m	struct:df::program_options_lite::OptionBase
opt_list	source/Lib/Utilities/program_options_lite.h	/^      NamesPtrList opt_list;$/;"	m	struct:df::program_options_lite::Options
opt_long	source/Lib/Utilities/program_options_lite.h	/^        std::list<std::string> opt_long;$/;"	m	struct:df::program_options_lite::Options::Names
opt_long_map	source/Lib/Utilities/program_options_lite.h	/^      NamesMap opt_long_map;$/;"	m	struct:df::program_options_lite::Options
opt_prefix	source/Lib/Utilities/program_options_lite.h	/^        std::list<std::string> opt_prefix;$/;"	m	struct:df::program_options_lite::Options::Names
opt_prefix_map	source/Lib/Utilities/program_options_lite.h	/^      NamesMap opt_prefix_map;$/;"	m	struct:df::program_options_lite::Options
opt_short	source/Lib/Utilities/program_options_lite.h	/^        std::list<std::string> opt_short;$/;"	m	struct:df::program_options_lite::Options::Names
opt_short_map	source/Lib/Utilities/program_options_lite.h	/^      NamesMap opt_short_map;$/;"	m	struct:df::program_options_lite::Options
opt_storage	source/Lib/Utilities/program_options_lite.h	/^      T& opt_storage;$/;"	m	struct:df::program_options_lite::Option
opt_string	source/Lib/Utilities/program_options_lite.h	/^      std::string opt_string;$/;"	m	struct:df::program_options_lite::OptionBase
opts	source/Lib/Utilities/program_options_lite.cpp	/^      Options& opts;$/;"	m	struct:df::program_options_lite::OptionWriter	file:
origOffset	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int                   origOffset;$/;"	m	struct:TemporalFilterSourcePicInfo
os	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import os.path$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import os$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import os.path$/;"	i
os	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import os$/;"	i
outputDouble	source/App/utils/BitrateTargeting/ExtractBitratesMain.cpp	/^void outputDouble( std::ostream& left, double right )$/;"	f
outputKneePoint	source/Lib/TLibEncoder/TEncCfg.h	/^    Int outputKneePoint;$/;"	m	struct:TEncCfg::TEncSEIKneeFunctionInformation::KneePointPair
outputLambdaModifiersToMetaLog	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function outputLambdaModifiersToMetaLog {$/;"	f
outputLine	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function outputLine {$/;"	f
outputScalingListHelp	source/Lib/TLibCommon/TComSlice.cpp	/^static Void outputScalingListHelp(std::ostream &os)$/;"	f	file:
outputScalingLists	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComScalingList::outputScalingLists(std::ostream &os) const$/;"	f	class:TComScalingList
outputToMetaLogNoNewline	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function outputToMetaLogNoNewline {$/;"	f
outputToMetaLogWithNewline	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function outputToMetaLogWithNewline {$/;"	f
outputUsageAndExit	source/App/utils/BitrateTargeting/encodeCommand.sh	/^function outputUsageAndExit {$/;"	f
outputUsageAndExit	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function outputUsageAndExit {$/;"	f
outputWhat	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^    void outputWhat( std::ostream& o ) const { o << "Non-contiguous QP set exception"; }$/;"	f	class:NonContiguousQPSetException
outputWhat	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^    void outputWhat( std::ostream& o ) const { o << "POC parse exception: " << m_pocLine; }$/;"	f	class:POCParseException
outputWhat	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    void outputWhat( std::ostream& o ) const { o << "Error parsing meta log"; }$/;"	f	class:MetaLogParseException
outputWhat	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    void outputWhat( std::ostream& o ) const { o << "Error parsing targets"; }$/;"	f	class:TargetsParseException
outputWhat	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    void outputWhat( std::ostream& o ) const { o << "Error parsing the initial-adjustment parameter"; }$/;"	f	class:InitialAdjustmentParameterParseException
outputWhat	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    void outputWhat( std::ostream& o ) const { o << "Mismatched vector sizes or lambda modifier indexes"; }$/;"	f	class:MismatchedIndexesException
outputWhat	source/App/utils/BitrateTargeting/GuessLambdaModifiersMain.cpp	/^    void outputWhat( std::ostream& o ) const { o << "Wrong number of arguments"; }$/;"	f	class:WrongNumberOfArgumentsException
output_sei_message_header	source/Lib/TLibDecoder/SEIread.cpp	/^static inline Void output_sei_message_header(SEI &sei, std::ostream *pDecodedMessageOutputStream, UInt payloadSize)$/;"	f	file:
p0	source/App/TAppDecoder/TAppDecTop.cpp	/^applyColourRemappingInfoMatrix(const Int (&colourRemapCoeffs)[3], const Int postOffsetShift, const Int p0, const Int p1, const Int p2, const Int offset)$/;"	v	file:
p1	source/App/TAppDecoder/TAppDecTop.cpp	/^applyColourRemappingInfoMatrix(const Int (&colourRemapCoeffs)[3], const Int postOffsetShift, const Int p0, const Int p1, const Int p2, const Int offset)$/;"	v	file:
p2	source/App/TAppDecoder/TAppDecTop.cpp	/^applyColourRemappingInfoMatrix(const Int (&colourRemapCoeffs)[3], const Int postOffsetShift, const Int p0, const Int p1, const Int p2, const Int offset)$/;"	v	file:
pCriSEI	source/App/TAppDecoder/TAppDecTop.cpp	/^                            SEIColourRemappingInfo &pCriSEI,$/;"	v	file:
pCur	source/Lib/TLibCommon/TComRdCost.h	/^  const Pel*            pCur;$/;"	m	class:DistParam
pLevelTiersListInfo	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  const LevelTierFeatures *pLevelTiersListInfo;$/;"	m	struct:ProfileFeatures
pLevelTiersListInfo	source/Lib/TLibDecoder/TDecConformance.h	/^  const LevelTierFeatures *pLevelTiersListInfo;$/;"	m	struct:ProfileFeatures
pNaluData	source/Lib/TLibCommon/TComSlice.h	/^    std::vector<UChar>   *pNaluData; \/\/ Can be null$/;"	m	struct:ParameterSetMap::MapData
pNameString	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  const TChar            *pNameString;$/;"	m	struct:ProfileFeatures
pNameString	source/Lib/TLibDecoder/TDecConformance.h	/^  const TChar            *pNameString;$/;"	m	struct:ProfileFeatures
pOrg	source/Lib/TLibCommon/TComRdCost.h	/^  const Pel*            pOrg;$/;"	m	class:DistParam
parameterSet	source/Lib/TLibCommon/TComSlice.h	/^    Tm*                   parameterSet;$/;"	m	struct:ParameterSetMap::MapData
parent	source/Lib/Utilities/program_options_lite.h	/^      Options& parent;$/;"	m	class:df::program_options_lite::OptionSpecific
parent	source/Lib/Utilities/program_options_lite.h	/^      Options& parent;$/;"	m	struct:df::program_options_lite::OptionFunc
parse	source/Lib/Utilities/program_options_lite.h	/^      void parse(const std::string& arg, ErrorReporter& error_reporter)$/;"	f	struct:df::program_options_lite::OptionFunc
parse	source/Lib/Utilities/program_options_lite.h	/^    Option<T>::parse(const std::string& arg, ErrorReporter&)$/;"	f	class:df::program_options_lite::Option
parse	source/Lib/Utilities/program_options_lite.h	/^    Option<std::string>::parse(const std::string& arg, ErrorReporter&)$/;"	f	class:df::program_options_lite::Option
parseAccessUnitDelimiter	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void AUDReader::parseAccessUnitDelimiter(TComInputBitstream* bs, UInt &picType)$/;"	f	class:AUDReader
parseBitrateVector	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  void parseBitrateVector( std::istream& left, std::vector< double >& right )$/;"	f	namespace:__anon3
parseCUTransquantBypassFlag	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseCUTransquantBypassFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseCUTransquantBypassFlag	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseCfg	source/App/SEIRemovalApp/SEIRemovalAppCfg.cpp	/^Bool SEIRemovalAppCfg::parseCfg( Int argc, TChar* argv[] )$/;"	f	class:SEIRemovalAppCfg
parseCfg	source/App/TAppDecoder/TAppDecCfg.cpp	/^Bool TAppDecCfg::parseCfg( Int argc, TChar* argv[] )$/;"	f	class:TAppDecCfg
parseCfg	source/App/TAppEncoder/TAppEncCfg.cpp	/^Bool TAppEncCfg::parseCfg( Int argc, TChar* argv[] )$/;"	f	class:TAppEncCfg
parseCfg	source/App/TAppMCTSExtractor/TAppMctsExtCfg.cpp	/^Bool TAppMctsExtCfg::parseCfg(Int argc, TChar* argv[])$/;"	f	class:TAppMctsExtCfg
parseChromaQpAdjustment	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseChromaQpAdjustment( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseChromaQpAdjustment	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx, UInt depth )$/;"	f	class:TDecSbac
parseCoeffNxN	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseCoeffNxN( TComTU &\/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseCoeffNxN	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseCoeffNxN(  TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseConfigFile	source/Lib/Utilities/program_options_lite.cpp	/^    void parseConfigFile(Options& opts, const string& filename, ErrorReporter& error_reporter)$/;"	f	namespace:df::program_options_lite
parseCrossComponentPrediction	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseCrossComponentPrediction( class TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseCrossComponentPrediction	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseDeltaQP	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseDeltaQP( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseDeltaQP	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseExplicitRdpcmMode	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseExplicitRdpcmMode( TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseExplicitRdpcmMode	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseExplicitRdpcmMode( TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseFillerData	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void FDReader::parseFillerData(TComInputBitstream* bs, UInt &fdSize)$/;"	f	class:FDReader
parseGNU	source/Lib/Utilities/program_options_lite.cpp	/^    unsigned ArgvParser::parseGNU(unsigned argc, const char* argv[])$/;"	f	class:df::program_options_lite::ArgvParser
parseHrdParameters	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseHrdParameters(TComHRD *hrd, Bool commonInfPresentFlag, UInt maxNumSubLayersMinus1)$/;"	f	class:TDecCavlc
parseIPCMInfo	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseIPCMInfo( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIPCMInfo	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseIPCMInfo ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseInterDir	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseInterDir( TComDataCU* \/*pcCU*\/, UInt& \/*ruiInterDir*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TDecCavlc
parseInterDir	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseInterDir( TComDataCU* pcCU, UInt& ruiInterDir, UInt uiAbsPartIdx )$/;"	f	class:TDecSbac
parseIntraDirChroma	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseIntraDirChroma( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIntraDirChroma	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseIntraDirChroma( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseIntraDirLumaAng	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseIntraDirLumaAng  ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIntraDirLumaAng	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseIntraDirLumaAng  ( TComDataCU* pcCU, UInt absPartIdx, UInt depth )$/;"	f	class:TDecSbac
parseLambdaModifierMap	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  void parseLambdaModifierMap( std::istream& left, std::map< unsigned char, double >& right )$/;"	f	namespace:__anon5
parseLastSignificantXY	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseLastSignificantXY( UInt& uiPosLastX, UInt& uiPosLastY, Int width, Int height, ComponentID component, UInt uiScanIdx )$/;"	f	class:TDecSbac
parseMVPIdx	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMVPIdx( Int& \/*riMVPIdx*\/ )$/;"	f	class:TDecCavlc
parseMVPIdx	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMVPIdx      ( Int& riMVPIdx )$/;"	f	class:TDecSbac
parseMergeFlag	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMergeFlag ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/, UInt \/*uiPUIdx*\/ )$/;"	f	class:TDecCavlc
parseMergeFlag	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMergeFlag ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPUIdx )$/;"	f	class:TDecSbac
parseMergeIndex	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMergeIndex ( TComDataCU* \/*pcCU*\/, UInt& \/*ruiMergeIndex*\/ )$/;"	f	class:TDecCavlc
parseMergeIndex	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMergeIndex ( TComDataCU* pcCU, UInt& ruiMergeIndex )$/;"	f	class:TDecSbac
parseMvd	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseMvd( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiPartIdx*\/, UInt \/*uiDepth*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TDecCavlc
parseMvd	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseMvd( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth, RefPicList eRefList )$/;"	f	class:TDecSbac
parsePPS	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePPS(TComPPS* pcPPS)$/;"	f	class:TDecCavlc
parsePPS	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  parsePPS                  ( TComPPS* \/*pcPPS*\/ ) {}$/;"	f	class:TDecSbac
parsePTL	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePTL( TComPTL *rpcPTL, Bool profilePresentFlag, Int maxNumSubLayersMinus1 )$/;"	f	class:TDecCavlc
parsePartSize	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePartSize( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parsePartSize	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parsePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parsePredMode	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parsePredMode( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parsePredMode	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parsePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseProfileTier	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseProfileTier(ProfileTierLevel *ptl, const Bool bIsSubLayer)$/;"	f	class:TDecCavlc
parseQtCbf	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseQtCbf( TComTU &\/*rTu*\/, const ComponentID \/*compID*\/, const Bool \/*lowestLevel*\/ )$/;"	f	class:TDecCavlc
parseQtCbf	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TDecSbac
parseQtRootCbf	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseQtRootCbf( UInt \/*uiAbsPartIdx*\/, UInt& \/*uiQtRootCbf*\/ )$/;"	f	class:TDecCavlc
parseQtRootCbf	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseQtRootCbf( UInt uiAbsPartIdx, UInt& uiQtRootCbf )$/;"	f	class:TDecSbac
parseRefFrmIdx	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseRefFrmIdx( TComDataCU* \/*pcCU*\/, Int& \/*riRefFrmIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TDecCavlc
parseRefFrmIdx	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseRefFrmIdx( TComDataCU* pcCU, Int& riRefFrmIdx, RefPicList eRefList )$/;"	f	class:TDecSbac
parseRemainingBytes	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseRemainingBytes( Bool noTrailingBytesExpected )$/;"	f	class:TDecCavlc
parseRemainingBytes	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseRemainingBytes( Bool noTrailingBytesExpected )$/;"	f	class:TDecSbac
parseSAOBlkParam	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSAOBlkParam (SAOBlkParam& saoBlkParam$/;"	f	class:TDecSbac
parseSEImessage	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::parseSEImessage(TComInputBitstream* bs, SEIMessages& seis, const NalUnitType nalUnitType, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
parseSHORT	source/Lib/Utilities/program_options_lite.cpp	/^    unsigned ArgvParser::parseSHORT(unsigned argc, const char* argv[])$/;"	f	class:df::program_options_lite::ArgvParser
parseSPS	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSPS(TComSPS* pcSPS)$/;"	f	class:TDecCavlc
parseSPS	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  parseSPS                  ( TComSPS* \/*pcSPS*\/ ) {}$/;"	f	class:TDecSbac
parseSaoMaxUvlc	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoMaxUvlc ( UInt& val, UInt maxSymbol )$/;"	f	class:TDecSbac
parseSaoMerge	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoMerge (UInt&  ruiVal)$/;"	f	class:TDecSbac
parseSaoSign	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoSign(UInt& val)$/;"	f	class:TDecSbac
parseSaoTypeIdx	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoTypeIdx (UInt&  ruiVal)$/;"	f	class:TDecSbac
parseSaoUflc	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSaoUflc (UInt uiLength, UInt&  riVal)$/;"	f	class:TDecSbac
parseScalingList	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseScalingList(TComScalingList* scalingList)$/;"	f	class:TDecCavlc
parseScalingList	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  parseScalingList ( TComScalingList* \/*scalingList*\/ ) {}$/;"	f	class:TDecSbac
parseShortTermRefPicSet	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseShortTermRefPicSet( TComSPS* sps, TComReferencePictureSet* rps, Int idx )$/;"	f	class:TDecCavlc
parseSkipFlag	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSkipFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseSkipFlag	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseSliceHeader	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSliceHeader (TComSlice* pcSlice, ParameterSetManager *parameterSetManager, const Int prevTid0POC)$/;"	f	class:TDecCavlc
parseSliceHeader	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  parseSliceHeader          ( TComSlice* \/*pcSlice*\/, ParameterSetManager* \/*parameterSetManager*\/, const Int \/*prevTid0POC*\/) {}$/;"	f	class:TDecSbac
parseSplitFlag	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseSplitFlag     ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseSplitFlag	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseSplitFlag     ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseTerminatingBit	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseTerminatingBit( UInt& ruiBit )$/;"	f	class:TDecCavlc
parseTerminatingBit	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseTerminatingBit( UInt& ruiBit )$/;"	f	class:TDecSbac
parseTransformSkipFlags	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseTransformSkipFlags (TComTU &\/*rTu*\/, ComponentID \/*component*\/)$/;"	f	class:TDecCavlc
parseTransformSkipFlags	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseTransformSkipFlags (TComTU &rTu, ComponentID component)$/;"	f	class:TDecSbac
parseTransformSubdivFlag	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseTransformSubdivFlag( UInt& \/*ruiSubdivFlag*\/, UInt \/*uiLog2TransformBlockSize*\/ )$/;"	f	class:TDecCavlc
parseTransformSubdivFlag	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::parseTransformSubdivFlag( UInt& ruiSubdivFlag, UInt uiLog2TransformBlockSize )$/;"	f	class:TDecSbac
parseVPS	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::parseVPS(TComVPS* pcVPS)$/;"	f	class:TDecCavlc
parseVPS	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  parseVPS                  ( TComVPS* \/*pcVPS*\/ ) {}$/;"	f	class:TDecSbac
parseVUI	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void  TDecCavlc::parseVUI(TComVUI* pcVUI, TComSPS *pcSPS)$/;"	f	class:TDecCavlc
parse_from_string	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def parse_from_string(self, url_str):$/;"	m	class:VcsUrl
parse_gitignore_file	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def parse_gitignore_file(self, filenm):$/;"	m	class:SvnPropFileParser
parse_gitignore_file_content	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def parse_gitignore_file_content(self, gitignore_lines, svn_prop=None):$/;"	m	class:SvnPropFileParser
parse_property_file	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def parse_property_file(self, filenm):$/;"	m	class:SvnPropFileParser
parse_property_file_content	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def parse_property_file_content(self, svn_prop_lines):$/;"	m	class:SvnPropFileParser
parse_svn_import_id	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def parse_svn_import_id(self, comment_lines):$/;"	m	class:GitHelper
parse_version_file	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def parse_version_file(version_file, verbatim=False):$/;"	f
partIdxStepShift	source/Lib/TLibCommon/TComTU.cpp	/^static     const UInt         partIdxStepShift  [TComTU::NUMBER_OF_SPLIT_MODES] = { 0, 1, 2 };$/;"	v	file:
partSizeToString	source/Lib/TLibCommon/Debug.cpp	/^const TChar *partSizeToString[NUMBER_OF_PART_SIZES]={"2Nx2N(0)", "2NxN(1)", "Nx2N(2)", "NxN(3)", "2Nx(N\/2+3N\/2)(4)", "2Nx(3N\/2+N\/2)(5)", "(N\/2+3N\/2)x2N(6)", "(3N\/2+N\/2)x2N(7)"};$/;"	v
partialButterfly16	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterfly16(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterfly32	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterfly32(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterfly4	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterfly4(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterfly8	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterfly8(TCoeff *src, TCoeff *dst, Int shift, Int line)$/;"	f
partialButterflyInverse16	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse16(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialButterflyInverse32	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse32(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialButterflyInverse4	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse4(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialButterflyInverse8	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void partialButterflyInverse8(TCoeff *src, TCoeff *dst, Int shift, Int line, const TCoeff outputMinimum, const TCoeff outputMaximum)$/;"	f
partialObjectFlag	source/Lib/TLibCommon/SEI.h	/^    Bool partialObjectFlag;        \/\/ only valid if bPartialObjectFlagValid$/;"	m	struct:SEIAnnotatedRegions::AnnotatedRegionObject
path	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import os.path$/;"	i
path	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import os.path$/;"	i
payloadType	source/Lib/TLibCommon/SEI.h	/^    PayloadType payloadType() const { return  DEINTERLACE_FIELD_IDENTIFICATION; }$/;"	f	class:SEIDeinterlaceFieldIdentification
payloadType	source/Lib/TLibCommon/SEI.h	/^    PayloadType payloadType() const { return CONTENT_LIGHT_LEVEL_INFO; }$/;"	f	class:SEIContentLightLevelInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^    PayloadType payloadType() const { return GREEN_METADATA; }$/;"	f	class:SEIGreenMetadataInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^    PayloadType payloadType() const { return MASTERING_DISPLAY_COLOUR_VOLUME; }$/;"	f	class:SEIMasteringDisplayColourVolume
payloadType	source/Lib/TLibCommon/SEI.h	/^    PayloadType payloadType() const { return MCTS_EXTRACTION_INFO_SET; }$/;"	f	class:SEIMCTSExtractionInfoSet
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return ACTIVE_PARAMETER_SETS; }$/;"	f	class:SEIActiveParameterSets
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return ALTERNATIVE_TRANSFER_CHARACTERISTICS; }$/;"	f	class:SEIAlternativeTransferCharacteristics
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return AMBIENT_VIEWING_ENVIRONMENT; }$/;"	f	class:SEIAmbientViewingEnvironment
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return ANNOTATED_REGIONS; }$/;"	f	class:SEIAnnotatedRegions
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return BUFFERING_PERIOD; }$/;"	f	class:SEIBufferingPeriod
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return CODED_REGION_COMPLETION; }$/;"	f	class:SEICodedRegionCompletion
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return COLOUR_REMAPPING_INFO; }$/;"	f	class:SEIColourRemappingInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return CONTENT_COLOUR_VOLUME; }$/;"	f	class:SEIContentColourVolume
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return CUBEMAP_PROJECTION; }$/;"	f	class:SEICubemapProjection
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DECODED_PICTURE_HASH; }$/;"	f	class:SEIDecodedPictureHash
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DECODING_UNIT_INFO; }$/;"	f	class:SEIDecodingUnitInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DEPENDENT_RAP_INDICATION; }$/;"	f	class:SEIDependentRAPIndication
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return DISPLAY_ORIENTATION; }$/;"	f	class:SEIDisplayOrientation
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return EQUIRECTANGULAR_PROJECTION; }$/;"	f	class:SEIEquirectangularProjection
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FILLER_PAYLOAD; }$/;"	f	class:SEIFillerPayload
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FILM_GRAIN_CHARACTERISTICS; }$/;"	f	class:SEIFilmGrainCharacteristics
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FISHEYE_VIDEO_INFO; }$/;"	f	class:SEIFisheyeVideoInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return FRAME_PACKING; }$/;"	f	class:SEIFramePacking
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return KNEE_FUNCTION_INFO; }$/;"	f	class:SEIKneeFunctionInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return NO_DISPLAY; }$/;"	f	class:SEINoDisplay
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return OMNI_VIEWPORT; }$/;"	f	class:SEIOmniViewport
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PAN_SCAN_RECT; }$/;"	f	class:SEIPanScanRect
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PICTURE_SNAPSHOT; }$/;"	f	class:SEIPictureSnapshot
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PICTURE_TIMING; }$/;"	f	class:SEIPictureTiming
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return POST_FILTER_HINT; }$/;"	f	class:SEIPostFilterHint
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PROGRESSIVE_REFINEMENT_SEGMENT_END; }$/;"	f	class:SEIProgressiveRefinementSegmentEnd
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return PROGRESSIVE_REFINEMENT_SEGMENT_START; }$/;"	f	class:SEIProgressiveRefinementSegmentStart
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return RECOVERY_POINT; }$/;"	f	class:SEIRecoveryPoint
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return REGIONAL_NESTING; }$/;"	f	class:SEIRegionalNesting
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return REGION_REFRESH_INFO; }$/;"	f	class:SEIRegionRefreshInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return REGION_WISE_PACKING; }$/;"	f	class:SEIRegionWisePacking
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SCALABLE_NESTING; }$/;"	f	class:SEIScalableNesting
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SCENE_INFO; }$/;"	f	class:SEISceneInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SEGM_RECT_FRAME_PACKING; }$/;"	f	class:SEISegmentedRectFramePacking
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SHUTTER_INTERVAL_INFO; }$/;"	f	class:SEIShutterIntervalInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SOP_DESCRIPTION; }$/;"	f	class:SEISOPDescription
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return SPHERE_ROTATION; }$/;"	f	class:SEISphereRotation
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TEMPORAL_LEVEL0_INDEX; }$/;"	f	class:SEITemporalLevel0Index
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TEMP_MOTION_CONSTRAINED_TILE_SETS; }$/;"	f	class:SEITempMotionConstrainedTileSets
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TIME_CODE; }$/;"	f	class:SEITimeCode
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return TONE_MAPPING_INFO; }$/;"	f	class:SEIToneMappingInfo
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return USER_DATA_REGISTERED_ITU_T_T35; }$/;"	f	class:SEIUserDataRegistered
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const { return USER_DATA_UNREGISTERED; }$/;"	f	class:SEIUserDataUnregistered
payloadType	source/Lib/TLibCommon/SEI.h	/^  PayloadType payloadType() const {return CHROMA_RESAMPLING_FILTER_HINT;}$/;"	f	class:SEIChromaResamplingFilterHint
peekBits	source/Lib/TLibCommon/TComBitStream.h	/^  UInt        peekBits (UInt uiBits) { UInt tmp; pseudoRead(uiBits, tmp); return tmp; }$/;"	f	class:TComInputBitstream
peekBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  uint32_t peekBytes(UInt n)$/;"	f	class:InputByteStream
peekPreviousByte	source/Lib/TLibCommon/TComBitStream.h	/^  Void        peekPreviousByte( UInt &byte )$/;"	f	class:TComInputBitstream
per	source/Lib/TLibCommon/TComTrQuant.h	/^  Int per;$/;"	m	struct:QpParam
persistenceFlag	source/Lib/TLibCommon/SEI.h	/^  Bool persistenceFlag;$/;"	m	class:SEIDisplayOrientation
piRefY	source/Lib/TLibEncoder/TEncSearch.h	/^    const Pel*  piRefY;$/;"	m	struct:TEncSearch::__anon7
picBuffer	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  TComPicYuv            picBuffer;$/;"	m	struct:TemporalFilterSourcePicInfo
picDurationInTcMinus1	source/Lib/TLibCommon/TComSlice.h	/^  UInt picDurationInTcMinus1;$/;"	m	struct:HrdSubLayerInfo
platform	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import platform$/;"	i
platform	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import platform$/;"	i
platform	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import platform$/;"	i
platform	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import platform$/;"	i
plistlib	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import plistlib$/;"	i
pointFromFullMetaLogEntry	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^  Point pointFromFullMetaLogEntry( unsigned char index, const MetaLogEntry< std::vector< double > >& fullEntry )$/;"	f	namespace:__anon4
polateLambdaModifier	source/App/utils/BitrateTargeting/GuessLambdaModifiers.cpp	/^double polateLambdaModifier( double targetBitrate, const Point& point1, const Point& point2 )$/;"	f
popBack	source/Lib/TLibCommon/TComList.h	/^  C popBack()$/;"	f	class:TComList
popFront	source/Lib/TLibCommon/TComList.h	/^  C popFront()$/;"	f	class:TComList
populateBitrates	source/App/utils/BitrateTargeting/targetBitrates.sh	/^function populateBitrates {$/;"	f
posixpath	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import posixpath$/;"	i
postLut	source/App/TAppDecoder/TAppDecTop.cpp	/^                            std::vector<Int>      (&postLut)[3],$/;"	m	class:std	file:
postOffsetShift	source/App/TAppDecoder/TAppDecTop.cpp	/^applyColourRemappingInfoMatrix(const Int (&colourRemapCoeffs)[3], const Int postOffsetShift, const Int p0, const Int p1, const Int p2, const Int offset)$/;"	v	file:
preLoopFilterPicAll	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::preLoopFilterPicAll( TComPic* pcPic, UInt64& ruiDist )$/;"	f	class:TEncGOP
precompressSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::precompressSlice( TComPic* pcPic )$/;"	f	class:TEncSlice
predInterSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::predInterSearch( TComDataCU* pcCU, TComYuv* pcOrgYuv, TComYuv* pcPredYuv, TComYuv* pcResiYuv, TComYuv* pcRecoYuv DEBUG_STRING_FN_DECLARE(sDebug), Bool bUseRes, Bool bUseMRG )$/;"	f	class:TEncSearch
predIntraAng	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::predIntraAng( const ComponentID compID, UInt uiDirMode, Pel* piOrg \/* Will be null for decoding *\/, UInt uiOrgStride, Pel* piPred, UInt uiStride, TComTU &rTu, const Bool bUseFilteredPredSamples, const Bool bUseLosslessDPCM )$/;"	f	class:TComPrediction
predIntraGetPredValDC	source/Lib/TLibCommon/TComPrediction.cpp	/^Pel TComPrediction::predIntraGetPredValDC( const Pel* pSrc, Int iSrcStride, UInt iWidth, UInt iHeight)$/;"	f	class:TComPrediction
prefix_sei_messages	source/Lib/TLibCommon/SEI.h	/^  static const std::vector <SEI::PayloadType> prefix_sei_messages;$/;"	m	class:SEI
prepareForEncoderSourcePicYuv	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::prepareForEncoderSourcePicYuv()$/;"	f	class:TComPic
prepareForReconstruction	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::prepareForReconstruction()$/;"	f	class:TComPic
prepareForReconstruction	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::prepareForReconstruction()$/;"	f	class:TComPicSym
primaries	source/Lib/TLibCommon/TypeDef.h	/^  UShort    primaries[3][2];$/;"	m	struct:TComSEIMasteringDisplay
printBlock	source/Lib/TLibCommon/Debug.h	/^Void printBlock(const ValueType    *const source,$/;"	f
printBlockToStream	source/Lib/TLibCommon/Debug.cpp	/^Void printBlockToStream( std::ostream &ss, const TChar *pLinePrefix, TComYuv &src, const UInt numSubBlocksAcross, const UInt numSubBlocksUp, const UInt defWidth )$/;"	f
printBlockToStream	source/Lib/TLibCommon/Debug.h	/^Void printBlockToStream( std::ostream &ss, const TChar *pLinePrefix, const T * blkSrc, const UInt width, const UInt height, const UInt stride, const UInt subBlockWidth=0, const UInt subBlockHeight=0, const UInt defWidth=3 )$/;"	f
printCbfArray	source/Lib/TLibCommon/Debug.cpp	/^Void printCbfArray( TComDataCU* pcCU  )$/;"	f
printChromaFormat	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::printChromaFormat()$/;"	f	class:TAppEncTop
printDeltaPOC	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::printDeltaPOC() const$/;"	f	class:TComReferencePictureSet
printEnvVar	source/Lib/TLibCommon/Debug.cpp	/^Void EnvVar::printEnvVar()$/;"	f	class:EnvVar
printEnvVarInUse	source/Lib/TLibCommon/Debug.cpp	/^Void EnvVar::printEnvVarInUse()$/;"	f	class:EnvVar
printFrameMSE	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Bool printFrameMSE;$/;"	m	struct:TEncAnalyze::OutputLogControl
printHash	source/Lib/TLibEncoder/TEncGOP.cpp	/^printHash(const HashType hashType, const std::string &digestStr)$/;"	f	file:
printHexPerPOCPSNRs	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Bool printHexPerPOCPSNRs;$/;"	m	struct:TEncAnalyze::OutputLogControl
printMSEBasedSNR	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Bool printMSEBasedSNR;$/;"	m	struct:TEncAnalyze::OutputLogControl
printMSSSIM	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Bool printMSSSIM;$/;"	m	struct:TEncAnalyze::OutputLogControl
printMacroSettings	source/Lib/TLibCommon/Debug.cpp	/^Void printMacroSettings()$/;"	f
printOut	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void    printOut ( TChar cDelim, const ChromaFormat chFmt, const OutputLogControl &logctrl, const BitDepths &bitDepths )$/;"	f	class:TEncAnalyze
printOutSummary	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::printOutSummary(UInt uiNumAllPicCoded, Bool isField, const TEncAnalyze::OutputLogControl &outputLogCtrl, const BitDepths &bitDepths)$/;"	f	class:TEncGOP
printPair	source/Lib/TLibCommon/Debug.cpp	/^static inline Void printPair(const std::pair<std::string, std::string> &p)$/;"	f	file:
printRateSummary	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::printRateSummary()$/;"	f	class:TAppEncTop
printSBACCoeffData	source/Lib/TLibCommon/Debug.cpp	/^Void printSBACCoeffData(  const UInt          lastX,$/;"	f
printSequenceMSE	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Bool printSequenceMSE;$/;"	m	struct:TEncAnalyze::OutputLogControl
printSummary	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void printSummary(const ChromaFormat chFmt, const OutputLogControl &logctrl, const BitDepths &bitDepths, const std::string &sFilename)$/;"	f	class:TEncAnalyze
printSummary	source/Lib/TLibEncoder/TEncTop.h	/^  Void printSummary(Bool isField)$/;"	f	class:TEncTop
printVal	source/Lib/TLibCommon/Debug.cpp	/^static inline Void printVal(const EnvVar* env)$/;"	f	file:
printXPSNR	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Bool printXPSNR;$/;"	m	struct:TEncAnalyze::OutputLogControl
print_function	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^                tmp_file.write("from __future__ import print_function\\n")$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^from __future__ import print_function$/;"	i
print_function	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^from __future__ import print_function$/;"	i
prng	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^uint32_t SEIFilmGrainSynthesizer::prng(uint32_t x_r)$/;"	f	class:SEIFilmGrainSynthesizer
processDefaultMatrix	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComScalingList::processDefaultMatrix(UInt sizeId, UInt listId)$/;"	f	class:TComScalingList
processRefMatrix	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComScalingList::processRefMatrix( UInt sizeId, UInt listId , UInt refListId )$/;"	f	class:TComScalingList
processScalingListDec	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::processScalingListDec( const Int *coeff, Int *dequantcoeff, Int invQuantScales, UInt height, UInt width, UInt ratio, Int sizuNum, UInt dc)$/;"	f	class:TComTrQuant
processScalingListEnc	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::processScalingListEnc( Int *coeff, Int *quantcoeff, Int quantScales, UInt height, UInt width, UInt ratio, Int sizuNum, UInt dc)$/;"	f	class:TComTrQuant
process_segment	source/App/Parcat/parcat.cpp	/^std::vector<uint8_t> process_segment(const char * path, int idx, int * poc_base, int * last_idr_poc)$/;"	f
profile	source/Lib/TLibCommon/ProfileLevelTierFeatures.h	/^  Profile::Name            profile;$/;"	m	struct:ProfileFeatures
profile	source/Lib/TLibDecoder/TDecConformance.h	/^  Profile::Name            profile;$/;"	m	struct:ProfileFeatures
profileToString	source/App/TAppEncoder/TAppEncCfg.cpp	/^const TChar *profileToString(const Profile::Name profile)$/;"	f
program_options_lite	source/Lib/Utilities/program_options_lite.cpp	/^  namespace program_options_lite$/;"	n	namespace:df	file:
program_options_lite	source/Lib/Utilities/program_options_lite.h	/^  namespace program_options_lite$/;"	n	namespace:df
pseudoRead	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComInputBitstream::pseudoRead ( UInt uiNumberOfBits, UInt& ruiBits )$/;"	f	class:TComInputBitstream
psnr	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Double psnr[MAX_NUM_COMPONENT];$/;"	m	struct:TEncAnalyze::ResultData
pushBack	source/Lib/TLibCommon/TComList.h	/^  Void pushBack( const C& rcT )$/;"	f	class:TComList
pushEmulationPreventionByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  Void      pushEmulationPreventionByteLocation ( UInt pos )                         { m_emulationPreventionByteLocation.push_back( pos ); }$/;"	f	class:TComInputBitstream
pushFront	source/Lib/TLibCommon/TComList.h	/^  Void pushFront( const C& rcT )$/;"	f	class:TComList
pyhhi	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.app.cmk$/;"	i
pyhhi	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.common.util$/;"	i
pyhhi	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.app.cmkdocapp$/;"	i
pyhhi	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.common.util$/;"	i
pyhhi	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.app.cmbldup$/;"	i
pyhhi	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.common.util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^        import pyhhi.build.common.bldtools$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.vcsutil as vcsutil$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.cmksupp as cmksupp$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.system as system$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.cmkdoc as cmkdoc$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.bldtools as bldtools$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.system as system$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^            import pyhhi.build.common.android$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.system as system$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.ver as ver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.cmbldver as cmbldver$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.util as util$/;"	i
pyhhi	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.ver as ver$/;"	i
qnxnto	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.18.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
rapIdx	source/Lib/TLibCommon/SEI.h	/^  UInt rapIdx;$/;"	m	class:SEITemporalLevel0Index
rateStatsAccum	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::rateStatsAccum(const AccessUnit& au, const std::vector<UInt>& annexBsizes)$/;"	f	class:TAppEncTop
rdpcmNxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::rdpcmNxN   ( TComTU& rTu, const ComponentID compID, Pel* pcResidual, const UInt uiStride, const QpParam& cQP, TCoeff* pcCoeff, TCoeff &uiAbsSum, RDPCMMode& rdpcmMode )$/;"	f	class:TComTrQuant
re	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import re$/;"	i
re	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import re$/;"	i
read	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComInputBitstream::read (UInt uiNumberOfBits, UInt& ruiBits)$/;"	f	class:TComInputBitstream
read	source/Lib/TLibCommon/TComBitStream.h	/^  UInt read(UInt numberOfBits) { UInt tmp; read(numberOfBits, tmp); return tmp; }$/;"	f	class:TComInputBitstream
read	source/Lib/TLibDecoder/NALread.cpp	/^Void read(InputNALUnit& nalu)$/;"	f
read	source/Lib/Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::read ( TComPicYuv*  pPicYuvUser, TComPicYuv* pPicYuvTrueOrg, const InputColourSpaceConversion ipcsc, Int aiPad[2], ChromaFormat format, const Bool bClipToRec709 )$/;"	f	class:TVideoIOYuv
read2	source/App/SEIRemovalApp/SEIRemovalApp.cpp	/^Void read2(InputNALUnit& nalu)$/;"	f
readAnnotatedRegionSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readAnnotatedRegionSEI(std::istream &fic, SEIAnnotatedRegions *seiAnnoRegion, Bool &failed)$/;"	f	class:SEIEncoder
readByte	source/Lib/TLibCommon/TComBitStream.h	/^  UInt     readByte() { UInt tmp; readByte( tmp ); return tmp; }$/;"	f	class:TComInputBitstream
readByte	source/Lib/TLibCommon/TComBitStream.h	/^  Void        readByte        ( UInt &ruiBits )$/;"	f	class:TComInputBitstream
readByte	source/Lib/TLibDecoder/AnnexBread.h	/^  uint8_t readByte()$/;"	f	class:InputByteStream
readByteAlignment	source/Lib/TLibCommon/TComBitStream.cpp	/^UInt TComInputBitstream::readByteAlignment()$/;"	f	class:TComInputBitstream
readBytes	source/Lib/TLibDecoder/AnnexBread.h	/^  uint32_t readBytes(UInt n)$/;"	f	class:InputByteStream
readChromaResamplingFilterHintSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readChromaResamplingFilterHintSEI(std::istream &fic, SEIChromaResamplingFilterHint *seiChromaResamplingFilterHint, Bool &failed )$/;"	f	class:SEIEncoder
readColourRemapSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readColourRemapSEI(std::istream &fic, SEIColourRemappingInfo *seiColourRemappingInfo, Bool &failed )$/;"	f	class:SEIEncoder
readContentColourVolumeSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readContentColourVolumeSEI(std::istream &fic, SEIContentColourVolume *seiContentColourVolume, Bool &failed )$/;"	f	class:SEIEncoder
readKneeFunctionInfoSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readKneeFunctionInfoSEI(std::istream &fic, SEIKneeFunctionInfo *seiKneeFunctionInfo, Bool &failed )$/;"	f	class:SEIEncoder
readNalUnitHeader	source/Lib/TLibDecoder/NALread.cpp	/^Void readNalUnitHeader(InputNALUnit& nalu)$/;"	f
readOutTrailingBits	source/Lib/TLibCommon/TComBitStream.cpp	/^UInt TComInputBitstream::readOutTrailingBits ()$/;"	f	class:TComInputBitstream
readPlane	source/Lib/Utilities/TVideoIOYuv.cpp	/^static Bool readPlane(Pel* dst,$/;"	f	file:
readRNSEIWindow	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readRNSEIWindow(std::istream &fic, RNSEIWindowVec::iterator regionIter, Bool &failed )$/;"	f	class:SEIEncoder
readStrToEnum	source/App/TAppEncoder/TAppEncCfg.cpp	/^static istream& readStrToEnum(P map[], UInt mapLen, istream &in, T &val)$/;"	f	file:
readTokenValue	source/Lib/TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValue(T            &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValue	source/Lib/TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValue(std::vector<T> &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueAndValidate	source/Lib/TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValueAndValidate(Bool         &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueAndValidate	source/Lib/TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValueAndValidate(T            &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueAndValidate	source/Lib/TLibEncoder/SEIEncoder.cpp	/^static Void readTokenValueAndValidate(std::vector<T> &returnedValue, \/\/\/ value returned$/;"	f	file:
readTokenValueParsing	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Bool readTokenValueParsing(std::istream &is, std::string & returnedValue)$/;"	f
readTokenValueParsing	source/Lib/TLibEncoder/SEIEncoder.cpp	/^static Bool readTokenValueParsing(std::istream &is, T & returnedValue)$/;"	f	file:
readToneMappingInfoSEI	source/Lib/TLibEncoder/SEIEncoder.cpp	/^Void SEIEncoder::readToneMappingInfoSEI(std::istream &fic, SEIToneMappingInfo *seiToneMappingInfo , Bool &failed )$/;"	f	class:SEIEncoder
readValue	source/App/TAppEncoder/TAppEncCfg.cpp	/^Bool SMultiValueInput<Bool>::readValue(const TChar *&pStr, Bool &bSuccess)$/;"	f	class:SMultiValueInput
readValue	source/App/TAppEncoder/TAppEncCfg.cpp	/^Double SMultiValueInput<Double>::readValue(const TChar *&pStr, Bool &bSuccess)$/;"	f	class:SMultiValueInput
readValue	source/App/TAppEncoder/TAppEncCfg.cpp	/^Int SMultiValueInput<Int>::readValue(const TChar *&pStr, Bool &bSuccess)$/;"	f	class:SMultiValueInput
readValue	source/App/TAppEncoder/TAppEncCfg.cpp	/^UInt SMultiValueInput<UInt>::readValue(const TChar *&pStr, Bool &bSuccess)$/;"	f	class:SMultiValueInput
readValues	source/App/TAppEncoder/TAppEncCfg.cpp	/^istream& SMultiValueInput<T>::readValues(std::istream &in)$/;"	f	class:SMultiValueInput
recon	source/Lib/TLibCommon/TypeDef.h	/^  Int recon[MAX_NUM_CHANNEL_TYPE]; \/\/\/< the bit depth used for reconstructing the video$/;"	m	struct:BitDepths
reconstructBlkSAOParam	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::reconstructBlkSAOParam(SAOBlkParam& recParam, SAOBlkParam* mergeList[NUM_SAO_MERGE_TYPES])$/;"	f	class:TComSampleAdaptiveOffset
reconstructBlkSAOParams	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::reconstructBlkSAOParams(TComPic* pic, SAOBlkParam* saoBlkParams)$/;"	f	class:TComSampleAdaptiveOffset
regional_nesting_sei_messages	source/Lib/TLibCommon/SEI.h	/^  static const std::vector <SEI::PayloadType> regional_nesting_sei_messages;$/;"	m	class:SEI
releaseAllReconstructionData	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::releaseAllReconstructionData()$/;"	f	class:TComPic
releaseAllReconstructionData	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::releaseAllReconstructionData()$/;"	f	class:TComPicSym
releaseEncoderSourceImageData	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::releaseEncoderSourceImageData()$/;"	f	class:TComPic
releaseReconstructionIntermediateData	source/Lib/TLibCommon/TComPic.cpp	/^Void TComPic::releaseReconstructionIntermediateData()$/;"	f	class:TComPic
releaseReconstructionIntermediateData	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::releaseReconstructionIntermediateData()$/;"	f	class:TComPicSym
rem	source/Lib/TLibCommon/TComTrQuant.h	/^  Int rem;$/;"	m	struct:QpParam
removeHighFreq	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::removeHighFreq( const TComYuv* pcYuvSrc,$/;"	f	class:TComYuv
remove_all_extension_modules	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def remove_all_extension_modules(self, rst_module_filenm, output_rst_filenm=None):$/;"	m	class:CMakeManualRstUtil
remove_extension_module_section	cmake/CMakeBuild/bin/pyhhi/build/cmkdoc.py	/^    def remove_extension_module_section(self, rst_module_filenm, section_title="Extension Modules", output_rst_filenm=None):$/;"	m	class:CMakeManualRstUtil
remove_property	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def remove_property(self, prop):$/;"	m	class:SvnProperties
remove_readonly	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^    def remove_readonly(func, path, _excinfo):$/;"	f	function:rmtree_readonly
remove_tmp_file	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def remove_tmp_file(self, fname):$/;"	m	class:VcsUtil
replaceWithE	source/App/utils/BitrateTargeting/ExtractBitratesMain.cpp	/^void replaceWithE( std::string &out, const std::string& toFind )$/;"	f
reset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void SAOBlkParam::reset()$/;"	f	class:SAOBlkParam
reset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void SAOOffset::reset()$/;"	f	class:SAOOffset
reset	source/Lib/TLibDecoder/AnnexBread.h	/^  Void reset()$/;"	f	class:InputByteStream
reset	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  Void reset()$/;"	f	struct:SAOStatData
resetBac	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::resetBac()$/;"	f	class:TEncBinCABAC
resetBits	source/Lib/TLibCommon/TComBitCounter.h	/^  Void        resetBits             ()                                        { m_uiBitCounter = 0;               }$/;"	f	class:TComBitCounter
resetBits	source/Lib/TLibCommon/TComBitStream.h	/^  Void resetBits() { assert(0); }$/;"	f	class:TComOutputBitstream
resetBits	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::resetBits()$/;"	f	class:TEncBinCABAC
resetBits	source/Lib/TLibEncoder/TEncCavlc.h	/^  Void  resetBits             ()                { m_pcBitIf->resetBits(); }$/;"	f	class:TEncCavlc
resetBits	source/Lib/TLibEncoder/TEncEntropy.h	/^  Void    resetBits                 ()                        { m_pcEntropyCoderIf->resetBits();      }$/;"	f	class:TEncEntropy
resetBits	source/Lib/TLibEncoder/TEncSbac.h	/^  Void  resetBits              ()                { m_pcBinIf->resetBits(); m_pcBitIf->resetBits(); }$/;"	f	class:TEncSbac
resetEncoderDecisions	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^Void TEncSampleAdaptiveOffset::resetEncoderDecisions()$/;"	f	class:TEncSampleAdaptiveOffset
resetEncoderDecisions	source/Lib/TLibEncoder/TEncSlice.h	/^  Void    resetEncoderDecisions() { m_encCABACTableIdx = I_SLICE; }$/;"	f	class:TEncSlice
resetEntropy	source/Lib/TLibDecoder/TDecCAVLC.h	/^  Void  resetEntropy        ( TComSlice* \/*pcSlice*\/  )     { assert(0); };$/;"	f	class:TDecCavlc
resetEntropy	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    resetEntropy                ( TComSlice* p)           { m_pcEntropyDecoderIf->resetEntropy(p);                    }$/;"	f	class:TDecEntropy
resetEntropy	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::resetEntropy(TComSlice* pSlice)$/;"	f	class:TDecSbac
resetEntropy	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::resetEntropy(const TComSlice* \/*pSlice*\/)$/;"	f	class:TEncCavlc
resetEntropy	source/Lib/TLibEncoder/TEncEntropy.h	/^  Void    resetEntropy              (const TComSlice *pSlice) { m_pcEntropyCoderIf->resetEntropy(pSlice);  }$/;"	f	class:TEncEntropy
resetEntropy	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::resetEntropy           (const TComSlice *pSlice)$/;"	f	class:TEncSbac
resetQP	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::resetQP( TComPic* pic, Int sliceQP, Double lambda )$/;"	f	class:TEncSlice
resetToStart	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComInputBitstream::resetToStart()$/;"	f	class:TComInputBitstream
resetWpScaling	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSlice::resetWpScaling()$/;"	f	class:TComSlice
restoreGOPid	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int EfficientFieldIRAPMapping::restoreGOPid(const Int GOPid)$/;"	f	class:EfficientFieldIRAPMapping
rightOffset	source/Lib/TLibCommon/SEI.h	/^    Int rightOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
rightShift	source/Lib/TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType rightShift      (const ValueType value, const Int shift) { return (shift >= 0) ? ( value                                  >> shift) : ( value                                   << -shift); }$/;"	f
rightShiftEvenRounding	source/Lib/TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType rightShiftEvenRounding(const ValueType value, const UInt shift) { return (shift == 0) ? value : ((value + (1<<(shift-1))-1 + ((value>>shift)&1)) >> shift) ; }$/;"	f
rightShift_round	source/Lib/TLibCommon/CommonDef.h	/^template <typename ValueType> inline ValueType rightShift_round(const ValueType value, const Int shift) { return (shift >= 0) ? ((value + (ValueType(1) << (shift - 1))) >> shift) : ( value                                   << -shift); }$/;"	f
rmtree	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def rmtree(directory):$/;"	f
rmtree_readonly	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def rmtree_readonly(directory):$/;"	f
round	source/Lib/TLibCommon/TComSlice.h	/^  Int  round;$/;"	m	struct:WPScalingParam
s_acMvRefineH	source/Lib/TLibEncoder/TEncSearch.cpp	/^static const TComMv s_acMvRefineH[9] =$/;"	v	file:
s_acMvRefineQ	source/Lib/TLibEncoder/TEncSearch.cpp	/^static const TComMv s_acMvRefineQ[9] =$/;"	v	file:
s_chromaFactor	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_chromaFactor = 0.55;$/;"	m	class:TEncTemporalFilter	file:
s_chromaFactor	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_chromaFactor;$/;"	m	class:TEncTemporalFilter
s_interpolationFilter	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_interpolationFilter[16][8] =$/;"	m	class:TEncTemporalFilter	file:
s_interpolationFilter	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_interpolationFilter[16][8];$/;"	m	class:TEncTemporalFilter
s_motionVectorFactor	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_motionVectorFactor = 16;$/;"	m	class:TEncTemporalFilter	file:
s_motionVectorFactor	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_motionVectorFactor;$/;"	m	class:TEncTemporalFilter
s_padding	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_padding = 128;$/;"	m	class:TEncTemporalFilter	file:
s_padding	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_padding;$/;"	m	class:TEncTemporalFilter
s_range	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Int TEncTemporalFilter::s_range = 2;$/;"	m	class:TEncTemporalFilter	file:
s_range	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Int s_range;$/;"	m	class:TEncTemporalFilter
s_refStrengths	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_refStrengths[3][2] =$/;"	m	class:TEncTemporalFilter	file:
s_refStrengths	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_refStrengths[3][2];$/;"	m	class:TEncTemporalFilter
s_sigmaMultiplier	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_sigmaMultiplier = 9.0;$/;"	m	class:TEncTemporalFilter	file:
s_sigmaMultiplier	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_sigmaMultiplier;$/;"	m	class:TEncTemporalFilter
s_sigmaZeroPoint	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^const Double TEncTemporalFilter::s_sigmaZeroPoint = 10.0;$/;"	m	class:TEncTemporalFilter	file:
s_sigmaZeroPoint	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  static const Double s_sigmaZeroPoint;$/;"	m	class:TEncTemporalFilter
save_comment_lines_tmpf	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def save_comment_lines_tmpf(self, comment_lines, add_final_newline=True):$/;"	m	class:VcsUtil
scaleMv	source/Lib/TLibCommon/TComMv.h	/^  const TComMv scaleMv( Int iScale ) const$/;"	f	class:TComMv
scalePlane	source/Lib/Utilities/TVideoIOYuv.cpp	/^static Void scalePlane(Pel* img, const UInt stride, const UInt width, const UInt height, Int shiftbits, Pel minval, Pel maxval)$/;"	f	file:
scan	source/Lib/TLibCommon/TypeDef.h	/^  const UInt            *scan;$/;"	m	struct:TUEntropyCodingParameters
scanArgv	source/Lib/Utilities/program_options_lite.cpp	/^    scanArgv(Options& opts, unsigned argc, const char* argv[], ErrorReporter& error_reporter)$/;"	f	namespace:df::program_options_lite
scanCG	source/Lib/TLibCommon/TypeDef.h	/^  const UInt            *scanCG;$/;"	m	struct:TUEntropyCodingParameters
scanLine	source/Lib/Utilities/program_options_lite.cpp	/^    void CfgStreamParser::scanLine(string& line)$/;"	f	class:df::program_options_lite::CfgStreamParser
scanStream	source/Lib/Utilities/program_options_lite.cpp	/^    void CfgStreamParser::scanStream(istream& in)$/;"	f	class:df::program_options_lite::CfgStreamParser
scanType	source/Lib/TLibCommon/TypeDef.h	/^        COEFF_SCAN_TYPE  scanType;$/;"	m	struct:TUEntropyCodingParameters
secondsFlag	source/Lib/TLibCommon/TypeDef.h	/^  Bool secondsFlag;$/;"	m	struct:TComSEITimeSet
secondsValue	source/Lib/TLibCommon/TypeDef.h	/^  Int  secondsValue;$/;"	m	struct:TComSEITimeSet
seedLUT	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^static const uint32_t seedLUT[256] = {$/;"	v	file:
sei_read_code	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_code(std::ostream *pOS, UInt uiLength, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_flag	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_flag(std::ostream *pOS, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_scode	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_scode(std::ostream *pOS, UInt uiLength, Int& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_svlc	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_svlc(std::ostream *pOS, Int& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_uvlc	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::sei_read_uvlc(std::ostream *pOS, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
selectLambda	source/Lib/TLibCommon/TComTrQuant.h	/^  Void selectLambda(const ComponentID compIdx) { m_dLambda = m_lambdas[compIdx]; }$/;"	f	class:TComTrQuant
selectMotionLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Void    selectMotionLambda( Bool bSad, Int iAdd, Bool bIsTransquantBypass ) { m_motionLambda = (bSad ? m_dLambdaMotionSAD[(bIsTransquantBypass && m_costMode==COST_MIXED_LOSSLESS_LOSSY_CODING) ?1:0] + iAdd : m_dLambdaMotionSSE[(bIsTransquantBypass && m_costMode==COST_MIXED_LOSSLESS_LOSSY_CODING)?1:0] + iAdd); }$/;"	f	class:TComRdCost
selectReferencePictureSet	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::selectReferencePictureSet(TComSlice* slice, Int POCCurr, Int GOPid )$/;"	f	class:TEncTop
selftest	source/App/utils/annexBbytecount.cpp	/^void selftest()$/;"	f
separateFields	source/Lib/TLibEncoder/TEncTop.cpp	/^Void separateFields(Pel* org, Pel* dstField, UInt stride, UInt width, UInt height, Bool isTop)$/;"	f
set	source/Lib/TLibCommon/TComMv.h	/^  Void  set       ( Short iHor, Short iVer)     { m_iHor = iHor;  m_iVer = iVer;            }$/;"	f	class:TComMv
set	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  void set(Int nx, Int ny, Int ne) { x = nx; y = ny; error = ne; }$/;"	f	struct:MotionVector
setAccessUnitDelimiter	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setAccessUnitDelimiter(Bool val){ m_AccessUnitDelimiter = val; }$/;"	f	class:TEncCfg
setActiveParameterSetsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setActiveParameterSetsSEIEnabled ( Int b )            { m_activeParameterSetsSEIEnabled = b; }$/;"	f	class:TEncCfg
setActivity	source/Lib/TLibEncoder/TEncPic.h	/^  Void   setActivity( Double d ) { m_dActivity = d; }$/;"	f	class:TEncQPAdaptationUnit
setAdaptiveSearchRange	source/Lib/TLibEncoder/TEncSearch.h	/^  Void setAdaptiveSearchRange   ( Int iDir, Int iRefIdx, Int iSearchRange) { assert(iDir < MAX_NUM_REF_LIST_ADAPT_SR && iRefIdx<Int(MAX_IDX_ADAPT_SR)); m_aaiAdaptSR[iDir][iRefIdx] = iSearchRange; }$/;"	f	class:TEncSearch
setAll	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAll( T *p, T const & val, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx  )$/;"	f	class:TComCUMvField
setAllBitRatio	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::setAllBitRatio( Double basicLambda, Double* equaCoeffA, Double* equaCoeffB )$/;"	f	class:TEncRCSeq
setAllMv	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllMv( TComMv const & mv, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAllMvField	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllMvField( TComMvField const & mvField, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAllMvd	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllMvd( TComMv const & mvd, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAllRefIdx	source/Lib/TLibCommon/TComMotionInfo.cpp	/^Void TComCUMvField::setAllRefIdx ( Int iRefIdx, PartSize eCUMode, Int iPartAddr, UInt uiDepth, Int iPartIdx )$/;"	f	class:TComCUMvField
setAmbientViewingEnvironmentSEIAmbientLightX	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIAmbientLightX(UShort v )      { m_aveSEIAmbientLightX = v; }$/;"	f	class:TEncCfg
setAmbientViewingEnvironmentSEIAmbientLightY	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIAmbientLightY(UShort v )      { m_aveSEIAmbientLightY = v; }$/;"	f	class:TEncCfg
setAmbientViewingEnvironmentSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIEnabled (Bool b)              { m_aveSEIEnabled = b; }$/;"	f	class:TEncCfg
setAmbientViewingEnvironmentSEIIlluminance	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setAmbientViewingEnvironmentSEIIlluminance(UInt v )          { m_aveSEIAmbientIlluminance = v; }$/;"	f	class:TEncCfg
setAnnotatedRegionSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setAnnotatedRegionSEIFileRoot(const std::string &s)          { m_arSEIFileRoot = s; }$/;"	f	class:TEncCfg
setAspectRatioIdc	source/Lib/TLibCommon/TComSlice.h	/^  Void              setAspectRatioIdc(Int i)                               { m_aspectRatioIdc = i;                          }$/;"	f	class:TComVUI
setAspectRatioIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setAspectRatioIdc(Int i)                              { m_aspectRatioIdc = i; }$/;"	f	class:TEncCfg
setAspectRatioInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setAspectRatioInfoPresentFlag(Bool i)                  { m_aspectRatioInfoPresentFlag = i;              }$/;"	f	class:TComVUI
setAspectRatioInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setAspectRatioInfoPresentFlag(Bool i)                 { m_aspectRatioInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setAssociatedIRAPPOC	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setAssociatedIRAPPOC(Int iAssociatedIRAPPOC)           { m_iAssociatedIRAP = iAssociatedIRAPPOC;                       }$/;"	f	class:TComSlice
setAssociatedIRAPType	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setAssociatedIRAPType(NalUnitType associatedIRAPType)  { m_iAssociatedIRAPType = associatedIRAPType;                   }$/;"	f	class:TComSlice
setAvgActivity	source/Lib/TLibEncoder/TEncPic.h	/^  Void                   setAvgActivity( Double d )  { m_dAvgActivity = d; }$/;"	f	class:TEncPicQPAdaptationLayer
setBinCountingEnableFlag	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  Void  setBinCountingEnableFlag  ( Bool bFlag )  { m_binCountIncrement = bFlag ? 1 : 0; }$/;"	f	class:TEncBinCABAC
setBinsCoded	source/Lib/TLibCommon/ContextModel.h	/^  Void setBinsCoded(UInt val)   { m_binsCoded = val;  }$/;"	f	class:ContextModel
setBinsCoded	source/Lib/TLibEncoder/TEncBinCoderCABAC.h	/^  Void  setBinsCoded              ( UInt uiVal )  { m_uiBinsCoded = uiVal;               }$/;"	f	class:TEncBinCABAC
setBipredSearchRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setBipredSearchRange            ( Int   i )      { m_bipredSearchRange = i; }$/;"	f	class:TEncCfg
setBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setBitDepth(ChannelType type, Int u )                                           { m_bitDepths.recon[type] = u;                                         }$/;"	f	class:TComSPS
setBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setBitDepth( const ChannelType chType, Int internalBitDepthForChannel ) { m_bitDepth[chType] = internalBitDepthForChannel; }$/;"	f	class:TEncCfg
setBitDepthConstraint	source/Lib/TLibCommon/TComSlice.h	/^  Void          setBitDepthConstraint(UInt bitDepth)        { m_bitDepthConstraintValue=bitDepth;   }$/;"	f	class:ProfileTierLevel
setBitDepthConstraintValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setBitDepthConstraintValue(UInt v)                    { m_bitDepthConstraintValue=v; }$/;"	f	class:TEncCfg
setBitLeft	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void setBitLeft(Int bits)                               { m_bitsLeft = bits; }$/;"	f	class:TEncRCPic
setBitRateScale	source/Lib/TLibCommon/TComSlice.h	/^  Void    setBitRateScale( UInt value )                                              { m_bitRateScale = value;                                    }$/;"	f	class:TComHRD
setBitRateValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setBitRateValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value )   { m_HRD[layer].bitRateValueMinus1[cpbcnt][nalOrVcl] = value; }$/;"	f	class:TComHRD
setBits	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void    setBits(Double numBits)           { m_runningTotal.bits=numBits; }$/;"	f	class:TEncAnalyze
setBitsForPOC	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setBitsForPOC( UInt u )                                                         { m_uiBitsForPOC = u;                                                  }$/;"	f	class:TComSPS
setBitstream	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  Void  setBitstream ( TComInputBitstream* p )   { m_pcBitstream = p; }$/;"	f	class:SyntaxElementParser
setBitstream	source/Lib/TLibDecoder/TDecCAVLC.h	/^  Void  setBitstream        ( TComInputBitstream* p )   { m_pcBitstream = p; }$/;"	f	class:TDecCavlc
setBitstream	source/Lib/TLibDecoder/TDecEntropy.h	/^  Void    setBitstream                ( TComInputBitstream* p ) { m_pcEntropyDecoderIf->setBitstream(p);                    }$/;"	f	class:TDecEntropy
setBitstream	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  setBitstream              ( TComInputBitstream* p  ) { m_pcBitstream = p; m_pcTDecBinIf->init( p ); }$/;"	f	class:TDecSbac
setBitstream	source/Lib/TLibEncoder/SyntaxElementWriter.h	/^  Void  setBitstream          ( TComBitIf* p )  { m_pcBitIf = p;  }$/;"	f	class:SyntaxElementWriter
setBitstream	source/Lib/TLibEncoder/TEncCavlc.h	/^  Void  setBitstream          ( TComBitIf* p )  { m_pcBitIf = p;  }$/;"	f	class:TEncCavlc
setBitstream	source/Lib/TLibEncoder/TEncEntropy.h	/^  Void    setBitstream              ( TComBitIf* p )          { m_pcEntropyCoderIf->setBitstream(p);  }$/;"	f	class:TEncEntropy
setBitstream	source/Lib/TLibEncoder/TEncSbac.h	/^  Void  setBitstream           ( TComBitIf* p )  { m_pcBitIf = p; m_pcBinIf->init( p ); }$/;"	f	class:TEncSbac
setBitstreamRestrictionFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setBitstreamRestrictionFlag(Bool i)                    { m_bitstreamRestrictionFlag = i;                }$/;"	f	class:TComVUI
setBitstreamRestrictionFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setBitstreamRestrictionFlag(Bool i)                   { m_bitstreamRestrictionFlag = i; }$/;"	f	class:TEncCfg
setBorderExtension	source/Lib/TLibCommon/TComPicYuv.h	/^  Void          setBorderExtension(Bool b) { m_bIsBorderExtended = b; }$/;"	f	class:TComPicYuv
setBottomEdgePosInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  Void      setBottomEdgePosInCtus ( UInt i )            { m_bottomEdgePosInCtus = i; }$/;"	f	class:TComTile
setBufferingPeriodSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setBufferingPeriodSEIEnabled(Bool b)                         { m_bufferingPeriodSEIEnabled = b; }$/;"	f	class:TEncCfg
setCLLSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setCLLSEIEnabled(Bool b)                                     { m_cllSEIEnabled = b; }$/;"	f	class:TEncCfg
setCLLSEIMaxContentLightLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setCLLSEIMaxContentLightLevel (UShort v)                     { m_cllSEIMaxContentLevel = v; }$/;"	f	class:TEncCfg
setCLLSEIMaxPicAvgLightLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setCLLSEIMaxPicAvgLightLevel(UShort v)                       { m_cllSEIMaxPicAvgLevel = v; }$/;"	f	class:TEncCfg
setCUTransquantBypassFlagForceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setCUTransquantBypassFlagForceValue(Bool flag)        { m_CUTransquantBypassFlagForce = flag; }$/;"	f	class:TEncCfg
setCUTransquantBypassSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCUTransquantBypassSubParts( Bool flag, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCabacBypassAlignmentEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setCabacBypassAlignmentEnabledFlag(const Bool value)                            { m_cabacBypassAlignmentEnabledFlag = value;     }$/;"	f	class:TComSPSRExt
setCabacBypassAlignmentEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setCabacBypassAlignmentEnabledFlag              (const Bool value)  { m_cabacBypassAlignmentEnabledFlag = value; }$/;"	f	class:TEncCfg
setCabacInitFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setCabacInitFlag( Bool val )                           { m_cabacInitFlag = val;                                        } \/\/!< set CABAC initial flag$/;"	f	class:TComSlice
setCabacInitPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setCabacInitPresentFlag( Bool flag )                             { m_cabacInitPresentFlag = flag;                }$/;"	f	class:TComPPS
setCabacZeroWordPaddingEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setCabacZeroWordPaddingEnabled(Bool value)       { m_cabacZeroWordPaddingEnabled = value; }$/;"	f	class:TEncCfg
setCbf	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setCbf                        ( UInt uiIdx, ComponentID eType, UChar uh )                  { m_puhCbf[eType][uiIdx] = uh;               }$/;"	f	class:TComDataCU
setCbfPartRange	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfPartRange ( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setCbfSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfSubParts ( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCbfSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfSubParts( UInt uiCbf, ComponentID compID, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCbfSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCbfSubParts( const UInt uiCbf[MAX_NUM_COMPONENT], UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setCbrFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setCbrFlag( Int layer, Int cpbcnt, Int nalOrVcl, Bool value )              { m_HRD[layer].cbrFlag[cpbcnt][nalOrVcl] = value;            }$/;"	f	class:TComHRD
setCcvSEIAvgLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIAvgLuminanceValue  (Double dValue)               { m_ccvSEIAvgLuminanceValue = dValue; }$/;"	f	class:TEncCfg
setCcvSEIAvgLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIAvgLuminanceValuePresentFlag(Bool b)             { m_ccvSEIAvgLuminanceValuePresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEICancelFlag(Bool b)                               { m_ccvSEICancelFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIEnabled(Bool b)                                  { m_ccvSEIEnabled = b; }$/;"	f	class:TEncCfg
setCcvSEIMaxLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMaxLuminanceValue  (Double dValue)               { m_ccvSEIMaxLuminanceValue = dValue; }$/;"	f	class:TEncCfg
setCcvSEIMaxLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMaxLuminanceValuePresentFlag(Bool b)             { m_ccvSEIMaxLuminanceValuePresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIMinLuminanceValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMinLuminanceValue  (Double dValue)               { m_ccvSEIMinLuminanceValue = dValue; }$/;"	f	class:TEncCfg
setCcvSEIMinLuminanceValuePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIMinLuminanceValuePresentFlag(Bool b)             { m_ccvSEIMinLuminanceValuePresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPersistenceFlag(Bool b)                          { m_ccvSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIPrimariesPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPrimariesPresentFlag(Bool b)                     { m_ccvSEIPrimariesPresentFlag = b; }$/;"	f	class:TEncCfg
setCcvSEIPrimariesX	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPrimariesX(Double dValue, Int index)             { m_ccvSEIPrimariesX[index] = dValue; }$/;"	f	class:TEncCfg
setCcvSEIPrimariesY	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCcvSEIPrimariesY(Double dValue, Int index)             { m_ccvSEIPrimariesY[index] = dValue; }$/;"	f	class:TEncCfg
setCfg	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::setCfg( Bool bLFCrossTileBoundary )$/;"	f	class:TComLoopFilter
setChangedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setChangedFlag(Int psId, Bool bChanged=true)$/;"	f	class:ParameterSetMap
setCheckLDC	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setCheckLDC( Bool b )                                  { m_bCheckLDC = b;                                              }$/;"	f	class:TComSlice
setCheckLTMSBPresent	source/Lib/TLibCommon/TComPic.h	/^  Void          setCheckLTMSBPresent     (Bool b ) {m_bCheckLTMSB=b;}$/;"	f	class:TComPic
setCheckLTMSBPresent	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setCheckLTMSBPresent(Int bufferNum, Bool b)$/;"	f	class:TComReferencePictureSet
setChromaCbQpOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setChromaCbQpOffset             ( Int   i )      { m_chromaCbQpOffset = i; }$/;"	f	class:TEncCfg
setChromaCrQpOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setChromaCrQpOffset             ( Int   i )      { m_chromaCrQpOffset = i; }$/;"	f	class:TEncCfg
setChromaFormatConstraint	source/Lib/TLibCommon/TComSlice.h	/^  Void          setChromaFormatConstraint(ChromaFormat fmt) { m_chromaFormatConstraintValue=fmt;    }$/;"	f	class:ProfileTierLevel
setChromaFormatConstraintValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaFormatConstraintValue(ChromaFormat v)        { m_chromaFormatConstraintValue=v; }$/;"	f	class:TEncCfg
setChromaFormatIdc	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setChromaFormatIdc (ChromaFormat i)                                             { m_chromaFormatIdc = i;                                               }$/;"	f	class:TComSPS
setChromaFormatIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setChromaFormatIdc              ( ChromaFormat cf ) { m_chromaFormatIDC = cf; }$/;"	f	class:TEncCfg
setChromaLocInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setChromaLocInfoPresentFlag(Bool i)                    { m_chromaLocInfoPresentFlag = i;                }$/;"	f	class:TComVUI
setChromaLocInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaLocInfoPresentFlag(Bool i)                   { m_chromaLocInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setChromaQpAdj                ( Int idx, UChar val )                                       { m_ChromaQpAdj[idx] = val;                  } \/\/\/< When val = 0,   cu_chroma_qp_offset_flag=0; when val>0,   indicates cu_chroma_qp_offset_flag=1 and cu_chroma_qp_offset_idx=val-1$/;"	f	class:TComDataCU
setChromaQpAdjSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setChromaQpAdjSubParts( UChar val, Int absPartIdx, Int depth )$/;"	f	class:TComDataCU
setChromaQpOffsetListEntry	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setChromaQpOffsetListEntry( Int cuChromaQpOffsetIdxPlus1, Int cbOffset, Int crOffset )$/;"	f	class:TComPPSRExt
setChromaResamplingFilterHintEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaResamplingFilterHintEnabled(Bool i)          { m_chromaResamplingFilterHintEnabled = i;}$/;"	f	class:TEncCfg
setChromaResamplingHorFilterIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaResamplingHorFilterIdc(Int i)                { m_chromaResamplingHorFilterIdc = i;}$/;"	f	class:TEncCfg
setChromaResamplingVerFilterIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaResamplingVerFilterIdc(Int i)                { m_chromaResamplingVerFilterIdc = i;}$/;"	f	class:TEncCfg
setChromaSampleLocTypeBottomField	source/Lib/TLibCommon/TComSlice.h	/^  Void              setChromaSampleLocTypeBottomField(Int i)               { m_chromaSampleLocTypeBottomField = i;          }$/;"	f	class:TComVUI
setChromaSampleLocTypeBottomField	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaSampleLocTypeBottomField(Int i)              { m_chromaSampleLocTypeBottomField = i; }$/;"	f	class:TEncCfg
setChromaSampleLocTypeTopField	source/Lib/TLibCommon/TComSlice.h	/^  Void              setChromaSampleLocTypeTopField(Int i)                  { m_chromaSampleLocTypeTopField = i;             }$/;"	f	class:TComVUI
setChromaSampleLocTypeTopField	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setChromaSampleLocTypeTopField(Int i)                 { m_chromaSampleLocTypeTopField = i; }$/;"	f	class:TEncCfg
setClipForBiPredMeEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setClipForBiPredMeEnabled       ( Bool  b )      { m_bClipForBiPredMeEnabled = b; }$/;"	f	class:TEncCfg
setCmpSEICmpCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCmpSEICmpCancelFlag(Bool b)                            { m_cmpSEICmpCancelFlag = b; }$/;"	f	class:TEncCfg
setCmpSEICmpPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCmpSEICmpPersistenceFlag(Bool b)                       { m_cmpSEICmpPersistenceFlag = b; }$/;"	f	class:TEncCfg
setCmpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setCmpSEIEnabled(Bool b)                                  { m_cmpSEIEnabled = b; }$/;"	f	class:TEncCfg
setCodeChromaQpAdjFlag	source/Lib/TLibEncoder/TEncCu.h	/^  Void setCodeChromaQpAdjFlag( Bool b ) { m_stillToCodeChromaQpOffsetFlag = b; }$/;"	f	class:TEncCu
setCodedChromaQpAdj	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setCodedChromaQpAdj           ( SChar qp )                                                 { m_codedChromaQpAdj = qp;                   }$/;"	f	class:TComDataCU
setCodedQP	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setCodedQP                    ( SChar qp )                                                 { m_codedQP = qp;                            }$/;"	f	class:TComDataCU
setColFromL0Flag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setColFromL0Flag( Bool colFromL0 )                     { m_colFromL0Flag = colFromL0;                                  }$/;"	f	class:TComSlice
setColRefIdx	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setColRefIdx( UInt refIdx)                             { m_colRefIdx = refIdx;                                         }$/;"	f	class:TComSlice
setColourDescriptionPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setColourDescriptionPresentFlag(Bool i)                { m_colourDescriptionPresentFlag = i;            }$/;"	f	class:TComVUI
setColourDescriptionPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setColourDescriptionPresentFlag(Bool i)               { m_colourDescriptionPresentFlag = i; }$/;"	f	class:TEncCfg
setColourPrimaries	source/Lib/TLibCommon/TComSlice.h	/^  Void              setColourPrimaries(Int i)                              { m_colourPrimaries = i;                         }$/;"	f	class:TComVUI
setColourPrimaries	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setColourPrimaries(Int i)                             { m_colourPrimaries = i; }$/;"	f	class:TEncCfg
setColourRemapInfoSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setColourRemapInfoSEIFileRoot( const std::string &s )        { m_colourRemapSEIFileRoot = s; }$/;"	f	class:TEncCfg
setColumnWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setColumnWidth ( const std::vector<Int>& columnWidth )       { m_tileColumnWidth = columnWidth; }$/;"	f	class:TEncCfg
setConformanceWindow	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setConformanceWindow(Window& conformanceWindow )                                { m_conformanceWindow = conformanceWindow;                             }$/;"	f	class:TComSPS
setConformanceWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setConformanceWindow (Int confLeft, Int confRight, Int confTop, Int confBottom ) { m_conformanceWindow.setWindow (confLeft, confRight, confTop, confBottom); }$/;"	f	class:TEncCfg
setConstrainedIntraPred	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setConstrainedIntraPred( Bool b )                                { m_bConstrainedIntraPred = b;                  }$/;"	f	class:TComPPS
setCostMode	source/Lib/TLibCommon/TComRdCost.h	/^  Void    setCostMode(CostMode   m )    { m_costMode = m; }$/;"	f	class:TComRdCost
setCostMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setCostMode(CostMode m )                              { m_costMode = m; }$/;"	f	class:TEncCfg
setCostScale	source/Lib/TLibCommon/TComRdCost.h	/^  Void    setCostScale( Int iCostScale )    { m_iCostScale = iCostScale; }$/;"	f	class:TComRdCost
setCpbCntMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setCpbCntMinus1( Int layer, UInt value )                                   { m_HRD[layer].cpbCntMinus1 = value;                         }$/;"	f	class:TComHRD
setCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setCpbRemovalDelayLengthMinus1( UInt value )                               { m_cpbRemovalDelayLengthMinus1 = value;                     }$/;"	f	class:TComHRD
setCpbSaturationEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setCpbSaturationEnabled( Bool b )                     { m_RCCpbSaturationEnabled = b;   }$/;"	f	class:TEncCfg
setCpbSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setCpbSize             ( UInt ui )                    { m_RCCpbSize = ui;   }$/;"	f	class:TEncCfg
setCpbSizeScale	source/Lib/TLibCommon/TComSlice.h	/^  Void    setCpbSizeScale( UInt value )                                              { m_cpbSizeScale = value;                                    }$/;"	f	class:TComHRD
setCpbSizeValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value )   { m_HRD[layer].cpbSizeValue[cpbcnt][nalOrVcl] = value;       }$/;"	f	class:TComHRD
setCprmsPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setCprmsPresentFlag( Bool val, UInt i )              { m_cprmsPresentFlag[ i ] = val;                                   }$/;"	f	class:TComVPS
setCrossComponentPredictionAlphaPartRange	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setCrossComponentPredictionAlphaPartRange( SChar alphaValue, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setCrossComponentPredictionEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setCrossComponentPredictionEnabledFlag(Bool value)               { m_crossComponentPredictionEnabledFlag = value;  }$/;"	f	class:TComPPSRExt
setCrossComponentPredictionEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setCrossComponentPredictionEnabledFlag     (const Bool value)      { m_crossComponentPredictionEnabledFlag = value;  }$/;"	f	class:TEncCfg
setCtuRsToTsAddrMap	source/Lib/TLibCommon/TComPicSym.h	/^  Void               setCtuRsToTsAddrMap( Int ctuRsAddr, Int ctuTsOrder )  { *(m_ctuRsToTsAddrMap + ctuRsAddr) = ctuTsOrder; }$/;"	f	class:TComPicSym
setCtuTsToRsAddrMap	source/Lib/TLibCommon/TComPicSym.h	/^  Void               setCtuTsToRsAddrMap( Int ctuTsAddr, Int ctuRsAddr )   { *(m_ctuTsToRsAddrMap + ctuTsAddr) = ctuRsAddr; }$/;"	f	class:TComPicSym
setCurrSliceIdx	source/Lib/TLibCommon/TComPic.h	/^  Void          setCurrSliceIdx(UInt i)      { m_uiCurrSliceIdx = i;                   }$/;"	f	class:TComPic
setDeblockingFilterBetaOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterBetaOffsetDiv2( Int i )             { m_deblockingFilterBetaOffsetDiv2 = i;                         }$/;"	f	class:TComSlice
setDeblockingFilterBetaOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterBetaOffsetDiv2(Int val)                       { m_deblockingFilterBetaOffsetDiv2 = val;       } \/\/!< set beta offset for deblocking filter$/;"	f	class:TComPPS
setDeblockingFilterControlPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterControlPresentFlag( Bool val )                { m_deblockingFilterControlPresentFlag = val;   }$/;"	f	class:TComPPS
setDeblockingFilterDisable	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterDisable( Bool b )                   { m_deblockingFilterDisable= b;                                 }$/;"	f	class:TComSlice
setDeblockingFilterMetric	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setDeblockingFilterMetric       ( Int   i )      { m_deblockingFilterMetric    = i; }$/;"	f	class:TEncCfg
setDeblockingFilterOverrideEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterOverrideEnabledFlag( Bool val )               { m_deblockingFilterOverrideEnabledFlag = val;  }$/;"	f	class:TComPPS
setDeblockingFilterOverrideFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterOverrideFlag( Bool b )              { m_deblockingFilterOverrideFlag = b;                           }$/;"	f	class:TComSlice
setDeblockingFilterTcOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setDeblockingFilterTcOffsetDiv2( Int i )               { m_deblockingFilterTcOffsetDiv2 = i;                           }$/;"	f	class:TComSlice
setDeblockingFilterTcOffsetDiv2	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setDeblockingFilterTcOffsetDiv2(Int val)                         { m_deblockingFilterTcOffsetDiv2 = val;         } \/\/!< set tc offset for deblocking filter$/;"	f	class:TComPPS
setDecodedPictureHashSEIEnabled	source/Lib/TLibDecoder/TDecGop.h	/^  Void setDecodedPictureHashSEIEnabled(Int enabled) { m_decodedPictureHashSEIEnabled = enabled; }$/;"	f	class:TDecGop
setDecodedPictureHashSEIEnabled	source/Lib/TLibDecoder/TDecTop.h	/^  Void setDecodedPictureHashSEIEnabled(Int enabled) { m_cGopDecoder.setDecodedPictureHashSEIEnabled(enabled); }$/;"	f	class:TDecTop
setDecodedPictureHashSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setDecodedPictureHashSEIType(HashType m)                     { m_decodedPictureHashSEIType = m; }$/;"	f	class:TEncCfg
setDecodedSEIMessageOutputStream	source/Lib/TLibDecoder/TDecTop.h	/^  Void  setDecodedSEIMessageOutputStream(std::ostream *pOpStream) { m_pDecodedSEIOutputStream = pOpStream; }$/;"	f	class:TDecTop
setDecodingRefreshType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setDecodingRefreshType          ( Int   i )      { m_uiDecodingRefreshType = (UInt)i; }$/;"	f	class:TEncCfg
setDecodingUnitInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setDecodingUnitInfoSEIEnabled(Bool b)                        { m_decodingUnitInfoSEIEnabled = b;    }$/;"	f	class:TEncCfg
setDefault	source/Lib/Utilities/program_options_lite.h	/^      void setDefault()$/;"	f	struct:df::program_options_lite::Option
setDefault	source/Lib/Utilities/program_options_lite.h	/^      void setDefault()$/;"	f	struct:df::program_options_lite::OptionFunc
setDefaultDisplayWindow	source/Lib/TLibCommon/TComSlice.h	/^  Void              setDefaultDisplayWindow(Window& defaultDisplayWindow ) { m_defaultDisplayWindow = defaultDisplayWindow; }$/;"	f	class:TComVUI
setDefaultDisplayWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setDefaultDisplayWindow (Int offsetLeft, Int offsetRight, Int offsetTop, Int offsetBottom ) { m_defaultDisplayWindow.setWindow (offsetLeft, offsetRight, offsetTop, offsetBottom); }$/;"	f	class:TEncCfg
setDefaultScalingList	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComScalingList::setDefaultScalingList()$/;"	f	class:TComScalingList
setDefaults	source/Lib/Utilities/program_options_lite.cpp	/^    void setDefaults(Options& opts)$/;"	f	namespace:df::program_options_lite
setDeltaPOC	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setDeltaPOC(Int bufferNum, Int deltaPOC)$/;"	f	class:TComReferencePictureSet
setDeltaPocMSBCycleLT	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDeltaPocMSBCycleLT(Int i, Int x)          { m_deltaPOCMSBCycleLT[i] = x;        }$/;"	f	class:TComReferencePictureSet
setDeltaPocMSBPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDeltaPocMSBPresentFlag(Int i, Bool x)     { m_deltaPocMSBPresentFlag[i] = x;    }$/;"	f	class:TComReferencePictureSet
setDeltaQpRD	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setDeltaQpRD                    ( UInt  u )     {m_uiDeltaQpRD  = u; }$/;"	f	class:TEncCfg
setDeltaRIdxMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDeltaRIdxMinus1(Int x)                    { m_deltaRIdxMinus1 = x;               }$/;"	f	class:TComReferencePictureSet
setDeltaRPS	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDeltaRPS(Int x)                           { m_deltaRPS = x;                      }$/;"	f	class:TComReferencePictureSet
setDependentSliceSegmentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setDependentSliceSegmentFlag(Bool val)                 { m_dependentSliceSegmentFlag = val;                            }$/;"	f	class:TComSlice
setDependentSliceSegmentsEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setDependentSliceSegmentsEnabledFlag(Bool val)                   { m_dependentSliceSegmentsEnabledFlag = val;    }$/;"	f	class:TComPPS
setDepth	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setDepth                      ( UInt uiIdx, UChar uh )                                     { m_puhDepth[uiIdx] = uh;                    }$/;"	f	class:TComDataCU
setDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setDepth( Int iDepth )                                 { m_iDepth            = iDepth;                                 }$/;"	f	class:TComSlice
setDepthSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setDepthSubParts( UInt uiDepth, UInt uiAbsPartIdx )$/;"	f	class:TComDataCU
setDiffCuChromaQpOffsetDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setDiffCuChromaQpOffsetDepth ( UInt u )                          { m_diffCuChromaQpOffsetDepth = u;                }$/;"	f	class:TComPPSRExt
setDiffCuChromaQpOffsetDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setDiffCuChromaQpOffsetDepth    (Int value)      { m_diffCuChromaQpOffsetDepth = value; }$/;"	f	class:TEncCfg
setDisableIntraPUsInInterSlices	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setDisableIntraPUsInInterSlices ( Bool  b )      { m_bDisableIntraPUsInInterSlices = b; }$/;"	f	class:TEncCfg
setDisplayOrientationSEIAngle	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setDisplayOrientationSEIAngle(Int b)                         { m_displayOrientationSEIAngle = b; }$/;"	f	class:TEncCfg
setDistParam	source/Lib/TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( DistParam& rcDP, Int bitDepth, const Pel* p1, Int iStride1, const Pel* p2, Int iStride2, Int iWidth, Int iHeight, Bool bHadamard )$/;"	f	class:TComRdCost
setDistParam	source/Lib/TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( UInt uiBlkWidth, UInt uiBlkHeight, DFunc eDFunc, DistParam& rcDistParam )$/;"	f	class:TComRdCost
setDistParam	source/Lib/TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( const TComPattern* const pcPatternKey, const Pel* piRefY, Int iRefStride, DistParam& rcDistParam )$/;"	f	class:TComRdCost
setDistParam	source/Lib/TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setDistParam( const TComPattern* const pcPatternKey, const Pel* piRefY, Int iRefStride, Int iStep, DistParam& rcDistParam, Bool bHADME )$/;"	f	class:TComRdCost
setDistParamComp	source/Lib/TLibEncoder/TEncSearch.h	/^  inline  Void  setDistParamComp( ComponentID compIdx )  { m_cDistParam.compIdx = compIdx; }$/;"	f	class:TEncSearch
setDistortionWeight	source/Lib/TLibCommon/TComRdCost.h	/^  Void    setDistortionWeight  ( const ComponentID compID, const Double distortionWeight ) { m_distortionWeight[compID] = distortionWeight; }$/;"	f	class:TComRdCost
setDpbOutputDelayDuLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDpbOutputDelayDuLengthMinus1(UInt value )                               { m_dpbOutputDelayDuLengthMinus1 = value;                    }$/;"	f	class:TComHRD
setDpbOutputDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDpbOutputDelayLengthMinus1( UInt value )                                { m_dpbOutputDelayLengthMinus1 = value;                      }$/;"	f	class:TComHRD
setDuBitRateValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDuBitRateValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value ) { m_HRD[layer].duBitRateValue[cpbcnt][nalOrVcl] = value;     }$/;"	f	class:TComHRD
setDuCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDuCpbRemovalDelayLengthMinus1( UInt value )                             { m_duCpbRemovalDelayLengthMinus1 = value;                   }$/;"	f	class:TComHRD
setDuCpbSizeScale	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDuCpbSizeScale( UInt value )                                            { m_ducpbSizeScale = value;                                  }$/;"	f	class:TComHRD
setDuCpbSizeValueMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setDuCpbSizeValueMinus1( Int layer, Int cpbcnt, Int nalOrVcl, UInt value ) { m_HRD[layer].ducpbSizeValue[cpbcnt][nalOrVcl] = value;     }$/;"	f	class:TComHRD
setEfficientFieldIRAPEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setEfficientFieldIRAPEnabled( Bool b )                { m_bEfficientFieldIRAPEnabled = b; }$/;"	f	class:TEncCfg
setEmulationPreventionByteLocation	source/Lib/TLibCommon/TComBitStream.h	/^  Void      setEmulationPreventionByteLocation  ( const std::vector<UInt> &vec )     { m_emulationPreventionByteLocation = vec;            }$/;"	f	class:TComInputBitstream
setEnableTMVPFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setEnableTMVPFlag( Bool   b )                          { m_enableTMVPFlag = b;                                         }$/;"	f	class:TComSlice
setEncCABACTableIdx	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setEncCABACTableIdx( SliceType idx )                   { m_encCABACTableIdx = idx;                                     }$/;"	f	class:TComSlice
setEncodedFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setEncodedFlag                  ( Int  i, Bool value )  { m_GOPList[i].m_isEncoded = value; }$/;"	f	class:TEncCfg
setEntropyCoder	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::setEntropyCoder ( TEncEntropyIf* e )$/;"	f	class:TEncEntropy
setEntropyCodingSyncEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setEntropyCodingSyncEnabledFlag(Bool val)                        { m_entropyCodingSyncEnabledFlag = val;         }$/;"	f	class:TComPPS
setEntropyCodingSyncEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setEntropyCodingSyncEnabledFlag(Bool b)                      { m_entropyCodingSyncEnabledFlag = b; }$/;"	f	class:TEncCfg
setEntropyDecoder	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::setEntropyDecoder         ( TDecEntropyIf* p )$/;"	f	class:TDecEntropy
setEqualRef	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setEqualRef( RefPicList e, Int iRefIdx1, Int iRefIdx2, Bool b)$/;"	f	class:TComSlice
setErpSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEICancelFlag(Bool b)                                  { m_erpSEICancelFlag = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEIEnabled(Bool b)                                     { m_erpSEIEnabled = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIGuardBandFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEIGuardBandFlag(Bool b)                               { m_erpSEIGuardBandFlag = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIGuardBandType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEIGuardBandType(UInt b)                               { m_erpSEIGuardBandType = b; } $/;"	f	class:TEncCfg
setErpSEILeftGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEILeftGuardBandWidth(UInt b)                          { m_erpSEILeftGuardBandWidth = b; } $/;"	f	class:TEncCfg
setErpSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEIPersistenceFlag(Bool b)                             { m_erpSEIPersistenceFlag = b; }                                                         $/;"	f	class:TEncCfg
setErpSEIRightGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setErpSEIRightGuardBandWidth(UInt b)                         { m_erpSEIRightGuardBandWidth = b; } $/;"	f	class:TEncCfg
setErrScaleCoeff	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setErrScaleCoeff(UInt list, UInt size, Int qp, const Int maxLog2TrDynamicRange[MAX_NUM_CHANNEL_TYPE], const BitDepths &bitDepths)$/;"	f	class:TComTrQuant
setExplicitRdpcmModePartRange	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setExplicitRdpcmModePartRange ( UInt rdpcmMode, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setExtendedPrecisionProcessingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setExtendedPrecisionProcessingFlag(Bool value)                                  { m_extendedPrecisionProcessingFlag = value;     }$/;"	f	class:TComSPSRExt
setExtendedPrecisionProcessingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setExtendedPrecisionProcessingFlag         (Bool value)     { m_extendedPrecisionProcessingFlag = value; }$/;"	f	class:TEncCfg
setExtraRPSs	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setExtraRPSs                    ( Int   i )      { m_extraRPSs = i; }$/;"	f	class:TEncCfg
setFGCSEICompModelPresent	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFGCSEICompModelPresent(Bool b, Int index)                 { m_fgcSEICompModelPresent[index] = b; }$/;"	f	class:TEncCfg
setFGCSEICompModelValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFGCSEICompModelValue(UInt v, Int index, Int ctr, Int modelCtr) { m_fgcSEICompModelValue[index][ctr][modelCtr] = v; }$/;"	f	class:TEncCfg
setFGCSEIIntensityIntervalLowerBound	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFGCSEIIntensityIntervalLowerBound(UChar v, Int index, Int ctr) { m_fgcSEIIntensityIntervalLowerBound[index][ctr] = v; }$/;"	f	class:TEncCfg
setFGCSEIIntensityIntervalUpperBound	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFGCSEIIntensityIntervalUpperBound(UChar v, Int index, Int ctr) { m_fgcSEIIntensityIntervalUpperBound[index][ctr] = v; }$/;"	f	class:TEncCfg
setFGCSEINumIntensityIntervalMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFGCSEINumIntensityIntervalMinus1(UChar v, Int index) { m_fgcSEINumIntensityIntervalMinus1[index] = v; }$/;"	f	class:TEncCfg
setFGCSEINumModelValuesMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFGCSEINumModelValuesMinus1(UChar v, Int index) { m_fgcSEINumModelValuesMinus1[index] = v; }$/;"	f	class:TEncCfg
setFastDeltaQp	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFastDeltaQp                  ( Bool  b )     {m_bFastDeltaQP = b; }$/;"	f	class:TEncCfg
setFastDeltaQp	source/Lib/TLibEncoder/TEncCu.h	/^  Void setFastDeltaQp       ( Bool b)                 { m_bFastDeltaQP = b;         }$/;"	f	class:TEncCu
setFastInterSearchMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFastInterSearchMode          ( FastInterSearchMode m ) { m_fastInterSearchMode = m; }$/;"	f	class:TEncCfg
setFastMEAssumingSmootherMVEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFastMEAssumingSmootherMVEnabled ( Bool b )    { m_bFastMEAssumingSmootherMVEnabled = b; }$/;"	f	class:TEncCfg
setFastMEForGenBLowDelayEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFastMEForGenBLowDelayEnabled ( Bool  b )     { m_bFastMEForGenBLowDelayEnabled = b; }$/;"	f	class:TEncCfg
setFastUDIUseMPMEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFastUDIUseMPMEnabled         ( Bool  b )     { m_bFastUDIUseMPMEnabled = b; }$/;"	f	class:TEncCfg
setField	source/Lib/TLibCommon/TComPic.h	/^   Void              setField(Bool b)                     {m_isField = b;}$/;"	f	class:TComPic
setFieldSeqFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setFieldSeqFlag(Bool i)                                { m_fieldSeqFlag = i;                            }$/;"	f	class:TComVUI
setFilmGrainCharactersticsSEIBlendingModeID	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIBlendingModeID(UChar v )        { m_fgcSEIBlendingModeID = v; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEICancelFlag(Bool b)              { m_fgcSEICancelFlag = b; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIEnabled (Bool b)                { m_fgcSEIEnabled = b; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEILog2ScaleFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEILog2ScaleFactor(UChar v )       { m_fgcSEILog2ScaleFactor = v; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEIModelID	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIModelID(UChar v )               { m_fgcSEIModelID = v; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEIPersistenceFlag(Bool b)         { m_fgcSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setFilmGrainCharactersticsSEISepColourDescPresent	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFilmGrainCharactersticsSEISepColourDescPresent(Bool b)    { m_fgcSEISepColourDescPresentFlag = b; }$/;"	f	class:TEncCfg
setFinalized	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setFinalized( Bool uiVal )                             { m_bFinalized = uiVal;                                         }$/;"	f	class:TComSlice
setFirstCtuRsAddr	source/Lib/TLibCommon/TComPicSym.h	/^  Void      setFirstCtuRsAddr      ( UInt i )            { m_firstCtuRsAddr = i; }$/;"	f	class:TComTile
setFirstSliceInPicture	source/Lib/TLibDecoder/TDecTop.h	/^  Void  setFirstSliceInPicture (bool val)  { m_bFirstSliceInPicture = val; }$/;"	f	class:TDecTop
setFirstSliceInSequence	source/Lib/TLibDecoder/TDecTop.h	/^  Void  setFirstSliceInSequence (bool val) { m_bFirstSliceInSequence = val; }$/;"	f	class:TDecTop
setFixedPicRateFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setFixedPicRateFlag( Int layer, Bool flag )                                { m_HRD[layer].fixedPicRateFlag = flag;                      }$/;"	f	class:TComHRD
setFixedPicRateWithinCvsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setFixedPicRateWithinCvsFlag( Int layer, Bool flag )                       { m_HRD[layer].fixedPicRateWithinCvsFlag = flag;             }$/;"	f	class:TComHRD
setFlatScalingList	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setFlatScalingList(const Int maxLog2TrDynamicRange[MAX_NUM_CHANNEL_TYPE], const BitDepths &bitDepths)$/;"	f	class:TComTrQuant
setForceDecodeBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setForceDecodeBitDepth(UInt bitDepth)                                           { m_forceDecodeBitDepth = bitDepth;                                    }$/;"	f	class:TComSPS
setForceDecodeBitDepth	source/Lib/TLibDecoder/TDecTop.h	/^  Void  setForceDecodeBitDepth(UInt bitDepth) { m_forceDecodeBitDepth = bitDepth; }$/;"	f	class:TDecTop
setForceIntraQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setForceIntraQP        ( Bool b )                     { m_RCForceIntraQP = b;           }$/;"	f	class:TEncCfg
setFrameFieldInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setFrameFieldInfoPresentFlag(Bool i)                   { m_frameFieldInfoPresentFlag = i;               }$/;"	f	class:TComVUI
setFrameFieldInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setFrameFieldInfoPresentFlag(Bool i)                  { m_frameFieldInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setFrameLambda	source/Lib/TLibCommon/TComRdCost.h	/^  Void    setFrameLambda ( Double dLambda ) { m_dFrameLambda = dLambda; }$/;"	f	class:TComRdCost
setFrameOnlyConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setFrameOnlyConstraintFlag(Bool b)          { m_frameOnlyConstraintFlag = b;        }$/;"	f	class:ProfileTierLevel
setFrameOnlyConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setFrameOnlyConstraintFlag(Bool b)                    { m_frameOnlyConstraintFlag = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIEnabled(Bool b)                 { m_framePackingSEIEnabled = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIId	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIId(Int b)                       { m_framePackingSEIId = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIInterpretation	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIInterpretation(Int b)           { m_framePackingSEIInterpretation = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIQuincunx	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIQuincunx(Int b)                 { m_framePackingSEIQuincunx = b; }$/;"	f	class:TEncCfg
setFramePackingArrangementSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setFramePackingArrangementSEIType(Int b)                     { m_framePackingSEIType = b; }$/;"	f	class:TEncCfg
setFrameRate	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFrameRate                    ( Int   i )      { m_iFrameRate = i; }$/;"	f	class:TEncCfg
setFrameSkip	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFrameSkip                    ( UInt  i )      { m_FrameSkip = i; }$/;"	f	class:TEncCfg
setFramesToBeEncoded	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setFramesToBeEncoded            ( Int   i )      { m_framesToBeEncoded = i; }$/;"	f	class:TEncCfg
setFrmRate	source/Lib/TLibEncoder/TEncAnalyze.h	/^  Void    setFrmRate  (Double dFrameRate) { m_dFrmRate = dFrameRate; } \/\/--CFG_KDY$/;"	f	class:TEncAnalyze
setFviSEIDisabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFviSEIDisabled()                                        { m_fviSEIEnabled = false; }$/;"	f	class:TEncCfg
setFviSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setFviSEIEnabled(const TComSEIFisheyeVideoInfo& fvi)       { m_fisheyeVideoInfo=fvi; m_fviSEIEnabled=true; }$/;"	f	class:TEncCfg
setGOPSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setGOPSize                      ( Int   i )      { m_iGOPSize = i; }$/;"	f	class:TEncCfg
setGopBasedTemporalFilterEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setGopBasedTemporalFilterEnabled(Bool flag)                  { m_gopBasedTemporalFilterEnabled = flag; }$/;"	f	class:TEncCfg
setGopID	source/Lib/TLibEncoder/TEncSlice.h	/^  Void    setGopID( Int iGopID )      { m_gopID = iGopID; }$/;"	f	class:TEncSlice
setGopList	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setGopList                      ( const GOPEntry GOPList[MAX_GOP] ) {  for ( Int i = 0; i < MAX_GOP; i++ ) m_GOPList[i] = GOPList[i]; }$/;"	f	class:TEncCfg
setGradualDecodingRefreshInfoEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setGradualDecodingRefreshInfoEnabled(Bool b)                 { m_gradualDecodingRefreshInfoEnabled = b;    }$/;"	f	class:TEncCfg
setHandleCraAsBlaFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setHandleCraAsBlaFlag( Bool val )                      { m_handleCraAsBlaFlag = val;                                   }$/;"	f	class:TComSlice
setHarmonizeGopFirstFieldCoupleEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setHarmonizeGopFirstFieldCoupleEnabled( Bool b )      { m_bHarmonizeGopFirstFieldCoupleEnabled = b; }$/;"	f	class:TEncCfg
setHeight	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setHeight                     ( UInt uiIdx, UChar  uh )                                    { m_puhHeight[uiIdx] = uh;                   }$/;"	f	class:TComDataCU
setHighPrecisionOffsetsEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setHighPrecisionOffsetsEnabledFlag(Bool value)                                  { m_highPrecisionOffsetsEnabledFlag = value;     }$/;"	f	class:TComSPSRExt
setHighPrecisionOffsetsEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setHighPrecisionOffsetsEnabledFlag(Bool value) { m_highPrecisionOffsetsEnabledFlag = value; }$/;"	f	class:TEncCfg
setHor	source/Lib/TLibCommon/TComMv.h	/^  Void  setHor    ( Short i )                   { m_iHor = i;                               }$/;"	f	class:TComMv
setHrdOpSetIdx	source/Lib/TLibCommon/TComSlice.h	/^  Void              setHrdOpSetIdx( UInt val, UInt i )                   { m_hrdOpSetIdx[ i ] = val;                                        }$/;"	f	class:TComVPS
setHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setHrdParametersPresentFlag(Bool i)                    { m_hrdParametersPresentFlag = i;                }$/;"	f	class:TComVUI
setID	source/Lib/TLibCommon/TComSlice.cpp	/^Void ParameterSetMap<TComPPS>::setID(TComPPS* parameterSet, const Int psId)$/;"	f	class:ParameterSetMap
setID	source/Lib/TLibCommon/TComSlice.cpp	/^Void ParameterSetMap<TComSPS>::setID(TComSPS* parameterSet, const Int psId)$/;"	f	class:ParameterSetMap
setIPCMFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setIPCMFlag                   ( UInt uiIdx, Bool b )                                       { m_pbIPCMFlag[uiIdx] = b;                   }$/;"	f	class:TComDataCU
setIPCMFlagSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setIPCMFlagSubParts  (Bool bIpcmFlag, UInt uiAbsPartIdx, UInt uiDepth)$/;"	f	class:TComDataCU
setInitialCpbFullness	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setInitialCpbFullness  (Double f)                     { m_RCInitialCpbFullness = f;     }$/;"	f	class:TEncCfg
setInitialCpbRemovalDelayLengthMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setInitialCpbRemovalDelayLengthMinus1( UInt value )                        { m_initialCpbRemovalDelayLengthMinus1 = value;              }$/;"	f	class:TComHRD
setInitialQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setInitialQP           ( Int QP )                     { m_RCInitialQP = QP;             }$/;"	f	class:TEncCfg
setInterDir	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setInterDir                   ( UInt uiIdx, UChar  uh )                                    { m_puhInterDir[uiIdx] = uh;                 }$/;"	f	class:TComDataCU
setInterDirSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setInterDirSubParts( UInt uiDir, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setInterRPSPrediction	source/Lib/TLibCommon/TComSlice.h	/^  Void    setInterRPSPrediction(Bool flag)             { m_interRPSPrediction = flag;         }$/;"	f	class:TComReferencePictureSet
setInterlacedSourceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setInterlacedSourceFlag(Bool b)             { m_interlacedSourceFlag = b;           }$/;"	f	class:ProfileTierLevel
setInterlacedSourceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setInterlacedSourceFlag(Bool b)                       { m_interlacedSourceFlag = b; }$/;"	f	class:TEncCfg
setIntraConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setIntraConstraintFlag(Bool b)              { m_intraConstraintFlag = b;            }$/;"	f	class:ProfileTierLevel
setIntraConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setIntraConstraintFlag(Bool b)                        { m_intraConstraintFlag=b; }$/;"	f	class:TEncCfg
setIntraDirSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setIntraDirSubParts( const ChannelType channelType, const UInt dir, const UInt absPartIdx, const UInt depth )$/;"	f	class:TComDataCU
setIntraLambdaModifier	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setIntraLambdaModifier          ( const std::vector<Double> &dValue )               { m_adIntraLambdaModifier = dValue;       }$/;"	f	class:TEncCfg
setIntraPeriod	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setIntraPeriod                  ( Int   i )      { m_uiIntraPeriod = (UInt)i; }$/;"	f	class:TEncCfg
setIntraQPOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setIntraQPOffset                ( Int   i )         { m_intraQPOffset = i; }$/;"	f	class:TEncCfg
setIntraQpFactor	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setIntraQpFactor                ( Double dValue )               { m_dIntraQpFactor = dValue;              }$/;"	f	class:TEncCfg
setIntraSmoothingDisabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setIntraSmoothingDisabledFlag(Bool bValue)                                      { m_intraSmoothingDisabledFlag=bValue;           }$/;"	f	class:TComSPSRExt
setIntraSmoothingDisabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setIntraSmoothingDisabledFlag               (Bool bValue) { m_intraSmoothingDisabledFlag=bValue; }$/;"	f	class:TEncCfg
setIsChromaQpAdjCoded	source/Lib/TLibDecoder/TDecCu.h	/^  Void setIsChromaQpAdjCoded    ( Bool b )                { m_IsChromaQpAdjCoded = b;           }$/;"	f	class:TDecCu
setIsLongTerm	source/Lib/TLibCommon/TComPic.h	/^  Void          setIsLongTerm( Bool lt ) { m_bIsLongTerm = lt; }$/;"	f	class:TComPic
setIsUsedAsLongTerm	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setIsUsedAsLongTerm(Int i, Int j, Bool value)          { m_bIsUsedAsLongTerm[i][j] = value;                            }$/;"	f	class:TComSlice
setKeepHierBit	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setKeepHierBit         ( Int i )                      { m_RCKeepHierarchicalBit = i;    }$/;"	f	class:TEncCfg
setKneeFunctionInformationSEI	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setKneeFunctionInformationSEI(const TEncSEIKneeFunctionInformation &seiknee) { m_kneeFunctionInformationSEI = seiknee; }$/;"	f	class:TEncCfg
setKneeSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setKneeSEIEnabled(Int b)                                     { m_kneeSEIEnabled = b; }$/;"	f	class:TEncCfg
setLCULevelRC	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setLCULevelRC          ( Bool b )                     { m_RCLCULevelRC = b; }$/;"	f	class:TEncCfg
setLCUPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void           setLCUPara( Int level, Int LCUIdx, TRCParameter para ) { assert( level < m_numberOfLevel ); assert( LCUIdx  < m_numberOfLCU ); m_LCUPara[level][LCUIdx] = para; }$/;"	f	class:TEncRCSeq
setLFCrossSliceBoundaryFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setLFCrossSliceBoundaryFlag( Bool   val )              { m_LFCrossSliceBoundaryFlag = val;                             }$/;"	f	class:TComSlice
setLFCrossSliceBoundaryFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLFCrossSliceBoundaryFlag     ( Bool   bValue  )       { m_bLFCrossSliceBoundaryFlag = bValue; }$/;"	f	class:TEncCfg
setLFCrossTileBoundaryFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setLFCrossTileBoundaryFlag               ( Bool   val  )     { m_loopFilterAcrossTilesEnabledFlag = val; }$/;"	f	class:TEncCfg
setLambda	source/Lib/TLibCommon/TComRdCost.cpp	/^Void TComRdCost::setLambda( Double dLambda, const BitDepths &bitDepths )$/;"	f	class:TComRdCost
setLambda	source/Lib/TLibCommon/TComTrQuant.h	/^  Void setLambda(Double dLambda) { m_dLambda = dLambda;}$/;"	f	class:TComTrQuant
setLambdaFromQPEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLambdaFromQPEnable           ( Bool  b )         { m_lambdaFromQPEnable = b; }$/;"	f	class:TEncCfg
setLambdaModifier	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLambdaModifier               ( UInt uiIndex, Double dValue ) { m_adLambdaModifier[ uiIndex ] = dValue; }$/;"	f	class:TEncCfg
setLambdas	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setLambdas( const Double lambdas[MAX_NUM_COMPONENT] )  { for (Int component = 0; component < MAX_NUM_COMPONENT; component++) m_lambdas[component] = lambdas[component]; }$/;"	f	class:TComSlice
setLambdas	source/Lib/TLibCommon/TComTrQuant.h	/^  Void setLambdas(const Double lambdas[MAX_NUM_COMPONENT]) { for (UInt component = 0; component < MAX_NUM_COMPONENT; component++) m_lambdas[component] = lambdas[component]; }$/;"	f	class:TComTrQuant
setLastIDR	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setLastIDR(Int iIDRPOC)                                { m_iLastIDR = iIDRPOC;                                         }$/;"	f	class:TComSlice
setLastLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void   setLastLambda( Double lamdba ) { m_lastLambda = lamdba; }$/;"	f	class:TEncRCSeq
setLayerIdIncludedFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setLayerIdIncludedFlag(Bool v, UInt opsIdx, UInt id) { m_layerIdIncludedFlag[opsIdx][id] = v;                           }$/;"	f	class:TComVPS
setLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setLevel(Level::Tier tier, Level::Name level) { m_levelTier = tier; m_level = level; }$/;"	f	class:TEncCfg
setLevelIdc	source/Lib/TLibCommon/TComSlice.h	/^  Void          setLevelIdc(Level::Name x)                  { m_levelIdc = x;                       }$/;"	f	class:ProfileTierLevel
setList1IdxToList0Idx	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::setList1IdxToList0Idx()$/;"	f	class:TComSlice
setListsModificationPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setListsModificationPresentFlag( Bool b )                        { m_listsModificationPresentFlag = b;           }$/;"	f	class:TComPPS
setLog2DiffMaxMinCodingBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLog2DiffMaxMinCodingBlockSize(Int val)                                       { m_log2DiffMaxMinCodingBlockSize = val;                               }$/;"	f	class:TComSPS
setLog2DiffMaxMinCodingBlockSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLog2DiffMaxMinCodingBlockSize( UInt  u )      { m_log2DiffMaxMinCodingBlockSize = u; }$/;"	f	class:TEncCfg
setLog2MaxMvLengthHorizontal	source/Lib/TLibCommon/TComSlice.h	/^  Void              setLog2MaxMvLengthHorizontal(Int i)                    { m_log2MaxMvLengthHorizontal = i;               }$/;"	f	class:TComVUI
setLog2MaxMvLengthHorizontal	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setLog2MaxMvLengthHorizontal(Int i)                   { m_log2MaxMvLengthHorizontal = i; }$/;"	f	class:TEncCfg
setLog2MaxMvLengthVertical	source/Lib/TLibCommon/TComSlice.h	/^  Void              setLog2MaxMvLengthVertical(Int i)                      { m_log2MaxMvLengthVertical = i;                 }$/;"	f	class:TComVUI
setLog2MaxMvLengthVertical	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setLog2MaxMvLengthVertical(Int i)                     { m_log2MaxMvLengthVertical = i; }$/;"	f	class:TEncCfg
setLog2MaxTransformSkipBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLog2MaxTransformSkipBlockSize( UInt u )                       { m_log2MaxTransformSkipBlockSize  = u;           }$/;"	f	class:TComPPSRExt
setLog2MaxTransformSkipBlockSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setLog2MaxTransformSkipBlockSize                ( UInt u )    { m_log2MaxTransformSkipBlockSize  = u;       }$/;"	f	class:TEncCfg
setLog2MinCodingBlockSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLog2MinCodingBlockSize(Int val)                                              { m_log2MinCodingBlockSize = val;                                      }$/;"	f	class:TComSPS
setLog2ParallelMergeLevelMinus2	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLog2ParallelMergeLevelMinus2(UInt mrgLevel)                   { m_log2ParallelMergeLevelMinus2 = mrgLevel;    }$/;"	f	class:TComPPS
setLog2ParallelMergeLevelMinus2	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setLog2ParallelMergeLevelMinus2   ( UInt u )          { m_log2ParallelMergeLevelMinus2       = u;    }$/;"	f	class:TEncCfg
setLog2SaoOffsetScale	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLog2SaoOffsetScale(ChannelType type, UInt uiBitShift)         { m_log2SaoOffsetScale[type] = uiBitShift;       }$/;"	f	class:TComPPSRExt
setLog2SaoOffsetScale	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLog2SaoOffsetScale(ChannelType type, UInt uiBitShift)         { m_log2SaoOffsetScale[type] = uiBitShift; }$/;"	f	class:TEncCfg
setLongTermRefsPresent	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLongTermRefsPresent(Bool b)                                                  { m_bLongTermRefsPresent=b;                                            }$/;"	f	class:TComSPS
setLoopFilterAcrossSlicesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLoopFilterAcrossSlicesEnabledFlag( Bool bValue )              { m_loopFilterAcrossSlicesEnabledFlag = bValue; }$/;"	f	class:TComPPS
setLoopFilterAcrossTilesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLoopFilterAcrossTilesEnabledFlag(Bool b)                      { m_loopFilterAcrossTilesEnabledFlag = b;       }$/;"	f	class:TComPPS
setLoopFilterBetaOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterBetaOffset         ( Int   i )      { m_loopFilterBetaOffsetDiv2  = i; }$/;"	f	class:TEncCfg
setLoopFilterDisable	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterDisable            ( Bool  b )      { m_bLoopFilterDisable        = b; }$/;"	f	class:TEncCfg
setLoopFilterOffsetInPPS	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterOffsetInPPS        ( Bool  b )      { m_loopFilterOffsetInPPS     = b; }$/;"	f	class:TEncCfg
setLoopFilterTcOffset	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLoopFilterTcOffset           ( Int   i )      { m_loopFilterTcOffsetDiv2    = i; }$/;"	f	class:TEncCfg
setLowDelayHrdFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setLowDelayHrdFlag( Int layer, Bool flag )                                 { m_HRD[layer].lowDelayHrdFlag = flag;                       }$/;"	f	class:TComHRD
setLowerBitRateConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setLowerBitRateConstraintFlag(Bool b)       { m_lowerBitRateConstraintFlag = b;     }$/;"	f	class:ProfileTierLevel
setLowerBitRateConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setLowerBitRateConstraintFlag(Bool b)                 { m_lowerBitRateConstraintFlag=b; }$/;"	f	class:TEncCfg
setLtRefPicPocLsbSps	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setLtRefPicPocLsbSps(UInt index, UInt val)                                      { assert( index < MAX_NUM_LONG_TERM_REF_PICS ); m_ltRefPicPocLsbSps[index] = val;  }$/;"	f	class:TComSPS
setLumaLevelToDeltaQPControls	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setLumaLevelToDeltaQPControls( const LumaLevelToDeltaQPMapping &lumaLevelToDeltaQPMapping ) { m_lumaLevelToDeltaQPMapping=lumaLevelToDeltaQPMapping; }$/;"	f	class:TEncCfg
setMVPIdx	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setMVPIdx                     ( RefPicList eRefPicList, UInt uiIdx, Int iMVPIdx)           { m_apiMVPIdx[eRefPicList][uiIdx] = iMVPIdx; }$/;"	f	class:TComDataCU
setMVPIdxSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMVPIdxSubParts( Int iMVPIdx, RefPicList eRefPicList, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMVPNum	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setMVPNum                     ( RefPicList eRefPicList, UInt uiIdx, Int iMVPNum )          { m_apiMVPNum[eRefPicList][uiIdx] = iMVPNum; }$/;"	f	class:TComDataCU
setMVPNumSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMVPNumSubParts( Int iMVPNum, RefPicList eRefPicList, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMasteringDisplaySEI	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setMasteringDisplaySEI(const TComSEIMasteringDisplay &src)   { m_masteringDisplay = src; }$/;"	f	class:TEncCfg
setMatrixCoefficients	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMatrixCoefficients(Int i)                           { m_matrixCoefficients = i;                      }$/;"	f	class:TComVUI
setMatrixCoefficients	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setMatrixCoefficients(Int i)                          { m_matrixCoefficients = i; }$/;"	f	class:TEncCfg
setMaxBitsPerMinCuDenom	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxBitsPerMinCuDenom(Int i)                         { m_maxBitsPerMinCuDenom = i;                    }$/;"	f	class:TComVUI
setMaxBitsPerMinCuDenom	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setMaxBitsPerMinCuDenom(Int i)                        { m_maxBitsPerMinCuDenom = i; }$/;"	f	class:TEncCfg
setMaxBytesPerPicDenom	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxBytesPerPicDenom(Int i)                          { m_maxBytesPerPicDenom = i;                     }$/;"	f	class:TComVUI
setMaxBytesPerPicDenom	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setMaxBytesPerPicDenom(Int i)                         { m_maxBytesPerPicDenom = i; }$/;"	f	class:TEncCfg
setMaxCUHeight	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxCUHeight( UInt u )                                                        { m_uiMaxCUHeight = u;                                                 }$/;"	f	class:TComSPS
setMaxCUHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxCUHeight                  ( UInt  u )      { m_maxCUHeight = u; }$/;"	f	class:TEncCfg
setMaxCUWidth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxCUWidth( UInt u )                                                         { m_uiMaxCUWidth = u;                                                  }$/;"	f	class:TComSPS
setMaxCUWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxCUWidth                   ( UInt  u )      { m_maxCUWidth  = u; }$/;"	f	class:TEncCfg
setMaxCuDQPDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxCuDQPDepth( UInt u )                                       { m_uiMaxCuDQPDepth = u;                        }$/;"	f	class:TComPPS
setMaxCuDQPDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxCuDQPDepth                ( Int   i )      { m_iMaxCuDQPDepth = i; }$/;"	f	class:TEncCfg
setMaxDecPicBuffering	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxDecPicBuffering( UInt ui, UInt tlayer )                                   { assert(tlayer < MAX_TLAYER); m_uiMaxDecPicBuffering[tlayer] = ui;    }$/;"	f	class:TComSPS
setMaxDecPicBuffering	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxDecPicBuffering(UInt v, UInt tLayer)           { assert(tLayer < MAX_TLAYER); m_uiMaxDecPicBuffering[tLayer] = v; }$/;"	f	class:TComVPS
setMaxDecPicBuffering	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxDecPicBuffering           ( UInt u, UInt tlayer ) { m_maxDecPicBuffering[tlayer] = u;    }$/;"	f	class:TEncCfg
setMaxDeltaQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxDeltaQP                   ( Int   i )      { m_iMaxDeltaQP = i; }$/;"	f	class:TEncCfg
setMaxLatencyIncrease	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxLatencyIncrease(UInt v, UInt tLayer)           { m_uiMaxLatencyIncrease[tLayer] = v;                              }$/;"	f	class:TComVPS
setMaxLatencyIncreasePlus1	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxLatencyIncreasePlus1( UInt ui , UInt tlayer)                              { m_uiMaxLatencyIncreasePlus1[tlayer] = ui;                            }$/;"	f	class:TComSPS
setMaxLayers	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxLayers(UInt l)                                 { m_uiMaxLayers = l;                                               }$/;"	f	class:TComVPS
setMaxNuhReservedZeroLayerId	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxNuhReservedZeroLayerId(UInt v)                 { m_maxNuhReservedZeroLayerId = v;                                 }$/;"	f	class:TComVPS
setMaxNumMergeCand	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setMaxNumMergeCand(UInt val )                          { m_maxNumMergeCand = val;                                      }$/;"	f	class:TComSlice
setMaxNumMergeCand	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setMaxNumMergeCand                ( UInt u )          { m_maxNumMergeCand = u;      }$/;"	f	class:TEncCfg
setMaxNumOffsetsPerPic	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setMaxNumOffsetsPerPic                   (Int iVal)          { m_maxNumOffsetsPerPic = iVal; }$/;"	f	class:TEncCfg
setMaxOpSets	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxOpSets(UInt v)                                 { m_numOpSets = v;                                                 }$/;"	f	class:TComVPS
setMaxRefPicNum	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxRefPicNum                 ( Int iMaxRefPicNum )           { m_iMaxRefPicNum = iMaxRefPicNum;  }$/;"	f	class:TEncCfg
setMaxTLayers	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxTLayers( UInt uiMaxTLayers )                                              { assert( uiMaxTLayers <= MAX_TLAYER ); m_uiMaxTLayers = uiMaxTLayers; }$/;"	f	class:TComSPS
setMaxTLayers	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMaxTLayers(UInt t)                                { m_uiMaxTLayers = t;                                              }$/;"	f	class:TComVPS
setMaxTempLayer	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxTempLayer                 ( Int maxTempLayer )            { m_maxTempLayer = maxTempLayer;      }$/;"	f	class:TEncCfg
setMaxTotalCUDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxTotalCUDepth( UInt u )                                                    { m_uiMaxTotalCUDepth = u;                                             }$/;"	f	class:TComSPS
setMaxTotalCUDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMaxTotalCUDepth              ( UInt  u )      { m_maxTotalCUDepth = u; }$/;"	f	class:TEncCfg
setMaxTrSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setMaxTrSize( UInt u )                                                          { m_uiMaxTrSize = u;                                                   }$/;"	f	class:TComSPS
setMergeAMP	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setMergeAMP                   ( Bool b )                                                   { m_bIsMergeAMP = b;                         }$/;"	f	class:TComDataCU
setMergeFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setMergeFlag                  ( UInt uiIdx, Bool b )                                       { m_pbMergeFlag[uiIdx] = b;                  }$/;"	f	class:TComDataCU
setMergeFlagSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMergeFlagSubParts ( Bool bMergeFlag, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMergeIndex	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setMergeIndex                 ( UInt uiIdx, UInt uiMergeIndex )                            { m_puhMergeIndex[uiIdx] = uiMergeIndex;     }$/;"	f	class:TComDataCU
setMergeIndexSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setMergeIndexSubParts ( UInt uiMergeIndex, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setMinSearchWindow	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMinSearchWindow              ( Int   i )      { m_minSearchWindow = i; }$/;"	f	class:TEncCfg
setMinSpatialSegmentationIdc	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMinSpatialSegmentationIdc(Int i)                    { m_minSpatialSegmentationIdc = i;               }$/;"	f	class:TComVUI
setMinSpatialSegmentationIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setMinSpatialSegmentationIdc(Int i)                   { m_minSpatialSegmentationIdc = i; }$/;"	f	class:TEncCfg
setMotionEstimationSearchMethod	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setMotionEstimationSearchMethod ( MESearchMethod e ) { m_motionEstimationSearchMethod = e; }$/;"	f	class:TEncCfg
setMotionVectorsOverPicBoundariesFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setMotionVectorsOverPicBoundariesFlag(Bool i)          { m_motionVectorsOverPicBoundariesFlag = i;      }$/;"	f	class:TComVUI
setMotionVectorsOverPicBoundariesFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setMotionVectorsOverPicBoundariesFlag(Bool i)         { m_motionVectorsOverPicBoundariesFlag = i; }$/;"	f	class:TEncCfg
setMvField	source/Lib/TLibCommon/TComMotionInfo.h	/^  Void setMvField( TComMv const & cMv, Int iRefIdx )$/;"	f	class:TComMvField
setMvdL1ZeroFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setMvdL1ZeroFlag( Bool b)                              { m_bLMvdL1Zero = b;                                            }$/;"	f	class:TComSlice
setNalHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setNalHrdParametersPresentFlag( Bool flag )                                { m_nalHrdParametersPresentFlag = flag;                      }$/;"	f	class:TComHRD
setNalUnitType	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setNalUnitType( NalUnitType e )                        { m_eNalUnitType      = e;                                      }$/;"	f	class:TComSlice
setNeutralChromaIndicationFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setNeutralChromaIndicationFlag(Bool i)                 { m_neutralChromaIndicationFlag = i;             }$/;"	f	class:TComVUI
setNeutralChromaIndicationFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setNeutralChromaIndicationFlag(Bool i)                { m_neutralChromaIndicationFlag = i; }$/;"	f	class:TEncCfg
setNoDisplaySEITLayer	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setNoDisplaySEITLayer(Int b)                                 { m_noDisplaySEITLayer = b;    }$/;"	f	class:TEncCfg
setNoOutputPriorPicsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setNoOutputPriorPicsFlag( Bool val )                   { m_noOutputPriorPicsFlag = val;                                }$/;"	f	class:TComSlice
setNoOutputPriorPicsFlag	source/Lib/TLibDecoder/TDecTop.h	/^  Void  setNoOutputPriorPicsFlag (Bool val) { m_isNoOutputPriorPics = val; }$/;"	f	class:TDecTop
setNoRaslOutputFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setNoRaslOutputFlag( Bool val )                        { m_noRaslOutputFlag = val;                                     }$/;"	f	class:TComSlice
setNonPackedConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setNonPackedConstraintFlag(Bool b)          { m_nonPackedConstraintFlag = b;        }$/;"	f	class:ProfileTierLevel
setNonPackedConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setNonPackedConstraintFlag(Bool b)                    { m_nonPackedConstraintFlag = b; }$/;"	f	class:TEncCfg
setNumColumnsMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setNumColumnsMinus1            ( Int i )                     { m_iNumColumnsMinus1 = i; }$/;"	f	class:TEncCfg
setNumExtraSliceHeaderBits	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumExtraSliceHeaderBits(Int i)                                { m_numExtraSliceHeaderBits = i;                }$/;"	f	class:TComPPS
setNumHrdParameters	source/Lib/TLibCommon/TComSlice.h	/^  Void              setNumHrdParameters(UInt v)                          { m_numHrdParameters = v;                                          }$/;"	f	class:TComVPS
setNumLongTermRefPicSPS	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumLongTermRefPicSPS(UInt val)                                               { m_numLongTermRefPicSPS = val;                                        }$/;"	f	class:TComSPS
setNumPartition	source/Lib/TLibCommon/TComMotionInfo.h	/^  Void setNumPartition( Int iNumPart )$/;"	f	class:TComCUMvField
setNumRefIdc	source/Lib/TLibCommon/TComSlice.h	/^  Void    setNumRefIdc(Int x)                          { m_numRefIdc = x;                     }$/;"	f	class:TComReferencePictureSet
setNumRefIdx	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setNumRefIdx( RefPicList e, Int i )                    { m_aiNumRefIdx[e]    = i;                                      }$/;"	f	class:TComSlice
setNumRefIdxL0DefaultActive	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumRefIdxL0DefaultActive(UInt ui)                             { m_numRefIdxL0DefaultActive=ui;                }$/;"	f	class:TComPPS
setNumRefIdxL1DefaultActive	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumRefIdxL1DefaultActive(UInt ui)                             { m_numRefIdxL1DefaultActive=ui;                }$/;"	f	class:TComPPS
setNumReorderPics	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumReorderPics(Int i, UInt tlayer)                                           { m_numReorderPics[tlayer] = i;                                        }$/;"	f	class:TComSPS
setNumReorderPics	source/Lib/TLibCommon/TComSlice.h	/^  Void              setNumReorderPics(UInt v, UInt tLayer)               { m_numReorderPics[tLayer] = v;                                    }$/;"	f	class:TComVPS
setNumReorderPics	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setNumReorderPics               ( Int  i, UInt tlayer ) { m_numReorderPics[tlayer] = i;    }$/;"	f	class:TEncCfg
setNumRowsMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setNumRowsMinus1               ( Int i )                     { m_iNumRowsMinus1 = i; }$/;"	f	class:TEncCfg
setNumTicksPocDiffOneMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void setNumTicksPocDiffOneMinus1(Int x)      { m_numTicksPocDiffOneMinus1 = x;       }$/;"	f	class:TimingInfo
setNumTicksPocDiffOneMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setNumTicksPocDiffOneMinus1(Int x)                    { m_numTicksPocDiffOneMinus1 = x;       }$/;"	f	class:TEncCfg
setNumTileColumnsMinus1	source/Lib/TLibCommon/TComPicSym.h	/^  Void               setNumTileColumnsMinus1( Int i )                      { m_numTileColumnsMinus1 = i;    }$/;"	f	class:TComPicSym
setNumTileColumnsMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumTileColumnsMinus1(Int i)                                   { m_numTileColumnsMinus1 = i;                   }$/;"	f	class:TComPPS
setNumTileRowsMinus1	source/Lib/TLibCommon/TComPicSym.h	/^  Void               setNumTileRowsMinus1( Int i )                         { m_numTileRowsMinus1 = i;       }$/;"	f	class:TComPicSym
setNumTileRowsMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setNumTileRowsMinus1(Int i)                                      { m_numTileRowsMinus1 = i;                      }$/;"	f	class:TComPPS
setNumUnitsInTick	source/Lib/TLibCommon/TComSlice.h	/^  Void setNumUnitsInTick( UInt value )         { m_numUnitsInTick = value;             }$/;"	f	class:TimingInfo
setNumberOfCtusInFrame	source/Lib/TLibCommon/TComPicSym.h	/^  Void               setNumberOfCtusInFrame(TComPicSym *picsym, UInt numOfCtusInFrame) { picsym->m_numCtusInFrame = numOfCtusInFrame; }  \/\/\/< allows setting numOfCtusInFrame which controls memory allocations of several variables in TComPic, TComPicSym, TComLoopFilter and others. Make sure to have equal values of numOfCtusInFrame at time of creation and destruction of an object lifetime to avoid memory leaks.$/;"	f	class:MctsExtractorTComPicSym
setNumberOfLongtermPictures	source/Lib/TLibCommon/TComSlice.h	/^  Void    setNumberOfLongtermPictures(Int number)      { m_numberOfLongtermPictures = number; }$/;"	f	class:TComReferencePictureSet
setNumberOfNegativePictures	source/Lib/TLibCommon/TComSlice.h	/^  Void    setNumberOfNegativePictures(Int number)      { m_numberOfNegativePictures = number; }$/;"	f	class:TComReferencePictureSet
setNumberOfPictures	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setNumberOfPictures(Int numberOfPictures)$/;"	f	class:TComReferencePictureSet
setNumberOfPositivePictures	source/Lib/TLibCommon/TComSlice.h	/^  Void    setNumberOfPositivePictures(Int number)      { m_numberOfPositivePictures = number; }$/;"	f	class:TComReferencePictureSet
setNumberOfTileRects	source/Lib/TLibCommon/SEI.h	/^      Void setNumberOfTileRects(const Int number)$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
setNumberOfTileSets	source/Lib/TLibCommon/SEI.h	/^  Void setNumberOfTileSets(const Int number)       { m_tile_set_data.resize(number);     }$/;"	f	class:SEITempMotionConstrainedTileSets
setNumberOfTimeSets	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setNumberOfTimeSets(Int value)                               { m_timeCodeSEINumTs = value; }$/;"	f	class:TEncCfg
setOmniViewportSEIAzimuthCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIAzimuthCentre(const std::vector<Int>& vi)  { m_omniViewportSEIAzimuthCentre = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEICancelFlag(Bool b)                         { m_omniViewportSEICancelFlag = b; }$/;"	f	class:TEncCfg
setOmniViewportSEICntMinus1	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEICntMinus1(UInt b)                          { m_omniViewportSEICntMinus1 = b; }$/;"	f	class:TEncCfg
setOmniViewportSEIElevationCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIElevationCentre(const std::vector<Int>& vi){ m_omniViewportSEIElevationCentre = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIEnabled(Bool b)                            { m_omniViewportSEIEnabled = b; }$/;"	f	class:TEncCfg
setOmniViewportSEIHorRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIHorRange(const std::vector<UInt>& vi)      { m_omniViewportSEIHorRange = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEIId	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIId(UInt b)                                 { m_omniViewportSEIId = b; }$/;"	f	class:TEncCfg
setOmniViewportSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIPersistenceFlag(Bool b)                    { m_omniViewportSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setOmniViewportSEITiltCentre	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEITiltCentre(const std::vector<Int>& vi)     { m_omniViewportSEITiltCentre = vi; }$/;"	f	class:TEncCfg
setOmniViewportSEIVerRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setOmniViewportSEIVerRange(const std::vector<UInt>& vi)      { m_omniViewportSEIVerRange = vi; } $/;"	f	class:TEncCfg
setOnePictureOnlyConstraintFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setOnePictureOnlyConstraintFlag(Bool b)     { m_onePictureOnlyConstraintFlag = b;   }$/;"	f	class:ProfileTierLevel
setOnePictureOnlyConstraintFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setOnePictureOnlyConstraintFlag(Bool b)               { m_onePictureOnlyConstraintFlag=b; }$/;"	f	class:TEncCfg
setOptions	source/Lib/Utilities/program_options_lite.cpp	/^    static void setOptions(Options::NamesPtrList& opt_list, const string& value, ErrorReporter& error_reporter)$/;"	f	namespace:df::program_options_lite
setOutputFlagPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setOutputFlagPresentFlag( Bool b )                               { m_OutputFlagPresentFlag = b;                  }$/;"	f	class:TComPPS
setOutputMark	source/Lib/TLibCommon/TComPic.h	/^  Void          setOutputMark (Bool b) { m_bNeededForOutput = b;     }$/;"	f	class:TComPic
setOutsideCUPart	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setOutsideCUPart( UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setOverscanAppropriateFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setOverscanAppropriateFlag(Bool i)                     { m_overscanAppropriateFlag = i;                 }$/;"	f	class:TComVUI
setOverscanAppropriateFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setOverscanAppropriateFlag(Bool i)                    { m_overscanAppropriateFlag = i; }$/;"	f	class:TEncCfg
setOverscanInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setOverscanInfoPresentFlag(Bool i)                     { m_overscanInfoPresentFlag = i;                 }$/;"	f	class:TComVUI
setOverscanInfoPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setOverscanInfoPresentFlag(Bool i)                    { m_overscanInfoPresentFlag = i; }$/;"	f	class:TEncCfg
setPCMBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPCMBitDepth(ChannelType type, UInt u)                                        { m_pcmBitDepths[type] = u;                                            }$/;"	f	class:TComSPS
setPCMBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPCMBitDepth( const ChannelType chType, Int pcmBitDepthForChannel ) { m_PCMBitDepth[chType] = pcmBitDepthForChannel; }$/;"	f	class:TEncCfg
setPCMFilterDisableFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPCMFilterDisableFlag( Bool bValue )                                          { m_bPCMFilterDisableFlag = bValue;                                    }$/;"	f	class:TComSPS
setPCMFilterDisableFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPCMFilterDisableFlag         ( Bool  b )     {  m_bPCMFilterDisableFlag = b; }$/;"	f	class:TEncCfg
setPCMInputBitDepthFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPCMInputBitDepthFlag         ( Bool  b )     { m_bPCMInputBitDepthFlag = b; }$/;"	f	class:TEncCfg
setPCMLog2MaxSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPCMLog2MaxSize( UInt u )                                                     { m_pcmLog2MaxSize = u;                                                }$/;"	f	class:TComSPS
setPCMLog2MaxSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPCMLog2MaxSize               ( UInt u )      { m_pcmLog2MaxSize = u;      }$/;"	f	class:TEncCfg
setPCMLog2MinSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPCMLog2MinSize( UInt u )                                                     { m_uiPCMLog2MinSize = u;                                              }$/;"	f	class:TComSPS
setPCMLog2MinSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPCMLog2MinSize               ( UInt u )     { m_uiPCMLog2MinSize = u;      }$/;"	f	class:TEncCfg
setPOC	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setPOC(Int bufferNum, Int POC)$/;"	f	class:TComReferencePictureSet
setPOC	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setPOC( Int i )                                        { m_iPOC              = i; }$/;"	f	class:TComSlice
setPPS	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setPPS( const TComPPS* pcPPS )                         { m_pcPPS = pcPPS; m_iPPSId = (pcPPS) ? pcPPS->getPPSId() : -1; }$/;"	f	class:TComSlice
setPPSDeblockingFilterDisabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPPSDeblockingFilterDisabledFlag(Bool val)                     { m_ppsDeblockingFilterDisabledFlag = val;      } \/\/!< set offset for deblocking filter disabled$/;"	f	class:TComPPS
setPPSId	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setPPSId( Int PPSId )                                  { m_iPPSId = PPSId;                                             }$/;"	f	class:TComSlice
setPPSId	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPPSId(Int i)                                                  { m_PPSId = i;                                  }$/;"	f	class:TComPPS
setPad	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPad                          ( Int*  iPad                   )      { for ( Int i = 0; i < 2; i++ ) m_aiPad[i] = iPad[i]; }$/;"	f	class:TEncCfg
setParamSetChanged	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::setParamSetChanged(Int spsId, Int ppsId)$/;"	f	class:TEncTop
setPartSizeSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setPartSizeSubParts( PartSize eMode, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setPartitionSize	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setPartitionSize              ( UInt uiIdx, PartSize uh )                                  { m_pePartSize[uiIdx] = uh;                  }$/;"	f	class:TComDataCU
setPersistentRiceAdaptationEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setPersistentRiceAdaptationEnabledFlag(const Bool value)                        { m_persistentRiceAdaptationEnabledFlag = value; }$/;"	f	class:TComSPSRExt
setPersistentRiceAdaptationEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setPersistentRiceAdaptationEnabledFlag          (const Bool value)       { m_persistentRiceAdaptationEnabledFlag = value; }$/;"	f	class:TEncCfg
setPic	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setPic( TComPic* p )                                   { m_pcPic             = p;                                      }$/;"	f	class:TComSlice
setPicDurationInTcMinus1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setPicDurationInTcMinus1( Int layer, UInt value )                          { m_HRD[layer].picDurationInTcMinus1 = value;                }$/;"	f	class:TComHRD
setPicEstLambda	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void setPicEstLambda( Double lambda )                   { m_picLambda = lambda; }$/;"	f	class:TEncRCPic
setPicEstQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void setPicEstQP( Int QP )                              { m_estPicQP = QP; }$/;"	f	class:TEncRCPic
setPicHeightInLumaSamples	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPicHeightInLumaSamples( UInt u )                                             { m_picHeightInLumaSamples = u;                                        }$/;"	f	class:TComSPS
setPicInitQPMinus26	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPicInitQPMinus26( Int i )                                     { m_picInitQPMinus26 = i;                       }$/;"	f	class:TComPPS
setPicMSE	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  void  setPicMSE(Double avgMSE)                           { m_picMSE = avgMSE; }$/;"	f	class:TEncRCPic
setPicOutputFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setPicOutputFlag( Bool b   )                           { m_PicOutputFlag = b;                                          }$/;"	f	class:TComSlice
setPicPara	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void           setPicPara( Int level, TRCParameter para )     { assert( level < m_numberOfLevel ); m_picPara[level] = para; }$/;"	f	class:TEncRCSeq
setPicWidthInLumaSamples	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setPicWidthInLumaSamples( UInt u )                                              { m_picWidthInLumaSamples = u;                                         }$/;"	f	class:TComSPS
setPicYuvPred	source/Lib/TLibCommon/TComPic.h	/^  Void          setPicYuvPred( TComPicYuv* pcPicYuv )       { m_pcPicYuvPred = pcPicYuv; }$/;"	f	class:TComPic
setPicYuvResi	source/Lib/TLibCommon/TComPic.h	/^  Void          setPicYuvResi( TComPicYuv* pcPicYuv )       { m_pcPicYuvResi = pcPicYuv; }$/;"	f	class:TComPic
setPictureTimingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setPictureTimingSEIEnabled(Bool b)                           { m_pictureTimingSEIEnabled = b; }$/;"	f	class:TEncCfg
setPocLSBLT	source/Lib/TLibCommon/TComSlice.h	/^  Void    setPocLSBLT(Int i, Int x)                    { m_pocLSBLT[i] = x;                  }$/;"	f	class:TComReferencePictureSet
setPocProportionalToTimingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setPocProportionalToTimingFlag(Bool x)  { m_pocProportionalToTimingFlag = x;    }$/;"	f	class:TimingInfo
setPocProportionalToTimingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setPocProportionalToTimingFlag(Bool x)                { m_pocProportionalToTimingFlag = x;    }$/;"	f	class:TEncCfg
setPredModeSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setPredModeSubParts( PredMode eMode, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setPredictionMode	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setPredictionMode             ( UInt uiIdx, PredMode uh )                                  { m_pePredMode[uiIdx] = uh;                  }$/;"	f	class:TComDataCU
setPredictor	source/Lib/TLibCommon/TComRdCost.h	/^  Void    setPredictor( TComMv& rcMv )$/;"	f	class:TComRdCost
setPrintFrameMSE	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPrintFrameMSE                (Bool value)     { m_printFrameMSE = value;             }$/;"	f	class:TEncCfg
setPrintHexPsnr	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPrintHexPsnr                 (Bool value)     { m_printHexPsnr = value;              }$/;"	f	class:TEncCfg
setPrintMSEBasedSequencePSNR	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPrintMSEBasedSequencePSNR    (Bool value)     { m_printMSEBasedSequencePSNR = value; }$/;"	f	class:TEncCfg
setPrintMSSSIM	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPrintMSSSIM                  (Bool value)     { m_printMSSSIM = value;              }$/;"	f	class:TEncCfg
setPrintSequenceMSE	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setPrintSequenceMSE             (Bool value)     { m_printSequenceMSE = value;          }$/;"	f	class:TEncCfg
setProfile	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setProfile(Profile::Name profile) { m_profile = profile; }$/;"	f	class:TEncCfg
setProfileCompatibilityFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setProfileCompatibilityFlag(Int i, Bool x)  { m_profileCompatibilityFlag[i] = x;    }$/;"	f	class:ProfileTierLevel
setProfileIdc	source/Lib/TLibCommon/TComSlice.h	/^  Void          setProfileIdc(Profile::Name x)              { m_profileIdc = x;                     }$/;"	f	class:ProfileTierLevel
setProfileSpace	source/Lib/TLibCommon/TComSlice.h	/^  Void          setProfileSpace(Int x)                      { m_profileSpace = x;                   }$/;"	f	class:ProfileTierLevel
setProgressiveSourceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setProgressiveSourceFlag(Bool b)            { m_progressiveSourceFlag = b;          }$/;"	f	class:ProfileTierLevel
setProgressiveSourceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setProgressiveSourceFlag(Bool b)                      { m_progressiveSourceFlag = b; }$/;"	f	class:TEncCfg
setQP	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setQP                         ( UInt uiIdx, SChar value )                                  { m_phQP[uiIdx] =  value;                    }$/;"	f	class:TComDataCU
setQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setQP                           ( Int   i )      { m_iQP = i; }$/;"	f	class:TEncCfg
setQPAdaptationRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setQPAdaptationRange            ( Int   i )      { m_iQPAdaptationRange = i; }$/;"	f	class:TEncCfg
setQPSubCUs	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setQPSubCUs( Int qp, UInt absPartIdx, UInt depth, Bool &foundNonZeroCbf )$/;"	f	class:TComDataCU
setQPSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setQPSubParts( Int qp, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setQpBDOffset	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setQpBDOffset(ChannelType type, Int i)                                          { m_qpBDOffset[type] = i;                                              }$/;"	f	class:TComSPS
setQpOffset	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setQpOffset(ComponentID compID, Int i )$/;"	f	class:TComPPS
setQuadtreeTULog2MaxSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTULog2MaxSize( UInt u )                                              { m_uiQuadtreeTULog2MaxSize = u;                                       }$/;"	f	class:TComSPS
setQuadtreeTULog2MaxSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTULog2MaxSize        ( UInt  u )      { m_uiQuadtreeTULog2MaxSize = u; }$/;"	f	class:TEncCfg
setQuadtreeTULog2MinSize	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTULog2MinSize( UInt u )                                              { m_uiQuadtreeTULog2MinSize = u;                                       }$/;"	f	class:TComSPS
setQuadtreeTULog2MinSize	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTULog2MinSize        ( UInt  u )      { m_uiQuadtreeTULog2MinSize = u; }$/;"	f	class:TEncCfg
setQuadtreeTUMaxDepthInter	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTUMaxDepthInter( UInt u )                                            { m_uiQuadtreeTUMaxDepthInter = u;                                     }$/;"	f	class:TComSPS
setQuadtreeTUMaxDepthInter	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTUMaxDepthInter      ( UInt  u )      { m_uiQuadtreeTUMaxDepthInter = u; }$/;"	f	class:TEncCfg
setQuadtreeTUMaxDepthIntra	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setQuadtreeTUMaxDepthIntra( UInt u )                                            { m_uiQuadtreeTUMaxDepthIntra = u;                                     }$/;"	f	class:TComSPS
setQuadtreeTUMaxDepthIntra	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setQuadtreeTUMaxDepthIntra      ( UInt  u )      { m_uiQuadtreeTUMaxDepthIntra = u; }$/;"	f	class:TEncCfg
setRCQP	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void       setRCQP ( Int QP ) { m_RCQP = QP;   }$/;"	f	class:TEncRateCtrl
setRDOQOffset	source/Lib/TLibCommon/TComTrQuant.h	/^  Void setRDOQOffset( UInt uiRDOQOffset ) { m_uiRDOQOffset = uiRDOQOffset; }$/;"	f	class:TComTrQuant
setRDpenalty	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setRDpenalty                    ( UInt  u )     { m_rdPenalty  = u; }$/;"	f	class:TEncCfg
setRPS	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setRPS( const TComReferencePictureSet *pcRPS )         { m_pRPS = pcRPS;                                               }$/;"	f	class:TComSlice
setRPSidx	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setRPSidx( Int rpsIdx )                                { m_rpsIdx = rpsIdx;                                            }$/;"	f	class:TComSlice
setRdpcmEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setRdpcmEnabledFlag(const RDPCMSignallingMode signallingMode, const Bool value) { m_rdpcmEnabledFlag[signallingMode] = value;    }$/;"	f	class:TComSPSRExt
setRdpcmEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setRdpcmEnabledFlag                             (const RDPCMSignallingMode signallingMode, const Bool value) { m_rdpcmEnabledFlag[signallingMode] = value; }$/;"	f	class:TEncCfg
setReWriteParamSetsFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setReWriteParamSetsFlag         ( Bool  b )      { m_bReWriteParamSetsFlag = b; }$/;"	f	class:TEncCfg
setReconMark	source/Lib/TLibCommon/TComPic.h	/^  Void          setReconMark (Bool b) { m_bReconstructed = b;     }$/;"	f	class:TComPic
setRecoveryPointSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setRecoveryPointSEIEnabled(Bool b)                           { m_recoveryPointSEIEnabled = b; }$/;"	f	class:TEncCfg
setRefIdc	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setRefIdc(Int bufferNum, Int refIdc)$/;"	f	class:TComReferencePictureSet
setRefIdx	source/Lib/TLibCommon/TComMotionInfo.h	/^  Void setRefIdx( Int refIdx ) { m_iRefIdx = refIdx; }$/;"	f	class:TComMvField
setRefMatrixId	source/Lib/TLibCommon/TComSlice.h	/^  Void       setRefMatrixId(UInt sizeId, UInt listId, UInt u)                   { m_refMatrixId[sizeId][listId] = u;                         } \/\/!< set reference matrix ID$/;"	f	class:TComScalingList
setRefPOC	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setRefPOC( Int i, RefPicList e, Int iRefIdx )          { m_aiRefPOCList[e][iRefIdx] = i;                               }$/;"	f	class:TComSlice
setRefPOCList	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::setRefPOCList       ()$/;"	f	class:TComSlice
setRefPic	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setRefPic( TComPic* p, RefPicList e, Int iRefIdx )     { m_apcRefPicList[e][iRefIdx] = p;                              }$/;"	f	class:TComSlice
setRefPicList	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::setRefPicList( TComList<TComPic*>& rcListPic, Bool checkNumPocTotalCurr )$/;"	f	class:TComSlice
setRefPicListModificationFlagL0	source/Lib/TLibCommon/TComSlice.h	/^  Void    setRefPicListModificationFlagL0(Bool flag)     { m_refPicListModificationFlagL0 = flag;                                  }$/;"	f	class:TComRefPicListModification
setRefPicListModificationFlagL1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setRefPicListModificationFlagL1(Bool flag)     { m_refPicListModificationFlagL1 = flag;                                  }$/;"	f	class:TComRefPicListModification
setRefPicSetIdxL0	source/Lib/TLibCommon/TComSlice.h	/^  Void    setRefPicSetIdxL0(UInt idx, UInt refPicSetIdx) { assert(idx<REF_PIC_LIST_NUM_IDX); m_RefPicSetIdxL0[idx] = refPicSetIdx; }$/;"	f	class:TComRefPicListModification
setRefPicSetIdxL1	source/Lib/TLibCommon/TComSlice.h	/^  Void    setRefPicSetIdxL1(UInt idx, UInt refPicSetIdx) { assert(idx<REF_PIC_LIST_NUM_IDX); m_RefPicSetIdxL1[idx] = refPicSetIdx; }$/;"	f	class:TComRefPicListModification
setReferenced	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setReferenced(Bool b)                                  { m_bRefenced = b;                                              }$/;"	f	class:TComSlice
setRegionId	source/Lib/TLibCommon/TypeDef.h	/^  Void setRegionId(UInt const val)   { m_regionId = val; }$/;"	f	class:RNSEIWindow
setRegionalNestingSEIFileRoot	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setRegionalNestingSEIFileRoot( const std::string &s )        { m_regionalNestingSEIFileRoot = s; }$/;"	f	class:TEncCfg
setResetEncoderStateAfterIRAP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setResetEncoderStateAfterIRAP(Bool b)                        { m_resetEncoderStateAfterIRAP = b; }$/;"	f	class:TEncCfg
setRestrictMESampling	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setRestrictMESampling           ( Bool  b )      { m_bRestrictMESampling = b; }$/;"	f	class:TEncCfg
setRestrictedRefPicListsFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setRestrictedRefPicListsFlag(Bool b)                   { m_restrictedRefPicListsFlag = b;               }$/;"	f	class:TComVUI
setRightEdgePosInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  Void      setRightEdgePosInCtus  ( UInt i )            { m_rightEdgePosInCtus = i; }$/;"	f	class:TComTile
setRowHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setRowHeight ( const std::vector<Int>& rowHeight)            { m_tileRowHeight = rowHeight; }$/;"	f	class:TEncCfg
setRwpSEIConstituentPictureMatchingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIConstituentPictureMatchingFlag (Bool b)                                             { m_rwpSEIConstituentPictureMatchingFlag = b; }$/;"	f	class:TEncCfg
setRwpSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIEnabled(Bool b)                                                                     { m_rwpSEIEnabled = b; }$/;"	f	class:TEncCfg
setRwpSEINumPackedRegions	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEINumPackedRegions (Int value)                                                        { m_rwpSEINumPackedRegions = value; }$/;"	f	class:TEncCfg
setRwpSEIPackedPictureHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIPackedPictureHeight (Int value)                                                     { m_rwpSEIPackedPictureHeight = value; }$/;"	f	class:TEncCfg
setRwpSEIPackedPictureWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIPackedPictureWidth (Int value)                                                      { m_rwpSEIPackedPictureWidth = value; }$/;"	f	class:TEncCfg
setRwpSEIPackedRegionHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionHeight(const std::vector<UShort>& packedRegionHeight)                    { m_rwpSEIPackedRegionHeight = packedRegionHeight; }$/;"	f	class:TEncCfg
setRwpSEIPackedRegionLeft	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionLeft(const std::vector<UShort>& packedRegionLeft)                        { m_rwpSEIPackedRegionLeft = packedRegionLeft; } $/;"	f	class:TEncCfg
setRwpSEIPackedRegionTop	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionTop(const std::vector<UShort>& packedRegionTop)                          { m_rwpSEIPackedRegionTop = packedRegionTop; }$/;"	f	class:TEncCfg
setRwpSEIPackedRegionWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIPackedRegionWidth(const std::vector<UShort>& packedRegionWidth)                      { m_rwpSEIPackedRegionWidth  = packedRegionWidth; }$/;"	f	class:TEncCfg
setRwpSEIProjPictureHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjPictureHeight (Int value)                                                       { m_rwpSEIProjPictureHeight = value; }$/;"	f	class:TEncCfg
setRwpSEIProjPictureWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjPictureWidth (Int value)                                                        { m_rwpSEIProjPictureWidth = value; }$/;"	f	class:TEncCfg
setRwpSEIProjRegionHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjRegionHeight(const std::vector<UInt>& projRegionHeight)                         { m_rwpSEIProjRegionHeight = projRegionHeight; } $/;"	f	class:TEncCfg
setRwpSEIProjRegionLeft	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjRegionLeft(const std::vector<UInt>& projRegionLeft)                             { m_rwpSEIProjRegionLeft = projRegionLeft; } $/;"	f	class:TEncCfg
setRwpSEIProjRegionWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIProjRegionWidth(const std::vector<UInt>& projRegionWidth)                           { m_rwpSEIProjRegionWidth = projRegionWidth; }$/;"	f	class:TEncCfg
setRwpSEIRwpBottomGuardBandHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpBottomGuardBandHeight(const std::vector<UChar>& rwpBottomGuardBandHeight)         { m_rwpSEIRwpBottomGuardBandHeight = rwpBottomGuardBandHeight; }$/;"	f	class:TEncCfg
setRwpSEIRwpCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpCancelFlag(Bool b)                                                               { m_rwpSEIRwpCancelFlag = b; }$/;"	f	class:TEncCfg
setRwpSEIRwpGuardBandFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpGuardBandFlag(const std::vector<Bool>& rwpGuardBandFlag)                         { m_rwpSEIRwpGuardBandFlag = rwpGuardBandFlag; }$/;"	f	class:TEncCfg
setRwpSEIRwpGuardBandNotUsedForPredFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpGuardBandNotUsedForPredFlag(const std::vector<Bool>& rwpGuardBandNotUsedForPredFlag){ m_rwpSEIRwpGuardBandNotUsedForPredFlag = rwpGuardBandNotUsedForPredFlag; }$/;"	f	class:TEncCfg
setRwpSEIRwpGuardBandType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpGuardBandType(const std::vector<UChar>& rwpGuardBandType)                           { m_rwpSEIRwpGuardBandType = rwpGuardBandType; }$/;"	f	class:TEncCfg
setRwpSEIRwpLeftGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpLeftGuardBandWidth(const std::vector<UChar>& rwpLeftGuardBandWidth)               { m_rwpSEIRwpLeftGuardBandWidth = rwpLeftGuardBandWidth; } $/;"	f	class:TEncCfg
setRwpSEIRwpPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpPersistenceFlag (Bool b)                                                         { m_rwpSEIRwpPersistenceFlag = b; }$/;"	f	class:TEncCfg
setRwpSEIRwpRightGuardBandWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpRightGuardBandWidth(const std::vector<UChar>& rwpRightGuardBandWidth)             { m_rwpSEIRwpRightGuardBandWidth = rwpRightGuardBandWidth; } $/;"	f	class:TEncCfg
setRwpSEIRwpSEIProjRegionTop	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpSEIProjRegionTop(const std::vector<UInt>& projRegionTop)                         { m_rwpSEIRwpSEIProjRegionTop = projRegionTop; }$/;"	f	class:TEncCfg
setRwpSEIRwpTopGuardBandHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void    setRwpSEIRwpTopGuardBandHeight(const std::vector<UChar>& rwpTopGuardBandHeight)               { m_rwpSEIRwpTopGuardBandHeight = rwpTopGuardBandHeight; } $/;"	f	class:TEncCfg
setRwpSEIRwpTransformType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setRwpSEIRwpTransformType(const std::vector<UChar>& rwpTransformType)                        { m_rwpSEIRwpTransformType =rwpTransformType; }$/;"	f	class:TEncCfg
setSEIAlternativeTransferCharacteristicsSEIEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSEIAlternativeTransferCharacteristicsSEIEnable( Bool b)   { m_alternativeTransferCharacteristicsSEIEnabled = b;    }$/;"	f	class:TEncCfg
setSEIGreenMetadataInfoSEIEnable	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSEIGreenMetadataInfoSEIEnable( Bool b)                    { m_greenMetadataInfoSEIEnabled = b;    }$/;"	f	class:TEncCfg
setSEIGreenMetadataType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSEIGreenMetadataType(UChar v)                             { m_greenMetadataType = v;    }$/;"	f	class:TEncCfg
setSEIPreferredTransferCharacteristics	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSEIPreferredTransferCharacteristics(UChar v)              { m_preferredTransferCharacteristics = v;    }$/;"	f	class:TEncCfg
setSEIXSDMetricType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSEIXSDMetricType(UChar v)                                 { m_xsdMetricType = v;    }$/;"	f	class:TEncCfg
setSEIs	source/Lib/TLibCommon/TComPic.h	/^  Void setSEIs(SEIMessages& seis) { m_SEIs = seis; }$/;"	f	class:TComPic
setSOPDescriptionSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSOPDescriptionSEIEnabled(Bool b)                          { m_SOPDescriptionSEIEnabled = b; }$/;"	f	class:TEncCfg
setSPS	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSPS( const TComSPS* pcSPS )                         { m_pcSPS = pcSPS;                                              }$/;"	f	class:TComSlice
setSPSId	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setSPSId(Int i)                                                                 { m_SPSId = i;                                                         }$/;"	f	class:TComSPS
setSPSId	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setSPSId(Int i)                                                  { m_SPSId = i;                                  }$/;"	f	class:TComPPS
setSPSTemporalMVPEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setSPSTemporalMVPEnabledFlag(Bool b)                                            { m_SPSTemporalMVPEnabledFlag=b;                                       }$/;"	f	class:TComSPS
setSaoCtuBoundary	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSaoCtuBoundary              (Bool val)                    { m_saoCtuBoundary = val; }$/;"	f	class:TEncCfg
setSaoEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSaoEnabledFlag(ChannelType chType, Bool s)          {m_saoEnabledFlag[chType] =s;                                   }$/;"	f	class:TComSlice
setSaoEncodingRate	source/Lib/TLibEncoder/TEncCfg.h	/^  Void   setSaoEncodingRate(Double v)                                { m_saoEncodingRate = v; }$/;"	f	class:TEncCfg
setSaoEncodingRateChroma	source/Lib/TLibEncoder/TEncCfg.h	/^  Void   setSaoEncodingRateChroma(Double v)                          { m_saoEncodingRateChroma = v; }$/;"	f	class:TEncCfg
setSarHeight	source/Lib/TLibCommon/TComSlice.h	/^  Void              setSarHeight(Int i)                                    { m_sarHeight = i;                               }$/;"	f	class:TComVUI
setSarHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setSarHeight(Int i)                                   { m_sarHeight = i; }$/;"	f	class:TEncCfg
setSarWidth	source/Lib/TLibCommon/TComSlice.h	/^  Void              setSarWidth(Int i)                                     { m_sarWidth = i;                                }$/;"	f	class:TComVUI
setSarWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setSarWidth(Int i)                                    { m_sarWidth = i; }$/;"	f	class:TEncCfg
setScalableNestingSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setScalableNestingSEIEnabled(Bool b)                         { m_scalableNestingSEIEnabled = b; }$/;"	f	class:TEncCfg
setScalingList	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setScalingList(TComScalingList *scalingList, const Int maxLog2TrDynamicRange[MAX_NUM_CHANNEL_TYPE], const BitDepths &bitDepths)$/;"	f	class:TComTrQuant
setScalingListDC	source/Lib/TLibCommon/TComSlice.h	/^  Void       setScalingListDC(UInt sizeId, UInt listId, UInt u)                 { m_scalingListDC[sizeId][listId] = u;                       } \/\/!< set DC value$/;"	f	class:TComScalingList
setScalingListDec	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::setScalingListDec(const TComScalingList &scalingList)$/;"	f	class:TComTrQuant
setScalingListFileName	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setScalingListFileName       ( const std::string &s ) { m_scalingListFileName = s;      }$/;"	f	class:TEncCfg
setScalingListFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setScalingListFlag( Bool b )                                                    { m_scalingListEnabledFlag  = b;                                       }$/;"	f	class:TComSPS
setScalingListPredModeFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void       setScalingListPredModeFlag(UInt sizeId, UInt listId, Bool bIsDPCM) { m_scalingListPredModeFlagIsDPCM[sizeId][listId] = bIsDPCM; }$/;"	f	class:TComScalingList
setScalingListPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setScalingListPresentFlag( Bool b )                                             { m_scalingListPresentFlag  = b;                                       }$/;"	f	class:TComSPS
setScalingListPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setScalingListPresentFlag( Bool b )                              { m_scalingListPresentFlag  = b;                }$/;"	f	class:TComPPS
setSearchRange	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSearchRange                  ( Int   i )      { m_iSearchRange = i; }$/;"	f	class:TEncCfg
setSearchRange	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::setSearchRange( TComSlice* pcSlice )$/;"	f	class:TEncSlice
setSegmentedRectFramePackingArrangementSEICancel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEICancel(Int b)      { m_segmentedRectFramePackingSEICancel = b; }$/;"	f	class:TEncCfg
setSegmentedRectFramePackingArrangementSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEIEnabled(Bool b)    { m_segmentedRectFramePackingSEIEnabled = b; }$/;"	f	class:TEncCfg
setSegmentedRectFramePackingArrangementSEIPersistence	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEIPersistence(Int b) { m_segmentedRectFramePackingSEIPersistence = b; }$/;"	f	class:TEncCfg
setSegmentedRectFramePackingArrangementSEIType	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSegmentedRectFramePackingArrangementSEIType(Int b)        { m_segmentedRectFramePackingSEIType = b; }$/;"	f	class:TEncCfg
setSignDataHidingEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setSignDataHidingEnabledFlag( Bool b )                           { m_signDataHidingEnabledFlag = b;              }$/;"	f	class:TComPPS
setSignDataHidingEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setSignDataHidingEnabledFlag( Bool b )                { m_SignDataHidingEnabledFlag = b;    }$/;"	f	class:TEncCfg
setSiiSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setSiiSEIEnabled(Bool b)                                  { m_siiSEIEnabled = b; }$/;"	f	class:TEncCfg
setSiiSEINumUnitsInShutterInterval	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setSiiSEINumUnitsInShutterInterval(UInt value)            { m_siiSEINumUnitsInShutterInterval = value; }$/;"	f	class:TEncCfg
setSiiSEISubLayerNumUnitsInSI	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setSiiSEISubLayerNumUnitsInSI(const std::vector<UInt>& b) { m_siiSEISubLayerNumUnitsInSI = b; }$/;"	f	class:TEncCfg
setSiiSEITimeScale	source/Lib/TLibEncoder/TEncCfg.h	/^  Void     setSiiSEITimeScale(UInt value)                            { m_siiSEITimeScale = value; }$/;"	f	class:TEncCfg
setSizeSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setSizeSubParts( UInt uiWidth, UInt uiHeight, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setSkipFlag	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setSkipFlag                   ( UInt idx, Bool skip )                                      { m_skipFlag[idx] = skip;                    }$/;"	f	class:TComDataCU
setSkipFlagSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setSkipFlagSubParts( Bool skip, UInt absPartIdx, UInt depth )$/;"	f	class:TComDataCU
setSliceArgument	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceArgument( UInt uiArgument )                    { m_sliceArgument = uiArgument;                                 }$/;"	f	class:TComSlice
setSliceArgument	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSliceArgument               ( Int  i )                    { m_sliceArgument = i;          }$/;"	f	class:TEncCfg
setSliceBits	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceBits( UInt uiVal )                             { m_sliceBits = uiVal;                                          }$/;"	f	class:TComSlice
setSliceChromaOffsetQpIntraOrPeriodic	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSliceChromaOffsetQpIntraOrPeriodic( UInt periodicity, Int sliceChromaQpOffsetIntraOrPeriodic[2]) { m_sliceChromaQpOffsetPeriodicity = periodicity; memcpy(m_sliceChromaQpOffsetIntraOrPeriodic, sliceChromaQpOffsetIntraOrPeriodic, sizeof(m_sliceChromaQpOffsetIntraOrPeriodic)); }$/;"	f	class:TEncCfg
setSliceChromaQpDelta	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceChromaQpDelta( ComponentID compID, Int i )     { m_iSliceChromaQpDelta[compID] = isLuma(compID) ? 0 : i;       }$/;"	f	class:TComSlice
setSliceChromaQpFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setSliceChromaQpFlag( Bool b )                                   { m_bSliceChromaQpFlag = b;                     }$/;"	f	class:TComPPS
setSliceCurEndCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceCurEndCtuTsAddr( UInt ctuTsAddr )              { m_sliceCurEndCtuTsAddr = ctuTsAddr;                           } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceCurStartCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceCurStartCtuTsAddr( UInt ctuTsAddr )            { m_sliceCurStartCtuTsAddr = ctuTsAddr;                         } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceEncoder	source/Lib/TLibEncoder/TEncCu.h	/^  Void       setSliceEncoder( TEncSlice* pSliceEncoder ) { m_pcSliceEncoder = pSliceEncoder; }$/;"	f	class:TEncCu
setSliceHeaderExtensionPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setSliceHeaderExtensionPresentFlag(Bool val)                     { m_sliceHeaderExtensionPresentFlag = val;      }$/;"	f	class:TComPPS
setSliceIdx	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceIdx( UInt i)                                   { m_sliceIdx = i;                                               }$/;"	f	class:TComSlice
setSliceIdx	source/Lib/TLibEncoder/TEncSlice.h	/^  Void    setSliceIdx(UInt i)   { m_uiSliceIdx = i;                       }$/;"	f	class:TEncSlice
setSliceMode	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceMode( SliceConstraint mode )                   { m_sliceMode = mode;                                           }$/;"	f	class:TComSlice
setSliceMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSliceMode                   ( SliceConstraint  i )        { m_sliceMode = i;              }$/;"	f	class:TEncCfg
setSliceQp	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceQp( Int i )                                    { m_iSliceQp          = i;                                      }$/;"	f	class:TComSlice
setSliceQpBase	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceQpBase( Int i )                                { m_iSliceQpBase      = i;                                      }$/;"	f	class:TComSlice
setSliceQpDelta	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceQpDelta( Int i )                               { m_iSliceQpDelta     = i;                                      }$/;"	f	class:TComSlice
setSliceSegmentArgument	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentArgument( UInt uiArgument )             { m_sliceSegmentArgument = uiArgument;                          }$/;"	f	class:TComSlice
setSliceSegmentArgument	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSliceSegmentArgument        ( Int  i )                    { m_sliceSegmentArgument = i;   }$/;"	f	class:TEncCfg
setSliceSegmentBits	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentBits( UInt uiVal )                      { m_sliceSegmentBits = uiVal;                                   }$/;"	f	class:TComSlice
setSliceSegmentCurEndCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentCurEndCtuTsAddr( UInt ctuTsAddr )       { m_sliceSegmentCurEndCtuTsAddr = ctuTsAddr;                    } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceSegmentCurStartCtuTsAddr	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentCurStartCtuTsAddr( UInt ctuTsAddr )     { m_sliceSegmentCurStartCtuTsAddr = ctuTsAddr;                  } \/\/ CTU Tile-scan address (as opposed to raster-scan)$/;"	f	class:TComSlice
setSliceSegmentMode	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceSegmentMode( SliceConstraint mode )            { m_sliceSegmentMode = mode;                                    }$/;"	f	class:TComSlice
setSliceSegmentMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSliceSegmentMode            ( SliceConstraint  i )        { m_sliceSegmentMode = i;       }$/;"	f	class:TEncCfg
setSliceType	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setSliceType( SliceType e )                            { m_eSliceType        = e;                                      }$/;"	f	class:TComSlice
setSourceHeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSourceHeight                 ( Int   i )      { m_iSourceHeight = i; }$/;"	f	class:TEncCfg
setSourceWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSourceWidth                  ( Int   i )      { m_iSourceWidth = i; }$/;"	f	class:TEncCfg
setSphereRotationSEICancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEICancelFlag(Bool b)                       { m_sphereRotationSEICancelFlag = b; }                                                         $/;"	f	class:TEncCfg
setSphereRotationSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIEnabled(Bool b)                          { m_sphereRotationSEIEnabled = b; }                                                         $/;"	f	class:TEncCfg
setSphereRotationSEIPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIPersistenceFlag(Bool b)                  { m_sphereRotationSEIPersistenceFlag = b; }$/;"	f	class:TEncCfg
setSphereRotationSEIPitch	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIPitch(Int b)                             { m_sphereRotationSEIPitch = b; }$/;"	f	class:TEncCfg
setSphereRotationSEIRoll	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIRoll(Int b)                              { m_sphereRotationSEIRoll = b; }$/;"	f	class:TEncCfg
setSphereRotationSEIYaw	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setSphereRotationSEIYaw(Int b)                               { m_sphereRotationSEIYaw = b; }$/;"	f	class:TEncCfg
setStateAndMps	source/Lib/TLibCommon/ContextModel.h	/^  Void  setStateAndMps( UChar ucState, UChar ucMPS) { m_ucState = (ucState << 1) + ucMPS; } \/\/\/< set state and MPS$/;"	f	class:ContextModel
setStreamBitDepth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setStreamBitDepth(ChannelType type, Int u )                                     { m_bitDepths.stream[type] = u;                                        }$/;"	f	class:TComSPS
setSubLayerLevelPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                    setSubLayerLevelPresentFlag(Int i, Bool x)   { m_subLayerLevelPresentFlag[i] = x;      }$/;"	f	class:TComPTL
setSubLayerProfilePresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                    setSubLayerProfilePresentFlag(Int i, Bool x) { m_subLayerProfilePresentFlag[i] = x;    }$/;"	f	class:TComPTL
setSubPart	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setSubPart( T uiParameter, T* puhBaseCtu, UInt uiCUAddr, UInt uiCUDepth, UInt uiPUIdx )$/;"	f	class:TComDataCU
setSubPicCpbParamsInPicTimingSEIFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setSubPicCpbParamsInPicTimingSEIFlag( Bool flag)                           { m_subPicCpbParamsInPicTimingSEIFlag = flag;                }$/;"	f	class:TComHRD
setSubPicCpbParamsPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setSubPicCpbParamsPresentFlag( Bool flag )                                 { m_subPicCpbParamsPresentFlag = flag;                       }$/;"	f	class:TComHRD
setSummaryOutFilename	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSummaryOutFilename(const std::string &s)              { m_summaryOutFilename = s; }$/;"	f	class:TEncCfg
setSummaryPicFilenameBase	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSummaryPicFilenameBase(const std::string &s)          { m_summaryPicFilenameBase = s; }$/;"	f	class:TEncCfg
setSummaryVerboseness	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setSummaryVerboseness(UInt v)                            { m_summaryVerboseness = v; }$/;"	f	class:TEncCfg
setTLayer	source/Lib/TLibCommon/TComPic.h	/^  Void          setTLayer( UInt uiTLayer ) { m_uiTLayer = uiTLayer; }$/;"	f	class:TComPic
setTLayer	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setTLayer( UInt uiTLayer )                             { m_uiTLayer = uiTLayer;                                        }$/;"	f	class:TComSlice
setTLayerInfo	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComSlice::setTLayerInfo( UInt uiTLayer )$/;"	f	class:TComSlice
setTMCTSExtractionSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMCTSExtractionSEIEnabled(Bool b)                         { m_tmctsExtractionSEIEnabled = b; }$/;"	f	class:TEncCfg
setTMCTSSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMCTSSEIEnabled(Bool b)                                   { m_tmctsSEIEnabled = b; }$/;"	f	class:TEncCfg
setTMCTSSEITileConstraint	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMCTSSEITileConstraint(Bool b)                            { m_tmctsSEITileConstraint = b; }$/;"	f	class:TEncCfg
setTMISEICameraIsoSpeedIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEICameraIsoSpeedIdc(Int b)                            { m_cameraIsoSpeedIdc = b;  }$/;"	f	class:TEncCfg
setTMISEICameraIsoSpeedValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEICameraIsoSpeedValue(Int b)                          { m_cameraIsoSpeedValue = b;  }$/;"	f	class:TEncCfg
setTMISEICodedDataBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEICodedDataBitDepth(Int b)                            { m_codedDataBitDepth = b;  }$/;"	f	class:TEncCfg
setTMISEICodedPivotValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEICodedPivotValue( Int*  p )                          { m_codedPivotValue = p;  }$/;"	f	class:TEncCfg
setTMISEIExposureCompensationValueDenomIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureCompensationValueDenomIdc(Int b)            { m_exposureCompensationValueDenomIdc =b;  }$/;"	f	class:TEncCfg
setTMISEIExposureCompensationValueNumerator	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureCompensationValueNumerator(Int b)           { m_exposureCompensationValueNumerator = b;  }$/;"	f	class:TEncCfg
setTMISEIExposureCompensationValueSignFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureCompensationValueSignFlag(Bool b)           { m_exposureCompensationValueSignFlag = b;  }$/;"	f	class:TEncCfg
setTMISEIExposureIndexIdc	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureIndexIdc(Int b)                             { m_exposureIndexIdc = b;  }$/;"	f	class:TEncCfg
setTMISEIExposureIndexValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExposureIndexValue(Int b)                           { m_exposureIndexValue = b;  }$/;"	f	class:TEncCfg
setTMISEIExtendedRangeWhiteLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExtendedRangeWhiteLevel(Int b)                      { m_extendedRangeWhiteLevel = b;  }$/;"	f	class:TEncCfg
setTMISEIExtendedWhiteLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIExtendedWhiteLevelLumaCodeValue(Int b)              { m_extendedWhiteLevelLumaCodeValue =b;  }$/;"	f	class:TEncCfg
setTMISEIMaxValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIMaxValue(Int b)                                     { m_maxValue = b;  }$/;"	f	class:TEncCfg
setTMISEIMinValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIMinValue(Int b)                                     { m_minValue = b;  }$/;"	f	class:TEncCfg
setTMISEIModelID	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIModelID(Int b)                                      { m_modelId = b;  }$/;"	f	class:TEncCfg
setTMISEINominalBlackLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEINominalBlackLevelLumaCodeValue(Int b)               { m_nominalBlackLevelLumaCodeValue = b;  }$/;"	f	class:TEncCfg
setTMISEINominalWhiteLevelLumaCodeValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEINominalWhiteLevelLumaCodeValue(Int b)               { m_nominalWhiteLevelLumaCodeValue = b;  }$/;"	f	class:TEncCfg
setTMISEINumPivots	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEINumPivots(Int b)                                    { m_numPivots = b;  }$/;"	f	class:TEncCfg
setTMISEIRefScreenLuminanceWhite	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIRefScreenLuminanceWhite(Int b)                      { m_refScreenLuminanceWhite = b;  }$/;"	f	class:TEncCfg
setTMISEISigmoidMidpoint	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEISigmoidMidpoint(Int b)                              { m_sigmoidMidpoint = b;  }$/;"	f	class:TEncCfg
setTMISEISigmoidWidth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEISigmoidWidth(Int b)                                 { m_sigmoidWidth = b;  }$/;"	f	class:TEncCfg
setTMISEIStartOfCodedInterva	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIStartOfCodedInterva( Int*  p )                      { m_startOfCodedInterval = p;  }$/;"	f	class:TEncCfg
setTMISEITargetBitDepth	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEITargetBitDepth(Int b)                               { m_targetBitDepth = b;  }$/;"	f	class:TEncCfg
setTMISEITargetPivotValue	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEITargetPivotValue( Int*  p )                         { m_targetPivotValue = p;  }$/;"	f	class:TEncCfg
setTMISEIToneMapCancelFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIToneMapCancelFlag(Bool b)                           { m_toneMapCancelFlag=b;  }$/;"	f	class:TEncCfg
setTMISEIToneMapId	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIToneMapId(Int b)                                    { m_toneMapId = b;  }$/;"	f	class:TEncCfg
setTMISEIToneMapPersistenceFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTMISEIToneMapPersistenceFlag(Bool b)                      { m_toneMapPersistenceFlag = b;  }$/;"	f	class:TEncCfg
setTMVPModeId	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setTMVPModeId ( Int  u )                              { m_TMVPModeId = u;    }$/;"	f	class:TEncCfg
setTMctsCheckEnabled	source/Lib/TLibDecoder/TDecTop.h	/^  Void setTMctsCheckEnabled(Bool enabled) { m_tmctsCheckEnabled = enabled; }$/;"	f	class:TDecTop
setTMctsMvpIsValid	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setTMctsMvpIsValid(Bool b)    { m_tMctsMvpIsValid = b; }$/;"	f	class:TComDataCU
setTargetBitrate	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setTargetBitrate       ( Int bitrate )                { m_RCTargetBitrate  = bitrate;   }$/;"	f	class:TEncCfg
setTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void setTargetBits( Int bits )                          { m_targetBits = bits; m_bitsLeft = bits;}$/;"	f	class:TEncRCPic
setTemporalIdNestingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setTemporalIdNestingFlag( Bool bValue )                                         { m_bTemporalIdNestingFlag = bValue;                                   }$/;"	f	class:TComSPS
setTemporalLayerNonReferenceFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setTemporalLayerNonReferenceFlag(Bool x)               { m_temporalLayerNonReferenceFlag = x;                          }$/;"	f	class:TComSlice
setTemporalLevel0IndexSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTemporalLevel0IndexSEIEnabled(Bool b)                     { m_temporalLevel0IndexSEIEnabled = b; }$/;"	f	class:TEncCfg
setTemporalNestingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setTemporalNestingFlag(Bool t)                       { m_bTemporalIdNestingFlag = t;                                    }$/;"	f	class:TComVPS
setTemporalSubsampleRatio	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setTemporalSubsampleRatio       ( UInt  i )      { m_temporalSubsampleRatio = i; }$/;"	f	class:TEncCfg
setTestSAODisableAtPictureLevel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTestSAODisableAtPictureLevel (Bool bVal)                  { m_bTestSAODisableAtPictureLevel = bVal; }$/;"	f	class:TEncCfg
setTestWeightBiPred	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setTestWeightBiPred( Bool bValue )                     { m_bTestWeightBiPred = bValue;                                 }$/;"	f	class:TComSlice
setTestWeightPred	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setTestWeightPred( Bool bValue )                       { m_bTestWeightPred = bValue;                                   }$/;"	f	class:TComSlice
setTickDivisorMinus2	source/Lib/TLibCommon/TComSlice.h	/^  Void    setTickDivisorMinus2( UInt value )                                         { m_tickDivisorMinus2 = value;                               }$/;"	f	class:TComHRD
setTierFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void          setTierFlag(Level::Tier x)                  { m_tierFlag = x;                       }$/;"	f	class:ProfileTierLevel
setTileBorders	source/Lib/TLibCommon/TComPattern.cpp	/^Void TComPattern::setTileBorders(Int tileLeftTopPelPosX, Int tileLeftTopPelPosY, Int tileRightBottomPelPosX, Int tileRightBottomPelPosY)$/;"	f	class:TComPattern
setTileColumnWidth	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setTileColumnWidth(const std::vector<Int>& columnWidth )         { m_tileColumnWidth = columnWidth;              }$/;"	f	class:TComPPS
setTileHeightInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  Void      setTileHeightInCtus    ( UInt i )            { m_tileHeightInCtus = i; }$/;"	f	class:TComTile
setTileRowHeight	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setTileRowHeight(const std::vector<Int>& rowHeight)              { m_tileRowHeight = rowHeight;                  }$/;"	f	class:TComPPS
setTileUniformSpacingFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setTileUniformSpacingFlag(Bool b)                                { m_uniformSpacingFlag = b;                     }$/;"	f	class:TComPPS
setTileUniformSpacingFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTileUniformSpacingFlag      ( Bool b )                    { m_tileUniformSpacingFlag = b; }$/;"	f	class:TEncCfg
setTileWidthInCtus	source/Lib/TLibCommon/TComPicSym.h	/^  Void      setTileWidthInCtus     ( UInt i )            { m_tileWidthInCtus = i; }$/;"	f	class:TComTile
setTilesEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setTilesEnabledFlag(Bool val)                                    { m_tilesEnabledFlag = val;                     }$/;"	f	class:TComPPS
setTilesFixedStructureFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setTilesFixedStructureFlag(Bool i)                     { m_tilesFixedStructureFlag = i;                 }$/;"	f	class:TComVUI
setTilesFixedStructureFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setTilesFixedStructureFlag(Bool i)                    { m_tilesFixedStructureFlag = i; }$/;"	f	class:TEncCfg
setTimeCodeSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTimeCodeSEIEnabled(Bool b)                                { m_timeCodeSEIEnabled = b; }$/;"	f	class:TEncCfg
setTimeScale	source/Lib/TLibCommon/TComSlice.h	/^  Void setTimeScale( UInt value )              { m_timeScale = value;                  }$/;"	f	class:TimingInfo
setTimeSet	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setTimeSet(TComSEITimeSet element, Int index)                { m_timeSetArray[index] = element; }$/;"	f	class:TEncCfg
setTimingInfoPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setTimingInfoPresentFlag( Bool flag )   { m_timingInfoPresentFlag = flag;       }$/;"	f	class:TimingInfo
setToneMappingInfoSEIEnabled	source/Lib/TLibEncoder/TEncCfg.h	/^  Void  setToneMappingInfoSEIEnabled(Bool b)                         { m_toneMappingInfoSEIEnabled = b;  }$/;"	f	class:TEncCfg
setTopField	source/Lib/TLibCommon/TComPic.h	/^   Void              setTopField(Bool b)                  {m_isTop = b;}$/;"	f	class:TComPic
setTotalIntraCost	source/Lib/TLibEncoder/TEncRateCtrl.h	/^  Void setTotalIntraCost(Double cost)                     { m_totalCostIntra = cost; }$/;"	f	class:TEncRCPic
setTrIdxSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTrIdxSubParts( UInt uiTrIdx, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setTransferCharacteristics	source/Lib/TLibCommon/TComSlice.h	/^  Void              setTransferCharacteristics(Int i)                      { m_transferCharacteristics = i;                 }$/;"	f	class:TComVUI
setTransferCharacteristics	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setTransferCharacteristics(Int i)                     { m_transferCharacteristics = i; }$/;"	f	class:TEncCfg
setTransformSkipContextEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setTransformSkipContextEnabledFlag(const Bool value)                            { m_transformSkipContextEnabledFlag = value;     }$/;"	f	class:TComSPSRExt
setTransformSkipContextEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setTransformSkipContextEnabledFlag              (const Bool value)  { m_transformSkipContextEnabledFlag = value; }$/;"	f	class:TEncCfg
setTransformSkipPartRange	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTransformSkipPartRange ( UInt useTransformSkip, ComponentID compID, UInt uiAbsPartIdx, UInt uiCoveredPartIdxes )$/;"	f	class:TComDataCU
setTransformSkipRotationEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void setTransformSkipRotationEnabledFlag(const Bool value)                           { m_transformSkipRotationEnabledFlag = value;    }$/;"	f	class:TComSPSRExt
setTransformSkipRotationEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setTransformSkipRotationEnabledFlag             (const Bool value)  { m_transformSkipRotationEnabledFlag = value; }$/;"	f	class:TEncCfg
setTransformSkipSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTransformSkipSubParts( UInt useTransformSkip, ComponentID compID, UInt uiAbsPartIdx, UInt uiDepth)$/;"	f	class:TComDataCU
setTransformSkipSubParts	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::setTransformSkipSubParts( const UInt useTransformSkip[MAX_NUM_COMPONENT], UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TComDataCU
setTransquantBypassEnabledFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setTransquantBypassEnabledFlag( Bool b )                         { m_TransquantBypassEnabledFlag = b;            }$/;"	f	class:TComPPS
setTransquantBypassEnabledFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setTransquantBypassEnabledFlag(Bool flag)             { m_TransquantBypassEnabledFlag = flag; }$/;"	f	class:TEncCfg
setUpLambda	source/Lib/TLibEncoder/TEncSlice.cpp	/^TEncSlice::setUpLambda(TComSlice* slice, const Double dLambda, Int iQP)$/;"	f	class:TEncSlice
setUseAMP	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUseAMP( Bool b )                                                             { m_useAMP = b;                                                        }$/;"	f	class:TComSPS
setUseAMP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setUseAMP( Bool b ) { m_useAMP = b; }$/;"	f	class:TEncCfg
setUseASR	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseASR                       ( Bool  b )     { m_bUseASR     = b; }$/;"	f	class:TEncCfg
setUseAdaptQpSelect	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseAdaptQpSelect             ( Bool   i ) { m_bUseAdaptQpSelect    = i; }$/;"	f	class:TEncCfg
setUseAdaptiveQP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseAdaptiveQP                ( Bool  b )      { m_bUseAdaptiveQP = b; }$/;"	f	class:TEncCfg
setUseBLambdaForNonKeyLowDelayPictures	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseBLambdaForNonKeyLowDelayPictures ( Bool b ) { m_bUseBLambdaForNonKeyLowDelayPictures = b; }$/;"	f	class:TEncCfg
setUseCbfFastMode	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseCbfFastMode               ( Bool  b )     { m_bUseCbfFastMode = b; }$/;"	f	class:TEncCfg
setUseChromaQpAdj	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setUseChromaQpAdj( Bool b )                            { m_ChromaQpAdjEnabled = b;                                     }$/;"	f	class:TComSlice
setUseConstrainedIntraPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseConstrainedIntraPred      ( Bool  b )     { m_bUseConstrainedIntraPred = b; }$/;"	f	class:TEncCfg
setUseDQP	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUseDQP( Bool b )                                              { m_useDQP   = b;                               }$/;"	f	class:TComPPS
setUseEarlyCU	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseEarlyCU                   ( Bool  b )     { m_bUseEarlyCU = b; }$/;"	f	class:TEncCfg
setUseEarlySkipDetection	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseEarlySkipDetection        ( Bool  b )     { m_useEarlySkipDetection = b; }$/;"	f	class:TEncCfg
setUseFastDecisionForMerge	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseFastDecisionForMerge      ( Bool  b )     { m_useFastDecisionForMerge = b; }$/;"	f	class:TEncCfg
setUseHADME	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseHADME                     ( Bool  b )     { m_bUseHADME   = b; }$/;"	f	class:TEncCfg
setUseLCUSeparateModel	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setUseLCUSeparateModel ( Bool b )                     { m_RCUseLCUSeparateModel = b;    }$/;"	f	class:TEncCfg
setUsePCM	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUsePCM( Bool b )                                                             { m_usePCM = b;                                                        }$/;"	f	class:TComSPS
setUsePCM	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUsePCM                       ( Bool  b )     {  m_usePCM = b;               }$/;"	f	class:TEncCfg
setUseRDOQ	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseRDOQ                      ( Bool  b )     { m_useRDOQ    = b; }$/;"	f	class:TEncCfg
setUseRDOQTS	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseRDOQTS                    ( Bool  b )     { m_useRDOQTS  = b; }$/;"	f	class:TEncCfg
setUseRateCtrl	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setUseRateCtrl         ( Bool b )                     { m_RCEnableRateControl = b;      }$/;"	f	class:TEncCfg
setUseRecalculateQPAccordingToLambda	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setUseRecalculateQPAccordingToLambda (Bool b)         { m_recalculateQPAccordingToLambda = b;    }$/;"	f	class:TEncCfg
setUseReconBasedCrossCPredictionEstimate	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseReconBasedCrossCPredictionEstimate (const Bool value)      { m_reconBasedCrossCPredictionEstimate = value; }$/;"	f	class:TEncCfg
setUseSAO	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUseSAO(Bool bVal)                                                            { m_bUseSAO = bVal;                                                    }$/;"	f	class:TComSPS
setUseSAO	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseSAO                  (Bool bVal)                   { m_bUseSAO = bVal; }$/;"	f	class:TEncCfg
setUseScalingList	source/Lib/TLibCommon/TComTrQuant.h	/^  Void setUseScalingList   ( Bool bUseScalingList){ m_scalingListEnabledFlag = bUseScalingList; };$/;"	f	class:TComTrQuant
setUseScalingListId	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setUseScalingListId    ( ScalingListMode u )          { m_useScalingListId       = u;   }$/;"	f	class:TEncCfg
setUseSelectiveRDOQ	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setUseSelectiveRDOQ             ( Bool b )      { m_useSelectiveRDOQ = b; }$/;"	f	class:TEncCfg
setUseStrongIntraSmoothing	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUseStrongIntraSmoothing(Bool bVal)                                           { m_useStrongIntraSmoothing = bVal;                                    }$/;"	f	class:TComSPS
setUseStrongIntraSmoothing	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setUseStrongIntraSmoothing ( Bool b )                 { m_useStrongIntraSmoothing = b;    }$/;"	f	class:TEncCfg
setUseTransformSkip	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUseTransformSkip( Bool b )                                    { m_useTransformSkip  = b;                      }$/;"	f	class:TComPPS
setUseTransformSkip	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setUseTransformSkip                             ( Bool b ) { m_useTransformSkip  = b;       }$/;"	f	class:TEncCfg
setUseTransformSkipFast	source/Lib/TLibEncoder/TEncCfg.h	/^  Void setUseTransformSkipFast                         ( Bool b ) { m_useTransformSkipFast  = b;   }$/;"	f	class:TEncCfg
setUseWP	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUseWP( Bool b )                                               { m_bUseWeightPred = b;                         }$/;"	f	class:TComPPS
setUseWP	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setUseWP               ( Bool b )                     { m_useWeightedPred   = b;    }$/;"	f	class:TEncCfg
setUsed	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::setUsed(Int bufferNum, Bool used)$/;"	f	class:TComReferencePictureSet
setUsedByCurr	source/Lib/TLibCommon/TComPic.h	/^  Void          setUsedByCurr( Bool bUsed ) { m_bUsedByCurr = bUsed; }$/;"	f	class:TComPic
setUsedByCurrPicLtSPSFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setUsedByCurrPicLtSPSFlag(Int i, Bool x)                                        { assert( i < MAX_NUM_LONG_TERM_REF_PICS ); m_usedByCurrPicLtSPSFlag[i] = x;       }$/;"	f	class:TComSPS
setVPS	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setVPS( TComVPS* pcVPS )                               { m_pcVPS = pcVPS;                                              }$/;"	f	class:TComSlice
setVPS	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setVPS(TComVPS *p)                                    { m_cVPS = *p; }$/;"	f	class:TEncCfg
setVPSId	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setVPSId(Int i)                                                                 { m_VPSId = i;                                                         }$/;"	f	class:TComSPS
setVPSId	source/Lib/TLibCommon/TComSlice.h	/^  Void              setVPSId(Int i)                                      { m_VPSId = i;                                                     }$/;"	f	class:TComVPS
setVclHrdParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void    setVclHrdParametersPresentFlag( Bool flag )                                { m_vclHrdParametersPresentFlag = flag;                      }$/;"	f	class:TComHRD
setVer	source/Lib/TLibCommon/TComMv.h	/^  Void  setVer    ( Short i )                   { m_iVer = i;                               }$/;"	f	class:TComMv
setVideoFormat	source/Lib/TLibCommon/TComSlice.h	/^  Void              setVideoFormat(Int i)                                  { m_videoFormat = i;                             }$/;"	f	class:TComVUI
setVideoFormat	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setVideoFormat(Int i)                                 { m_videoFormat = i; }$/;"	f	class:TEncCfg
setVideoFullRangeFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setVideoFullRangeFlag(Bool i)                          { m_videoFullRangeFlag = i;                      }$/;"	f	class:TComVUI
setVideoFullRangeFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setVideoFullRangeFlag(Bool i)                         { m_videoFullRangeFlag = i; }$/;"	f	class:TEncCfg
setVideoSignalTypePresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void              setVideoSignalTypePresentFlag(Bool i)                  { m_videoSignalTypePresentFlag = i;              }$/;"	f	class:TComVUI
setVideoSignalTypePresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setVideoSignalTypePresentFlag(Bool i)                 { m_videoSignalTypePresentFlag = i; }$/;"	f	class:TEncCfg
setVuiParametersPresentFlag	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setVuiParametersPresentFlag(Bool b)                                             { m_vuiParametersPresentFlag = b;                                      }$/;"	f	class:TComSPS
setVuiParametersPresentFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setVuiParametersPresentFlag(Bool i)                   { m_vuiParametersPresentFlag = i; }$/;"	f	class:TEncCfg
setWCGChromaQpControl	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setWCGChromaQpControl           ( const WCGChromaQPControl &ctrl )     { m_wcgChromaQpControl = ctrl; }$/;"	f	class:TEncCfg
setWPBiPred	source/Lib/TLibCommon/TComSlice.h	/^  Void                   setWPBiPred( Bool b )                                            { m_useWeightedBiPred = b;                      }$/;"	f	class:TComPPS
setWPBiPred	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setWPBiPred            ( Bool b )                     { m_useWeightedBiPred = b;    }$/;"	f	class:TEncCfg
setWeightedPredictionMethod	source/Lib/TLibEncoder/TEncCfg.h	/^  Void         setWeightedPredictionMethod( WeightedPredictionMethod m ) { m_weightedPredictionMethod = m; }$/;"	f	class:TEncCfg
setWidth	source/Lib/TLibCommon/TComDataCU.h	/^  Void          setWidth                      ( UInt uiIdx, UChar  uh )                                    { m_puhWidth[uiIdx] = uh;                    }$/;"	f	class:TComDataCU
setWindow	source/Lib/TLibCommon/TypeDef.h	/^  Void setWindow(Int offsetLeft, Int offsetLRight, Int offsetLTop, Int offsetLBottom)$/;"	f	class:Window
setWindowBottomOffset	source/Lib/TLibCommon/TypeDef.h	/^  Void setWindowBottomOffset(Int val) { m_winBottomOffset = val; m_enabledFlag = true; }$/;"	f	class:Window
setWindowLeftOffset	source/Lib/TLibCommon/TypeDef.h	/^  Void setWindowLeftOffset(Int val)   { m_winLeftOffset = val; m_enabledFlag = true;   }$/;"	f	class:Window
setWindowRightOffset	source/Lib/TLibCommon/TypeDef.h	/^  Void setWindowRightOffset(Int val)  { m_winRightOffset = val; m_enabledFlag = true;  }$/;"	f	class:Window
setWindowTopOffset	source/Lib/TLibCommon/TypeDef.h	/^  Void setWindowTopOffset(Int val)    { m_winTopOffset = val; m_enabledFlag = true;    }$/;"	f	class:Window
setWpAcDcParam	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setWpAcDcParam( WPACDCParam wp[MAX_NUM_COMPONENT] )$/;"	f	class:TComSlice
setWpScaling	source/Lib/TLibCommon/TComSlice.h	/^  Void                        setWpScaling( WPScalingParam  wp[NUM_REF_PIC_LIST_01][MAX_NUM_REF][MAX_NUM_COMPONENT] )$/;"	f	class:TComSlice
setWpScalingDistParam	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void  TEncSearch::setWpScalingDistParam( TComDataCU* pcCU, Int iRefIdx, RefPicList eRefPicListCur )$/;"	f	class:TEncSearch
setXPSNREnableFlag	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setXPSNREnableFlag              ( Bool  i )      { m_bXPSNREnableFlag = i; }$/;"	f	class:TEncCfg
setXPSNRWeight	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setXPSNRWeight                  ( Double dValue, ComponentID id) { m_dXPSNRWeight[id] = dValue;}$/;"	f	class:TEncCfg
setZero	source/Lib/TLibCommon/TComMv.h	/^  Void  setZero   ()                            { m_iHor = m_iVer = 0;  }$/;"	f	class:TComMv
set_api_level	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_api_level(self, api_level):$/;"	m	class:Toolset.PlatformInfo
set_cmake_search_path	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^    def set_cmake_search_path(self, search_path):$/;"	m	class:CMakeFinder
set_dry_run	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def set_dry_run(self, dry_run=True):$/;"	m	class:SvnHelper
set_isysroot	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_isysroot(self, isysroot):$/;"	m	class:Toolset.PlatformInfo
set_resource_path	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def set_resource_path(self, res_path):$/;"	m	class:VcsUrl
set_sdk_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_sdk_version(self, version):$/;"	m	class:Toolset.PlatformInfo
set_target_archs	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_target_archs(self, target_archs):$/;"	m	class:Toolset.PlatformInfo
set_target_cflags	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_target_cflags(self, target_arch, target_cflags):$/;"	m	class:Toolset.PlatformInfo
set_target_os_version	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_target_os_version(self, version):$/;"	m	class:Toolset.PlatformInfo
set_target_runtime_libs	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^        def set_target_runtime_libs(self, target_arch, target_runtime_libs):$/;"	m	class:Toolset.PlatformInfo
set_verbose	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^    def set_verbose(self, verbose):$/;"	m	class:BuildScriptInstaller
setdQPFlag	source/Lib/TLibDecoder/TDecCu.h	/^  Void setdQPFlag               ( Bool b )                { m_bDecodeDQP = b;           }$/;"	f	class:TDecCu
setdQPFlag	source/Lib/TLibEncoder/TEncCu.h	/^  Void setdQPFlag           ( Bool b )                { m_bEncodeDQP = b;           }$/;"	f	class:TEncCu
setdQPs	source/Lib/TLibEncoder/TEncCfg.h	/^  Void      setdQPs                         ( Int*  p )     { m_aidQP       = p; }$/;"	f	class:TEncCfg
settingHelpWidth	source/Lib/TLibCommon/Debug.cpp	/^static const UInt settingHelpWidth  = 84;$/;"	v	file:
settingNameWidth	source/Lib/TLibCommon/Debug.cpp	/^static const UInt settingNameWidth  = 66;$/;"	v	file:
settingValueWidth	source/Lib/TLibCommon/Debug.cpp	/^static const UInt settingValueWidth = 3;$/;"	v	file:
settingsDifferFromDefaults	source/Lib/TLibCommon/TComSlice.h	/^  Bool settingsDifferFromDefaults() const$/;"	f	class:TComSPSRExt
settingsDifferFromDefaults	source/Lib/TLibCommon/TComSlice.h	/^  Bool settingsDifferFromDefaults(const bool bTransformSkipEnabledFlag) const$/;"	f	class:TComPPSRExt
sgn	source/Lib/TLibCommon/TComSampleAdaptiveOffset.h	/^template <typename T> Int sgn(T val)$/;"	f
shift	source/Lib/TLibCommon/TComSlice.h	/^  Int  shift;$/;"	m	struct:WPScalingParam
shutil	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import shutil$/;"	i
shutil	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import shutil$/;"	i
shutil	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import shutil$/;"	i
shutil	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import shutil$/;"	i
shutil	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import shutil$/;"	i
shutil	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import shutil$/;"	i
signBitHidingHDQ	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::signBitHidingHDQ( TCoeff* pQCoef, TCoeff* pCoef, TCoeff* deltaU, const TUEntropyCodingParameters &codingParameters, const Int maxLog2TrDynamicRange )$/;"	f	class:TComTrQuant
significanceMapContextSetSize	source/Lib/TLibCommon/ContextTables.h	/^static const UInt significanceMapContextSetSize          [MAX_NUM_CHANNEL_TYPE][CONTEXT_NUMBER_OF_TYPES] = { {9, 12,  6,  1}, {9,  3,  3,  1} };$/;"	v
significanceMapContextSetStart	source/Lib/TLibCommon/ContextTables.h	/^static const UInt significanceMapContextSetStart         [MAX_NUM_CHANNEL_TYPE][CONTEXT_NUMBER_OF_TYPES] = { {0,  9, 21, 27}, {0,  9, 12, 15} };$/;"	v
significanceMapContextStartTable	source/Lib/TLibCommon/TComChromaFormat.h	/^static const UInt significanceMapContextStartTable[MAX_NUM_CHANNEL_TYPE] = {FIRST_SIG_FLAG_CTX_LUMA, FIRST_SIG_FLAG_CTX_CHROMA};$/;"	v
significantBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int significantBits[NUM_SIG_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon10
significantCoeffGroupBits	source/Lib/TLibCommon/TComTrQuant.h	/^  Int significantCoeffGroupBits[NUM_SIG_CG_FLAG_CTX][2 \/*Flag = [0|1]*\/];$/;"	m	struct:__anon10
simd8x8HAD1D32b	source/Lib/TLibCommon/TComRdCost.cpp	/^Void simd8x8HAD1D32b( __m128i * pInput , __m128i * pOutput )$/;"	f
simd8x8Transpose32b	source/Lib/TLibCommon/TComRdCost.cpp	/^inline Void simd8x8Transpose32b( __m128i * pBuffer )$/;"	f
simdAbs32b	source/Lib/TLibCommon/TComRdCost.cpp	/^inline __m128i simdAbs32b( __m128i m )$/;"	f
simdClip3	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdClip3( __m128i mmMin , __m128i mmMax , __m128i mmPix )$/;"	f
simdHADs8x8	source/Lib/TLibCommon/TComRdCost.cpp	/^UInt simdHADs8x8( const Pel * piOrg, const Pel * piCur, Int iStrideOrg, Int iStrideCur )$/;"	f
simdInterpolateChroma4	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateChroma4( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma2P4	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma2P4( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma2P8	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma2P8( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma4	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma4( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdInterpolateLuma8	source/Lib/TLibCommon/TComInterpolationFilter.cpp	/^inline __m128i simdInterpolateLuma8( Short const *src , Int srcStride , __m128i *mmCoeff , const __m128i & mmOffset , Int shift )$/;"	f
simdSADLine4n16b	source/Lib/TLibCommon/TComRdCost.cpp	/^inline Int simdSADLine4n16b( const Pel * piOrg , const Pel * piCur , Int nWidth )$/;"	f
simdSADLine8n16b	source/Lib/TLibCommon/TComRdCost.cpp	/^inline Int simdSADLine8n16b( const Pel * piOrg , const Pel * piCur , Int nWidth )$/;"	f
simulateGrainBlk8x8	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^void SEIFilmGrainSynthesizer::simulateGrainBlk8x8(int32_t *grainStripe, uint32_t grainStripeOffsetBlk8,$/;"	f	class:SEIFilmGrainSynthesizer
skipFrames	source/Lib/Utilities/TVideoIOYuv.cpp	/^Void TVideoIOYuv::skipFrames(Int numFrames, UInt width, UInt height, ChromaFormat format)$/;"	f	class:TVideoIOYuv
sm_aucLPSTable	source/Lib/TLibCommon/TComCABACTables.cpp	/^const UChar TComCABACTables::sm_aucLPSTable[1 << CONTEXT_STATE_BITS][4] =$/;"	m	class:TComCABACTables	file:
sm_aucLPSTable	source/Lib/TLibCommon/TComCABACTables.h	/^  const static UChar  sm_aucLPSTable[1 << CONTEXT_STATE_BITS][4];$/;"	m	class:TComCABACTables
sm_aucRenormTable	source/Lib/TLibCommon/TComCABACTables.cpp	/^const UChar TComCABACTables::sm_aucRenormTable[32] =$/;"	m	class:TComCABACTables	file:
sm_aucRenormTable	source/Lib/TLibCommon/TComCABACTables.h	/^  const static UChar  sm_aucRenormTable[32];$/;"	m	class:TComCABACTables
sm_betaTable	source/Lib/TLibCommon/TComLoopFilter.cpp	/^const UChar TComLoopFilter::sm_betaTable[MAX_QP + 1] =$/;"	m	class:TComLoopFilter	file:
sm_betaTable	source/Lib/TLibCommon/TComLoopFilter.h	/^  static const UChar sm_betaTable[52];$/;"	m	class:TComLoopFilter
sm_tcTable	source/Lib/TLibCommon/TComLoopFilter.cpp	/^const UChar TComLoopFilter::sm_tcTable[MAX_QP + 1 + DEFAULT_INTRA_TC_OFFSET] =$/;"	m	class:TComLoopFilter	file:
sm_tcTable	source/Lib/TLibCommon/TComLoopFilter.h	/^  static const UChar sm_tcTable[54];$/;"	m	class:TComLoopFilter
sortDeltaPOC	source/Lib/TLibCommon/TComSlice.cpp	/^Void TComReferencePictureSet::sortDeltaPOC()$/;"	f	class:TComReferencePictureSet
sortPicList	source/Lib/TLibCommon/TComSlice.cpp	/^Void  TComSlice::sortPicList        (TComList<TComPic*>& rcListPic)$/;"	f	class:TComSlice
spaces	source/Lib/Utilities/program_options_lite.cpp	/^    static const char spaces[41] = "                                        ";$/;"	m	namespace:df::program_options_lite	file:
splitOnSettings	source/Lib/TLibCommon/Debug.cpp	/^std::string splitOnSettings(const std::string &input)$/;"	f
start	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::start()$/;"	f	class:TDecBinCABAC
start	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::start()$/;"	f	class:TEncBinCABAC
stat	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import stat$/;"	i
stat	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import stat$/;"	i
statistics	source/Lib/TLibCommon/TComCodingStatistics.h	/^        SStat statistics[STATS__NUM_STATS+1][CODING_STATS_NUM_SUBCLASSES];$/;"	m	class:TComCodingStatistics::TComCodingStatisticsData
statistics_ep	source/Lib/TLibCommon/TComCodingStatistics.h	/^        SStat statistics_ep[STATS__NUM_STATS+1][CODING_STATS_NUM_SUBCLASSES ];$/;"	m	class:TComCodingStatistics::TComCodingStatisticsData
store	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void  TEncSbac::store( TEncSbac* pDest) const$/;"	f	class:TEncSbac
storePPS	source/Lib/TLibCommon/TComSlice.h	/^  Void           storePPS(TComPPS *pps, const std::vector<UChar> &naluData) { m_ppsMap.storePS( pps->getPPSId(), pps, &naluData); };$/;"	f	class:ParameterSetManager
storePS	source/Lib/TLibCommon/TComSlice.h	/^  Void storePS(Int psId, T *ps, const std::vector<UChar> *pNaluData)$/;"	f	class:ParameterSetMap
storePair	source/Lib/Utilities/program_options_lite.cpp	/^      bool storePair(const string& name, const string& value)$/;"	f	struct:df::program_options_lite::OptionWriter
storePair	source/Lib/Utilities/program_options_lite.cpp	/^    bool OptionWriter::storePair(bool allow_long, bool allow_short, const string& name, const string& value)$/;"	f	class:df::program_options_lite::OptionWriter
storeSPS	source/Lib/TLibCommon/TComSlice.h	/^  Void           storeSPS(TComSPS *sps, const std::vector<UChar> &naluData) { m_spsMap.storePS( sps->getSPSId(), sps, &naluData); };$/;"	f	class:ParameterSetManager
storeSliceQpNext	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::storeSliceQpNext(TComSlice* pcSlice)$/;"	f	class:TComTrQuant
storeVPS	source/Lib/TLibCommon/TComSlice.h	/^  Void           storeVPS(TComVPS *vps, const std::vector<UChar> &naluData) { m_vpsMap.storePS( vps->getVPSId(), vps, &naluData); };$/;"	f	class:ParameterSetManager
str	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const TChar* str;$/;"	m	struct:MapStrToCostMode	file:
str	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const TChar* str;$/;"	m	struct:MapStrToLevel	file:
str	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const TChar* str;$/;"	m	struct:MapStrToProfile	file:
str	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const TChar* str;$/;"	m	struct:MapStrToScalingListMode	file:
str	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const TChar* str;$/;"	m	struct:MapStrToTier	file:
str	source/App/TAppEncoder/TAppEncCfg.cpp	/^  const TChar* str;$/;"	m	struct:MapStrToUIProfileName	file:
strToCostMode	source/App/TAppEncoder/TAppEncCfg.cpp	/^strToCostMode[] =$/;"	v	typeref:struct:MapStrToCostMode	file:
strToLevel	source/App/TAppEncoder/TAppEncCfg.cpp	/^strToLevel[] =$/;"	v	typeref:struct:MapStrToLevel	file:
strToProfile	source/App/TAppEncoder/TAppEncCfg.cpp	/^strToProfile[] =$/;"	v	typeref:struct:MapStrToProfile	file:
strToScalingListMode	source/App/TAppEncoder/TAppEncCfg.cpp	/^strToScalingListMode[] =$/;"	v	typeref:struct:MapStrToScalingListMode	file:
strToTier	source/App/TAppEncoder/TAppEncCfg.cpp	/^strToTier[] =$/;"	v	typeref:struct:MapStrToTier	file:
strToUIProfileName	source/App/TAppEncoder/TAppEncCfg.cpp	/^strToUIProfileName[] =$/;"	v	typeref:struct:MapStrToUIProfileName	file:
strdup	source/App/TAppDecoder/TAppDecCfg.cpp	45;"	d	file:
strdup	source/App/TAppEncoder/TAppEncCfg.cpp	59;"	d	file:
strdup	source/App/TAppMCTSExtractor/TAppMctsExtCfg.cpp	44;"	d	file:
stream	source/Lib/TLibCommon/TypeDef.h	/^  Int stream[MAX_NUM_CHANNEL_TYPE];\/\/\/< the bit depth used indicated in the SPS$/;"	m	struct:BitDepths
stringToInputColourSpaceConvert	source/Lib/TLibCommon/TComChromaFormat.cpp	/^InputColourSpaceConversion stringToInputColourSpaceConvert(const std::string &value, const Bool bIsForward)$/;"	f
strip_empty_comment_lines	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def strip_empty_comment_lines(self, comment_lines):$/;"	m	class:VcsUtil
subClass	source/Lib/TLibCommon/TComCodingStatistics.h	/^  UInt subClass;$/;"	m	class:TComCodingStatisticsClassType
subproc_call_flushed	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def subproc_call_flushed(*popenargs, **kwargs):$/;"	f
subproc_check_call_flushed	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def subproc_check_call_flushed(*popenargs, **kwargs):$/;"	f
subprocess	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import subprocess$/;"	i
subprocess	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import subprocess$/;"	i
subsampleLuma	source/Lib/TLibEncoder/TEncTemporalFilter.cpp	/^Void TEncTemporalFilter::subsampleLuma(const TComPicYuv &input, TComPicYuv &output, const Int factor) const$/;"	f	class:TEncTemporalFilter
subtract	source/Lib/TLibCommon/TComYuv.cpp	/^Void TComYuv::subtract( const TComYuv* pcYuvSrc0, const TComYuv* pcYuvSrc1, const UInt uiTrUnitIdx, const UInt uiPartSize )$/;"	f	class:TComYuv
suffix_sei_messages	source/Lib/TLibCommon/SEI.h	/^  static const std::vector <SEI::PayloadType> suffix_sei_messages;$/;"	m	class:SEI
sum	source/Lib/TLibCommon/TComCodingStatistics.h	/^      Int64 sum;$/;"	m	struct:TComCodingStatistics::SStat
svn_commit_wc	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_commit_wc(self, comment_lines, wc_dir):$/;"	m	class:SvnHelper
svn_import_wc	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_import_wc(self, comment_lines, wc_dir, svn_url, global_ignores=None, quiet=False):$/;"	m	class:SvnHelper
svn_read_properties	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_read_properties(self, svn_res_path):$/;"	m	class:SvnHelper
svn_remote_copy	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_remote_copy(self, comment_lines, svn_url_src, svn_url_dst, create_intermediate_folders=True):$/;"	m	class:SvnHelper
svn_remote_rm	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_remote_rm(self, svn_url, comment_lines):$/;"	m	class:SvnHelper
svn_save_properties	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_save_properties(self, svn_props, fname, header_lines=None):$/;"	m	class:SvnHelper
svn_save_property_values_tmpf	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_save_property_values_tmpf(self, prop_values):$/;"	m	class:SvnHelper
svn_set_properties_url	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_set_properties_url(self, svn_url, svn_props, work_dir=None):$/;"	m	class:SvnHelper
svn_set_properties_wc	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_set_properties_wc(self, svn_props, work_dir):$/;"	m	class:SvnHelper
svn_split_url	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def svn_split_url(self, svn_url):$/;"	m	class:SvnHelper
swapIRAPForward	source/Lib/TLibEncoder/TEncGOP.cpp	/^    Bool swapIRAPForward;$/;"	m	class:EfficientFieldIRAPMapping	file:
swapSliceObject	source/Lib/TLibCommon/TComPicSym.h	/^  TComSlice *        swapSliceObject(TComSlice* p, UInt i)                 { p->setSPS(&m_sps); p->setPPS(&m_pps); TComSlice *pTmp=m_apSlices[i];m_apSlices[i] = p; pTmp->setSPS(0); pTmp->setPPS(0); return pTmp; }$/;"	f	class:TComPicSym
sys	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^            tmp_file.write("import sys\\n")$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import sys$/;"	i
sys	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import sys$/;"	i
system	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.system as system$/;"	i
system	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.system as system$/;"	i
system	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.system as system$/;"	i
targetValue	source/Lib/TLibCommon/SEI.h	/^    Int targetValue;$/;"	m	struct:SEIColourRemappingInfo::CRIlut
tempfile	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import tempfile$/;"	i
tempfile	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import tempfile$/;"	i
tempfile	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import tempfile$/;"	i
testAndWriteOut	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::testAndWriteOut()$/;"	f	class:TEncBinCABAC
testWeightBiPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        testWeightBiPred( ) const                              { return m_bTestWeightBiPred;                                   }$/;"	f	class:TComSlice
testWeightPred	source/Lib/TLibCommon/TComSlice.h	/^  Bool                        testWeightPred( ) const                                { return m_bTestWeightPred;                                     }$/;"	f	class:TComSlice
tests	source/App/utils/annexBbytecount.cpp	/^} tests[] = {$/;"	v	typeref:struct:__anon1	file:
textwrap	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import textwrap$/;"	i
textwrap	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import textwrap$/;"	i
tileSetData	source/Lib/TLibCommon/SEI.h	/^        TileSetData &tileSetData (const Int index)       { return m_tile_set_data[index]; }$/;"	f	class:SEITempMotionConstrainedTileSets
tileSetData	source/Lib/TLibCommon/SEI.h	/^  const TileSetData &tileSetData (const Int index) const { return m_tile_set_data[index]; }$/;"	f	class:SEITempMotionConstrainedTileSets
tiltCentre	source/Lib/TLibCommon/SEI.h	/^    Int  tiltCentre;$/;"	m	struct:SEIOmniViewport::OmniViewport
timeOffsetLength	source/Lib/TLibCommon/TypeDef.h	/^  Int  timeOffsetLength;$/;"	m	struct:TComSEITimeSet
timeOffsetValue	source/Lib/TLibCommon/TypeDef.h	/^  Int  timeOffsetValue;$/;"	m	struct:TComSEITimeSet
timeSetArray	source/Lib/TLibCommon/SEI.h	/^  TComSEITimeSet timeSetArray[MAX_TIMECODE_SEI_SETS];$/;"	m	class:SEITimeCode
tl0Idx	source/Lib/TLibCommon/SEI.h	/^  UInt tl0Idx;$/;"	m	class:SEITemporalLevel0Index
toChannelType	source/Lib/TLibCommon/TComChromaFormat.h	/^static inline ChannelType toChannelType             (const ComponentID id)                         { return (id==COMPONENT_Y)? CHANNEL_TYPE_LUMA : CHANNEL_TYPE_CHROMA; }$/;"	f
to_posix_path	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^def to_posix_path(fpath):$/;"	f
topLeftTileIndex	source/Lib/TLibCommon/SEI.h	/^            Int &topLeftTileIndex    (const Int tileRectIndex)       { return m_top_left_tile_index    [tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
topLeftTileIndex	source/Lib/TLibCommon/SEI.h	/^      const Int &topLeftTileIndex    (const Int tileRectIndex) const { return m_top_left_tile_index    [tileRectIndex]; }$/;"	f	class:SEITempMotionConstrainedTileSets::TileSetData
topOffset	source/Lib/TLibCommon/SEI.h	/^    Int topOffset;$/;"	m	struct:SEIPanScanRect::PanScanRect
trace_command	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def trace_command(self, cmd_argv):$/;"	m	class:VcsCommandTracer
trace_git_command	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def trace_git_command(self, git_argv):$/;"	m	class:GitHelper
trace_svn_command	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def trace_svn_command(self, svn_argv):$/;"	m	class:SvnHelper
traceback	cmake/CMakeBuild/bin/pyhhi/build/common/util.py	/^import traceback$/;"	i
transformNxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::transformNxN(       TComTU        & rTu,$/;"	f	class:TComTrQuant
transformSkipQuantOneSample	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::transformSkipQuantOneSample(TComTU &rTu, const ComponentID compID, const TCoeff resiDiff, TCoeff* pcCoeff, const UInt uiPos, const QpParam &cQP, const Bool bUseHalfRoundingPoint)$/;"	f	class:TComTrQuant
type	source/Lib/TLibCommon/TComCodingStatistics.h	/^  TComCodingStatisticsType type;$/;"	m	class:TComCodingStatisticsClassType
typeAuxInfo	source/Lib/TLibCommon/TypeDef.h	/^  Int typeAuxInfo; \/\/ BO: starting band index$/;"	m	struct:SAOOffset
typeIdc	source/Lib/TLibCommon/TypeDef.h	/^  Int typeIdc;     \/\/ union of SAOModeMergeTypes and SAOModeNewTypes, depending on modeIdc.$/;"	m	struct:SAOOffset
u	source/Lib/TLibCommon/TComSlice.h	/^  } u;$/;"	m	struct:ChromaQpAdj	typeref:union:ChromaQpAdj::__anon12
ubuntu_version_tuple_to_str	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def ubuntu_version_tuple_to_str(version):$/;"	f
ucPointNr	source/Lib/TLibEncoder/TEncSearch.h	/^    UChar       ucPointNr;$/;"	m	struct:TEncSearch::__anon7
uiBestDistance	source/Lib/TLibEncoder/TEncSearch.h	/^    UInt        uiBestDistance;$/;"	m	struct:TEncSearch::__anon7
uiBestRound	source/Lib/TLibEncoder/TEncSearch.h	/^    UInt        uiBestRound;$/;"	m	struct:TEncSearch::__anon7
uiBestSad	source/Lib/TLibEncoder/TEncSearch.h	/^    Distortion  uiBestSad;$/;"	m	struct:TEncSearch::__anon7
uiLog2WeightDenom	source/Lib/TLibCommon/TComSlice.h	/^  UInt uiLog2WeightDenom;$/;"	m	struct:WPScalingParam
uint16_t	compat/msvc/stdint.h	/^typedef unsigned short int uint16_t;$/;"	t
uint32_t	compat/msvc/stdint.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	compat/msvc/stdint.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint8_t	compat/msvc/stdint.h	/^typedef unsigned char uint8_t;$/;"	t
uninit	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::uninit()$/;"	f	class:TDecBinCABAC
uninit	source/Lib/TLibDecoder/TDecSbac.h	/^  Void  uninit                    (              )    { m_pcTDecBinIf = 0; }$/;"	f	class:TDecSbac
uninit	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::uninit()$/;"	f	class:TEncBinCABAC
uninit	source/Lib/TLibEncoder/TEncSbac.h	/^  Void  uninit                 ()                { m_pcBinIf = 0; }$/;"	f	class:TEncSbac
update	source/Lib/TLibCommon/ContextModel.h	/^  Void update( Int binVal )$/;"	f	class:ContextModel
update	source/Lib/libmd5/MD5.h	/^  void update(unsigned char *buf, unsigned len)$/;"	f	class:MD5
updateAfterCTU	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::updateAfterCTU(Int LCUIdx, Int bits, Int QP, Double lambda, Double skipRatio, Bool updateLCUParameter)$/;"	f	class:TEncRCPic
updateAfterPic	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCSeq::updateAfterPic ( Int bits )$/;"	f	class:TEncRCSeq
updateAfterPicture	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::updateAfterPicture( Int bitsCost )$/;"	f	class:TEncRCGOP
updateAfterPicture	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::updateAfterPicture( Int actualHeaderBits, Int actualTotalBits, Double averageQP, Double averageLambda, SliceType eSliceType)$/;"	f	class:TEncRCPic
updateAlphaBetaIntra	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCPic::updateAlphaBetaIntra(Double *alpha, Double *beta)$/;"	f	class:TEncRCPic
updateCpbState	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int  TEncRateCtrl::updateCpbState(Int actualBits)$/;"	f	class:TEncRateCtrl
updateCtuDataISlice	source/Lib/TLibEncoder/TEncCu.cpp	/^Int  TEncCu::updateCtuDataISlice(TComDataCU* pCtu, Int width, Int height)$/;"	f	class:TEncCu
updateLPS	source/Lib/TLibCommon/ContextModel.h	/^  Void updateLPS ()$/;"	f	class:ContextModel
updateLambda	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::updateLambda(TComSlice* pSlice, Double dQP)$/;"	f	class:TEncSlice
updateMPS	source/Lib/TLibCommon/ContextModel.h	/^  Void updateMPS ()$/;"	f	class:ContextModel
update_cmake_manual_docs	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^    def update_cmake_manual_docs(self, params):$/;"	m	class:CMakeDocUtilApp
update_property	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^    def update_property(self, prop, prop_values):$/;"	m	class:SvnProperties
useDST	source/Lib/TLibCommon/TComTU.cpp	/^Bool TComTU::useDST(const ComponentID compID)$/;"	f	class:TComTU
util	cmake/CMakeBuild/bin/cmake.py	/^import pyhhi.build.common.util$/;"	i
util	cmake/CMakeBuild/bin/cmake_docutil.py	/^import pyhhi.build.common.util$/;"	i
util	cmake/CMakeBuild/bin/cmakebuild_update.py	/^import pyhhi.build.common.util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/app/cmkdocapp.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^import pyhhi.build.common.util as util$/;"	i
util	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.util as util$/;"	i
v	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  std::vector< T > v;$/;"	m	struct:Array2D
val	source/Lib/Utilities/program_options_lite.h	/^      std::string val;$/;"	m	struct:df::program_options_lite::ParseFailure
validProfiles	source/Lib/TLibCommon/ProfileLevelTierFeatures.cpp	/^static const ProfileFeatures validProfiles[] =$/;"	v	file:
validProfiles	source/Lib/TLibDecoder/TDecConformance.cpp	/^static const ProfileFeatures validProfiles[] =$/;"	v	file:
validRExtHighThroughPutProfileNames	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const UIProfileName validRExtHighThroughPutProfileNames[2\/* intraConstraintFlag*\/][4\/* bit depth constraint 8=0, 10=1, 12=2, 16=3*\/]=$/;"	v	file:
validRExtProfileNames	source/App/TAppEncoder/TAppEncCfg.cpp	/^static const UIProfileName validRExtProfileNames[2\/* intraConstraintFlag*\/][4\/* bit depth constraint 8=0, 10=1, 12=2, 16=3*\/][4\/*chroma format*\/]=$/;"	v	file:
value	source/App/TAppEncoder/TAppEncCfg.cpp	/^  CostMode    value;$/;"	m	struct:MapStrToCostMode	file:
value	source/App/TAppEncoder/TAppEncCfg.cpp	/^  Level::Name value;$/;"	m	struct:MapStrToLevel	file:
value	source/App/TAppEncoder/TAppEncCfg.cpp	/^  Level::Tier value;$/;"	m	struct:MapStrToTier	file:
value	source/App/TAppEncoder/TAppEncCfg.cpp	/^  Profile::Name value;$/;"	m	struct:MapStrToProfile	file:
value	source/App/TAppEncoder/TAppEncCfg.cpp	/^  ScalingListMode value;$/;"	m	struct:MapStrToScalingListMode	file:
value	source/App/TAppEncoder/TAppEncCfg.cpp	/^  UIProfileName value;$/;"	m	struct:MapStrToUIProfileName	file:
value	source/App/TAppEncoder/TAppEncCfg.h	/^    T    value;$/;"	m	struct:TAppEncCfg::OptionalValue
values	source/App/TAppEncoder/TAppEncCfg.cpp	/^        std::vector<T> values;$/;"	m	struct:SMultiValueInput	file:
values	source/Lib/TLibCommon/SEI.h	/^    TComSEIMasteringDisplay values;$/;"	m	class:SEIMasteringDisplayColourVolume
values	source/Lib/TLibCommon/SEI.h	/^  TComSEIFisheyeVideoInfo values;$/;"	m	class:SEIFisheyeVideoInfo
values	source/Lib/TLibCommon/TComCodingStatistics.h	/^      UInt values[512+1];$/;"	m	struct:TComCodingStatistics::StatLogValue
values	source/Lib/TLibCommon/TComCodingStatistics.h	/^    StatLogValue values;$/;"	m	class:TComCodingStatistics
vcsutil	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.vcsutil as vcsutil$/;"	i
vector	source/App/TAppDecoder/TAppDecTop.cpp	/^initColourRemappingInfoLuts(std::vector<Int>      (&preLut)[3],$/;"	v	file:
ver	cmake/CMakeBuild/bin/pyhhi/build/app/cmbldup.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/app/cmk.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/cmksupp.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/common/android.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/common/system.py	/^import pyhhi.build.common.ver as ver$/;"	i
ver	cmake/CMakeBuild/bin/pyhhi/build/vcsutil.py	/^import pyhhi.build.common.ver as ver$/;"	i
verFlip	source/Lib/TLibCommon/SEI.h	/^  Bool verFlip;$/;"	m	class:SEIDisplayOrientation
verRange	source/Lib/TLibCommon/SEI.h	/^    UInt verRange;$/;"	m	struct:SEIOmniViewport::OmniViewport
verbose	source/App/Parcat/parcat.cpp	/^const bool verbose = false;$/;"	v
version_compare	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def version_compare(version1, version2):$/;"	f
version_list_sort	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def version_list_sort(version_list):$/;"	f
version_list_to_str	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def version_list_to_str(version_list):$/;"	f
version_str_to_rpm_version_tuple	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def version_str_to_rpm_version_tuple(version):$/;"	f
version_tuple_from_str	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def version_tuple_from_str(version, nelem=None):$/;"	f
version_tuple_to_str	cmake/CMakeBuild/bin/pyhhi/build/common/ver.py	/^def version_tuple_to_str(version, sep='.'):$/;"	f
volatile	build/CMakeFiles/3.18.4/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
w	source/Lib/TLibCommon/TComSlice.h	/^  Int  w;$/;"	m	struct:WPScalingParam
warn	source/Lib/Utilities/program_options_lite.cpp	/^    ostream& ErrorReporter::warn(const string& where)$/;"	f	class:df::program_options_lite::ErrorReporter
weightBidir	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^static inline Pel weightBidir( Int w0, Pel P0, Int w1, Pel P1, Int round, Int shift, Int offset, Int clipBD)$/;"	f	file:
weightUnidir	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^static inline Pel weightUnidir( Int w0, Pel P0, Int round, Int shift, Int offset, Int clipBD)$/;"	f	file:
what	source/App/utils/BitrateTargeting/RuntimeError.h	/^    const char * what( ) const throw( )$/;"	f	class:RuntimeError
what	source/Lib/Utilities/program_options_lite.h	/^      const char* what() const throw() { return "Option Parse Failure"; }$/;"	f	struct:df::program_options_lite::ParseFailure
where	source/Lib/Utilities/program_options_lite.cpp	/^      const string where() { return "command line"; }$/;"	f	struct:df::program_options_lite::ArgvParser
where	source/Lib/Utilities/program_options_lite.cpp	/^      const string where()$/;"	f	struct:df::program_options_lite::CfgStreamParser
whitePoint	source/Lib/TLibCommon/TypeDef.h	/^  UShort    whitePoint[2];$/;"	m	struct:TComSEIMasteringDisplay
width	source/Lib/TLibCommon/TComRectangle.h	/^  UInt width;$/;"	m	struct:TComRectangle
widthInGroups	source/Lib/TLibCommon/TypeDef.h	/^        UInt             widthInGroups;$/;"	m	struct:TUEntropyCodingParameters
winreg	cmake/CMakeBuild/bin/pyhhi/build/cmkfnd.py	/^            import winreg$/;"	i
winreg	cmake/CMakeBuild/bin/pyhhi/build/common/bldtools.py	/^                import winreg$/;"	i
wpCur	source/Lib/TLibCommon/TComRdCost.h	/^  const WPScalingParam *wpCur;           \/\/ weighted prediction scaling parameters for current ref$/;"	m	class:DistParam
write	source/Lib/TLibCommon/TComBitCounter.h	/^  Void        write                 ( UInt \/*uiBits*\/, UInt uiNumberOfBits )  { m_uiBitCounter += uiNumberOfBits; }$/;"	f	class:TComBitCounter
write	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::write   ( UInt uiBits, UInt uiNumberOfBits )$/;"	f	class:TComOutputBitstream
write	source/Lib/TLibEncoder/NALwrite.cpp	/^Void write(ostream& out, OutputNALUnit& nalu)$/;"	f
write	source/Lib/Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::write( TComPicYuv* pPicYuvUser, const InputColourSpaceConversion ipCSC, Int confLeft, Int confRight, Int confTop, Int confBottom, ChromaFormat format, const Bool bClipToRec709 )$/;"	f	class:TVideoIOYuv
write	source/Lib/Utilities/TVideoIOYuv.cpp	/^Bool TVideoIOYuv::write( TComPicYuv* pPicYuvUserTop, TComPicYuv* pPicYuvUserBottom, const InputColourSpaceConversion ipCSC, Int confLeft, Int confRight, Int confTop, Int confBottom, ChromaFormat format, const Bool isTff, const Bool bClipToRec709 )$/;"	f	class:TVideoIOYuv
writeAlignOne	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::writeAlignOne()$/;"	f	class:TComOutputBitstream
writeAlignOne	source/Lib/TLibCommon/TComBitStream.h	/^  virtual Void        writeAlignOne         () {};$/;"	f	class:TComBitIf
writeAlignZero	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::writeAlignZero()$/;"	f	class:TComOutputBitstream
writeAlignZero	source/Lib/TLibCommon/TComBitStream.h	/^  virtual Void        writeAlignZero        () {};$/;"	f	class:TComBitIf
writeAnnexB	source/Lib/TLibEncoder/AnnexBwrite.h	/^static std::vector<UInt> writeAnnexB(std::ostream& out, const AccessUnit& au)$/;"	f
writeByteAlignment	source/Lib/TLibCommon/TComBitStream.cpp	/^Void TComOutputBitstream::writeByteAlignment()$/;"	f	class:TComOutputBitstream
writeField	source/Lib/Utilities/TVideoIOYuv.cpp	/^static Bool writeField(ostream& fd, Pel* top, Pel* bottom, Bool is16bit,$/;"	f	file:
writeNalUnitHeader	source/Lib/TLibEncoder/NALwrite.cpp	/^Void writeNalUnitHeader(ostream& out, OutputNALUnit& nalu)       \/\/ nal_unit_header()$/;"	f
writeOut	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::writeOut()$/;"	f	class:TEncBinCABAC
writePlane	source/Lib/Utilities/TVideoIOYuv.cpp	/^static Bool writePlane(ostream& fd, Pel* src, Bool is16bit,$/;"	f	file:
writeSEImessages	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::writeSEImessages(TComBitIf& bs, const SEIMessages &seiList, const TComSPS *sps, Bool isNested)$/;"	f	class:SEIWriter
writeValueToStream	source/Lib/TLibCommon/Debug.h	/^template <>                   inline Void writeValueToStream<SChar>(const SChar     &value, std::ostream &stream, const UInt outputWidth) { stream << std::setw(outputWidth) <<  Int(value); }$/;"	f
writeValueToStream	source/Lib/TLibCommon/Debug.h	/^template <>                   inline Void writeValueToStream<UChar>(const UChar     &value, std::ostream &stream, const UInt outputWidth) { stream << std::setw(outputWidth) << UInt(value); }$/;"	f
writeValueToStream	source/Lib/TLibCommon/Debug.h	/^template <typename ValueType> inline Void writeValueToStream       (const ValueType &value, std::ostream &stream, const UInt outputWidth) { stream << std::setw(outputWidth) <<      value;  }$/;"	f
x	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int x, y;$/;"	m	struct:MotionVector
x0	source/Lib/TLibCommon/TComRectangle.h	/^  UInt x0;$/;"	m	struct:TComRectangle
xActivateParameterSets	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xActivateParameterSets(Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
xAddMVPCandUnscaled	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::xAddMVPCandUnscaled( AMVPInfo &info, const RefPicList eRefPicList, const Int iRefIdx, const UInt uiPartUnitIdx, const MVP_DIR eDir ) const$/;"	f	class:TComDataCU
xAddMVPCandWithScaling	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::xAddMVPCandWithScaling( AMVPInfo &info, const RefPicList eRefPicList, const Int iRefIdx, const UInt uiPartUnitIdx, const MVP_DIR eDir ) const$/;"	f	class:TComDataCU
xAddSymbolBitsInter	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void  TEncSearch::xAddSymbolBitsInter( TComDataCU* pcCU, UInt& ruiBits )$/;"	f	class:TEncSearch
xAnalysePrefixSEImessages	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xAnalysePrefixSEImessages()$/;"	f	class:TDecTop
xAttachSliceDataToNalUnit	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xAttachSliceDataToNalUnit (OutputNALUnit& rNalu, TComOutputBitstream* codedSliceData)$/;"	f	class:TEncGOP
xCalEquaCoeff	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Void TEncRCGOP::xCalEquaCoeff( TEncRCSeq* encRCSeq, Double* lambdaRatio, Double* equaCoeffA, Double* equaCoeffB, Int GOPSize )$/;"	f	class:TEncRCGOP
xCalcACDCParamSlice	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Void WeightPredAnalysis::xCalcACDCParamSlice(TComSlice *const slice)$/;"	f	class:WeightPredAnalysis
xCalcBsIdx	source/Lib/TLibCommon/TComLoopFilter.h	/^  UInt xCalcBsIdx                 ( TComDataCU* pcCU, UInt absZIdxInCtu, DeblockEdgeDir edgeDir, Int iEdgeIdx, Int iBaseUnitIdx, const struct TComRectangle *rect=NULL )$/;"	f	class:TComLoopFilter
xCalcCrossComponentPredictionAlpha	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xCalcCrossComponentPredictionAlpha(       TComTU &rTu,$/;"	f	class:TEncSearch
xCalcDP	source/Lib/TLibCommon/TComLoopFilter.cpp	/^__inline Int TComLoopFilter::xCalcDP( Pel* piSrc, Int iOffset)$/;"	f	class:TComLoopFilter
xCalcDQ	source/Lib/TLibCommon/TComLoopFilter.cpp	/^__inline Int TComLoopFilter::xCalcDQ( Pel* piSrc, Int iOffset)$/;"	f	class:TComLoopFilter
xCalcHADs2x2	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xCalcHADs2x2( const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f	class:TComRdCost
xCalcHADs2x2w	source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion xCalcHADs2x2w( const WPScalingParam &wpCur, const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f
xCalcHADs4x4	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xCalcHADs4x4( const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f	class:TComRdCost
xCalcHADs4x4w	source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion xCalcHADs4x4w( const WPScalingParam &wpCur, const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f
xCalcHADs8x8	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xCalcHADs8x8( const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep$/;"	f	class:TComRdCost
xCalcHADs8x8_ISlice	source/Lib/TLibEncoder/TEncCu.cpp	/^Int xCalcHADs8x8_ISlice(Pel *piOrg, Int iStrideOrg)$/;"	f
xCalcHADs8x8w	source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion xCalcHADs8x8w( const WPScalingParam &wpCur, const Pel *piOrg, const Pel *piCur, Int iStrideOrg, Int iStrideCur, Int iStep )$/;"	f
xCalcHistDistortion	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Distortion xCalcHistDistortion (const std::vector<Int> &histogram0,$/;"	f	file:
xCalcHistogram	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Void xCalcHistogram(const Pel  *pPel,$/;"	f	file:
xCalcSADvalueWP	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Int64 xCalcSADvalueWP(const Int   bitDepth,$/;"	f	file:
xCalcSADvalueWPOptionalClip	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Int64 xCalcSADvalueWPOptionalClip(const Int   bitDepth,$/;"	f	file:
xCalculateAddPSNR	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCalculateAddPSNR( TComPic* pcPic, TComPicYuv* pcPicD, const AccessUnit& accessUnit, Double dEncTime, const InputColourSpaceConversion ip_conversion, const InputColourSpaceConversion snr_conversion, const TEncAnalyze::OutputLogControl &outputLogCtrl, Double* PSNR_Y )$/;"	f	class:TEncGOP
xCalculateAddPSNRs	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCalculateAddPSNRs( const Bool isField, const Bool isFieldTopFieldFirst, const Int iGOPid, TComPic* pcPic, const AccessUnit&accessUnit, TComList<TComPic*> &rcListPic, const Double dEncTime, const InputColourSpaceConversion ip_conversion, const InputColourSpaceConversion snr_conversion, const TEncAnalyze::OutputLogControl &outputLogCtrl, Double* PSNR_Y )$/;"	f	class:TEncGOP
xCalculateInterlacedAddPSNR	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCalculateInterlacedAddPSNR( TComPic* pcPicOrgFirstField, TComPic* pcPicOrgSecondField,$/;"	f	class:TEncGOP
xCalculateMSSSIM	source/Lib/TLibEncoder/TEncGOP.cpp	/^Double TEncGOP::xCalculateMSSSIM (const Pel *pOrg, const Int orgStride, const Pel* pRec, const Int recStride, const Int width, const Int height, const UInt bitDepth)$/;"	f	class:TEncGOP
xCalculateNextCtuRSAddr	source/Lib/TLibCommon/TComPicSym.cpp	/^UInt TComPicSym::xCalculateNextCtuRSAddr( UInt currCtuRsAddr )$/;"	f	class:TComPicSym
xCalculateRVM	source/Lib/TLibEncoder/TEncGOP.cpp	/^Double TEncGOP::xCalculateRVM()$/;"	f	class:TEncGOP
xCheckBestMVP	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xCheckBestMVP ( TComDataCU* pcCU, RefPicList eRefPicList, TComMv cMv, TComMv& rcMvPred, Int& riMVPIdx, UInt& ruiBits, Distortion& ruiCost )$/;"	f	class:TEncSearch
xCheckBestMode	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckBestMode( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU, UInt uiDepth DEBUG_STRING_FN_DECLARE(sParent) DEBUG_STRING_FN_DECLARE(sTest) DEBUG_STRING_PASS_INTO(Bool bAddSizeInfo) )$/;"	f	class:TEncCu
xCheckDQP	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckDQP( TComDataCU* pcCU )$/;"	f	class:TEncCu
xCheckGSParameters	source/Lib/TLibEncoder/TEncTop.cpp	/^Void  TEncCfg::xCheckGSParameters()$/;"	f	class:TEncCfg
xCheckIdenticalMotion	source/Lib/TLibCommon/TComPrediction.cpp	/^Bool TComPrediction::xCheckIdenticalMotion ( TComDataCU* pcCU, UInt PartAddr )$/;"	f	class:TComPrediction
xCheckIntraPCM	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckIntraPCM( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU )$/;"	f	class:TEncCu
xCheckParameter	source/App/TAppEncoder/TAppEncCfg.cpp	/^Void TAppEncCfg::xCheckParameter()$/;"	f	class:TAppEncCfg
xCheckRDCostInter	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckRDCostInter( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU, PartSize ePartSize DEBUG_STRING_FN_DECLARE(sDebug), Bool bUseMRG)$/;"	f	class:TEncCu
xCheckRDCostIntra	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckRDCostIntra( TComDataCU *&rpcBestCU,$/;"	f	class:TEncCu
xCheckRDCostMerge2Nx2N	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCheckRDCostMerge2Nx2N( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU DEBUG_STRING_FN_DECLARE(sDebug), Bool *earlyDetectionSkipMode )$/;"	f	class:TEncCu
xCheckWPEnable	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Void  WeightPredAnalysis::xCheckWPEnable(TComSlice *const slice)$/;"	f	class:WeightPredAnalysis
xClearSEIs	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xClearSEIs(SEIMessages& seiMessages, Bool deleteMessages)$/;"	f	class:TEncGOP
xCodePredWeightTable	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::xCodePredWeightTable( TComSlice* pcSlice )$/;"	f	class:TEncCavlc
xCodeScalingList	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void TEncCavlc::xCodeScalingList(const TComScalingList* scalingList, UInt sizeId, UInt listId)$/;"	f	class:TEncCavlc
xCompressCU	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCompressCU( TComDataCU*& rpcBestCU, TComDataCU*& rpcTempCU, const UInt uiDepth DEBUG_STRING_FN_DECLARE(sDebug_), PartSize eParentPartSize )$/;"	f	class:TEncCu
xComputeQP	source/Lib/TLibEncoder/TEncCu.cpp	/^Int TEncCu::xComputeQP( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TEncCu
xConfirmPara	source/App/TAppEncoder/TAppEncCfg.cpp	2143;"	d	file:
xConfirmPara	source/App/TAppEncoder/TAppEncCfg.cpp	3023;"	d	file:
xConvertToUInt	source/Lib/TLibEncoder/SyntaxElementWriter.h	/^  UInt  xConvertToUInt        ( Int iValue ) {  return ( iValue <= 0) ? -iValue<<1 : (iValue<<1)-1; }$/;"	f	class:SyntaxElementWriter
xCopyAMVPInfo	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCopyAMVPInfo (AMVPInfo* pSrc, AMVPInfo* pDst)$/;"	f	class:TEncCu
xCopyAMVPInfo	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xCopyAMVPInfo (AMVPInfo* pSrc, AMVPInfo* pDst)$/;"	f	class:TEncSearch
xCopyContextsFrom	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xCopyContextsFrom( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
xCopyContextsFrom	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xCopyContextsFrom( const TEncSbac* pSrc )$/;"	f	class:TEncSbac
xCopyFrom	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xCopyFrom( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
xCopyFrom	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xCopyFrom( const TEncSbac* pSrc )$/;"	f	class:TEncSbac
xCopyToPic	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xCopyToPic( TComDataCU* pcCU, TComPic* pcPic, UInt uiZorderIdx, UInt uiDepth )$/;"	f	class:TDecCu
xCopyYuv2Pic	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCopyYuv2Pic(TComPic* rpcPic, UInt uiCUAddr, UInt uiAbsPartIdx, UInt uiDepth, UInt uiSrcDepth )$/;"	f	class:TEncCu
xCopyYuv2Tmp	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCopyYuv2Tmp( UInt uiPartUnitIdx, UInt uiNextDepth )$/;"	f	class:TEncCu
xCreateDecLib	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xCreateDecLib()$/;"	f	class:TAppDecTop
xCreateIRAPLeadingSEIMessages	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreateIRAPLeadingSEIMessages(SEIMessages& seiMessages, const TComVPS *vps, const TComSPS *sps, const TComPPS *pps)$/;"	f	class:TEncGOP
xCreateLib	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xCreateLib()$/;"	f	class:TAppEncTop
xCreateLostPicture	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xCreateLostPicture(Int iLostPoc)$/;"	f	class:TDecTop
xCreateMctsExtLib	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::xCreateMctsExtLib()$/;"	f	class:TAppMctsExtTop
xCreatePerPictureSEIMessages	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreatePerPictureSEIMessages (Int picInGOP, SEIMessages& seiMessages, SEIMessages& nestedSeiMessages, TComSlice *slice)$/;"	f	class:TEncGOP
xCreatePictureTimingSEI	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreatePictureTimingSEI  (Int IRAPGOPid, SEIMessages& seiMessages, SEIMessages& nestedSeiMessages, SEIMessages& duInfoSeiMessages, TComSlice *slice, Bool isField, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xCreateScalableNestingSEI	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xCreateScalableNestingSEI (SEIMessages& seiMessages, SEIMessages& nestedSeiMessages)$/;"	f	class:TEncGOP
xCtuCollectARLStats	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xCtuCollectARLStats(TComDataCU* pCtu )$/;"	f	class:TEncCu
xDCPredFiltering	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xDCPredFiltering( const Pel* pSrc, Int iSrcStride, Pel* pDst, Int iDstStride, Int iWidth, Int iHeight, ChannelType channelType )$/;"	f	class:TComPrediction
xDPBUsage	source/App/TAppEncoder/TAppEncCfg.cpp	/^Int TAppEncCfg::xDPBUsage(std::ostream *pOs)$/;"	f	class:TAppEncCfg
xDeQuant	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xDeQuant(       TComTU        &rTu,$/;"	f	class:TComTrQuant
xDeblockCU	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xDeblockCU( TComDataCU* pcCU, UInt uiAbsZorderIdx, UInt uiDepth, DeblockEdgeDir edgeDir )$/;"	f	class:TComLoopFilter
xDecodeCU	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecodeCU( TComDataCU*const pcCU, const UInt uiAbsPartIdx, const UInt uiDepth, Bool &isLastCtuOfSliceSegment)$/;"	f	class:TDecCu
xDecodeInterTexture	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecodeInterTexture ( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xDecodePCMTexture	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecodePCMTexture( TComDataCU* pcCU, const UInt uiPartIdx, const Pel *piPCM, Pel* piReco, const UInt uiStride, const UInt uiWidth, const UInt uiHeight, const ComponentID compID)$/;"	f	class:TDecCu
xDecodePPS	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xDecodePPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecodeSPS	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xDecodeSPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecodeScalingList	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::xDecodeScalingList(TComScalingList *scalingList, UInt sizeId, UInt listId)$/;"	f	class:TDecCavlc
xDecodeSlice	source/Lib/TLibDecoder/TDecTop.cpp	/^Bool TDecTop::xDecodeSlice(InputNALUnit &nalu, Int &iSkipFrame, Int iPOCLastDisplay, Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
xDecodeSliceEnd	source/Lib/TLibDecoder/TDecCu.cpp	/^Bool TDecCu::xDecodeSliceEnd( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecCu
xDecodeTransform	source/Lib/TLibDecoder/TDecEntropy.cpp	/^Void TDecEntropy::xDecodeTransform        ( Bool& bCodeDQP, Bool& isChromaQpAdjCoded, TComTU &rTu, const Int quadtreeTULog2MinSizeInCU )$/;"	f	class:TDecEntropy
xDecodeVPS	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xDecodeVPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecompressCU	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xDecompressCU( TComDataCU* pCtu, UInt uiAbsPartIdx,  UInt uiDepth )$/;"	f	class:TDecCu
xDeleteBuffer	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xDeleteBuffer( )$/;"	f	class:TAppEncTop
xDeriveCenterIdx	source/Lib/TLibCommon/TComDataCU.cpp	/^Void TComDataCU::xDeriveCenterIdx( UInt uiPartIdx, UInt& ruiPartIdxCenter ) const$/;"	f	class:TComDataCU
xDestroyDecLib	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xDestroyDecLib()$/;"	f	class:TAppDecTop
xDestroyLib	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xDestroyLib()$/;"	f	class:TAppEncTop
xDestroyMctsExtLib	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::xDestroyMctsExtLib()$/;"	f	class:TAppMctsExtTop
xDetermineStartAndBoundingCtuTsAddr	source/Lib/TLibEncoder/TEncSlice.cpp	/^Void TEncSlice::xDetermineStartAndBoundingCtuTsAddr  ( UInt& startCtuTsAddr, UInt& boundingCtuTsAddr, TComPic* pcPic )$/;"	f	class:TEncSlice
xEdgeFilterChroma	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xEdgeFilterChroma( TComDataCU* const pcCU, const UInt uiAbsZorderIdx, const UInt uiDepth, const DeblockEdgeDir edgeDir, const Int iEdge )$/;"	f	class:TComLoopFilter
xEdgeFilterLuma	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xEdgeFilterLuma( TComDataCU* const pcCU, const UInt uiAbsZorderIdx, const UInt uiDepth, const DeblockEdgeDir edgeDir, const Int iEdge  )$/;"	f	class:TComLoopFilter
xEncCoeffQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xEncCoeffQT(TComTU &rTu,$/;"	f	class:TEncSearch
xEncIntraHeader	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xEncIntraHeader( TComDataCU*  pcCU,$/;"	f	class:TEncSearch
xEncPCM	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEncPCM (TComDataCU* pcCU, UInt uiAbsPartIdx, Pel* pOrg, Pel* pPCM, Pel* pPred, Pel* pResi, Pel* pReco, UInt uiStride, UInt uiWidth, UInt uiHeight, const ComponentID compID )$/;"	f	class:TEncSearch
xEncSubdivCbfQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xEncSubdivCbfQT(TComTU      &rTu,$/;"	f	class:TEncSearch
xEncodeCU	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xEncodeCU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TEncCu
xEncodeInterResidualQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEncodeInterResidualQT( const ComponentID compID, TComTU &rTu )$/;"	f	class:TEncSearch
xEncodeTransform	source/Lib/TLibEncoder/TEncEntropy.cpp	/^Void TEncEntropy::xEncodeTransform( Bool& bCodeDQP, Bool& codeChromaQpAdj, TComTU &rTu )$/;"	f	class:TEncEntropy
xEstGOPTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCGOP::xEstGOPTargetBits( TEncRCSeq* encRCSeq, Int GOPSize )$/;"	f	class:TEncRCGOP
xEstPicHeaderBits	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::xEstPicHeaderBits( list<TEncRCPic*>& listPreviousPictures, Int frameLevel )$/;"	f	class:TEncRCPic
xEstPicLowerBound	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::xEstPicLowerBound(TEncRCSeq* encRCSeq, TEncRCGOP* encRCGOP)$/;"	f	class:TEncRCPic
xEstPicTargetBits	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Int TEncRCPic::xEstPicTargetBits( TEncRCSeq* encRCSeq, TEncRCGOP* encRCGOP )$/;"	f	class:TEncRCPic
xEstimateInterResidualQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEstimateInterResidualQT( TComYuv    *pcResi,$/;"	f	class:TEncSearch
xEstimateMvPredAMVP	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xEstimateMvPredAMVP( TComDataCU* pcCU, TComYuv* pcOrgYuv, UInt uiPartIdx, RefPicList eRefPicList, Int iRefIdx, TComMv& rcMvPred, Bool bFilled, Distortion* puiDistBiP )$/;"	f	class:TEncSearch
xEstimateWPParamSlice	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Void WeightPredAnalysis::xEstimateWPParamSlice(TComSlice *const slice, const WeightedPredictionMethod method)$/;"	f	class:WeightPredAnalysis
xExtDIFUpSamplingH	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xExtDIFUpSamplingH( TComPattern* pattern )$/;"	f	class:TEncSearch
xExtDIFUpSamplingQ	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xExtDIFUpSamplingQ( TComPattern* pattern, TComMv halfPelRef )$/;"	f	class:TEncSearch
xExtractSuitableParameterSets	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::xExtractSuitableParameterSets(SEIMessages SEIMctsSEIs, SEIMessages SEIMctsEisSEIs, AccessUnit &accessUnit)$/;"	f	class:TAppMctsExtTop
xFillPCMBuffer	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xFillPCMBuffer(TComDataCU* pCU, UInt depth)$/;"	f	class:TDecCu
xFillPCMBuffer	source/Lib/TLibEncoder/TEncCu.cpp	/^Void TEncCu::xFillPCMBuffer     ( TComDataCU* pCU, TComYuv* pOrgYuv )$/;"	f	class:TEncCu
xFindDistortionFrame	source/Lib/TLibEncoder/TEncGOP.cpp	/^UInt64 TEncGOP::xFindDistortionFrame (TComPicYuv* pcPic0, TComPicYuv* pcPic1, const BitDepths &bitDepths)$/;"	f	class:TEncGOP
xFinishDecodeCU	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xFinishDecodeCU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool &isLastCtuOfSliceSegment)$/;"	f	class:TDecCu
xFlushOutput	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xFlushOutput( TComList<TComPic*>* pcListPic )$/;"	f	class:TAppDecTop
xFree	source/Lib/TLibCommon/CommonDef.h	273;"	d
xFree	source/Lib/TLibCommon/CommonDef.h	276;"	d
xGetBlkBits	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xGetBlkBits( PartSize eCUMode, Bool bPSlice, Int iPartIdx, UInt uiLastMode, UInt uiBlkBit[3])$/;"	f	class:TEncSearch
xGetBoundaryStrengthSingle	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xGetBoundaryStrengthSingle ( TComDataCU* pCtu, DeblockEdgeDir edgeDir, UInt uiAbsPartIdx4x4BlockWithinCtu )$/;"	f	class:TComLoopFilter
xGetBuffer	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xGetBuffer( TComPicYuv*& rpcPicYuvRec)$/;"	f	class:TAppEncTop
xGetBuffer	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xGetBuffer( TComList<TComPic*>&      rcListPic,$/;"	f	class:TEncGOP
xGetCodedLevel	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline UInt TComTrQuant::xGetCodedLevel ( Double&          rd64CodedCost,          \/\/< reference to coded cost$/;"	f	class:TComTrQuant
xGetColMVP	source/Lib/TLibCommon/TComDataCU.cpp	/^Bool TComDataCU::xGetColMVP( const RefPicList eRefPicList, const Int ctuRsAddr, const Int partUnitIdx, TComMv& rcMv, const Int refIdx ) const$/;"	f	class:TComDataCU
xGetDistScaleFactor	source/Lib/TLibCommon/TComDataCU.cpp	/^Int TComDataCU::xGetDistScaleFactor(Int iCurrPOC, Int iCurrRefPOC, Int iColPOC, Int iColRefPOC)$/;"	f	class:TComDataCU
xGetExpGolombNumberOfBits	source/Lib/TLibCommon/TComRdCost.cpp	/^UInt TComRdCost::xGetExpGolombNumberOfBits( Int iVal )$/;"	f	class:TComRdCost
xGetHADs	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetHADs( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetHADsw	source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion TComRdCostWeightPrediction::xGetHADsw( DistParam* pcDtParam )$/;"	f	class:TComRdCostWeightPrediction
xGetICRate	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline Int TComTrQuant::xGetICRate         ( const UInt    uiAbsLevel,$/;"	f	class:TComTrQuant
xGetICost	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetICost        ( Double                          dRate         ) const$/;"	f	class:TComTrQuant
xGetIEPRate	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetIEPRate      (                                               ) const$/;"	f	class:TComTrQuant
xGetInterPredictionError	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xGetInterPredictionError( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPartIdx, Distortion& ruiErr, Bool \/*bHadamard*\/ )$/;"	f	class:TEncSearch
xGetIntraBitsQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xGetIntraBitsQT(TComTU &rTu,$/;"	f	class:TEncSearch
xGetIntraBitsQTChroma	source/Lib/TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xGetIntraBitsQTChroma(TComTU &rTu,$/;"	f	class:TEncSearch
xGetLongTermRefPic	source/Lib/TLibCommon/TComSlice.cpp	/^TComPic* TComSlice::xGetLongTermRefPic(TComList<TComPic*>& rcListPic, Int poc, Bool pocHasMsb)$/;"	f	class:TComSlice
xGetMvpIdxBits	source/Lib/TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xGetMvpIdxBits(Int iIdx, Int iNum)$/;"	f	class:TEncSearch
xGetNewPicBuffer	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xGetNewPicBuffer ( const TComSPS &sps, const TComPPS &pps, TComPic*& rpcPic, const UInt temporalLayer )$/;"	f	class:TDecTop
xGetNewPicBuffer	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xGetNewPicBuffer ( TComPic*& rpcPic, Int ppsId )$/;"	f	class:TEncTop
xGetQPValueAccordingToLambda	source/Lib/TLibEncoder/TEncSlice.cpp	/^Double TEncSlice::xGetQPValueAccordingToLambda ( Double lambda )$/;"	f	class:TEncSlice
xGetRateLast	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetRateLast   ( const UInt                      uiPosX,$/;"	f	class:TComTrQuant
xGetRateSigCoef	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetRateSigCoef  ( UShort                          uiSignificance,$/;"	f	class:TComTrQuant
xGetRateSigCoeffGroup	source/Lib/TLibCommon/TComTrQuant.cpp	/^__inline Double TComTrQuant::xGetRateSigCoeffGroup  ( UShort                    uiSignificanceCoeffGroup,$/;"	f	class:TComTrQuant
xGetRefPic	source/Lib/TLibCommon/TComSlice.cpp	/^TComPic* TComSlice::xGetRefPic (TComList<TComPic*>& rcListPic, Int poc)$/;"	f	class:TComSlice
xGetSAD	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD12	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD12( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD16	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD16( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD16N	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD16N( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD24	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD24( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD32	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD32( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD4	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD4( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD48	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD48( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD64	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD64( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSAD8	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSAD8( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSADw	source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion TComRdCostWeightPrediction::xGetSADw( DistParam* pcDtParam )$/;"	f	class:TComRdCostWeightPrediction
xGetSSE	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE16	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE16( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE16N	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE16N( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE32	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE32( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE4	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE4( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE64	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE64( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSE8	source/Lib/TLibCommon/TComRdCost.cpp	/^Distortion TComRdCost::xGetSSE8( DistParam* pcDtParam )$/;"	f	class:TComRdCost
xGetSSEw	source/Lib/TLibCommon/TComRdCostWeightPrediction.cpp	/^Distortion TComRdCostWeightPrediction::xGetSSEw( DistParam* pcDtParam )$/;"	f	class:TComRdCostWeightPrediction
xGetTemplateCost	source/Lib/TLibEncoder/TEncSearch.cpp	/^Distortion TEncSearch::xGetTemplateCost( TComDataCU* pcCU,$/;"	f	class:TEncSearch
xIT	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xIT( const Int channelBitDepth, Bool useDST, TCoeff* plCoef, Pel* pResidual, UInt uiStride, Int iWidth, Int iHeight, const Int maxLog2TrDynamicRange )$/;"	f	class:TComTrQuant
xITr	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void xITr(Int bitDepth, TCoeff *coeff, Pel *block, UInt uiStride, UInt uiTrSize, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xITrMxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void xITrMxN(Int bitDepth, TCoeff *coeff, TCoeff *block, Int iWidth, Int iHeight, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xITransformSkip	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xITransformSkip( TCoeff* plCoef, Pel* pResidual, UInt uiStride, TComTU &rTu, const ComponentID component )$/;"	f	class:TComTrQuant
xInitCtuTsRsAddrMaps	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::xInitCtuTsRsAddrMaps()$/;"	f	class:TComPicSym
xInitDecLib	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xInitDecLib()$/;"	f	class:TAppDecTop
xInitGOP	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xInitGOP( Int iPOCLast, Int iNumPicRcvd, Bool isField )$/;"	f	class:TEncGOP
xInitHrdParameters	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitHrdParameters(TComSPS &sps)$/;"	f	class:TEncTop
xInitLib	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xInitLib(Bool isFieldCoding)$/;"	f	class:TAppEncTop
xInitLibCfg	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xInitLibCfg()$/;"	f	class:TAppEncTop
xInitMctsExtLib	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::xInitMctsExtLib()$/;"	f	class:TAppMctsExtTop
xInitPPS	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitPPS(TComPPS &pps, const TComSPS &sps)$/;"	f	class:TEncTop
xInitPPSforTiles	source/Lib/TLibEncoder/TEncTop.cpp	/^Void  TEncTop::xInitPPSforTiles(TComPPS &pps)$/;"	f	class:TEncTop
xInitRPS	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitRPS(TComSPS &sps, Bool isFieldCoding)$/;"	f	class:TEncTop
xInitSPS	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitSPS(TComSPS &sps)$/;"	f	class:TEncTop
xInitScalingLists	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitScalingLists(TComSPS &sps, TComPPS &pps)$/;"	f	class:TEncTop
xInitTileBorders	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xInitTileBorders(const TComDataCU* const pcCU, TComPattern* pcPatternKey)$/;"	f	class:TEncSearch
xInitTiles	source/Lib/TLibCommon/TComPicSym.cpp	/^Void TComPicSym::xInitTiles()$/;"	f	class:TComPicSym
xInitVPS	source/Lib/TLibEncoder/TEncTop.cpp	/^Void TEncTop::xInitVPS(TComVPS &vps, const TComSPS &sps)$/;"	f	class:TEncTop
xInputToOutputSliceNaluConversion	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::xInputToOutputSliceNaluConversion(InputNALUnit &inNalu, OutputNALUnit &outNalu, TComSlice* curSlice)$/;"	f	class:TAppMctsExtTop
xIntraCodingTUBlock	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xIntraCodingTUBlock(       TComYuv*    pcOrgYuv,$/;"	f	class:TEncSearch
xIntraRecBlk	source/Lib/TLibDecoder/TDecCu.cpp	/^TDecCu::xIntraRecBlk(       TComYuv*    pcRecoYuv,$/;"	f	class:TDecCu
xIntraRecQT	source/Lib/TLibDecoder/TDecCu.cpp	/^TDecCu::xIntraRecQT(TComYuv*    pcRecoYuv,$/;"	f	class:TDecCu
xIsNaluWithinMCTSSet	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Bool TAppMctsExtTop::xIsNaluWithinMCTSSet(Int mcts_id)$/;"	f	class:TAppMctsExtTop
xLoadIntraResultQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xLoadIntraResultQT(const ComponentID compID, TComTU &rTu)$/;"	f	class:TEncSearch
xMalloc	source/Lib/TLibCommon/CommonDef.h	272;"	d
xMalloc	source/Lib/TLibCommon/CommonDef.h	275;"	d
xMergeEstimation	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xMergeEstimation( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPUIdx, UInt& uiInterDir, TComMvField* pacMvField, UInt& uiMergeIndex, Distortion& ruiCost, TComMvField* cMvFieldNeighbours, UChar* uhInterDirNeighbours, Int& numValidMergeCand )$/;"	f	class:TEncSearch
xModeBitsIntra	source/Lib/TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xModeBitsIntra( TComDataCU* pcCU, UInt uiMode, UInt uiPartOffset, UInt uiDepth, const ChannelType chType )$/;"	f	class:TEncSearch
xMoreRbspData	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Bool TDecCavlc::xMoreRbspData()$/;"	f	class:TDecCavlc
xMotionEstimation	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xMotionEstimation( TComDataCU* pcCU, TComYuv* pcYuvOrg, Int iPartIdx, RefPicList eRefPicList, TComMv* pcMvPred, Int iRefIdxPred, TComMv& rcMv, UInt& ruiBits, Distortion& ruiCost, Bool bBi  )$/;"	f	class:TEncSearch
xNeedRDOQ	source/Lib/TLibCommon/TComTrQuant.cpp	/^Bool TComTrQuant::xNeedRDOQ( TComTU &rTu, TCoeff * pSrc, const ComponentID compID, const QpParam &cQP )$/;"	f	class:TComTrQuant
xOutputAnnotatedRegions	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xOutputAnnotatedRegions(TComPic* pcPic)$/;"	f	class:TAppDecTop
xOutputColourRemapPic	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xOutputColourRemapPic(TComPic* pcPic)$/;"	f	class:TAppDecTop
xPCMCURestoration	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::xPCMCURestoration ( TComDataCU* pcCU, UInt uiAbsZorderIdx, UInt uiDepth )$/;"	f	class:TComSampleAdaptiveOffset
xPCMRestoration	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::xPCMRestoration(TComPic* pcPic)$/;"	f	class:TComSampleAdaptiveOffset
xPCMSampleRestoration	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^Void TComSampleAdaptiveOffset::xPCMSampleRestoration (TComDataCU* pcCU, UInt uiAbsZorderIdx, UInt uiDepth, const ComponentID compID)$/;"	f	class:TComSampleAdaptiveOffset
xParsePredWeightTable	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void TDecCavlc::xParsePredWeightTable( TComSlice* pcSlice, const TComSPS *sps )$/;"	f	class:TDecCavlc
xParsePrefixSEImessages	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xParsePrefixSEImessages()$/;"	f	class:TDecTop
xParsePrefixSEIsForUnknownVCLNal	source/Lib/TLibDecoder/TDecTop.cpp	/^Void TDecTop::xParsePrefixSEIsForUnknownVCLNal()$/;"	f	class:TDecTop
xParseSEIActiveParameterSets	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIActiveParameterSets(SEIActiveParameterSets& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIAlternativeTransferCharacteristics	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIAlternativeTransferCharacteristics(SEIAlternativeTransferCharacteristics& sei, UInt payloadSize, ostream* pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIAmbientViewingEnvironment	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIAmbientViewingEnvironment( SEIAmbientViewingEnvironment& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIAnnotatedRegions	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIAnnotatedRegions(SEIAnnotatedRegions& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIBufferingPeriod	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIBufferingPeriod(SEIBufferingPeriod& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIChromaResamplingFilterHint	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIChromaResamplingFilterHint(SEIChromaResamplingFilterHint& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEICodedRegionCompletion	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEICodedRegionCompletion( SEICodedRegionCompletion& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIColourRemappingInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIColourRemappingInfo(SEIColourRemappingInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIContentColourVolume	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIContentColourVolume(SEIContentColourVolume& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIContentLightLevelInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIContentLightLevelInfo( SEIContentLightLevelInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEICubemapProjection	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEICubemapProjection(SEICubemapProjection& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDecodedPictureHash	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDecodedPictureHash(SEIDecodedPictureHash& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDecodingUnitInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDecodingUnitInfo(SEIDecodingUnitInfo& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDeinterlaceFieldIdentification	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDeinterlaceFieldIdentification( SEIDeinterlaceFieldIdentification& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIDependentRAPIndication	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDependentRAPIndication( SEIDependentRAPIndication& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIDisplayOrientation	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIDisplayOrientation(SEIDisplayOrientation& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIEquirectangularProjection	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIEquirectangularProjection(SEIEquirectangularProjection& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFillerPayload	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFillerPayload(SEIFillerPayload& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFilmGrainCharacteristics	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFilmGrainCharacteristics(SEIFilmGrainCharacteristics& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFisheyeVideoInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFisheyeVideoInfo(SEIFisheyeVideoInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFramePacking	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIFramePacking(SEIFramePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIGreenMetadataInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIGreenMetadataInfo(SEIGreenMetadataInfo& sei, UInt payloadSize, ostream* pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIKneeFunctionInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIKneeFunctionInfo(SEIKneeFunctionInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIMCTSExtractionInfoSet	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIMCTSExtractionInfoSet(SEIMCTSExtractionInfoSet& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIMasteringDisplayColourVolume	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIMasteringDisplayColourVolume(SEIMasteringDisplayColourVolume& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEINoDisplay	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEINoDisplay(SEINoDisplay& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIOmniViewport	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIOmniViewport(SEIOmniViewport& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPanScanRect	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPanScanRect(SEIPanScanRect& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPictureSnapshot	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPictureSnapshot(SEIPictureSnapshot& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPictureTiming	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPictureTiming(SEIPictureTiming& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPostFilterHint	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIPostFilterHint(SEIPostFilterHint& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIProgressiveRefinementSegmentEnd	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIProgressiveRefinementSegmentEnd(SEIProgressiveRefinementSegmentEnd& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIProgressiveRefinementSegmentStart	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIProgressiveRefinementSegmentStart(SEIProgressiveRefinementSegmentStart& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRecoveryPoint	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRecoveryPoint(SEIRecoveryPoint& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionRefreshInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRegionRefreshInfo(SEIRegionRefreshInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionWisePacking	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRegionWisePacking(SEIRegionWisePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionalNesting	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIRegionalNesting( SEIRegionalNesting& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEISOPDescription	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISOPDescription(SEISOPDescription &sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIScalableNesting	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIScalableNesting(SEIScalableNesting& sei, const NalUnitType nalUnitType, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISceneInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISceneInfo(SEISceneInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISegmentedRectFramePacking	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISegmentedRectFramePacking(SEISegmentedRectFramePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIShutterInterval	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIShutterInterval(SEIShutterIntervalInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISphereRotation	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEISphereRotation(SEISphereRotation& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITempMotionConstraintsTileSets	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEITempMotionConstraintsTileSets(SEITempMotionConstrainedTileSets& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITemporalLevel0Index	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEITemporalLevel0Index(SEITemporalLevel0Index& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITimeCode	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEITimeCode(SEITimeCode& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIToneMappingInfo	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIToneMappingInfo(SEIToneMappingInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIUserDataRegistered	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIUserDataRegistered(SEIUserDataRegistered& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIUserDataUnregistered	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xParseSEIUserDataUnregistered(SEIUserDataUnregistered &sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseScalingList	source/Lib/TLibCommon/TComSlice.cpp	/^Bool TComScalingList::xParseScalingList(const std::string &fileName)$/;"	f	class:TComScalingList
xPatternRefinement	source/Lib/TLibEncoder/TEncSearch.cpp	/^Distortion TEncSearch::xPatternRefinement( TComPattern* pcPatternKey,$/;"	f	class:TEncSearch
xPatternSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xPatternSearch( const TComPattern* const pcPatternKey,$/;"	f	class:TEncSearch
xPatternSearchFast	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xPatternSearchFast( const TComDataCU* const  pcCU,$/;"	f	class:TEncSearch
xPatternSearchFracDIF	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xPatternSearchFracDIF($/;"	f	class:TEncSearch
xPelFilterChroma	source/Lib/TLibCommon/TComLoopFilter.cpp	/^__inline Void TComLoopFilter::xPelFilterChroma( Pel* piSrc, Int iOffset, Int tc, Bool bPartPNoFilter, Bool bPartQNoFilter, const Int bitDepthChroma)$/;"	f	class:TComLoopFilter
xPelFilterLuma	source/Lib/TLibCommon/TComLoopFilter.cpp	/^__inline Void TComLoopFilter::xPelFilterLuma( Pel* piSrc, Int iOffset, Int tc, Bool sw, Bool bPartPNoFilter, Bool bPartQNoFilter, Int iThrCut, Bool bFilterSecondP, Bool bFilterSecondQ, const Int bitDepthLuma)$/;"	f	class:TComLoopFilter
xPreanalyze	source/Lib/TLibEncoder/TEncPreanalyzer.cpp	/^Void TEncPreanalyzer::xPreanalyze( TEncPic* pcEPic )$/;"	f	class:TEncPreanalyzer
xPredInterBi	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredInterBi ( TComDataCU* pcCU, UInt uiPartAddr, Int iWidth, Int iHeight, TComYuv* pcYuvPred )$/;"	f	class:TComPrediction
xPredInterBlk	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredInterBlk(const ComponentID compID, TComDataCU *cu, TComPicYuv *refPic, UInt partAddr, TComMv *mv, Int width, Int height, TComYuv *dstPic, Bool bi, const Int bitDepth )$/;"	f	class:TComPrediction
xPredInterUni	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredInterUni ( TComDataCU* pcCU, UInt uiPartAddr, Int iWidth, Int iHeight, RefPicList eRefPicList, TComYuv* pcYuvPred, Bool bi )$/;"	f	class:TComPrediction
xPredIntraAng	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredIntraAng(       Int bitDepth,$/;"	f	class:TComPrediction
xPredIntraPlanar	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xPredIntraPlanar( const Pel* pSrc, Int srcStride, Pel* rpDst, Int dstStride, UInt width, UInt height )$/;"	f	class:TComPrediction
xPrintParameter	source/App/TAppEncoder/TAppEncCfg.cpp	/^Void TAppEncCfg::xPrintParameter()$/;"	f	class:TAppEncCfg
xQuant	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xQuant(       TComTU       &rTu,$/;"	f	class:TComTrQuant
xRateDistOptQuant	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xRateDistOptQuant                 (       TComTU       &rTu,$/;"	f	class:TComTrQuant
xReadCode	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadCode (UInt uiLength, UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadCodeChk	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadCodeChk ( UInt   length, UInt& val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReadCoefRemainExGolomb	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadCoefRemainExGolomb ( UInt &rSymbol, UInt &rParam, const Bool useLimitedPrefixLength, const Int maxLog2TrDynamicRange, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadEpExGolomb	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadEpExGolomb( UInt& ruiSymbol, UInt uiCount, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadFlag	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadFlag (UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadFlagChk	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadFlagChk ( UInt&  val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReadPCMCode	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^Void  TDecBinCABAC::xReadPCMCode(UInt uiLength, UInt& ruiCode)$/;"	f	class:TDecBinCABAC
xReadRbspTrailingBits	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadRbspTrailingBits()$/;"	f	class:SyntaxElementParser
xReadSCode	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSCode (UInt uiLength, Int& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadSCodeChk	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSCodeChk ( UInt   length, Int& val, const TChar *pSymbolName, const Int minValIncl, const Int maxValIncl )$/;"	f	class:SyntaxElementParser
xReadSEIPayloadData	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xReadSEIPayloadData(Int const payloadType, Int const payloadSize, SEI *&sei, const NalUnitType nalUnitType, const TComSPS *sps, $/;"	f	class:SEIReader
xReadSEImessage	source/Lib/TLibDecoder/SEIread.cpp	/^Void SEIReader::xReadSEImessage(SEIMessages& seis, const NalUnitType nalUnitType, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream, const vector<SEI::PayloadType>& allowedSeiTypes, std::string const &typeName)$/;"	f	class:SEIReader
xReadSvlc	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSvlc( Int& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadSvlcChk	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSvlcChk ( Int&   val, const TChar *pSymbolName, const Int  minValIncl, const Int  maxValIncl )$/;"	f	class:SyntaxElementParser
xReadUnaryMaxSymbol	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadUnaryMaxSymbol( UInt& ruiSymbol, ContextModel* pcSCModel, Int iOffset, UInt uiMaxSymbol, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadUnarySymbol	source/Lib/TLibDecoder/TDecSbac.cpp	/^Void TDecSbac::xReadUnarySymbol( UInt& ruiSymbol, ContextModel* pcSCModel, Int iOffset, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadUvlc	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadUvlc( UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadUvlcChk	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadUvlcChk ( UInt&  val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReconInter	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xReconInter( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xReconIntraQT	source/Lib/TLibDecoder/TDecCu.cpp	/^TDecCu::xReconIntraQT( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xReconPCM	source/Lib/TLibDecoder/TDecCu.cpp	/^Void TDecCu::xReconPCM( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xRecurIntraChromaCodingQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xRecurIntraChromaCodingQT(TComYuv*    pcOrgYuv,$/;"	f	class:TEncSearch
xRecurIntraCodingLumaQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xRecurIntraCodingLumaQT(TComYuv*    pcOrgYuv,$/;"	f	class:TEncSearch
xRestrictBipredMergeCand	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xRestrictBipredMergeCand( TComDataCU* pcCU, UInt puIdx, TComMvField* mvFieldNeighbours, UChar* interDirNeighbours, Int numValidMergeCand )$/;"	f	class:TEncSearch
xRoundIbdi	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Double xRoundIbdi(Int bitDepth, Double x)$/;"	f
xRoundIbdi2	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^inline Double xRoundIbdi2(Int bitDepth, Double x)$/;"	f
xScaleHistogram	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^void xScaleHistogram(const std::vector<Int> &histogramInput,$/;"	f	file:
xSearchHistogram	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Distortion xSearchHistogram(const std::vector<Int> &histogramSource,$/;"	f	file:
xSelectWP	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Bool WeightPredAnalysis::xSelectWP(TComSlice *const slice, const Int log2Denom)$/;"	f	class:WeightPredAnalysis
xSelectWPHistExtClip	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Bool WeightPredAnalysis::xSelectWPHistExtClip(TComSlice *const slice, const Int log2Denom, const Bool bDoEnhancement, const Bool bClipInitialSADWP, const Bool bUseHistogram)$/;"	f	class:WeightPredAnalysis
xSetEdgefilterMultiple	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetEdgefilterMultiple( TComDataCU*    pcCU,$/;"	f	class:TComLoopFilter
xSetEdgefilterPU	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetEdgefilterPU( TComDataCU* pcCU, UInt uiAbsZorderIdx )$/;"	f	class:TComLoopFilter
xSetEdgefilterTU	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetEdgefilterTU(  TComTU &rTu )$/;"	f	class:TComLoopFilter
xSetInterResidualQTData	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xSetInterResidualQTData( TComYuv* pcResi, Bool bSpatial, TComTU &rTu ) \/\/ TODO: turn this into two functions for bSpatial=true and false.$/;"	f	class:TEncSearch
xSetIntraResultChromaQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xSetIntraResultChromaQT(TComYuv*    pcRecoYuv, TComTU &rTu)$/;"	f	class:TEncSearch
xSetIntraResultLumaQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xSetIntraResultLumaQT(TComYuv* pcRecoYuv, TComTU &rTu)$/;"	f	class:TEncSearch
xSetLoopfilterParam	source/Lib/TLibCommon/TComLoopFilter.cpp	/^Void TComLoopFilter::xSetLoopfilterParam( TComDataCU* pcCU, UInt uiAbsZorderIdx )$/;"	f	class:TComLoopFilter
xSetScalingListDec	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xSetScalingListDec(const TComScalingList &scalingList, UInt listId, UInt sizeId, Int qp)$/;"	f	class:TComTrQuant
xSetScalingListEnc	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xSetScalingListEnc(TComScalingList *scalingList, UInt listId, UInt sizeId, Int qp)$/;"	f	class:TComTrQuant
xSetSearchRange	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xSetSearchRange ( const TComDataCU* const pcCU, const TComMv& cMvPred, const Int iSrchRng,$/;"	f	class:TEncSearch
xSolveEqua	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^Double TEncRCGOP::xSolveEqua(TEncRCSeq* encRCSeq, Double targetBpp, Double* equaCoeffA, Double* equaCoeffB, Int GOPSize)$/;"	f	class:TEncRCGOP
xStoreCrossComponentPredictionResult	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xStoreCrossComponentPredictionResult(       Pel    *pResiDst,$/;"	f	class:TEncSearch
xStoreIntraResultQT	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::xStoreIntraResultQT(const ComponentID compID, TComTU &rTu )$/;"	f	class:TEncSearch
xT	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xT( const Int channelBitDepth, Bool useDST, Pel* piBlkResi, UInt uiStride, TCoeff* psCoeff, Int iWidth, Int iHeight, const Int maxLog2TrDynamicRange )$/;"	f	class:TComTrQuant
xTZ2PointSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZ2PointSearch( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB )$/;"	f	class:TEncSearch
xTZ8PointDiamondSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZ8PointDiamondSearch( const TComPattern*const  pcPatternKey,$/;"	f	class:TEncSearch
xTZ8PointSquareSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZ8PointSquareSearch( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const TComMv* const pcMvSrchRngLT, const TComMv* const pcMvSrchRngRB, const Int iStartX, const Int iStartY, const Int iDist )$/;"	f	class:TEncSearch
xTZSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xTZSearch( const TComDataCU* const pcCU,$/;"	f	class:TEncSearch
xTZSearchHelp	source/Lib/TLibEncoder/TEncSearch.cpp	/^__inline Void TEncSearch::xTZSearchHelp( const TComPattern* const pcPatternKey, IntTZSearchStruct& rcStruct, const Int iSearchX, const Int iSearchY, const UChar ucPointNr, const UInt uiDistance )$/;"	f	class:TEncSearch
xTZSearchSelective	source/Lib/TLibEncoder/TEncSearch.cpp	/^Void TEncSearch::xTZSearchSelective( const TComDataCU* const   pcCU,$/;"	f	class:TEncSearch
xTr	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void xTr(Int bitDepth, Pel *block, TCoeff *coeff, UInt uiStride, UInt uiTrSize, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xTrMxN	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void xTrMxN(Int bitDepth, TCoeff *block, TCoeff *coeff, Int iWidth, Int iHeight, Bool useDST, const Int maxLog2TrDynamicRange)$/;"	f
xTraceAccessUnitDelimiter	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void  xTraceAccessUnitDelimiter ()$/;"	f
xTraceAccessUnitDelimiterEnc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void  xTraceAccessUnitDelimiterEnc()$/;"	f
xTraceFillerData	source/Lib/TLibDecoder/SyntaxElementParser.cpp	/^Void xTraceFillerData ()$/;"	f
xTraceNalUnitHeader	source/Lib/TLibDecoder/NALread.cpp	/^void xTraceNalUnitHeader(InputNALUnit& nalu)$/;"	f
xTracePPSHeaderDec	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void  xTracePPSHeaderDec()$/;"	f
xTracePPSHeaderEnc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void  xTracePPSHeaderEnc()$/;"	f
xTraceSEIHeader	source/Lib/TLibDecoder/SEIread.cpp	/^Void  xTraceSEIHeader()$/;"	f
xTraceSEIHeader	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void  xTraceSEIHeader()$/;"	f
xTraceSEIMessageType	source/Lib/TLibDecoder/SEIread.cpp	/^Void  xTraceSEIMessageType(SEI::PayloadType payloadType)$/;"	f
xTraceSEIMessageType	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void  xTraceSEIMessageType(SEI::PayloadType payloadType)$/;"	f
xTraceSPSHeaderDec	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void  xTraceSPSHeaderDec()$/;"	f
xTraceSPSHeaderEnc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void  xTraceSPSHeaderEnc()$/;"	f
xTraceSliceHeaderDec	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void  xTraceSliceHeaderDec()$/;"	f
xTraceSliceHeaderEnc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void  xTraceSliceHeaderEnc()$/;"	f
xTraceVPSHeaderDec	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^Void  xTraceVPSHeaderDec ()$/;"	f
xTraceVPSHeaderEnc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^Void  xTraceVPSHeaderEnc()$/;"	f
xTransformSkip	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xTransformSkip( Pel* piBlkResi, UInt uiStride, TCoeff* psCoeff, TComTU &rTu, const ComponentID component )$/;"	f	class:TComTrQuant
xTuCollectARLStats	source/Lib/TLibEncoder/TEncCu.cpp	/^Int TEncCu::xTuCollectARLStats(TCoeff* rpcCoeff, TCoeff* rpcArlCoeff, Int NumCoeffInCU, Double* cSum, UInt* numSamples )$/;"	f	class:TEncCu
xUpdateCandList	source/Lib/TLibEncoder/TEncSearch.cpp	/^UInt TEncSearch::xUpdateCandList( UInt uiMode, Double uiCost, UInt uiFastCandNum, UInt * CandModeList, Double * CandCostList )$/;"	f	class:TEncSearch
xUpdateDuData	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xUpdateDuData(AccessUnit &testAU, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xUpdateDuInfoSEI	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xUpdateDuInfoSEI(SEIMessages &duInfoSeiMessages, SEIPictureTiming *pictureTimingSEI)$/;"	f	class:TEncGOP
xUpdatePreviousTid0POC	source/Lib/TLibDecoder/TDecTop.h	/^  Void      xUpdatePreviousTid0POC( TComSlice *pSlice ) { if ((pSlice->getTLayer()==0) && (pSlice->isReferenceNalu() && (pSlice->getNalUnitType()!=NAL_UNIT_CODED_SLICE_RASL_R)&& (pSlice->getNalUnitType()!=NAL_UNIT_CODED_SLICE_RADL_R))) { m_prevTid0POC=pSlice->getPOC(); } }$/;"	f	class:TDecTop
xUpdateTimingSEI	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xUpdateTimingSEI(SEIPictureTiming *pictureTimingSEI, std::deque<DUData> &duData, const TComSPS *sps)$/;"	f	class:TEncGOP
xUpdatingWPParameters	source/Lib/TLibEncoder/WeightPredAnalysis.cpp	/^Bool WeightPredAnalysis::xUpdatingWPParameters(TComSlice *const slice, const Int log2Denom)$/;"	f	class:WeightPredAnalysis
xUseStrongFiltering	source/Lib/TLibCommon/TComLoopFilter.cpp	/^__inline Bool TComLoopFilter::xUseStrongFiltering( Int offset, Int d, Int beta, Int tc, Pel* piSrc)$/;"	f	class:TComLoopFilter
xWeightedAverage	source/Lib/TLibCommon/TComPrediction.cpp	/^Void TComPrediction::xWeightedAverage( TComYuv* pcYuvSrc0, TComYuv* pcYuvSrc1, Int iRefIdx0, Int iRefIdx1, UInt uiPartIdx, Int iWidth, Int iHeight, TComYuv* pcYuvDst, const BitDepths &clipBitDepths )$/;"	f	class:TComPrediction
xWeightedPredictionBi	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::xWeightedPredictionBi(       TComDataCU *const pcCU,$/;"	f	class:TComWeightPrediction
xWeightedPredictionUni	source/Lib/TLibCommon/TComWeightPrediction.cpp	/^Void TComWeightPrediction::xWeightedPredictionUni(       TComDataCU *const pcCU,$/;"	f	class:TComWeightPrediction
xWriteAccessUnitDelimiter	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteAccessUnitDelimiter (AccessUnit &accessUnit, TComSlice *slice)$/;"	f	class:TEncGOP
xWriteByteAlign	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteByteAlign()$/;"	f	class:SEIWriter
xWriteCode	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteCode     ( UInt uiCode, UInt uiLength )$/;"	f	class:SyntaxElementWriter
xWriteCodeTr	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteCodeTr (UInt value, UInt  length, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteCoefRemainExGolomb	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteCoefRemainExGolomb ( UInt symbol, UInt &rParam, const Bool useLimitedPrefixLength, const Int maxLog2TrDynamicRange )$/;"	f	class:TEncSbac
xWriteDuSEIMessages	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteDuSEIMessages (SEIMessages& duInfoSeiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xWriteEpExGolomb	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteEpExGolomb( UInt uiSymbol, UInt uiCount )$/;"	f	class:TEncSbac
xWriteFlag	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteFlag( UInt uiCode )$/;"	f	class:SyntaxElementWriter
xWriteFlagTr	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteFlagTr(UInt value, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteLeadingSEIMessages	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteLeadingSEIMessages (SEIMessages& seiMessages, SEIMessages& duInfoSeiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps, std::deque<DUData> &duData)$/;"	f	class:TEncGOP
xWriteLeadingSEIOrdered	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteLeadingSEIOrdered (SEIMessages& seiMessages, SEIMessages& duInfoSeiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps, Bool testWrite)$/;"	f	class:TEncGOP
xWriteOutput	source/App/TAppDecoder/TAppDecTop.cpp	/^Void TAppDecTop::xWriteOutput( TComList<TComPic*>* pcListPic, UInt tId )$/;"	f	class:TAppDecTop
xWriteOutput	source/App/TAppEncoder/TAppEncTop.cpp	/^Void TAppEncTop::xWriteOutput(std::ostream& bitstreamFile, Int iNumEncoded, const std::list<AccessUnit>& accessUnits)$/;"	f	class:TAppEncTop
xWriteOutput	source/App/TAppMCTSExtractor/TAppMctsExtTop.cpp	/^Void TAppMctsExtTop::xWriteOutput(std::ostream& bitstreamFile, const AccessUnit accessUnit)$/;"	f	class:TAppMctsExtTop
xWritePCMCode	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^Void TEncBinCABAC::xWritePCMCode(UInt uiCode, UInt uiLength)$/;"	f	class:TEncBinCABAC
xWritePPS	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWritePPS (AccessUnit &accessUnit, const TComPPS *pps)$/;"	f	class:TEncGOP
xWriteParameterSets	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWriteParameterSets (AccessUnit &accessUnit, TComSlice *slice, const Bool bSeqFirst)$/;"	f	class:TEncGOP
xWriteRbspTrailingBits	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteRbspTrailingBits()$/;"	f	class:SyntaxElementWriter
xWriteSCode	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteSCode    ( Int iCode, UInt uiLength )$/;"	f	class:SyntaxElementWriter
xWriteSCodeTr	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteSCodeTr (Int value, UInt  length, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteSEI	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteSEI (NalUnitType naluType, SEIMessages& seiMessages, AccessUnit &accessUnit, AccessUnit::iterator &auPos, Int temporalId, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteSEIActiveParameterSets	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIActiveParameterSets(const SEIActiveParameterSets& sei)$/;"	f	class:SEIWriter
xWriteSEIAlternativeTransferCharacteristics	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIAlternativeTransferCharacteristics(const SEIAlternativeTransferCharacteristics& sei)$/;"	f	class:SEIWriter
xWriteSEIAmbientViewingEnvironment	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIAmbientViewingEnvironment(const SEIAmbientViewingEnvironment& sei)$/;"	f	class:SEIWriter
xWriteSEIAnnotatedRegions	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIAnnotatedRegions(const SEIAnnotatedRegions &sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIBufferingPeriod	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIBufferingPeriod(const SEIBufferingPeriod& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIChromaResamplingFilterHint	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIChromaResamplingFilterHint(const SEIChromaResamplingFilterHint &sei)$/;"	f	class:SEIWriter
xWriteSEICodedRegionCompletion	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEICodedRegionCompletion(const SEICodedRegionCompletion& sei)$/;"	f	class:SEIWriter
xWriteSEIColourRemappingInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIColourRemappingInfo(const SEIColourRemappingInfo& sei)$/;"	f	class:SEIWriter
xWriteSEIContentColourVolume	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIContentColourVolume(const SEIContentColourVolume &sei)$/;"	f	class:SEIWriter
xWriteSEIContentLightLevelInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIContentLightLevelInfo(const SEIContentLightLevelInfo& sei)$/;"	f	class:SEIWriter
xWriteSEICubemapProjection	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEICubemapProjection(const SEICubemapProjection &sei)$/;"	f	class:SEIWriter
xWriteSEIDecodedPictureHash	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDecodedPictureHash(const SEIDecodedPictureHash& sei)$/;"	f	class:SEIWriter
xWriteSEIDecodingUnitInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDecodingUnitInfo(const SEIDecodingUnitInfo& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIDeinterlaceFieldIdentification	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDeinterlaceFieldIdentification(const SEIDeinterlaceFieldIdentification& sei)$/;"	f	class:SEIWriter
xWriteSEIDependentRAPIndication	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDependentRAPIndication(const SEIDependentRAPIndication& \/*sei*\/)$/;"	f	class:SEIWriter
xWriteSEIDisplayOrientation	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIDisplayOrientation(const SEIDisplayOrientation &sei)$/;"	f	class:SEIWriter
xWriteSEIEquirectangularProjection	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIEquirectangularProjection(const SEIEquirectangularProjection &sei)$/;"	f	class:SEIWriter
xWriteSEIFillerPayload	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFillerPayload(const SEIFillerPayload &sei)$/;"	f	class:SEIWriter
xWriteSEIFilmGrainCharacteristics	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFilmGrainCharacteristics(const SEIFilmGrainCharacteristics &sei)$/;"	f	class:SEIWriter
xWriteSEIFisheyeVideoInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFisheyeVideoInfo(const SEIFisheyeVideoInfo &sei)$/;"	f	class:SEIWriter
xWriteSEIFramePacking	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIFramePacking(const SEIFramePacking& sei)$/;"	f	class:SEIWriter
xWriteSEIGreenMetadataInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIGreenMetadataInfo(const SEIGreenMetadataInfo& sei)$/;"	f	class:SEIWriter
xWriteSEIKneeFunctionInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIKneeFunctionInfo(const SEIKneeFunctionInfo &sei)$/;"	f	class:SEIWriter
xWriteSEIMCTSExtractionInfoSet	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIMCTSExtractionInfoSet(const SEIMCTSExtractionInfoSet& sei)$/;"	f	class:SEIWriter
xWriteSEIMasteringDisplayColourVolume	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIMasteringDisplayColourVolume(const SEIMasteringDisplayColourVolume& sei)$/;"	f	class:SEIWriter
xWriteSEINoDisplay	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEINoDisplay(const SEINoDisplay& \/*sei*\/)$/;"	f	class:SEIWriter
xWriteSEIOmniViewport	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIOmniViewport(const SEIOmniViewport &sei)$/;"	f	class:SEIWriter
xWriteSEIPanScanRect	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPanScanRect(const SEIPanScanRect &sei)$/;"	f	class:SEIWriter
xWriteSEIPictureSnapshot	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPictureSnapshot(const SEIPictureSnapshot &sei)$/;"	f	class:SEIWriter
xWriteSEIPictureTiming	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPictureTiming(const SEIPictureTiming& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIPostFilterHint	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIPostFilterHint(const SEIPostFilterHint& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIProgressiveRefinementSegmentEnd	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIProgressiveRefinementSegmentEnd(const SEIProgressiveRefinementSegmentEnd &sei)$/;"	f	class:SEIWriter
xWriteSEIProgressiveRefinementSegmentStart	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIProgressiveRefinementSegmentStart(const SEIProgressiveRefinementSegmentStart &sei)$/;"	f	class:SEIWriter
xWriteSEIRecoveryPoint	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRecoveryPoint(const SEIRecoveryPoint& sei)$/;"	f	class:SEIWriter
xWriteSEIRegionRefreshInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRegionRefreshInfo(const SEIRegionRefreshInfo &sei)$/;"	f	class:SEIWriter
xWriteSEIRegionWisePacking	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRegionWisePacking(const SEIRegionWisePacking &sei)$/;"	f	class:SEIWriter
xWriteSEIRegionalNesting	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIRegionalNesting(TComBitIf& bs, const SEIRegionalNesting& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEISOPDescription	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISOPDescription(const SEISOPDescription& sei)$/;"	f	class:SEIWriter
xWriteSEIScalableNesting	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIScalableNesting(TComBitIf& bs, const SEIScalableNesting& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEISceneInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISceneInfo(const SEISceneInfo &sei)$/;"	f	class:SEIWriter
xWriteSEISegmentedRectFramePacking	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISegmentedRectFramePacking(const SEISegmentedRectFramePacking& sei)$/;"	f	class:SEIWriter
xWriteSEISeparately	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteSEISeparately (NalUnitType naluType, SEIMessages& seiMessages, AccessUnit &accessUnit, AccessUnit::iterator &auPos, Int temporalId, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteSEIShutterInterval	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIShutterInterval(const SEIShutterIntervalInfo &sei)$/;"	f	class:SEIWriter
xWriteSEISphereRotation	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEISphereRotation(const SEISphereRotation &sei)$/;"	f	class:SEIWriter
xWriteSEITempMotionConstrainedTileSets	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEITempMotionConstrainedTileSets(const SEITempMotionConstrainedTileSets& sei)$/;"	f	class:SEIWriter
xWriteSEITemporalLevel0Index	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEITemporalLevel0Index(const SEITemporalLevel0Index &sei)$/;"	f	class:SEIWriter
xWriteSEITimeCode	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEITimeCode(const SEITimeCode& sei)$/;"	f	class:SEIWriter
xWriteSEIToneMappingInfo	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIToneMappingInfo(const SEIToneMappingInfo& sei)$/;"	f	class:SEIWriter
xWriteSEIUserDataRegistered	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIUserDataRegistered(const SEIUserDataRegistered &sei)$/;"	f	class:SEIWriter
xWriteSEIUserDataUnregistered	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIUserDataUnregistered(const SEIUserDataUnregistered &sei)$/;"	f	class:SEIWriter
xWriteSEImessage	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEImessage(TComBitIf& bs, const SEI *sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSEIpayloadData	source/Lib/TLibEncoder/SEIwrite.cpp	/^Void SEIWriter::xWriteSEIpayloadData(TComBitIf& bs, const SEI& sei, const TComSPS *sps)$/;"	f	class:SEIWriter
xWriteSPS	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWriteSPS (AccessUnit &accessUnit, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteSvlc	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteSvlc     ( Int iCode )$/;"	f	class:SyntaxElementWriter
xWriteSvlcTr	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteSvlcTr (Int value, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteTrailingSEIMessages	source/Lib/TLibEncoder/TEncGOP.cpp	/^Void TEncGOP::xWriteTrailingSEIMessages (SEIMessages& seiMessages, AccessUnit &accessUnit, Int temporalId, const TComSPS *sps)$/;"	f	class:TEncGOP
xWriteUnaryMaxSymbol	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteUnaryMaxSymbol( UInt uiSymbol, ContextModel* pcSCModel, Int iOffset, UInt uiMaxSymbol )$/;"	f	class:TEncSbac
xWriteUnarySymbol	source/Lib/TLibEncoder/TEncSbac.cpp	/^Void TEncSbac::xWriteUnarySymbol( UInt uiSymbol, ContextModel* pcSCModel, Int iOffset )$/;"	f	class:TEncSbac
xWriteUvlc	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void SyntaxElementWriter::xWriteUvlc     ( UInt uiCode )$/;"	f	class:SyntaxElementWriter
xWriteUvlcTr	source/Lib/TLibEncoder/SyntaxElementWriter.cpp	/^Void  SyntaxElementWriter::xWriteUvlcTr (UInt value, const TChar *pSymbolName)$/;"	f	class:SyntaxElementWriter
xWriteVPS	source/Lib/TLibEncoder/TEncGOP.cpp	/^Int TEncGOP::xWriteVPS (AccessUnit &accessUnit, const TComVPS *vps)$/;"	f	class:TEncGOP
xpsnr	source/Lib/TLibEncoder/TEncAnalyze.h	/^    Double xpsnr;$/;"	m	struct:TEncAnalyze::ResultData
xsetFlatScalingList	source/Lib/TLibCommon/TComTrQuant.cpp	/^Void TComTrQuant::xsetFlatScalingList(UInt list, UInt size, Int qp)$/;"	f	class:TComTrQuant
y	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  Int x, y;$/;"	m	struct:MotionVector
y0	source/Lib/TLibCommon/TComRectangle.h	/^  UInt y0;$/;"	m	struct:TComRectangle
~AUDReader	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  virtual ~AUDReader() {};$/;"	f	class:AUDReader
~AUDWriter	source/Lib/TLibEncoder/TEncCavlc.h	/^  virtual ~AUDWriter() {};$/;"	f	class:AUDWriter
~AccessUnit	source/Lib/TLibCommon/AccessUnit.h	/^  ~AccessUnit()$/;"	f	class:AccessUnit
~ContextModel	source/Lib/TLibCommon/ContextModel.h	/^  ~ContextModel ()                        {}$/;"	f	class:ContextModel
~ContextModel3DBuffer	source/Lib/TLibCommon/ContextModel3DBuffer.h	/^  ~ContextModel3DBuffer () {}$/;"	f	class:ContextModel3DBuffer
~ErrorReporter	source/Lib/Utilities/program_options_lite.h	/^      virtual ~ErrorReporter() {}$/;"	f	struct:df::program_options_lite::ErrorReporter
~FDReader	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  virtual ~FDReader() {};$/;"	f	class:FDReader
~InitialAdjustmentParameterParseException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    virtual ~InitialAdjustmentParameterParseException( ) throw( ) { }$/;"	f	class:InitialAdjustmentParameterParseException
~InputNALUnit	source/Lib/TLibDecoder/NALread.h	/^    virtual ~InputNALUnit() { }$/;"	f	class:InputNALUnit
~MetaLogParseException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    virtual ~MetaLogParseException( ) throw( ) { }$/;"	f	class:MetaLogParseException
~MismatchedIndexesException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    virtual ~MismatchedIndexesException( ) throw( ) { }$/;"	f	class:MismatchedIndexesException
~NALUnit	source/Lib/TLibCommon/NAL.h	/^  virtual ~NALUnit() { }$/;"	f	struct:NALUnit
~Names	source/Lib/Utilities/program_options_lite.h	/^        ~Names()$/;"	f	struct:df::program_options_lite::Options::Names
~NonContiguousQPSetException	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^    virtual ~NonContiguousQPSetException( ) throw( ) { }$/;"	f	class:NonContiguousQPSetException
~OptionBase	source/Lib/Utilities/program_options_lite.h	/^      virtual ~OptionBase() {}$/;"	f	struct:df::program_options_lite::OptionBase
~OptionWriter	source/Lib/Utilities/program_options_lite.cpp	/^      virtual ~OptionWriter() {}$/;"	f	struct:df::program_options_lite::OptionWriter
~Options	source/Lib/Utilities/program_options_lite.cpp	/^    Options::~Options()$/;"	f	class:df::program_options_lite::Options
~POCParseException	source/App/utils/BitrateTargeting/ExtractBitrates.h	/^    virtual ~POCParseException( ) throw ( ) { }$/;"	f	class:POCParseException
~ParameterSetManager	source/Lib/TLibCommon/TComSlice.cpp	/^ParameterSetManager::~ParameterSetManager()$/;"	f	class:ParameterSetManager
~ParameterSetMap	source/Lib/TLibCommon/TComSlice.h	/^  ~ParameterSetMap()$/;"	f	class:ParameterSetMap
~ParseFailure	source/Lib/Utilities/program_options_lite.h	/^      ~ParseFailure() throw() {};$/;"	f	struct:df::program_options_lite::ParseFailure
~RegionalSEI	source/Lib/TLibCommon/SEI.h	/^  ~RegionalSEI()$/;"	f	class:RegionalSEI
~RuntimeError	source/App/utils/BitrateTargeting/RuntimeError.h	/^    virtual ~RuntimeError( ) throw ( ) { }$/;"	f	class:RuntimeError
~SAOBlkParam	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOBlkParam::~SAOBlkParam()$/;"	f	class:SAOBlkParam
~SAOOffset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^SAOOffset::~SAOOffset()$/;"	f	class:SAOOffset
~SAOStatData	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.h	/^  ~SAOStatData(){}$/;"	f	struct:SAOStatData
~SEI	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEI() {}$/;"	f	class:SEI
~SEIActiveParameterSets	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIActiveParameterSets() {}$/;"	f	class:SEIActiveParameterSets
~SEIAlternativeTransferCharacteristics	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIAlternativeTransferCharacteristics() {}$/;"	f	class:SEIAlternativeTransferCharacteristics
~SEIAmbientViewingEnvironment	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIAmbientViewingEnvironment() { }$/;"	f	class:SEIAmbientViewingEnvironment
~SEIAnnotatedRegions	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIAnnotatedRegions() {}$/;"	f	class:SEIAnnotatedRegions
~SEIBufferingPeriod	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIBufferingPeriod() {}$/;"	f	class:SEIBufferingPeriod
~SEIChromaResamplingFilterHint	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIChromaResamplingFilterHint() {}$/;"	f	class:SEIChromaResamplingFilterHint
~SEICodedRegionCompletion	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEICodedRegionCompletion() { }$/;"	f	class:SEICodedRegionCompletion
~SEIColourRemappingInfo	source/Lib/TLibCommon/SEI.h	/^  ~SEIColourRemappingInfo() {}$/;"	f	class:SEIColourRemappingInfo
~SEIContentColourVolume	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIContentColourVolume() {}$/;"	f	class:SEIContentColourVolume
~SEIContentLightLevelInfo	source/Lib/TLibCommon/SEI.h	/^    virtual ~SEIContentLightLevelInfo() { }$/;"	f	class:SEIContentLightLevelInfo
~SEICubemapProjection	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEICubemapProjection() {}$/;"	f	class:SEICubemapProjection
~SEIDecodedPictureHash	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIDecodedPictureHash() {}$/;"	f	class:SEIDecodedPictureHash
~SEIDecodingUnitInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIDecodingUnitInfo() {}$/;"	f	class:SEIDecodingUnitInfo
~SEIDeinterlaceFieldIdentification	source/Lib/TLibCommon/SEI.h	/^    virtual ~SEIDeinterlaceFieldIdentification() {}$/;"	f	class:SEIDeinterlaceFieldIdentification
~SEIDependentRAPIndication	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIDependentRAPIndication() { }$/;"	f	class:SEIDependentRAPIndication
~SEIDisplayOrientation	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIDisplayOrientation() {}$/;"	f	class:SEIDisplayOrientation
~SEIEncoder	source/Lib/TLibEncoder/SEIEncoder.h	/^  virtual ~SEIEncoder(){};$/;"	f	class:SEIEncoder
~SEIEquirectangularProjection	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIEquirectangularProjection() {}$/;"	f	class:SEIEquirectangularProjection
~SEIFillerPayload	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIFillerPayload() {}$/;"	f	class:SEIFillerPayload
~SEIFilmGrainCharacteristics	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIFilmGrainCharacteristics() {}$/;"	f	class:SEIFilmGrainCharacteristics
~SEIFilmGrainSynthesizer	source/Lib/TLibCommon/SEIFilmGrainSynthesizer.cpp	/^SEIFilmGrainSynthesizer::~SEIFilmGrainSynthesizer()$/;"	f	class:SEIFilmGrainSynthesizer
~SEIFisheyeVideoInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIFisheyeVideoInfo() {}$/;"	f	class:SEIFisheyeVideoInfo
~SEIFramePacking	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIFramePacking() {}$/;"	f	class:SEIFramePacking
~SEIGreenMetadataInfo	source/Lib/TLibCommon/SEI.h	/^    virtual ~SEIGreenMetadataInfo() {}$/;"	f	class:SEIGreenMetadataInfo
~SEIKneeFunctionInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIKneeFunctionInfo() {}$/;"	f	class:SEIKneeFunctionInfo
~SEIMCTSExtractionInfoSet	source/Lib/TLibCommon/SEI.h	/^    virtual ~SEIMCTSExtractionInfoSet() { }$/;"	f	class:SEIMCTSExtractionInfoSet
~SEIMasteringDisplayColourVolume	source/Lib/TLibCommon/SEI.h	/^    virtual ~SEIMasteringDisplayColourVolume(){}$/;"	f	class:SEIMasteringDisplayColourVolume
~SEINoDisplay	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEINoDisplay() {}$/;"	f	class:SEINoDisplay
~SEIOmniViewport	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIOmniViewport() {}$/;"	f	class:SEIOmniViewport
~SEIPanScanRect	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIPanScanRect() {}$/;"	f	class:SEIPanScanRect
~SEIPictureSnapshot	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIPictureSnapshot() {}$/;"	f	class:SEIPictureSnapshot
~SEIPictureTiming	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIPictureTiming()$/;"	f	class:SEIPictureTiming
~SEIPostFilterHint	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIPostFilterHint() {}$/;"	f	class:SEIPostFilterHint
~SEIProgressiveRefinementSegmentEnd	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIProgressiveRefinementSegmentEnd() {}$/;"	f	class:SEIProgressiveRefinementSegmentEnd
~SEIProgressiveRefinementSegmentStart	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIProgressiveRefinementSegmentStart() {}$/;"	f	class:SEIProgressiveRefinementSegmentStart
~SEIReader	source/Lib/TLibDecoder/SEIread.h	/^  virtual ~SEIReader() {};$/;"	f	class:SEIReader
~SEIRecoveryPoint	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIRecoveryPoint() {}$/;"	f	class:SEIRecoveryPoint
~SEIRegionRefreshInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIRegionRefreshInfo() {}$/;"	f	class:SEIRegionRefreshInfo
~SEIRegionWisePacking	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIRegionWisePacking() {}$/;"	f	class:SEIRegionWisePacking
~SEIRegionalNesting	source/Lib/TLibCommon/SEI.cpp	/^SEIRegionalNesting::~SEIRegionalNesting()$/;"	f	class:SEIRegionalNesting
~SEIRemovalApp	source/App/SEIRemovalApp/SEIRemovalApp.h	/^  virtual ~SEIRemovalApp         ()  {}$/;"	f	class:SEIRemovalApp
~SEIRemovalAppCfg	source/App/SEIRemovalApp/SEIRemovalAppCfg.cpp	/^SEIRemovalAppCfg::~SEIRemovalAppCfg()$/;"	f	class:SEIRemovalAppCfg
~SEISOPDescription	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEISOPDescription() {}$/;"	f	class:SEISOPDescription
~SEIScalableNesting	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIScalableNesting()$/;"	f	class:SEIScalableNesting
~SEISceneInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEISceneInfo() {}$/;"	f	class:SEISceneInfo
~SEISegmentedRectFramePacking	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEISegmentedRectFramePacking() {}$/;"	f	class:SEISegmentedRectFramePacking
~SEIShutterIntervalInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIShutterIntervalInfo() {}$/;"	f	class:SEIShutterIntervalInfo
~SEISphereRotation	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEISphereRotation() {}$/;"	f	class:SEISphereRotation
~SEITempMotionConstrainedTileSets	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEITempMotionConstrainedTileSets() { }$/;"	f	class:SEITempMotionConstrainedTileSets
~SEITemporalLevel0Index	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEITemporalLevel0Index() {}$/;"	f	class:SEITemporalLevel0Index
~SEITimeCode	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEITimeCode(){}$/;"	f	class:SEITimeCode
~SEIToneMappingInfo	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIToneMappingInfo() {}$/;"	f	class:SEIToneMappingInfo
~SEIUserDataRegistered	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIUserDataRegistered() {}$/;"	f	class:SEIUserDataRegistered
~SEIUserDataUnregistered	source/Lib/TLibCommon/SEI.h	/^  virtual ~SEIUserDataUnregistered() { }$/;"	f	class:SEIUserDataUnregistered
~SEIWriter	source/Lib/TLibEncoder/SEIwrite.h	/^  virtual ~SEIWriter() {};$/;"	f	class:SEIWriter
~SyntaxElementParser	source/Lib/TLibDecoder/SyntaxElementParser.h	/^  virtual ~SyntaxElementParser() {};$/;"	f	class:SyntaxElementParser
~SyntaxElementWriter	source/Lib/TLibEncoder/SyntaxElementWriter.h	/^  virtual ~SyntaxElementWriter() {};$/;"	f	class:SyntaxElementWriter
~TAppDecCfg	source/App/TAppDecoder/TAppDecCfg.h	/^  virtual ~TAppDecCfg() {}$/;"	f	class:TAppDecCfg
~TAppDecTop	source/App/TAppDecoder/TAppDecTop.h	/^  virtual ~TAppDecTop() {}$/;"	f	class:TAppDecTop
~TAppEncCfg	source/App/TAppEncoder/TAppEncCfg.cpp	/^TAppEncCfg::~TAppEncCfg()$/;"	f	class:TAppEncCfg
~TAppEncTop	source/App/TAppEncoder/TAppEncTop.cpp	/^TAppEncTop::~TAppEncTop()$/;"	f	class:TAppEncTop
~TAppMctsExtCfg	source/App/TAppMCTSExtractor/TAppMctsExtCfg.h	/^  virtual ~TAppMctsExtCfg() {}$/;"	f	class:TAppMctsExtCfg
~TAppMctsExtTop	source/App/TAppMCTSExtractor/TAppMctsExtTop.h	/^  virtual ~TAppMctsExtTop() {};$/;"	f	class:TAppMctsExtTop
~TComBitCounter	source/Lib/TLibCommon/TComBitCounter.h	/^  virtual ~TComBitCounter()   {}$/;"	f	class:TComBitCounter
~TComBitIf	source/Lib/TLibCommon/TComBitStream.h	/^  virtual ~TComBitIf() {}$/;"	f	class:TComBitIf
~TComCUMvField	source/Lib/TLibCommon/TComMotionInfo.h	/^  ~TComCUMvField() {}$/;"	f	class:TComCUMvField
~TComCodingStatistics	source/Lib/TLibCommon/TComCodingStatistics.h	/^    ~TComCodingStatistics()$/;"	f	class:TComCodingStatistics
~TComDataCU	source/Lib/TLibCommon/TComDataCU.cpp	/^TComDataCU::~TComDataCU()$/;"	f	class:TComDataCU
~TComHRD	source/Lib/TLibCommon/TComSlice.h	/^  virtual ~TComHRD() {}$/;"	f	class:TComHRD
~TComInputBitstream	source/Lib/TLibCommon/TComBitStream.h	/^  virtual ~TComInputBitstream() { }$/;"	f	class:TComInputBitstream
~TComInterpolationFilter	source/Lib/TLibCommon/TComInterpolationFilter.h	/^  ~TComInterpolationFilter() {}$/;"	f	class:TComInterpolationFilter
~TComLoopFilter	source/Lib/TLibCommon/TComLoopFilter.cpp	/^TComLoopFilter::~TComLoopFilter()$/;"	f	class:TComLoopFilter
~TComOutputBitstream	source/Lib/TLibCommon/TComBitStream.cpp	/^TComOutputBitstream::~TComOutputBitstream()$/;"	f	class:TComOutputBitstream
~TComPPS	source/Lib/TLibCommon/TComSlice.cpp	/^TComPPS::~TComPPS()$/;"	f	class:TComPPS
~TComPic	source/Lib/TLibCommon/TComPic.cpp	/^TComPic::~TComPic()$/;"	f	class:TComPic
~TComPicSym	source/Lib/TLibCommon/TComPicSym.cpp	/^TComPicSym::~TComPicSym()$/;"	f	class:TComPicSym
~TComPicYuv	source/Lib/TLibCommon/TComPicYuv.cpp	/^TComPicYuv::~TComPicYuv()$/;"	f	class:TComPicYuv
~TComPrediction	source/Lib/TLibCommon/TComPrediction.cpp	/^TComPrediction::~TComPrediction()$/;"	f	class:TComPrediction
~TComRPSList	source/Lib/TLibCommon/TComSlice.h	/^  virtual                        ~TComRPSList()                                           { }$/;"	f	class:TComRPSList
~TComRdCost	source/Lib/TLibCommon/TComRdCost.cpp	/^TComRdCost::~TComRdCost()$/;"	f	class:TComRdCost
~TComRefPicListModification	source/Lib/TLibCommon/TComSlice.cpp	/^TComRefPicListModification::~TComRefPicListModification()$/;"	f	class:TComRefPicListModification
~TComReferencePictureSet	source/Lib/TLibCommon/TComSlice.cpp	/^TComReferencePictureSet::~TComReferencePictureSet()$/;"	f	class:TComReferencePictureSet
~TComSPS	source/Lib/TLibCommon/TComSlice.cpp	/^TComSPS::~TComSPS()$/;"	f	class:TComSPS
~TComSampleAdaptiveOffset	source/Lib/TLibCommon/TComSampleAdaptiveOffset.cpp	/^TComSampleAdaptiveOffset::~TComSampleAdaptiveOffset()$/;"	f	class:TComSampleAdaptiveOffset
~TComScalingList	source/Lib/TLibCommon/TComSlice.h	/^  virtual    ~TComScalingList()                                                 { }$/;"	f	class:TComScalingList
~TComSlice	source/Lib/TLibCommon/TComSlice.cpp	/^TComSlice::~TComSlice()$/;"	f	class:TComSlice
~TComTile	source/Lib/TLibCommon/TComPicSym.cpp	/^TComTile::~TComTile()$/;"	f	class:TComTile
~TComTrQuant	source/Lib/TLibCommon/TComTrQuant.cpp	/^TComTrQuant::~TComTrQuant()$/;"	f	class:TComTrQuant
~TComVPS	source/Lib/TLibCommon/TComSlice.cpp	/^TComVPS::~TComVPS()$/;"	f	class:TComVPS
~TComVUI	source/Lib/TLibCommon/TComSlice.h	/^  virtual           ~TComVUI() {}$/;"	f	class:TComVUI
~TComYuv	source/Lib/TLibCommon/TComYuv.cpp	/^TComYuv::~TComYuv()$/;"	f	class:TComYuv
~TDecBinCABAC	source/Lib/TLibDecoder/TDecBinCoderCABAC.cpp	/^TDecBinCABAC::~TDecBinCABAC()$/;"	f	class:TDecBinCABAC
~TDecBinIf	source/Lib/TLibDecoder/TDecBinCoder.h	/^  virtual ~TDecBinIf() {}$/;"	f	class:TDecBinIf
~TDecCavlc	source/Lib/TLibDecoder/TDecCAVLC.cpp	/^TDecCavlc::~TDecCavlc()$/;"	f	class:TDecCavlc
~TDecCu	source/Lib/TLibDecoder/TDecCu.cpp	/^TDecCu::~TDecCu()$/;"	f	class:TDecCu
~TDecEntropyIf	source/Lib/TLibDecoder/TDecEntropy.h	/^  virtual ~TDecEntropyIf() {}$/;"	f	class:TDecEntropyIf
~TDecGop	source/Lib/TLibDecoder/TDecGop.cpp	/^TDecGop::~TDecGop()$/;"	f	class:TDecGop
~TDecSbac	source/Lib/TLibDecoder/TDecSbac.cpp	/^TDecSbac::~TDecSbac()$/;"	f	class:TDecSbac
~TDecSlice	source/Lib/TLibDecoder/TDecSlice.cpp	/^TDecSlice::~TDecSlice()$/;"	f	class:TDecSlice
~TDecTop	source/Lib/TLibDecoder/TDecTop.cpp	/^TDecTop::~TDecTop()$/;"	f	class:TDecTop
~TEncAnalyze	source/Lib/TLibEncoder/TEncAnalyze.h	/^  virtual ~TEncAnalyze()  {}$/;"	f	class:TEncAnalyze
~TEncBinCABAC	source/Lib/TLibEncoder/TEncBinCoderCABAC.cpp	/^TEncBinCABAC::~TEncBinCABAC()$/;"	f	class:TEncBinCABAC
~TEncBinCABACCounter	source/Lib/TLibEncoder/TEncBinCoderCABACCounter.cpp	/^TEncBinCABACCounter::~TEncBinCABACCounter()$/;"	f	class:TEncBinCABACCounter
~TEncBinIf	source/Lib/TLibEncoder/TEncBinCoder.h	/^  virtual ~TEncBinIf() {}$/;"	f	class:TEncBinIf
~TEncCavlc	source/Lib/TLibEncoder/TEncCavlc.cpp	/^TEncCavlc::~TEncCavlc()$/;"	f	class:TEncCavlc
~TEncCfg	source/Lib/TLibEncoder/TEncCfg.h	/^  virtual ~TEncCfg()$/;"	f	class:TEncCfg
~TEncEntropyIf	source/Lib/TLibEncoder/TEncEntropy.h	/^  virtual ~TEncEntropyIf() {}$/;"	f	class:TEncEntropyIf
~TEncGOP	source/Lib/TLibEncoder/TEncGOP.cpp	/^TEncGOP::~TEncGOP()$/;"	f	class:TEncGOP
~TEncPic	source/Lib/TLibEncoder/TEncPic.cpp	/^TEncPic::~TEncPic()$/;"	f	class:TEncPic
~TEncPicQPAdaptationLayer	source/Lib/TLibEncoder/TEncPic.cpp	/^TEncPicQPAdaptationLayer::~TEncPicQPAdaptationLayer()$/;"	f	class:TEncPicQPAdaptationLayer
~TEncPreanalyzer	source/Lib/TLibEncoder/TEncPreanalyzer.cpp	/^TEncPreanalyzer::~TEncPreanalyzer()$/;"	f	class:TEncPreanalyzer
~TEncQPAdaptationUnit	source/Lib/TLibEncoder/TEncPic.cpp	/^TEncQPAdaptationUnit::~TEncQPAdaptationUnit()$/;"	f	class:TEncQPAdaptationUnit
~TEncRCGOP	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRCGOP::~TEncRCGOP()$/;"	f	class:TEncRCGOP
~TEncRCPic	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRCPic::~TEncRCPic()$/;"	f	class:TEncRCPic
~TEncRCSeq	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRCSeq::~TEncRCSeq()$/;"	f	class:TEncRCSeq
~TEncRateCtrl	source/Lib/TLibEncoder/TEncRateCtrl.cpp	/^TEncRateCtrl::~TEncRateCtrl()$/;"	f	class:TEncRateCtrl
~TEncSampleAdaptiveOffset	source/Lib/TLibEncoder/TEncSampleAdaptiveOffset.cpp	/^TEncSampleAdaptiveOffset::~TEncSampleAdaptiveOffset()$/;"	f	class:TEncSampleAdaptiveOffset
~TEncSbac	source/Lib/TLibEncoder/TEncSbac.cpp	/^TEncSbac::~TEncSbac()$/;"	f	class:TEncSbac
~TEncSearch	source/Lib/TLibEncoder/TEncSearch.cpp	/^TEncSearch::~TEncSearch()$/;"	f	class:TEncSearch
~TEncSlice	source/Lib/TLibEncoder/TEncSlice.cpp	/^TEncSlice::~TEncSlice()$/;"	f	class:TEncSlice
~TEncTemporalFilter	source/Lib/TLibEncoder/TEncTemporalFilter.h	/^  ~TEncTemporalFilter() {}$/;"	f	class:TEncTemporalFilter
~TEncTop	source/Lib/TLibEncoder/TEncTop.cpp	/^TEncTop::~TEncTop()$/;"	f	class:TEncTop
~TVideoIOYuv	source/Lib/Utilities/TVideoIOYuv.h	/^  virtual ~TVideoIOYuv()  {}$/;"	f	class:TVideoIOYuv
~TargetsParseException	source/App/utils/BitrateTargeting/GuessLambdaModifiers.h	/^    virtual ~TargetsParseException( ) throw( ) { }$/;"	f	class:TargetsParseException
~WrongNumberOfArgumentsException	source/App/utils/BitrateTargeting/GuessLambdaModifiersMain.cpp	/^    virtual ~WrongNumberOfArgumentsException( ) throw( ) { }$/;"	f	class:WrongNumberOfArgumentsException

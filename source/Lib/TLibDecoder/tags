!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AUDReader	SyntaxElementParser.h	/^  AUDReader() {};$/;"	f	class:AUDReader
AUDReader	SyntaxElementParser.h	/^class AUDReader: public SyntaxElementParser$/;"	c
AnnexBStats	AnnexBread.h	/^struct AnnexBStats$/;"	s
DECODER_PARTIAL_CONFORMANCE_CHECK	TDecConformance.h	43;"	d
DISABLED	TDecConformance.h	/^  DISABLED=0,$/;"	e	enum:TRISTATE
ENABLED	TDecConformance.h	/^  ENABLED=2$/;"	e	enum:TRISTATE
FDReader	SyntaxElementParser.h	/^  FDReader() {};$/;"	f	class:FDReader
FDReader	SyntaxElementParser.h	/^class FDReader: public SyntaxElementParser$/;"	c
GetNumBufferedBytes	AnnexBread.h	/^  UInt GetNumBufferedBytes() const { return m_NumFutureBytes; }$/;"	f	class:InputByteStream
HBRFACTOREQN	TDecConformance.h	/^typedef enum HBRFACTOREQN$/;"	g
HBRFACTOREQN	TDecConformance.h	/^} HBRFACTOREQN;$/;"	t	typeref:enum:HBRFACTOREQN
HBR_1	TDecConformance.h	/^  HBR_1 = 0,$/;"	e	enum:HBRFACTOREQN
HBR_12_OR_24	TDecConformance.h	/^  HBR_12_OR_24 = 2$/;"	e	enum:HBRFACTOREQN
HBR_1_OR_2	TDecConformance.h	/^  HBR_1_OR_2 = 1,$/;"	e	enum:HBRFACTOREQN
InputByteStream	AnnexBread.h	/^  InputByteStream(std::istream& istream)$/;"	f	class:InputByteStream
InputByteStream	AnnexBread.h	/^class InputByteStream$/;"	c
InputNALUnit	NALread.h	/^    InputNALUnit() : m_Bitstream() {};$/;"	f	class:InputNALUnit
InputNALUnit	NALread.h	/^    InputNALUnit(const InputNALUnit &src) : NALUnit(src), m_Bitstream(src.m_Bitstream) {};$/;"	f	class:InputNALUnit
InputNALUnit	NALread.h	/^class InputNALUnit : public NALUnit$/;"	c
LevelTierFeatures	TDecConformance.h	/^struct LevelTierFeatures$/;"	s
MAX_CNFUINT64	TDecConformance.cpp	/^static const UInt64 MAX_CNFUINT64 = std::numeric_limits<UInt64>::max();$/;"	v	file:
OPTIONAL	TDecConformance.h	/^  OPTIONAL=1,$/;"	e	enum:TRISTATE
PTL_TRACE_TEXT	TDecCAVLC.cpp	1629;"	d	file:
PTL_TRACE_TEXT	TDecCAVLC.cpp	1706;"	d	file:
ProfileFeatures	TDecConformance.h	/^struct ProfileFeatures$/;"	s
ProfileLevelTierFeatures	TDecConformance.h	/^    ProfileLevelTierFeatures() : m_pProfile(0), m_pLevelTier(0), m_hbrFactor(0), m_tier(Level::MAIN), m_maxRawCtuBits(0) { }$/;"	f	class:ProfileLevelTierFeatures
ProfileLevelTierFeatures	TDecConformance.h	/^class ProfileLevelTierFeatures$/;"	c
READ_CODE	SEIread.cpp	120;"	d	file:
READ_CODE	SyntaxElementParser.h	71;"	d
READ_CODE	SyntaxElementParser.h	78;"	d
READ_CODE_CHK	SyntaxElementParser.h	50;"	d
READ_CODE_CHK	SyntaxElementParser.h	56;"	d
READ_CODE_CHK	SyntaxElementParser.h	62;"	d
READ_FLAG	SEIread.cpp	123;"	d	file:
READ_FLAG	SyntaxElementParser.h	74;"	d
READ_FLAG	SyntaxElementParser.h	81;"	d
READ_FLAG_CHK	SyntaxElementParser.h	53;"	d
READ_FLAG_CHK	SyntaxElementParser.h	59;"	d
READ_FLAG_CHK	SyntaxElementParser.h	65;"	d
READ_SCODE	SEIread.cpp	119;"	d	file:
READ_SCODE	SyntaxElementParser.h	70;"	d
READ_SCODE	SyntaxElementParser.h	77;"	d
READ_SCODE_CHK	SyntaxElementParser.h	49;"	d
READ_SCODE_CHK	SyntaxElementParser.h	55;"	d
READ_SCODE_CHK	SyntaxElementParser.h	61;"	d
READ_SVLC	SEIread.cpp	121;"	d	file:
READ_SVLC	SyntaxElementParser.h	73;"	d
READ_SVLC	SyntaxElementParser.h	80;"	d
READ_SVLC_CHK	SyntaxElementParser.h	52;"	d
READ_SVLC_CHK	SyntaxElementParser.h	58;"	d
READ_SVLC_CHK	SyntaxElementParser.h	64;"	d
READ_UVLC	SEIread.cpp	122;"	d	file:
READ_UVLC	SyntaxElementParser.h	72;"	d
READ_UVLC	SyntaxElementParser.h	79;"	d
READ_UVLC_CHK	SyntaxElementParser.h	51;"	d
READ_UVLC_CHK	SyntaxElementParser.h	57;"	d
READ_UVLC_CHK	SyntaxElementParser.h	63;"	d
RExt__DECODER_DEBUG_BIT_STATISTICS_PASS_OPT_ARG	TDecSbac.cpp	45;"	d	file:
RExt__DECODER_DEBUG_BIT_STATISTICS_PASS_OPT_ARG	TDecSbac.cpp	47;"	d	file:
SEIReader	SEIread.h	/^  SEIReader() {};$/;"	f	class:SEIReader
SEIReader	SEIread.h	/^class SEIReader: public SyntaxElementParser$/;"	c
SyntaxElementParser	SyntaxElementParser.h	/^  SyntaxElementParser()$/;"	f	class:SyntaxElementParser
SyntaxElementParser	SyntaxElementParser.h	/^class SyntaxElementParser$/;"	c
TDecBinCABAC	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::TDecBinCABAC()$/;"	f	class:TDecBinCABAC
TDecBinCABAC	TDecBinCoderCABAC.h	/^class TDecBinCABAC : public TDecBinIf$/;"	c
TDecBinIf	TDecBinCoder.h	/^class TDecBinIf$/;"	c
TDecCavlc	TDecCAVLC.cpp	/^TDecCavlc::TDecCavlc()$/;"	f	class:TDecCavlc
TDecCavlc	TDecCAVLC.h	/^class TDecCavlc : public SyntaxElementParser, public TDecEntropyIf$/;"	c
TDecConformanceCheck	TDecConformance.cpp	/^TDecConformanceCheck::TDecConformanceCheck()$/;"	f	class:TDecConformanceCheck
TDecConformanceCheck	TDecConformance.h	/^class TDecConformanceCheck$/;"	c
TDecCu	TDecCu.cpp	/^TDecCu::TDecCu()$/;"	f	class:TDecCu
TDecCu	TDecCu.h	/^class TDecCu$/;"	c
TDecEntropy	TDecEntropy.h	/^class TDecEntropy$/;"	c
TDecEntropyIf	TDecEntropy.h	/^class TDecEntropyIf$/;"	c
TDecGop	TDecGop.cpp	/^TDecGop::TDecGop()$/;"	f	class:TDecGop
TDecGop	TDecGop.h	/^class TDecGop$/;"	c
TDecSbac	TDecSbac.cpp	/^TDecSbac::TDecSbac()$/;"	f	class:TDecSbac
TDecSbac	TDecSbac.h	/^class TDecSbac : public TDecEntropyIf$/;"	c
TDecSlice	TDecSlice.cpp	/^TDecSlice::TDecSlice()$/;"	f	class:TDecSlice
TDecSlice	TDecSlice.h	/^class TDecSlice$/;"	c
TDecTop	TDecTop.cpp	/^TDecTop::TDecTop()$/;"	f	class:TDecTop
TDecTop	TDecTop.h	/^class TDecTop$/;"	c
TRISTATE	TDecConformance.h	/^typedef enum TRISTATE$/;"	g
TRISTATE	TDecConformance.h	/^} TRISTATE;$/;"	t	typeref:enum:TRISTATE
__ANNEXBREAD__	AnnexBread.h	42;"	d
__NALREAD__	NALread.h	42;"	d
__SEIREAD__	SEIread.h	40;"	d
__SYNTAXELEMENTPARSER__	SyntaxElementParser.h	39;"	d
__TDECBINCODERCABAC__	TDecBinCoderCABAC.h	39;"	d
__TDECBINCODER__	TDecBinCoder.h	39;"	d
__TDECCAVLC__	TDecCAVLC.h	39;"	d
__TDECCONFORMANCE__	TDecConformance.h	39;"	d
__TDECCU__	TDecCu.h	39;"	d
__TDECENTROPY__	TDecEntropy.h	39;"	d
__TDECGOP__	TDecGop.h	39;"	d
__TDECSBAC__	TDecSbac.h	39;"	d
__TDECSLICE__	TDecSlice.h	39;"	d
__TDECTOP__	TDecTop.h	39;"	d
_byteStreamNALUnit	AnnexBread.cpp	/^_byteStreamNALUnit($/;"	f	file:
activate	TDecConformance.cpp	/^ProfileLevelTierFeatures::activate(const TComSPS &sps)$/;"	f	class:ProfileLevelTierFeatures
align	TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::align()$/;"	f	class:TDecBinCABAC
bCanUseLevel8p5	TDecConformance.h	/^  Bool                     bCanUseLevel8p5;$/;"	m	struct:ProfileFeatures
bDebugPredEnabled	TDecEntropy.cpp	/^static const Bool bDebugPredEnabled = DebugOptionList::DebugPred.getInt()!=0;$/;"	v	file:
bDebugRQT	TDecEntropy.cpp	/^static const Bool bDebugRQT = DebugOptionList::DebugRQT.getInt()!=0;$/;"	v	file:
bWavefrontsAndTilesCanBeUsedSimultaneously	TDecConformance.h	/^  Bool                     bWavefrontsAndTilesCanBeUsedSimultaneously;$/;"	m	struct:ProfileFeatures
byteStreamNALUnit	AnnexBread.cpp	/^byteStreamNALUnit($/;"	f
cabacBypassAlignmentEnabledFlag	TDecConformance.h	/^  TRISTATE                 cabacBypassAlignmentEnabledFlag;$/;"	m	struct:ProfileFeatures
calcAndPrintHashStatus	TDecGop.cpp	/^static Void calcAndPrintHashStatus(TComPicYuv& pic, const SEIDecodedPictureHash* pictureHashSEI, const BitDepths &bitDepths, UInt &numChecksumErrors)$/;"	f	file:
checkCtuDecoding	TDecConformance.cpp	/^TDecConformanceCheck::checkCtuDecoding(const UInt numUsedBits)$/;"	f	class:TDecConformanceCheck
checkCtuDecoding	TDecConformance.h	/^  checkCtuDecoding(const UInt numUsedBits) { }$/;"	f	class:TDecConformanceCheck
checkNoOutputPriorPics	TDecTop.cpp	/^Void TDecTop::checkNoOutputPriorPics (TComList<TComPic*>* pcListPic)$/;"	f	class:TDecTop
checkPPS	TDecConformance.cpp	/^checkPPS(const TComSPS &sps,$/;"	f	file:
checkRange	TDecConformance.h	/^  static Void checkRange(const T& , const TChar *, const T& , const T& ) { }$/;"	f	class:TDecConformanceCheck
checkRange	TDecConformance.h	/^  static Void checkRange(const T& val, const TChar *name, const T& minValInclusive, const T& maxValInclusive)$/;"	f	class:TDecConformanceCheck
checkSPS	TDecConformance.cpp	/^checkSPS(const TComSPS &sps,$/;"	f	file:
checkSliceActivation	TDecConformance.cpp	/^TDecConformanceCheck::checkSliceActivation(const TComSlice &slice,$/;"	f	class:TDecConformanceCheck
checkSliceActivation	TDecConformance.h	/^  checkSliceActivation(const TComSlice &\/*slice*\/,$/;"	f	class:TDecConformanceCheck
checkTiles	TDecConformance.cpp	/^checkTiles(const TComSPS &sps,$/;"	f	file:
checkToolAvailability	TDecConformance.cpp	/^checkToolAvailability(const TComSPS &sps,$/;"	f	file:
chromaFormatValid	TDecConformance.h	/^  Bool chromaFormatValid(ChromaFormat chFmt) const { return (profile == Profile::MAINREXT || profile == Profile::HIGHTHROUGHPUTREXT) ? chFmt<=maxChromaFormat : (chFmt == maxChromaFormat ); }$/;"	f	struct:ProfileFeatures
chromaQpOffsetListEnabledFlag	TDecConformance.h	/^  TRISTATE                 chromaQpOffsetListEnabledFlag;$/;"	m	struct:ProfileFeatures
convertPayloadToRBSP	NALread.cpp	/^static Void convertPayloadToRBSP(vector<uint8_t>& nalUnitBuf, TComInputBitstream *bitstream, Bool isVclNalUnit)$/;"	f	file:
copyState	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::copyState( const TDecBinIf* pcTDecBinIf )$/;"	f	class:TDecBinCABAC
cpbNalFactor	TDecConformance.h	/^  UInt                     cpbNalFactor;                \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
cpbVclFactor	TDecConformance.h	/^  UInt                     cpbVclFactor;$/;"	m	struct:ProfileFeatures
create	TDecCu.cpp	/^Void TDecCu::create( UInt uiMaxDepth, UInt uiMaxWidth, UInt uiMaxHeight, ChromaFormat chromaFormatIDC )$/;"	f	class:TDecCu
create	TDecGop.cpp	/^Void TDecGop::create()$/;"	f	class:TDecGop
create	TDecSlice.cpp	/^Void TDecSlice::create()$/;"	f	class:TDecSlice
create	TDecTop.cpp	/^Void TDecTop::create()$/;"	f	class:TDecTop
decode	TDecTop.cpp	/^Bool TDecTop::decode(InputNALUnit& nalu, Int& iSkipFrame, Int& iPOCLastDisplay, Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
decodeAlignedBinsEP	TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeAlignedBinsEP( UInt& ruiBins, Int numBins, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBin	TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBin( UInt& ruiBin, ContextModel &rcCtxModel, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBinEP	TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBinEP( UInt& ruiBin, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeBinTrm	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::decodeBinTrm( UInt& ruiBin )$/;"	f	class:TDecBinCABAC
decodeBinsEP	TDecBinCoderCABAC.cpp	/^Void TDecBinCABAC::decodeBinsEP( UInt& ruiBin, Int numBins, const TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecBinCABAC
decodeCUTransquantBypassFlag	TDecEntropy.cpp	/^Void TDecEntropy::decodeCUTransquantBypassFlag(TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeChromaQpAdjustment	TDecEntropy.cpp	/^Void TDecEntropy::decodeChromaQpAdjustment( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecEntropy
decodeCoeff	TDecEntropy.cpp	/^Void TDecEntropy::decodeCoeff( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool& bCodeDQP, Bool& isChromaQpAdjCoded )$/;"	f	class:TDecEntropy
decodeCtu	TDecCu.cpp	/^Void TDecCu::decodeCtu( TComDataCU* pCtu, Bool& isLastCtuOfSliceSegment )$/;"	f	class:TDecCu
decodeIPCMInfo	TDecEntropy.cpp	/^Void TDecEntropy::decodeIPCMInfo( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeInterDirPU	TDecEntropy.cpp	/^Void TDecEntropy::decodeInterDirPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx )$/;"	f	class:TDecEntropy
decodeIntraDirModeChroma	TDecEntropy.cpp	/^Void TDecEntropy::decodeIntraDirModeChroma( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeIntraDirModeLuma	TDecEntropy.cpp	/^Void TDecEntropy::decodeIntraDirModeLuma  ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeMVPIdxPU	TDecEntropy.cpp	/^Void TDecEntropy::decodeMVPIdxPU( TComDataCU* pcSubCU, UInt uiPartAddr, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodeMergeFlag	TDecEntropy.cpp	/^Void TDecEntropy::decodeMergeFlag( TComDataCU* pcSubCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPUIdx )$/;"	f	class:TDecEntropy
decodeMergeIndex	TDecEntropy.cpp	/^Void TDecEntropy::decodeMergeIndex( TComDataCU* pcCU, UInt uiPartIdx, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeMvdPU	TDecEntropy.cpp	/^Void TDecEntropy::decodeMvdPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodePPS	TDecEntropy.h	/^  Void    decodePPS                   ( TComPPS* pcPPS ) { m_pcEntropyDecoderIf->parsePPS(pcPPS); }$/;"	f	class:TDecEntropy
decodePUWise	TDecEntropy.cpp	/^Void TDecEntropy::decodePUWise( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, TComDataCU* pcSubCU )$/;"	f	class:TDecEntropy
decodePartSize	TDecEntropy.cpp	/^Void TDecEntropy::decodePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodePredInfo	TDecEntropy.cpp	/^Void TDecEntropy::decodePredInfo    ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, TComDataCU* pcSubCU )$/;"	f	class:TDecEntropy
decodePredMode	TDecEntropy.cpp	/^Void TDecEntropy::decodePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeQP	TDecEntropy.cpp	/^Void TDecEntropy::decodeQP          ( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecEntropy
decodeRefFrmIdxPU	TDecEntropy.cpp	/^Void TDecEntropy::decodeRefFrmIdxPU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPartIdx, RefPicList eRefList )$/;"	f	class:TDecEntropy
decodeRemainingBytes	TDecEntropy.h	/^  Void    decodeRemainingBytes( Bool noTrailingBytesExpected ) { m_pcEntropyDecoderIf->parseRemainingBytes(noTrailingBytesExpected); }$/;"	f	class:TDecEntropy
decodeSPS	TDecEntropy.h	/^  Void    decodeSPS                   ( TComSPS* pcSPS ) { m_pcEntropyDecoderIf->parseSPS(pcSPS); }$/;"	f	class:TDecEntropy
decodeSkipFlag	TDecEntropy.cpp	/^Void TDecEntropy::decodeSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeSliceHeader	TDecEntropy.h	/^  Void    decodeSliceHeader           ( TComSlice* pcSlice, ParameterSetManager *parameterSetManager, const Int prevTid0POC)  { m_pcEntropyDecoderIf->parseSliceHeader(pcSlice, parameterSetManager, prevTid0POC);         }$/;"	f	class:TDecEntropy
decodeSplitFlag	TDecEntropy.cpp	/^Void TDecEntropy::decodeSplitFlag   ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecEntropy
decodeTerminatingBit	TDecEntropy.h	/^  Void    decodeTerminatingBit        ( UInt& ruiIsLast )       { m_pcEntropyDecoderIf->parseTerminatingBit(ruiIsLast);     }$/;"	f	class:TDecEntropy
decodeVPS	TDecEntropy.h	/^  Void    decodeVPS                   ( TComVPS* pcVPS ) { m_pcEntropyDecoderIf->parseVPS(pcVPS); }$/;"	f	class:TDecEntropy
decompressCtu	TDecCu.cpp	/^Void TDecCu::decompressCtu( TComDataCU* pCtu )$/;"	f	class:TDecCu
decompressSlice	TDecGop.cpp	/^Void TDecGop::decompressSlice(TComInputBitstream* pcBitstream, TComPic* pcPic)$/;"	f	class:TDecGop
decompressSlice	TDecSlice.cpp	/^Void TDecSlice::decompressSlice(TComInputBitstream** ppcSubstreams, TComPic* pcPic, TDecSbac* pcSbacDecoder)$/;"	f	class:TDecSlice
deletePicBuffer	TDecTop.cpp	/^Void TDecTop::deletePicBuffer ( )$/;"	f	class:TDecTop
destroy	TDecCu.cpp	/^Void TDecCu::destroy()$/;"	f	class:TDecCu
destroy	TDecGop.cpp	/^Void TDecGop::destroy()$/;"	f	class:TDecGop
destroy	TDecSlice.cpp	/^Void TDecSlice::destroy()$/;"	f	class:TDecSlice
destroy	TDecTop.cpp	/^Void TDecTop::destroy()$/;"	f	class:TDecTop
doChecking	TDecConformance.h	/^  static inline Bool doChecking()$/;"	f	class:TDecConformanceCheck
enableTMctsCheck	TDecConformance.h	/^  Void enableTMctsCheck(Bool enabled) { m_tmctsCheckEnabled = enabled; };$/;"	f	class:TDecConformanceCheck
eofBeforeNBytes	AnnexBread.h	/^  Bool eofBeforeNBytes(UInt n)$/;"	f	class:InputByteStream
executeLoopFilters	TDecTop.cpp	/^Void TDecTop::executeLoopFilters(Int& poc, TComList<TComPic*>*& rpcListPic)$/;"	f	class:TDecTop
extendedPrecisionProcessingFlag	TDecConformance.h	/^  TRISTATE                 extendedPrecisionProcessingFlag;$/;"	m	struct:ProfileFeatures
filterPicture	TDecGop.cpp	/^Void TDecGop::filterPicture(TComPic* pcPic)$/;"	f	class:TDecGop
finish	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::finish()$/;"	f	class:TDecBinCABAC
finishWarningReport	TDecConformance.h	/^  static inline Void finishWarningReport() { }$/;"	f	class:TDecConformanceCheck
finishWarningReport	TDecConformance.h	/^  static inline Void finishWarningReport()$/;"	f	class:TDecConformanceCheck
flagTMctsError	TDecConformance.h	/^  Void flagTMctsError(const char *error)$/;"	f	class:TDecConformanceCheck
formatCapabilityFactorx1000	TDecConformance.h	/^  UInt                     formatCapabilityFactorx1000; \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
generalIntraConstraintFlag	TDecConformance.h	/^  Bool                     generalIntraConstraintFlag;$/;"	m	struct:ProfileFeatures
generalLowerBitRateConstraint	TDecConformance.h	/^  TRISTATE                 generalLowerBitRateConstraint;$/;"	m	struct:ProfileFeatures
generalOnePictureOnlyConstraintFlag	TDecConformance.h	/^  Bool                     generalOnePictureOnlyConstraintFlag;$/;"	m	struct:ProfileFeatures
generalRExtToolsEnabled	TDecConformance.h	/^  TRISTATE                 generalRExtToolsEnabled;$/;"	m	struct:ProfileFeatures
getApcSlicePilot	TDecTop.h	/^  TComSlice* getApcSlicePilot() { return m_apcSlicePilot; }$/;"	f	class:TDecTop
getBitstream	NALread.h	/^          TComInputBitstream &getBitstream()       { return m_Bitstream; }$/;"	f	class:InputNALUnit
getBitstream	NALread.h	/^    const TComInputBitstream &getBitstream() const { return m_Bitstream; }$/;"	f	class:InputNALUnit
getBitstream	SyntaxElementParser.h	/^  TComInputBitstream* getBitstream() { return m_pcBitstream; }$/;"	f	class:SyntaxElementParser
getCpbSizeInBits	TDecConformance.h	/^    UInt64 getCpbSizeInBits()            const { return (m_pLevelTier!=0 && m_pProfile!=0) ? UInt64(m_pProfile->cpbVclFactor) * m_pLevelTier->maxCpb[m_tier?1:0] : UInt64(0); }$/;"	f	class:ProfileLevelTierFeatures
getEntropyDecoder	TDecEntropy.h	/^  TDecEntropyIf* getEntropyDecoder() { return m_pcEntropyDecoderIf; }$/;"	f	class:TDecEntropy
getFirstSliceInSequence	TDecTop.h	/^  Bool  getFirstSliceInSequence ()         { return m_bFirstSliceInSequence; }$/;"	f	class:TDecTop
getHbrFactor	TDecConformance.h	/^  UInt getHbrFactor(Bool bLowerBitRateConstraintFlag) const    \/\/ currently not used for checking$/;"	f	struct:ProfileFeatures
getIsChromaQpAdjCoded	TDecCu.h	/^  Bool getIsChromaQpAdjCoded    ()                        { return m_IsChromaQpAdjCoded;        }$/;"	f	class:TDecCu
getLevelTierFeatures	TDecConformance.h	/^    const LevelTierFeatures   *getLevelTierFeatures() const { return m_pLevelTier; }$/;"	f	class:ProfileLevelTierFeatures
getMaxLog2CtbSize	TDecConformance.cpp	/^TDecConformanceCheck::getMaxLog2CtbSize(const TComPTL &\/*ptl*\/,$/;"	f	class:TDecConformanceCheck
getMaxPicHeightInLumaSamples	TDecConformance.cpp	/^LevelTierFeatures::getMaxPicHeightInLumaSamples() const$/;"	f	class:LevelTierFeatures
getMaxPicWidthInLumaSamples	TDecConformance.cpp	/^LevelTierFeatures::getMaxPicWidthInLumaSamples()  const$/;"	f	class:LevelTierFeatures
getMaxRawCtuBits	TDecConformance.h	/^    UInt getMaxRawCtuBits()              const { return m_maxRawCtuBits; }$/;"	f	class:ProfileLevelTierFeatures
getMinCr	TDecConformance.h	/^    Double getMinCr()                    const { return (m_pLevelTier!=0 && m_pProfile!=0) ? (m_pProfile->minCrScaleFactorx10 * m_pLevelTier->minCrBase[m_tier?1:0])\/10.0 : 0.0 ; }   \/\/ currently not used for checking$/;"	f	class:ProfileLevelTierFeatures
getMinLog2CtbSize	TDecConformance.cpp	/^TDecConformanceCheck::getMinLog2CtbSize(const TComPTL &ptl,$/;"	f	class:TDecConformanceCheck
getNoOutputPriorPicsFlag	TDecTop.h	/^  Bool  getNoOutputPriorPicsFlag () { return m_isNoOutputPriorPics; }$/;"	f	class:TDecTop
getNumberOfChecksumErrorsDetected	TDecGop.h	/^  UInt getNumberOfChecksumErrorsDetected() const { return m_numberOfChecksumErrorsDetected; }$/;"	f	class:TDecGop
getNumberOfChecksumErrorsDetected	TDecTop.h	/^  UInt  getNumberOfChecksumErrorsDetected() const { return m_cGopDecoder.getNumberOfChecksumErrorsDetected(); }$/;"	f	class:TDecTop
getPcPic	TDecTop.h	/^  TComPic* getPcPic() const { return m_pcPic; }$/;"	f	class:TDecTop
getProfileFeatures	TDecConformance.h	/^    const ProfileFeatures     *getProfileFeatures()   const { return m_pProfile; }$/;"	f	class:ProfileLevelTierFeatures
getRpcListPic	TDecTop.h	/^  TComList<TComPic*>*  getRpcListPic()  { return &m_cListPic; };$/;"	f	class:TDecTop
getSEIs	TDecTop.h	/^  SEIMessages& getSEIs() { return m_SEIs; }$/;"	f	class:TDecTop
getStream	TDecConformance.h	/^  static inline std::ostream &getStream()  { return std::cout; }$/;"	f	class:TDecConformanceCheck
getStream	TDecConformance.h	/^  static inline std::ostream &getStream()$/;"	f	class:TDecConformanceCheck
getTDecBinCABAC	TDecBinCoder.h	/^  virtual TDecBinCABAC*   getTDecBinCABAC   ()             { return 0; }$/;"	f	class:TDecBinIf
getTDecBinCABAC	TDecBinCoder.h	/^  virtual const TDecBinCABAC*   getTDecBinCABAC   () const { return 0; }$/;"	f	class:TDecBinIf
getTDecBinCABAC	TDecBinCoderCABAC.h	/^  TDecBinCABAC* getTDecBinCABAC()             { return this; }$/;"	f	class:TDecBinCABAC
getTDecBinCABAC	TDecBinCoderCABAC.h	/^  const TDecBinCABAC* getTDecBinCABAC() const { return this; }$/;"	f	class:TDecBinCABAC
getTMctsCheck	TDecConformance.h	/^  Bool getTMctsCheck() const { return m_tmctsCheckEnabled;  }$/;"	f	class:TDecConformanceCheck
getTier	TDecConformance.h	/^    Level::Tier                getTier() const { return m_tier; }$/;"	f	class:ProfileLevelTierFeatures
getdQPFlag	TDecCu.h	/^  Bool getdQPFlag               ()                        { return m_bDecodeDQP;        }$/;"	f	class:TDecCu
hbrFactorEqn	TDecConformance.h	/^  HBRFACTOREQN             hbrFactorEqn;$/;"	m	struct:ProfileFeatures
init	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::init( TComInputBitstream* pcTComBitstream )$/;"	f	class:TDecBinCABAC
init	TDecCu.cpp	/^Void TDecCu::init( TDecEntropy* pcEntropyDecoder, TComTrQuant* pcTrQuant, TComPrediction* pcPrediction, TDecConformanceCheck* pConformanceCheck)$/;"	f	class:TDecCu
init	TDecEntropy.h	/^    Void init (TComPrediction* p, TDecConformanceCheck* pConformanceCheck) {m_pcPrediction = p; m_pConformanceCheck=pConformanceCheck;}$/;"	f	class:TDecEntropy
init	TDecEntropy.h	/^  Void init (TComPrediction* p) {m_pcPrediction = p;}$/;"	f	class:TDecEntropy
init	TDecGop.cpp	/^Void TDecGop::init( TDecEntropy*            pcEntropyDecoder,$/;"	f	class:TDecGop
init	TDecSbac.h	/^  Void  init                      ( TDecBinIf* p )    { m_pcTDecBinIf = p; }$/;"	f	class:TDecSbac
init	TDecSlice.cpp	/^Void TDecSlice::init(TDecEntropy* pcEntropyDecoder, TDecCu* pcCuDecoder, TDecConformanceCheck *pDecConformanceCheck)$/;"	f	class:TDecSlice
init	TDecTop.cpp	/^Void TDecTop::init()$/;"	f	class:TDecTop
isRandomAccessSkipPicture	TDecTop.cpp	/^Bool TDecTop::isRandomAccessSkipPicture(Int& iSkipFrame,  Int& iPOCLastDisplay)$/;"	f	class:TDecTop
isSkipPictureForBLA	TDecTop.cpp	/^Bool TDecTop::isSkipPictureForBLA(Int& iPOCLastDisplay)$/;"	f	class:TDecTop
level	TDecConformance.h	/^  Level::Name level;$/;"	m	struct:LevelTierFeatures
load	TDecSbac.cpp	/^Void TDecSbac::load ( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
loadContexts	TDecSbac.cpp	/^Void TDecSbac::loadContexts ( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
m_Bitstream	NALread.h	/^    TComInputBitstream m_Bitstream;$/;"	m	class:InputNALUnit
m_CUTransquantBypassFlagSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_CUTransquantBypassFlagSCModel;$/;"	m	class:TDecSbac
m_ChromaQpAdjFlagSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjFlagSCModel;$/;"	m	class:TDecSbac
m_ChromaQpAdjIdcSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_ChromaQpAdjIdcSCModel;$/;"	m	class:TDecSbac
m_FutureBytes	AnnexBread.h	/^  uint32_t m_FutureBytes; \/* bytes that have been peeked *\/$/;"	m	class:InputByteStream
m_Input	AnnexBread.h	/^  std::istream& m_Input; \/* Input stream to read from *\/$/;"	m	class:InputByteStream
m_IsChromaQpAdjCoded	TDecCu.h	/^  Bool                m_IsChromaQpAdjCoded;$/;"	m	class:TDecCu
m_NumFutureBytes	AnnexBread.h	/^  UInt m_NumFutureBytes; \/* number of valid bytes in m_FutureBytes *\/$/;"	m	class:InputByteStream
m_SEIs	TDecTop.h	/^  SEIMessages             m_SEIs; \/\/\/< List of SEI messages that have been received before the first slice and between slices, excluding prefix SEIs...$/;"	m	class:TDecTop
m_activatedFeatures	TDecConformance.h	/^  ProfileLevelTierFeatures m_activatedFeatures;$/;"	m	class:TDecConformanceCheck
m_apcSlicePilot	TDecTop.h	/^  TComSlice*              m_apcSlicePilot;$/;"	m	class:TDecTop
m_associatedIRAPType	TDecTop.h	/^  NalUnitType             m_associatedIRAPType; \/\/\/< NAL unit type of the associated IRAP picture$/;"	m	class:TDecTop
m_bDecodeDQP	TDecCu.h	/^  Bool                m_bDecodeDQP;$/;"	m	class:TDecCu
m_bFirstPictureInSequence	TDecTop.h	/^  Bool                    m_bFirstPictureInSequence;$/;"	m	class:TDecTop
m_bFirstSliceInBitstream	TDecTop.h	/^  Bool                    m_bFirstSliceInBitstream;$/;"	m	class:TDecTop
m_bFirstSliceInPicture	TDecTop.h	/^  Bool                    m_bFirstSliceInPicture;$/;"	m	class:TDecTop
m_bFirstSliceInSequence	TDecTop.h	/^  Bool                    m_bFirstSliceInSequence;$/;"	m	class:TDecTop
m_bitsNeeded	TDecBinCoderCABAC.h	/^  Int                 m_bitsNeeded;$/;"	m	class:TDecBinCABAC
m_bytesInPicture	TDecConformance.h	/^  UInt64 m_bytesInPicture;$/;"	m	class:TDecConformanceCheck
m_cBinCABAC	TDecTop.h	/^  TDecBinCABAC            m_cBinCABAC;$/;"	m	class:TDecTop
m_cCUAbsSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUAbsSCModel;$/;"	m	class:TDecSbac
m_cCUChromaPredSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUChromaPredSCModel;$/;"	m	class:TDecSbac
m_cCUDeltaQpSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUDeltaQpSCModel;$/;"	m	class:TDecSbac
m_cCUInterDirSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUInterDirSCModel;$/;"	m	class:TDecSbac
m_cCUIntraPredSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUIntraPredSCModel;$/;"	m	class:TDecSbac
m_cCUMergeFlagExtSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUMergeFlagExtSCModel;$/;"	m	class:TDecSbac
m_cCUMergeIdxExtSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUMergeIdxExtSCModel;$/;"	m	class:TDecSbac
m_cCUMvdSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUMvdSCModel;$/;"	m	class:TDecSbac
m_cCUOneSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUOneSCModel;$/;"	m	class:TDecSbac
m_cCUPartSizeSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUPartSizeSCModel;$/;"	m	class:TDecSbac
m_cCUPredModeSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUPredModeSCModel;$/;"	m	class:TDecSbac
m_cCUQtCbfSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUQtCbfSCModel;$/;"	m	class:TDecSbac
m_cCUQtRootCbfSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUQtRootCbfSCModel;$/;"	m	class:TDecSbac
m_cCURefPicSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCURefPicSCModel;$/;"	m	class:TDecSbac
m_cCUSigCoeffGroupSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUSigCoeffGroupSCModel;$/;"	m	class:TDecSbac
m_cCUSigSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUSigSCModel;$/;"	m	class:TDecSbac
m_cCUSkipFlagSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUSkipFlagSCModel;$/;"	m	class:TDecSbac
m_cCUSplitFlagSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUSplitFlagSCModel;$/;"	m	class:TDecSbac
m_cCUTransSubdivFlagSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCUTransSubdivFlagSCModel;$/;"	m	class:TDecSbac
m_cCavlcDecoder	TDecTop.h	/^  TDecCavlc               m_cCavlcDecoder;$/;"	m	class:TDecTop
m_cCrossComponentPredictionSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cCrossComponentPredictionSCModel;$/;"	m	class:TDecSbac
m_cCuCtxLastX	TDecSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastX;$/;"	m	class:TDecSbac
m_cCuCtxLastY	TDecSbac.h	/^  ContextModel3DBuffer m_cCuCtxLastY;$/;"	m	class:TDecSbac
m_cCuDecoder	TDecTop.h	/^  TDecCu                  m_cCuDecoder;$/;"	m	class:TDecTop
m_cEntropyDecoder	TDecTop.h	/^  TDecEntropy             m_cEntropyDecoder;$/;"	m	class:TDecTop
m_cGopDecoder	TDecTop.h	/^  TDecGop                 m_cGopDecoder;$/;"	m	class:TDecTop
m_cListPic	TDecGop.h	/^  TComList<TComPic*>    m_cListPic;         \/\/  Dynamic buffer$/;"	m	class:TDecGop
m_cListPic	TDecTop.h	/^  TComList<TComPic*>      m_cListPic;         \/\/  Dynamic buffer$/;"	m	class:TDecTop
m_cLoopFilter	TDecTop.h	/^  TComLoopFilter          m_cLoopFilter;$/;"	m	class:TDecTop
m_cMVPIdxSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cMVPIdxSCModel;$/;"	m	class:TDecSbac
m_cPrediction	TDecTop.h	/^  TComPrediction          m_cPrediction;$/;"	m	class:TDecTop
m_cSAO	TDecTop.h	/^  TComSampleAdaptiveOffset m_cSAO;$/;"	m	class:TDecTop
m_cSaoMergeSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cSaoMergeSCModel;$/;"	m	class:TDecSbac
m_cSaoTypeIdxSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cSaoTypeIdxSCModel;$/;"	m	class:TDecSbac
m_cSbacDecoder	TDecTop.h	/^  TDecSbac                m_cSbacDecoder;$/;"	m	class:TDecTop
m_cSliceDecoder	TDecTop.h	/^  TDecSlice               m_cSliceDecoder;$/;"	m	class:TDecTop
m_cTrQuant	TDecTop.h	/^  TComTrQuant             m_cTrQuant;$/;"	m	class:TDecTop
m_cTransformSkipSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_cTransformSkipSCModel;$/;"	m	class:TDecSbac
m_conformanceCheck	TDecTop.h	/^  TDecConformanceCheck    m_conformanceCheck;$/;"	m	class:TDecTop
m_contextModels	TDecSbac.h	/^  ContextModel         m_contextModels[MAX_NUM_CTX_MOD];$/;"	m	class:TDecSbac
m_craNoRaslOutputFlag	TDecTop.h	/^  Bool                    m_craNoRaslOutputFlag;    \/\/value of variable NoRaslOutputFlag of the last CRA pic$/;"	m	class:TDecTop
m_dDecTime	TDecGop.h	/^  Double                m_dDecTime;$/;"	m	class:TDecGop
m_decodedPictureHashSEIEnabled	TDecGop.h	/^  Int                   m_decodedPictureHashSEIEnabled;  \/\/\/< Checksum(3)\/CRC(2)\/MD5(1)\/disable(0) acting on decoded picture hash SEI message$/;"	m	class:TDecGop
m_entropyCodingSyncContextState	TDecSlice.h	/^  TDecSbac        m_entropyCodingSyncContextState;      \/\/\/< context storate for state of contexts at the wavefront\/WPP\/entropy-coding-sync second CTU of tile-row$/;"	m	class:TDecSlice
m_explicitRdpcmDirSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmDirSCModel;$/;"	m	class:TDecSbac
m_explicitRdpcmFlagSCModel	TDecSbac.h	/^  ContextModel3DBuffer m_explicitRdpcmFlagSCModel;$/;"	m	class:TDecSbac
m_forceDecodeBitDepth	TDecTop.h	/^  UInt                    m_forceDecodeBitDepth;$/;"	m	class:TDecTop
m_golombRiceAdaptationStatistics	TDecSbac.h	/^  UInt m_golombRiceAdaptationStatistics[RExt__GOLOMB_RICE_ADAPTATION_STATISTICS_SETS];$/;"	m	class:TDecSbac
m_grainBuf	TDecTop.h	/^  TComPicYuv              m_grainBuf;$/;"	m	class:TDecTop
m_grainCharacteristic	TDecTop.h	/^  SEIFilmGrainSynthesizer m_grainCharacteristic;$/;"	m	class:TDecTop
m_hbrFactor	TDecConformance.h	/^    UInt                     m_hbrFactor;               \/\/ currently not used for checking$/;"	m	class:ProfileLevelTierFeatures
m_iMaxRefPicNum	TDecTop.h	/^  Int                     m_iMaxRefPicNum;$/;"	m	class:TDecTop
m_isNoOutputPriorPics	TDecTop.h	/^  Bool                    m_isNoOutputPriorPics;$/;"	m	class:TDecTop
m_lastPOCNoOutputPriorPics	TDecTop.h	/^  Int                     m_lastPOCNoOutputPriorPics;$/;"	m	class:TDecTop
m_lastSliceSegmentEndContextState	TDecSlice.h	/^  TDecSbac        m_lastSliceSegmentEndContextState;    \/\/\/< context storage for state at the end of the previous slice-segment (used for dependent slices only).$/;"	m	class:TDecSlice
m_maxRawCtuBits	TDecConformance.h	/^    UInt                     m_maxRawCtuBits;$/;"	m	class:ProfileLevelTierFeatures
m_numBytesInNALUnit	AnnexBread.h	/^  UInt m_numBytesInNALUnit;$/;"	m	struct:AnnexBStats
m_numContextModels	TDecSbac.h	/^  Int                  m_numContextModels;$/;"	m	class:TDecSbac
m_numLeadingZero8BitsBytes	AnnexBread.h	/^  UInt m_numLeadingZero8BitsBytes;$/;"	m	struct:AnnexBStats
m_numStartCodePrefixBytes	AnnexBread.h	/^  UInt m_numStartCodePrefixBytes;$/;"	m	struct:AnnexBStats
m_numTrailingZero8BitsBytes	AnnexBread.h	/^  UInt m_numTrailingZero8BitsBytes;$/;"	m	struct:AnnexBStats
m_numZeroByteBytes	AnnexBread.h	/^  UInt m_numZeroByteBytes;$/;"	m	struct:AnnexBStats
m_numberOfChecksumErrorsDetected	TDecGop.h	/^  UInt                  m_numberOfChecksumErrorsDetected;$/;"	m	class:TDecGop
m_numberOfSlicesInPicture	TDecConformance.h	/^  UInt  m_numberOfSlicesInPicture;$/;"	m	class:TDecConformanceCheck
m_pConformanceCheck	TDecCu.h	/^  TDecConformanceCheck* m_pConformanceCheck;$/;"	m	class:TDecCu
m_pConformanceCheck	TDecEntropy.h	/^  TDecConformanceCheck* m_pConformanceCheck;$/;"	m	class:TDecEntropy
m_pDecConformanceCheck	TDecSlice.h	/^  TDecConformanceCheck *m_pDecConformanceCheck;$/;"	m	class:TDecSlice
m_pDecodedSEIOutputStream	TDecTop.h	/^  std::ostream           *m_pDecodedSEIOutputStream;$/;"	m	class:TDecTop
m_pLevelTier	TDecConformance.h	/^    const LevelTierFeatures *m_pLevelTier;$/;"	m	class:ProfileLevelTierFeatures
m_pProfile	TDecConformance.h	/^    const ProfileFeatures   *m_pProfile;$/;"	m	class:ProfileLevelTierFeatures
m_parameterSetManager	TDecTop.h	/^  ParameterSetManager     m_parameterSetManager;  \/\/ storage for parameter sets$/;"	m	class:TDecTop
m_pcBinCABAC	TDecGop.h	/^  TDecBinCABAC*         m_pcBinCABAC;$/;"	m	class:TDecGop
m_pcBitstream	SyntaxElementParser.h	/^  TComInputBitstream*   m_pcBitstream;$/;"	m	class:SyntaxElementParser
m_pcBitstream	TDecSbac.h	/^  TComInputBitstream* m_pcBitstream;$/;"	m	class:TDecSbac
m_pcCavlcDecoder	TDecGop.h	/^  TDecCavlc*            m_pcCavlcDecoder;$/;"	m	class:TDecGop
m_pcCuDecoder	TDecSlice.h	/^  TDecCu*         m_pcCuDecoder;$/;"	m	class:TDecSlice
m_pcEntropyDecoder	TDecCu.h	/^  TDecEntropy*        m_pcEntropyDecoder;$/;"	m	class:TDecCu
m_pcEntropyDecoder	TDecGop.h	/^  TDecEntropy*          m_pcEntropyDecoder;$/;"	m	class:TDecGop
m_pcEntropyDecoder	TDecSlice.h	/^  TDecEntropy*    m_pcEntropyDecoder;$/;"	m	class:TDecSlice
m_pcEntropyDecoderIf	TDecEntropy.h	/^  TDecEntropyIf*  m_pcEntropyDecoderIf;$/;"	m	class:TDecEntropy
m_pcLoopFilter	TDecGop.h	/^  TComLoopFilter*       m_pcLoopFilter;$/;"	m	class:TDecGop
m_pcPic	TDecTop.h	/^  TComPic*                m_pcPic;$/;"	m	class:TDecTop
m_pcPrediction	TDecCu.h	/^  TComPrediction*     m_pcPrediction;$/;"	m	class:TDecCu
m_pcPrediction	TDecEntropy.h	/^  TComPrediction* m_pcPrediction;$/;"	m	class:TDecEntropy
m_pcSAO	TDecGop.h	/^  TComSampleAdaptiveOffset*     m_pcSAO;$/;"	m	class:TDecGop
m_pcSbacDecoder	TDecGop.h	/^  TDecSbac*             m_pcSbacDecoder;$/;"	m	class:TDecGop
m_pcSliceDecoder	TDecGop.h	/^  TDecSlice*            m_pcSliceDecoder;$/;"	m	class:TDecGop
m_pcTComBitstream	TDecBinCoderCABAC.h	/^  TComInputBitstream* m_pcTComBitstream;$/;"	m	class:TDecBinCABAC
m_pcTDecBinIf	TDecSbac.h	/^  TDecBinIf*        m_pcTDecBinIf;$/;"	m	class:TDecSbac
m_pcTrQuant	TDecCu.h	/^  TComTrQuant*        m_pcTrQuant;$/;"	m	class:TDecCu
m_pocCRA	TDecTop.h	/^  Int                     m_pocCRA;            \/\/\/< POC number of the latest CRA picture$/;"	m	class:TDecTop
m_pocRandomAccess	TDecTop.h	/^  Int                     m_pocRandomAccess;   \/\/\/< POC number of the random access point (the first IDR or CRA picture)$/;"	m	class:TDecTop
m_ppcCU	TDecCu.h	/^  TComDataCU**        m_ppcCU;            \/\/\/< CU data array$/;"	m	class:TDecCu
m_ppcYuvReco	TDecCu.h	/^  TComYuv**           m_ppcYuvReco;       \/\/\/< array of prediction & reconstruction buffer$/;"	m	class:TDecCu
m_ppcYuvResi	TDecCu.h	/^  TComYuv**           m_ppcYuvResi;       \/\/\/< array of residual buffer$/;"	m	class:TDecCu
m_prefixSEINALUs	TDecTop.h	/^  std::list<InputNALUnit*> m_prefixSEINALUs; \/\/\/ Buffered up prefix SEI NAL Units.$/;"	m	class:TDecTop
m_prevPOC	TDecTop.h	/^  Int                     m_prevPOC;$/;"	m	class:TDecTop
m_prevSliceSkipped	TDecTop.h	/^  Bool                    m_prevSliceSkipped;$/;"	m	class:TDecTop
m_prevTid0POC	TDecTop.h	/^  Int                     m_prevTid0POC;$/;"	m	class:TDecTop
m_seiReader	TDecTop.h	/^  SEIReader               m_seiReader;$/;"	m	class:TDecTop
m_skippedPOC	TDecTop.h	/^  Int                     m_skippedPOC;$/;"	m	class:TDecTop
m_tier	TDecConformance.h	/^    Level::Tier              m_tier;$/;"	m	class:ProfileLevelTierFeatures
m_tmctsCheckEnabled	TDecConformance.h	/^  Bool m_tmctsCheckEnabled;$/;"	m	class:TDecConformanceCheck
m_tmctsCheckEnabled	TDecTop.h	/^  Bool                    m_tmctsCheckEnabled;$/;"	m	class:TDecTop
m_uiMaxDepth	TDecCu.h	/^  UInt                m_uiMaxDepth;       \/\/\/< max. number of depth$/;"	m	class:TDecCu
m_uiRange	TDecBinCoderCABAC.h	/^  UInt                m_uiRange;$/;"	m	class:TDecBinCABAC
m_uiSliceIdx	TDecTop.h	/^  UInt                    m_uiSliceIdx;$/;"	m	class:TDecTop
m_uiValue	TDecBinCoderCABAC.h	/^  UInt                m_uiValue;$/;"	m	class:TDecBinCABAC
m_warningMessageSkipPicture	TDecTop.h	/^  Bool                    m_warningMessageSkipPicture;$/;"	m	class:TDecTop
mainLevelTierInfo	TDecConformance.cpp	/^static const LevelTierFeatures mainLevelTierInfo[] =$/;"	v	file:
maxBitDepth	TDecConformance.h	/^  UInt                     maxBitDepth;$/;"	m	struct:ProfileFeatures
maxBr	TDecConformance.h	/^  UInt        maxBr[Level::NUMBER_OF_TIERS];     \/\/ in units of BrVclFactor or BrNalFactor bits\/s$/;"	m	struct:LevelTierFeatures
maxChromaFormat	TDecConformance.h	/^  ChromaFormat             maxChromaFormat;$/;"	m	struct:ProfileFeatures
maxCpb	TDecConformance.h	/^  UInt        maxCpb[Level::NUMBER_OF_TIERS];    \/\/ in units of CpbVclFactor or CpbNalFactor bits$/;"	m	struct:LevelTierFeatures
maxLumaPs	TDecConformance.h	/^  UInt        maxLumaPs;$/;"	m	struct:LevelTierFeatures
maxLumaSr	TDecConformance.h	/^  UInt64      maxLumaSr;$/;"	m	struct:LevelTierFeatures
maxSliceSegmentsPerPicture	TDecConformance.h	/^  UInt        maxSliceSegmentsPerPicture;$/;"	m	struct:LevelTierFeatures
maxTileCols	TDecConformance.h	/^  UInt        maxTileCols;$/;"	m	struct:LevelTierFeatures
maxTileRows	TDecConformance.h	/^  UInt        maxTileRows;$/;"	m	struct:LevelTierFeatures
minCrBase	TDecConformance.h	/^  UInt        minCrBase[Level::NUMBER_OF_TIERS];$/;"	m	struct:LevelTierFeatures
minCrScaleFactorx10	TDecConformance.h	/^  UInt                     minCrScaleFactorx10;         \/\/ currently not used for checking$/;"	m	struct:ProfileFeatures
minTileColumnWidthInLumaSamples	TDecConformance.h	/^  UInt                     minTileColumnWidthInLumaSamples;$/;"	m	struct:ProfileFeatures
minTileRowHeightInLumaSamples	TDecConformance.h	/^  UInt                     minTileRowHeightInLumaSamples;$/;"	m	struct:ProfileFeatures
onlyIRAPPictures	TDecConformance.h	/^  Bool onlyIRAPPictures()                    const { return generalIntraConstraintFlag; }$/;"	f	struct:ProfileFeatures
operator +=	AnnexBread.h	/^  AnnexBStats& operator+=(const AnnexBStats& rhs)$/;"	f	struct:AnnexBStats
output_sei_message_header	SEIread.cpp	/^static inline Void output_sei_message_header(SEI &sei, std::ostream *pDecodedMessageOutputStream, UInt payloadSize)$/;"	f	file:
pLevelTiersListInfo	TDecConformance.h	/^  const LevelTierFeatures *pLevelTiersListInfo;$/;"	m	struct:ProfileFeatures
pNameString	TDecConformance.h	/^  const TChar            *pNameString;$/;"	m	struct:ProfileFeatures
parseAccessUnitDelimiter	SyntaxElementParser.cpp	/^Void AUDReader::parseAccessUnitDelimiter(TComInputBitstream* bs, UInt &picType)$/;"	f	class:AUDReader
parseCUTransquantBypassFlag	TDecCAVLC.cpp	/^Void TDecCavlc::parseCUTransquantBypassFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseCUTransquantBypassFlag	TDecSbac.cpp	/^Void TDecSbac::parseCUTransquantBypassFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseChromaQpAdjustment	TDecCAVLC.cpp	/^Void TDecCavlc::parseChromaQpAdjustment( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseChromaQpAdjustment	TDecSbac.cpp	/^Void TDecSbac::parseChromaQpAdjustment( TComDataCU* cu, UInt absPartIdx, UInt depth )$/;"	f	class:TDecSbac
parseCoeffNxN	TDecCAVLC.cpp	/^Void TDecCavlc::parseCoeffNxN( TComTU &\/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseCoeffNxN	TDecSbac.cpp	/^Void TDecSbac::parseCoeffNxN(  TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseCrossComponentPrediction	TDecCAVLC.cpp	/^Void TDecCavlc::parseCrossComponentPrediction( class TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseCrossComponentPrediction	TDecSbac.cpp	/^Void TDecSbac::parseCrossComponentPrediction( TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseDeltaQP	TDecCAVLC.cpp	/^Void TDecCavlc::parseDeltaQP( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseDeltaQP	TDecSbac.cpp	/^Void TDecSbac::parseDeltaQP( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseExplicitRdpcmMode	TDecCAVLC.cpp	/^Void TDecCavlc::parseExplicitRdpcmMode( TComTU& \/*rTu*\/, ComponentID \/*compID*\/ )$/;"	f	class:TDecCavlc
parseExplicitRdpcmMode	TDecSbac.cpp	/^Void TDecSbac::parseExplicitRdpcmMode( TComTU &rTu, ComponentID compID )$/;"	f	class:TDecSbac
parseFillerData	SyntaxElementParser.cpp	/^Void FDReader::parseFillerData(TComInputBitstream* bs, UInt &fdSize)$/;"	f	class:FDReader
parseHrdParameters	TDecCAVLC.cpp	/^Void TDecCavlc::parseHrdParameters(TComHRD *hrd, Bool commonInfPresentFlag, UInt maxNumSubLayersMinus1)$/;"	f	class:TDecCavlc
parseIPCMInfo	TDecCAVLC.cpp	/^Void TDecCavlc::parseIPCMInfo( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIPCMInfo	TDecSbac.cpp	/^Void TDecSbac::parseIPCMInfo ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseInterDir	TDecCAVLC.cpp	/^Void TDecCavlc::parseInterDir( TComDataCU* \/*pcCU*\/, UInt& \/*ruiInterDir*\/, UInt \/*uiAbsPartIdx*\/ )$/;"	f	class:TDecCavlc
parseInterDir	TDecSbac.cpp	/^Void TDecSbac::parseInterDir( TComDataCU* pcCU, UInt& ruiInterDir, UInt uiAbsPartIdx )$/;"	f	class:TDecSbac
parseIntraDirChroma	TDecCAVLC.cpp	/^Void TDecCavlc::parseIntraDirChroma( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIntraDirChroma	TDecSbac.cpp	/^Void TDecSbac::parseIntraDirChroma( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseIntraDirLumaAng	TDecCAVLC.cpp	/^Void TDecCavlc::parseIntraDirLumaAng  ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseIntraDirLumaAng	TDecSbac.cpp	/^Void TDecSbac::parseIntraDirLumaAng  ( TComDataCU* pcCU, UInt absPartIdx, UInt depth )$/;"	f	class:TDecSbac
parseLastSignificantXY	TDecSbac.cpp	/^Void TDecSbac::parseLastSignificantXY( UInt& uiPosLastX, UInt& uiPosLastY, Int width, Int height, ComponentID component, UInt uiScanIdx )$/;"	f	class:TDecSbac
parseMVPIdx	TDecCAVLC.cpp	/^Void TDecCavlc::parseMVPIdx( Int& \/*riMVPIdx*\/ )$/;"	f	class:TDecCavlc
parseMVPIdx	TDecSbac.cpp	/^Void TDecSbac::parseMVPIdx      ( Int& riMVPIdx )$/;"	f	class:TDecSbac
parseMergeFlag	TDecCAVLC.cpp	/^Void TDecCavlc::parseMergeFlag ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/, UInt \/*uiPUIdx*\/ )$/;"	f	class:TDecCavlc
parseMergeFlag	TDecSbac.cpp	/^Void TDecSbac::parseMergeFlag ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, UInt uiPUIdx )$/;"	f	class:TDecSbac
parseMergeIndex	TDecCAVLC.cpp	/^Void TDecCavlc::parseMergeIndex ( TComDataCU* \/*pcCU*\/, UInt& \/*ruiMergeIndex*\/ )$/;"	f	class:TDecCavlc
parseMergeIndex	TDecSbac.cpp	/^Void TDecSbac::parseMergeIndex ( TComDataCU* pcCU, UInt& ruiMergeIndex )$/;"	f	class:TDecSbac
parseMvd	TDecCAVLC.cpp	/^Void TDecCavlc::parseMvd( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiPartIdx*\/, UInt \/*uiDepth*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TDecCavlc
parseMvd	TDecSbac.cpp	/^Void TDecSbac::parseMvd( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiPartIdx, UInt uiDepth, RefPicList eRefList )$/;"	f	class:TDecSbac
parsePPS	TDecCAVLC.cpp	/^Void TDecCavlc::parsePPS(TComPPS* pcPPS)$/;"	f	class:TDecCavlc
parsePPS	TDecSbac.h	/^  Void  parsePPS                  ( TComPPS* \/*pcPPS*\/ ) {}$/;"	f	class:TDecSbac
parsePTL	TDecCAVLC.cpp	/^Void TDecCavlc::parsePTL( TComPTL *rpcPTL, Bool profilePresentFlag, Int maxNumSubLayersMinus1 )$/;"	f	class:TDecCavlc
parsePartSize	TDecCAVLC.cpp	/^Void TDecCavlc::parsePartSize( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parsePartSize	TDecSbac.cpp	/^Void TDecSbac::parsePartSize( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parsePredMode	TDecCAVLC.cpp	/^Void TDecCavlc::parsePredMode( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parsePredMode	TDecSbac.cpp	/^Void TDecSbac::parsePredMode( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseProfileTier	TDecCAVLC.cpp	/^Void TDecCavlc::parseProfileTier(ProfileTierLevel *ptl, const Bool bIsSubLayer)$/;"	f	class:TDecCavlc
parseQtCbf	TDecCAVLC.cpp	/^Void TDecCavlc::parseQtCbf( TComTU &\/*rTu*\/, const ComponentID \/*compID*\/, const Bool \/*lowestLevel*\/ )$/;"	f	class:TDecCavlc
parseQtCbf	TDecSbac.cpp	/^Void TDecSbac::parseQtCbf( TComTU &rTu, const ComponentID compID, const Bool lowestLevel )$/;"	f	class:TDecSbac
parseQtRootCbf	TDecCAVLC.cpp	/^Void TDecCavlc::parseQtRootCbf( UInt \/*uiAbsPartIdx*\/, UInt& \/*uiQtRootCbf*\/ )$/;"	f	class:TDecCavlc
parseQtRootCbf	TDecSbac.cpp	/^Void TDecSbac::parseQtRootCbf( UInt uiAbsPartIdx, UInt& uiQtRootCbf )$/;"	f	class:TDecSbac
parseRefFrmIdx	TDecCAVLC.cpp	/^Void TDecCavlc::parseRefFrmIdx( TComDataCU* \/*pcCU*\/, Int& \/*riRefFrmIdx*\/, RefPicList \/*eRefList*\/ )$/;"	f	class:TDecCavlc
parseRefFrmIdx	TDecSbac.cpp	/^Void TDecSbac::parseRefFrmIdx( TComDataCU* pcCU, Int& riRefFrmIdx, RefPicList eRefList )$/;"	f	class:TDecSbac
parseRemainingBytes	TDecCAVLC.cpp	/^Void TDecCavlc::parseRemainingBytes( Bool noTrailingBytesExpected )$/;"	f	class:TDecCavlc
parseRemainingBytes	TDecSbac.cpp	/^Void TDecSbac::parseRemainingBytes( Bool noTrailingBytesExpected )$/;"	f	class:TDecSbac
parseSAOBlkParam	TDecSbac.cpp	/^Void TDecSbac::parseSAOBlkParam (SAOBlkParam& saoBlkParam$/;"	f	class:TDecSbac
parseSEImessage	SEIread.cpp	/^Void SEIReader::parseSEImessage(TComInputBitstream* bs, SEIMessages& seis, const NalUnitType nalUnitType, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
parseSPS	TDecCAVLC.cpp	/^Void TDecCavlc::parseSPS(TComSPS* pcSPS)$/;"	f	class:TDecCavlc
parseSPS	TDecSbac.h	/^  Void  parseSPS                  ( TComSPS* \/*pcSPS*\/ ) {}$/;"	f	class:TDecSbac
parseSaoMaxUvlc	TDecSbac.cpp	/^Void TDecSbac::parseSaoMaxUvlc ( UInt& val, UInt maxSymbol )$/;"	f	class:TDecSbac
parseSaoMerge	TDecSbac.cpp	/^Void TDecSbac::parseSaoMerge (UInt&  ruiVal)$/;"	f	class:TDecSbac
parseSaoSign	TDecSbac.cpp	/^Void TDecSbac::parseSaoSign(UInt& val)$/;"	f	class:TDecSbac
parseSaoTypeIdx	TDecSbac.cpp	/^Void TDecSbac::parseSaoTypeIdx (UInt&  ruiVal)$/;"	f	class:TDecSbac
parseSaoUflc	TDecSbac.cpp	/^Void TDecSbac::parseSaoUflc (UInt uiLength, UInt&  riVal)$/;"	f	class:TDecSbac
parseScalingList	TDecCAVLC.cpp	/^Void TDecCavlc::parseScalingList(TComScalingList* scalingList)$/;"	f	class:TDecCavlc
parseScalingList	TDecSbac.h	/^  Void  parseScalingList ( TComScalingList* \/*scalingList*\/ ) {}$/;"	f	class:TDecSbac
parseShortTermRefPicSet	TDecCAVLC.cpp	/^Void TDecCavlc::parseShortTermRefPicSet( TComSPS* sps, TComReferencePictureSet* rps, Int idx )$/;"	f	class:TDecCavlc
parseSkipFlag	TDecCAVLC.cpp	/^Void TDecCavlc::parseSkipFlag( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseSkipFlag	TDecSbac.cpp	/^Void TDecSbac::parseSkipFlag( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseSliceHeader	TDecCAVLC.cpp	/^Void TDecCavlc::parseSliceHeader (TComSlice* pcSlice, ParameterSetManager *parameterSetManager, const Int prevTid0POC)$/;"	f	class:TDecCavlc
parseSliceHeader	TDecSbac.h	/^  Void  parseSliceHeader          ( TComSlice* \/*pcSlice*\/, ParameterSetManager* \/*parameterSetManager*\/, const Int \/*prevTid0POC*\/) {}$/;"	f	class:TDecSbac
parseSplitFlag	TDecCAVLC.cpp	/^Void TDecCavlc::parseSplitFlag     ( TComDataCU* \/*pcCU*\/, UInt \/*uiAbsPartIdx*\/, UInt \/*uiDepth*\/ )$/;"	f	class:TDecCavlc
parseSplitFlag	TDecSbac.cpp	/^Void TDecSbac::parseSplitFlag     ( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth )$/;"	f	class:TDecSbac
parseTerminatingBit	TDecCAVLC.cpp	/^Void TDecCavlc::parseTerminatingBit( UInt& ruiBit )$/;"	f	class:TDecCavlc
parseTerminatingBit	TDecSbac.cpp	/^Void TDecSbac::parseTerminatingBit( UInt& ruiBit )$/;"	f	class:TDecSbac
parseTransformSkipFlags	TDecCAVLC.cpp	/^Void TDecCavlc::parseTransformSkipFlags (TComTU &\/*rTu*\/, ComponentID \/*component*\/)$/;"	f	class:TDecCavlc
parseTransformSkipFlags	TDecSbac.cpp	/^Void TDecSbac::parseTransformSkipFlags (TComTU &rTu, ComponentID component)$/;"	f	class:TDecSbac
parseTransformSubdivFlag	TDecCAVLC.cpp	/^Void TDecCavlc::parseTransformSubdivFlag( UInt& \/*ruiSubdivFlag*\/, UInt \/*uiLog2TransformBlockSize*\/ )$/;"	f	class:TDecCavlc
parseTransformSubdivFlag	TDecSbac.cpp	/^Void TDecSbac::parseTransformSubdivFlag( UInt& ruiSubdivFlag, UInt uiLog2TransformBlockSize )$/;"	f	class:TDecSbac
parseVPS	TDecCAVLC.cpp	/^Void TDecCavlc::parseVPS(TComVPS* pcVPS)$/;"	f	class:TDecCavlc
parseVPS	TDecSbac.h	/^  Void  parseVPS                  ( TComVPS* \/*pcVPS*\/ ) {}$/;"	f	class:TDecSbac
parseVUI	TDecCAVLC.cpp	/^Void  TDecCavlc::parseVUI(TComVUI* pcVUI, TComSPS *pcSPS)$/;"	f	class:TDecCavlc
peekBytes	AnnexBread.h	/^  uint32_t peekBytes(UInt n)$/;"	f	class:InputByteStream
profile	TDecConformance.h	/^  Profile::Name            profile;$/;"	m	struct:ProfileFeatures
read	NALread.cpp	/^Void read(InputNALUnit& nalu)$/;"	f
readByte	AnnexBread.h	/^  uint8_t readByte()$/;"	f	class:InputByteStream
readBytes	AnnexBread.h	/^  uint32_t readBytes(UInt n)$/;"	f	class:InputByteStream
readNalUnitHeader	NALread.cpp	/^Void readNalUnitHeader(InputNALUnit& nalu)$/;"	f
reset	AnnexBread.h	/^  Void reset()$/;"	f	class:InputByteStream
resetEntropy	TDecCAVLC.h	/^  Void  resetEntropy        ( TComSlice* \/*pcSlice*\/  )     { assert(0); };$/;"	f	class:TDecCavlc
resetEntropy	TDecEntropy.h	/^  Void    resetEntropy                ( TComSlice* p)           { m_pcEntropyDecoderIf->resetEntropy(p);                    }$/;"	f	class:TDecEntropy
resetEntropy	TDecSbac.cpp	/^Void TDecSbac::resetEntropy(TComSlice* pSlice)$/;"	f	class:TDecSbac
sei_read_code	SEIread.cpp	/^Void SEIReader::sei_read_code(std::ostream *pOS, UInt uiLength, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_flag	SEIread.cpp	/^Void SEIReader::sei_read_flag(std::ostream *pOS, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_scode	SEIread.cpp	/^Void SEIReader::sei_read_scode(std::ostream *pOS, UInt uiLength, Int& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_svlc	SEIread.cpp	/^Void SEIReader::sei_read_svlc(std::ostream *pOS, Int& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
sei_read_uvlc	SEIread.cpp	/^Void SEIReader::sei_read_uvlc(std::ostream *pOS, UInt& ruiCode, const TChar *pSymbolName)$/;"	f	class:SEIReader
setBitstream	SyntaxElementParser.h	/^  Void  setBitstream ( TComInputBitstream* p )   { m_pcBitstream = p; }$/;"	f	class:SyntaxElementParser
setBitstream	TDecCAVLC.h	/^  Void  setBitstream        ( TComInputBitstream* p )   { m_pcBitstream = p; }$/;"	f	class:TDecCavlc
setBitstream	TDecEntropy.h	/^  Void    setBitstream                ( TComInputBitstream* p ) { m_pcEntropyDecoderIf->setBitstream(p);                    }$/;"	f	class:TDecEntropy
setBitstream	TDecSbac.h	/^  Void  setBitstream              ( TComInputBitstream* p  ) { m_pcBitstream = p; m_pcTDecBinIf->init( p ); }$/;"	f	class:TDecSbac
setDecodedPictureHashSEIEnabled	TDecGop.h	/^  Void setDecodedPictureHashSEIEnabled(Int enabled) { m_decodedPictureHashSEIEnabled = enabled; }$/;"	f	class:TDecGop
setDecodedPictureHashSEIEnabled	TDecTop.h	/^  Void setDecodedPictureHashSEIEnabled(Int enabled) { m_cGopDecoder.setDecodedPictureHashSEIEnabled(enabled); }$/;"	f	class:TDecTop
setDecodedSEIMessageOutputStream	TDecTop.h	/^  Void  setDecodedSEIMessageOutputStream(std::ostream *pOpStream) { m_pDecodedSEIOutputStream = pOpStream; }$/;"	f	class:TDecTop
setEntropyDecoder	TDecEntropy.cpp	/^Void TDecEntropy::setEntropyDecoder         ( TDecEntropyIf* p )$/;"	f	class:TDecEntropy
setFirstSliceInPicture	TDecTop.h	/^  Void  setFirstSliceInPicture (bool val)  { m_bFirstSliceInPicture = val; }$/;"	f	class:TDecTop
setFirstSliceInSequence	TDecTop.h	/^  Void  setFirstSliceInSequence (bool val) { m_bFirstSliceInSequence = val; }$/;"	f	class:TDecTop
setForceDecodeBitDepth	TDecTop.h	/^  Void  setForceDecodeBitDepth(UInt bitDepth) { m_forceDecodeBitDepth = bitDepth; }$/;"	f	class:TDecTop
setIsChromaQpAdjCoded	TDecCu.h	/^  Void setIsChromaQpAdjCoded    ( Bool b )                { m_IsChromaQpAdjCoded = b;           }$/;"	f	class:TDecCu
setNoOutputPriorPicsFlag	TDecTop.h	/^  Void  setNoOutputPriorPicsFlag (Bool val) { m_isNoOutputPriorPics = val; }$/;"	f	class:TDecTop
setTMctsCheckEnabled	TDecTop.h	/^  Void setTMctsCheckEnabled(Bool enabled) { m_tmctsCheckEnabled = enabled; }$/;"	f	class:TDecTop
setdQPFlag	TDecCu.h	/^  Void setdQPFlag               ( Bool b )                { m_bDecodeDQP = b;           }$/;"	f	class:TDecCu
start	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::start()$/;"	f	class:TDecBinCABAC
uninit	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::uninit()$/;"	f	class:TDecBinCABAC
uninit	TDecSbac.h	/^  Void  uninit                    (              )    { m_pcTDecBinIf = 0; }$/;"	f	class:TDecSbac
validProfiles	TDecConformance.cpp	/^static const ProfileFeatures validProfiles[] =$/;"	v	file:
xActivateParameterSets	TDecTop.cpp	/^Void TDecTop::xActivateParameterSets(Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
xAnalysePrefixSEImessages	TDecTop.cpp	/^Void TDecTop::xAnalysePrefixSEImessages()$/;"	f	class:TDecTop
xCopyContextsFrom	TDecSbac.cpp	/^Void TDecSbac::xCopyContextsFrom( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
xCopyFrom	TDecSbac.cpp	/^Void TDecSbac::xCopyFrom( const TDecSbac* pSrc )$/;"	f	class:TDecSbac
xCopyToPic	TDecCu.cpp	/^Void TDecCu::xCopyToPic( TComDataCU* pcCU, TComPic* pcPic, UInt uiZorderIdx, UInt uiDepth )$/;"	f	class:TDecCu
xCreateLostPicture	TDecTop.cpp	/^Void TDecTop::xCreateLostPicture(Int iLostPoc)$/;"	f	class:TDecTop
xDecodeCU	TDecCu.cpp	/^Void TDecCu::xDecodeCU( TComDataCU*const pcCU, const UInt uiAbsPartIdx, const UInt uiDepth, Bool &isLastCtuOfSliceSegment)$/;"	f	class:TDecCu
xDecodeInterTexture	TDecCu.cpp	/^Void TDecCu::xDecodeInterTexture ( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xDecodePCMTexture	TDecCu.cpp	/^Void TDecCu::xDecodePCMTexture( TComDataCU* pcCU, const UInt uiPartIdx, const Pel *piPCM, Pel* piReco, const UInt uiStride, const UInt uiWidth, const UInt uiHeight, const ComponentID compID)$/;"	f	class:TDecCu
xDecodePPS	TDecTop.cpp	/^Void TDecTop::xDecodePPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecodeSPS	TDecTop.cpp	/^Void TDecTop::xDecodeSPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecodeScalingList	TDecCAVLC.cpp	/^Void TDecCavlc::xDecodeScalingList(TComScalingList *scalingList, UInt sizeId, UInt listId)$/;"	f	class:TDecCavlc
xDecodeSlice	TDecTop.cpp	/^Bool TDecTop::xDecodeSlice(InputNALUnit &nalu, Int &iSkipFrame, Int iPOCLastDisplay, Bool bSkipCabacAndReconstruction)$/;"	f	class:TDecTop
xDecodeSliceEnd	TDecCu.cpp	/^Bool TDecCu::xDecodeSliceEnd( TComDataCU* pcCU, UInt uiAbsPartIdx )$/;"	f	class:TDecCu
xDecodeTransform	TDecEntropy.cpp	/^Void TDecEntropy::xDecodeTransform        ( Bool& bCodeDQP, Bool& isChromaQpAdjCoded, TComTU &rTu, const Int quadtreeTULog2MinSizeInCU )$/;"	f	class:TDecEntropy
xDecodeVPS	TDecTop.cpp	/^Void TDecTop::xDecodeVPS(const std::vector<UChar> &naluData)$/;"	f	class:TDecTop
xDecompressCU	TDecCu.cpp	/^Void TDecCu::xDecompressCU( TComDataCU* pCtu, UInt uiAbsPartIdx,  UInt uiDepth )$/;"	f	class:TDecCu
xFillPCMBuffer	TDecCu.cpp	/^Void TDecCu::xFillPCMBuffer(TComDataCU* pCU, UInt depth)$/;"	f	class:TDecCu
xFinishDecodeCU	TDecCu.cpp	/^Void TDecCu::xFinishDecodeCU( TComDataCU* pcCU, UInt uiAbsPartIdx, UInt uiDepth, Bool &isLastCtuOfSliceSegment)$/;"	f	class:TDecCu
xGetNewPicBuffer	TDecTop.cpp	/^Void TDecTop::xGetNewPicBuffer ( const TComSPS &sps, const TComPPS &pps, TComPic*& rpcPic, const UInt temporalLayer )$/;"	f	class:TDecTop
xIntraRecBlk	TDecCu.cpp	/^TDecCu::xIntraRecBlk(       TComYuv*    pcRecoYuv,$/;"	f	class:TDecCu
xIntraRecQT	TDecCu.cpp	/^TDecCu::xIntraRecQT(TComYuv*    pcRecoYuv,$/;"	f	class:TDecCu
xMoreRbspData	TDecCAVLC.cpp	/^Bool TDecCavlc::xMoreRbspData()$/;"	f	class:TDecCavlc
xParsePredWeightTable	TDecCAVLC.cpp	/^Void TDecCavlc::xParsePredWeightTable( TComSlice* pcSlice, const TComSPS *sps )$/;"	f	class:TDecCavlc
xParsePrefixSEImessages	TDecTop.cpp	/^Void TDecTop::xParsePrefixSEImessages()$/;"	f	class:TDecTop
xParsePrefixSEIsForUnknownVCLNal	TDecTop.cpp	/^Void TDecTop::xParsePrefixSEIsForUnknownVCLNal()$/;"	f	class:TDecTop
xParseSEIActiveParameterSets	SEIread.cpp	/^Void SEIReader::xParseSEIActiveParameterSets(SEIActiveParameterSets& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIAlternativeTransferCharacteristics	SEIread.cpp	/^Void SEIReader::xParseSEIAlternativeTransferCharacteristics(SEIAlternativeTransferCharacteristics& sei, UInt payloadSize, ostream* pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIAmbientViewingEnvironment	SEIread.cpp	/^Void SEIReader::xParseSEIAmbientViewingEnvironment( SEIAmbientViewingEnvironment& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIAnnotatedRegions	SEIread.cpp	/^Void SEIReader::xParseSEIAnnotatedRegions(SEIAnnotatedRegions& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIBufferingPeriod	SEIread.cpp	/^Void SEIReader::xParseSEIBufferingPeriod(SEIBufferingPeriod& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIChromaResamplingFilterHint	SEIread.cpp	/^Void SEIReader::xParseSEIChromaResamplingFilterHint(SEIChromaResamplingFilterHint& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEICodedRegionCompletion	SEIread.cpp	/^Void SEIReader::xParseSEICodedRegionCompletion( SEICodedRegionCompletion& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIColourRemappingInfo	SEIread.cpp	/^Void SEIReader::xParseSEIColourRemappingInfo(SEIColourRemappingInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIContentColourVolume	SEIread.cpp	/^Void SEIReader::xParseSEIContentColourVolume(SEIContentColourVolume& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIContentLightLevelInfo	SEIread.cpp	/^Void SEIReader::xParseSEIContentLightLevelInfo( SEIContentLightLevelInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEICubemapProjection	SEIread.cpp	/^Void SEIReader::xParseSEICubemapProjection(SEICubemapProjection& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDecodedPictureHash	SEIread.cpp	/^Void SEIReader::xParseSEIDecodedPictureHash(SEIDecodedPictureHash& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDecodingUnitInfo	SEIread.cpp	/^Void SEIReader::xParseSEIDecodingUnitInfo(SEIDecodingUnitInfo& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIDeinterlaceFieldIdentification	SEIread.cpp	/^Void SEIReader::xParseSEIDeinterlaceFieldIdentification( SEIDeinterlaceFieldIdentification& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIDependentRAPIndication	SEIread.cpp	/^Void SEIReader::xParseSEIDependentRAPIndication( SEIDependentRAPIndication& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEIDisplayOrientation	SEIread.cpp	/^Void SEIReader::xParseSEIDisplayOrientation(SEIDisplayOrientation& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIEquirectangularProjection	SEIread.cpp	/^Void SEIReader::xParseSEIEquirectangularProjection(SEIEquirectangularProjection& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFillerPayload	SEIread.cpp	/^Void SEIReader::xParseSEIFillerPayload(SEIFillerPayload& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFilmGrainCharacteristics	SEIread.cpp	/^Void SEIReader::xParseSEIFilmGrainCharacteristics(SEIFilmGrainCharacteristics& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFisheyeVideoInfo	SEIread.cpp	/^Void SEIReader::xParseSEIFisheyeVideoInfo(SEIFisheyeVideoInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIFramePacking	SEIread.cpp	/^Void SEIReader::xParseSEIFramePacking(SEIFramePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIGreenMetadataInfo	SEIread.cpp	/^Void SEIReader::xParseSEIGreenMetadataInfo(SEIGreenMetadataInfo& sei, UInt payloadSize, ostream* pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIKneeFunctionInfo	SEIread.cpp	/^Void SEIReader::xParseSEIKneeFunctionInfo(SEIKneeFunctionInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIMCTSExtractionInfoSet	SEIread.cpp	/^Void SEIReader::xParseSEIMCTSExtractionInfoSet(SEIMCTSExtractionInfoSet& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIMasteringDisplayColourVolume	SEIread.cpp	/^Void SEIReader::xParseSEIMasteringDisplayColourVolume(SEIMasteringDisplayColourVolume& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEINoDisplay	SEIread.cpp	/^Void SEIReader::xParseSEINoDisplay(SEINoDisplay& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIOmniViewport	SEIread.cpp	/^Void SEIReader::xParseSEIOmniViewport(SEIOmniViewport& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPanScanRect	SEIread.cpp	/^Void SEIReader::xParseSEIPanScanRect(SEIPanScanRect& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPictureSnapshot	SEIread.cpp	/^Void SEIReader::xParseSEIPictureSnapshot(SEIPictureSnapshot& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPictureTiming	SEIread.cpp	/^Void SEIReader::xParseSEIPictureTiming(SEIPictureTiming& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIPostFilterHint	SEIread.cpp	/^Void SEIReader::xParseSEIPostFilterHint(SEIPostFilterHint& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIProgressiveRefinementSegmentEnd	SEIread.cpp	/^Void SEIReader::xParseSEIProgressiveRefinementSegmentEnd(SEIProgressiveRefinementSegmentEnd& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIProgressiveRefinementSegmentStart	SEIread.cpp	/^Void SEIReader::xParseSEIProgressiveRefinementSegmentStart(SEIProgressiveRefinementSegmentStart& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRecoveryPoint	SEIread.cpp	/^Void SEIReader::xParseSEIRecoveryPoint(SEIRecoveryPoint& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionRefreshInfo	SEIread.cpp	/^Void SEIReader::xParseSEIRegionRefreshInfo(SEIRegionRefreshInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionWisePacking	SEIread.cpp	/^Void SEIReader::xParseSEIRegionWisePacking(SEIRegionWisePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIRegionalNesting	SEIread.cpp	/^Void SEIReader::xParseSEIRegionalNesting( SEIRegionalNesting& sei, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream )$/;"	f	class:SEIReader
xParseSEISOPDescription	SEIread.cpp	/^Void SEIReader::xParseSEISOPDescription(SEISOPDescription &sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIScalableNesting	SEIread.cpp	/^Void SEIReader::xParseSEIScalableNesting(SEIScalableNesting& sei, const NalUnitType nalUnitType, UInt payloadSize, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISceneInfo	SEIread.cpp	/^Void SEIReader::xParseSEISceneInfo(SEISceneInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISegmentedRectFramePacking	SEIread.cpp	/^Void SEIReader::xParseSEISegmentedRectFramePacking(SEISegmentedRectFramePacking& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIShutterInterval	SEIread.cpp	/^Void SEIReader::xParseSEIShutterInterval(SEIShutterIntervalInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEISphereRotation	SEIread.cpp	/^Void SEIReader::xParseSEISphereRotation(SEISphereRotation& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITempMotionConstraintsTileSets	SEIread.cpp	/^Void SEIReader::xParseSEITempMotionConstraintsTileSets(SEITempMotionConstrainedTileSets& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITemporalLevel0Index	SEIread.cpp	/^Void SEIReader::xParseSEITemporalLevel0Index(SEITemporalLevel0Index& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEITimeCode	SEIread.cpp	/^Void SEIReader::xParseSEITimeCode(SEITimeCode& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIToneMappingInfo	SEIread.cpp	/^Void SEIReader::xParseSEIToneMappingInfo(SEIToneMappingInfo& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIUserDataRegistered	SEIread.cpp	/^Void SEIReader::xParseSEIUserDataRegistered(SEIUserDataRegistered& sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xParseSEIUserDataUnregistered	SEIread.cpp	/^Void SEIReader::xParseSEIUserDataUnregistered(SEIUserDataUnregistered &sei, UInt payloadSize, std::ostream *pDecodedMessageOutputStream)$/;"	f	class:SEIReader
xReadCode	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadCode (UInt uiLength, UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadCodeChk	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadCodeChk ( UInt   length, UInt& val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReadCoefRemainExGolomb	TDecSbac.cpp	/^Void TDecSbac::xReadCoefRemainExGolomb ( UInt &rSymbol, UInt &rParam, const Bool useLimitedPrefixLength, const Int maxLog2TrDynamicRange, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadEpExGolomb	TDecSbac.cpp	/^Void TDecSbac::xReadEpExGolomb( UInt& ruiSymbol, UInt uiCount, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadFlag	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadFlag (UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadFlagChk	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadFlagChk ( UInt&  val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReadPCMCode	TDecBinCoderCABAC.cpp	/^Void  TDecBinCABAC::xReadPCMCode(UInt uiLength, UInt& ruiCode)$/;"	f	class:TDecBinCABAC
xReadRbspTrailingBits	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadRbspTrailingBits()$/;"	f	class:SyntaxElementParser
xReadSCode	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSCode (UInt uiLength, Int& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadSCodeChk	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSCodeChk ( UInt   length, Int& val, const TChar *pSymbolName, const Int minValIncl, const Int maxValIncl )$/;"	f	class:SyntaxElementParser
xReadSEIPayloadData	SEIread.cpp	/^Void SEIReader::xReadSEIPayloadData(Int const payloadType, Int const payloadSize, SEI *&sei, const NalUnitType nalUnitType, const TComSPS *sps, $/;"	f	class:SEIReader
xReadSEImessage	SEIread.cpp	/^Void SEIReader::xReadSEImessage(SEIMessages& seis, const NalUnitType nalUnitType, const TComSPS *sps, std::ostream *pDecodedMessageOutputStream, const vector<SEI::PayloadType>& allowedSeiTypes, std::string const &typeName)$/;"	f	class:SEIReader
xReadSvlc	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSvlc( Int& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadSvlcChk	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadSvlcChk ( Int&   val, const TChar *pSymbolName, const Int  minValIncl, const Int  maxValIncl )$/;"	f	class:SyntaxElementParser
xReadUnaryMaxSymbol	TDecSbac.cpp	/^Void TDecSbac::xReadUnaryMaxSymbol( UInt& ruiSymbol, ContextModel* pcSCModel, Int iOffset, UInt uiMaxSymbol, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadUnarySymbol	TDecSbac.cpp	/^Void TDecSbac::xReadUnarySymbol( UInt& ruiSymbol, ContextModel* pcSCModel, Int iOffset, const class TComCodingStatisticsClassType &whichStat )$/;"	f	class:TDecSbac
xReadUvlc	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadUvlc( UInt& rValue, const TChar *pSymbolName)$/;"	f	class:SyntaxElementParser
xReadUvlcChk	SyntaxElementParser.cpp	/^Void SyntaxElementParser::xReadUvlcChk ( UInt&  val, const TChar *pSymbolName, const UInt minValIncl, const UInt maxValIncl )$/;"	f	class:SyntaxElementParser
xReconInter	TDecCu.cpp	/^Void TDecCu::xReconInter( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xReconIntraQT	TDecCu.cpp	/^TDecCu::xReconIntraQT( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xReconPCM	TDecCu.cpp	/^Void TDecCu::xReconPCM( TComDataCU* pcCU, UInt uiDepth )$/;"	f	class:TDecCu
xTraceAccessUnitDelimiter	SyntaxElementParser.cpp	/^Void  xTraceAccessUnitDelimiter ()$/;"	f
xTraceFillerData	SyntaxElementParser.cpp	/^Void xTraceFillerData ()$/;"	f
xTraceNalUnitHeader	NALread.cpp	/^void xTraceNalUnitHeader(InputNALUnit& nalu)$/;"	f
xTracePPSHeaderDec	TDecCAVLC.cpp	/^Void  xTracePPSHeaderDec()$/;"	f
xTraceSEIHeader	SEIread.cpp	/^Void  xTraceSEIHeader()$/;"	f
xTraceSEIMessageType	SEIread.cpp	/^Void  xTraceSEIMessageType(SEI::PayloadType payloadType)$/;"	f
xTraceSPSHeaderDec	TDecCAVLC.cpp	/^Void  xTraceSPSHeaderDec()$/;"	f
xTraceSliceHeaderDec	TDecCAVLC.cpp	/^Void  xTraceSliceHeaderDec()$/;"	f
xTraceVPSHeaderDec	TDecCAVLC.cpp	/^Void  xTraceVPSHeaderDec ()$/;"	f
xUpdatePreviousTid0POC	TDecTop.h	/^  Void      xUpdatePreviousTid0POC( TComSlice *pSlice ) { if ((pSlice->getTLayer()==0) && (pSlice->isReferenceNalu() && (pSlice->getNalUnitType()!=NAL_UNIT_CODED_SLICE_RASL_R)&& (pSlice->getNalUnitType()!=NAL_UNIT_CODED_SLICE_RADL_R))) { m_prevTid0POC=pSlice->getPOC(); } }$/;"	f	class:TDecTop
~AUDReader	SyntaxElementParser.h	/^  virtual ~AUDReader() {};$/;"	f	class:AUDReader
~FDReader	SyntaxElementParser.h	/^  virtual ~FDReader() {};$/;"	f	class:FDReader
~InputNALUnit	NALread.h	/^    virtual ~InputNALUnit() { }$/;"	f	class:InputNALUnit
~SEIReader	SEIread.h	/^  virtual ~SEIReader() {};$/;"	f	class:SEIReader
~SyntaxElementParser	SyntaxElementParser.h	/^  virtual ~SyntaxElementParser() {};$/;"	f	class:SyntaxElementParser
~TDecBinCABAC	TDecBinCoderCABAC.cpp	/^TDecBinCABAC::~TDecBinCABAC()$/;"	f	class:TDecBinCABAC
~TDecBinIf	TDecBinCoder.h	/^  virtual ~TDecBinIf() {}$/;"	f	class:TDecBinIf
~TDecCavlc	TDecCAVLC.cpp	/^TDecCavlc::~TDecCavlc()$/;"	f	class:TDecCavlc
~TDecCu	TDecCu.cpp	/^TDecCu::~TDecCu()$/;"	f	class:TDecCu
~TDecEntropyIf	TDecEntropy.h	/^  virtual ~TDecEntropyIf() {}$/;"	f	class:TDecEntropyIf
~TDecGop	TDecGop.cpp	/^TDecGop::~TDecGop()$/;"	f	class:TDecGop
~TDecSbac	TDecSbac.cpp	/^TDecSbac::~TDecSbac()$/;"	f	class:TDecSbac
~TDecSlice	TDecSlice.cpp	/^TDecSlice::~TDecSlice()$/;"	f	class:TDecSlice
~TDecTop	TDecTop.cpp	/^TDecTop::~TDecTop()$/;"	f	class:TDecTop
